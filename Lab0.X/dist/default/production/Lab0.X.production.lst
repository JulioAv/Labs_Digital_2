

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 14 15:44:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  00D5                     __pidataCOMMON:
   212                           
   213                           ;initializer for _modo
   214  00D5  3401               	retlw	1
   215                           
   216                           	psect	idataBANK0
   217  00CB                     __pidataBANK0:
   218                           
   219                           ;initializer for _display
   220  00CB  343F               	retlw	63
   221  00CC  3406               	retlw	6
   222  00CD  345B               	retlw	91
   223  00CE  344F               	retlw	79
   224  00CF  3466               	retlw	102
   225  00D0  346D               	retlw	109
   226  00D1  347D               	retlw	125
   227  00D2  3447               	retlw	71
   228  00D3  347F               	retlw	127
   229  00D4  3467               	retlw	103
   230                           
   231                           	psect	nvCOMMON
   232  0076                     __pnvCOMMON:
   233  0076                     _val:
   234  0076                     	ds	1
   235  0009                     _PORTE	set	9
   236  000B                     _INTCONbits	set	11
   237  0008                     _PORTD	set	8
   238  0007                     _PORTC	set	7
   239  0001                     _TMR0	set	1
   240  0005                     _PORTA	set	5
   241  0006                     _PORTB	set	6
   242  005A                     _T0IF	set	90
   243  0058                     _RBIF	set	88
   244  0095                     _WPUB	set	149
   245  0096                     _IOCB	set	150
   246  0081                     _OPTION_REGbits	set	129
   247  008F                     _OSCCONbits	set	143
   248  0089                     _TRISE	set	137
   249  0088                     _TRISD	set	136
   250  0087                     _TRISC	set	135
   251  0086                     _TRISB	set	134
   252  0085                     _TRISA	set	133
   253  0189                     _ANSELH	set	393
   254  0188                     _ANSEL	set	392
   255                           
   256                           	psect	cinit
   257  000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260  000F                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK0
   263  000F  1383               	bcf	3,7	;select IRP bank0
   264  0010  302A               	movlw	low (__pdataBANK0+10)
   265  0011  00FD               	movwf	btemp+-1
   266  0012  3000               	movlw	high __pidataBANK0
   267  0013  00FE               	movwf	btemp
   268  0014  30CB               	movlw	low __pidataBANK0
   269  0015  00FF               	movwf	btemp+1
   270  0016  3020               	movlw	low __pdataBANK0
   271  0017  0084               	movwf	4
   272  0018  120A  118A  20BC  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Initialize objects allocated to COMMON
   275  001D  120A  118A  20D5  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   276  0022  00F7               	movwf	__pdataCOMMON& (0+127)
   277                           
   278                           ; Clear objects allocated to COMMON
   279  0023  01F4               	clrf	__pbssCOMMON& (0+127)
   280  0024  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   281  0025                     end_of_initialization:	
   282                           ;End of C runtime variable initialization code
   283                           
   284  0025                     __end_of__initialization:
   285  0025  0183               	clrf	3
   286  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMMON
   289  0074                     __pbssCOMMON:
   290  0074                     _cont2:
   291  0074                     	ds	1
   292  0075                     _cont1:
   293  0075                     	ds	1
   294                           
   295                           	psect	dataCOMMON
   296  0077                     __pdataCOMMON:
   297  0077                     _modo:
   298  0077                     	ds	1
   299                           
   300                           	psect	dataBANK0
   301  0020                     __pdataBANK0:
   302  0020                     _display:
   303  0020                     	ds	10
   304                           
   305                           	psect	inittext
   306  00B8                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  00B8  087E               	movf	btemp,w
   310  00B9  008A               	movwf	10
   311  00BA  087F               	movf	btemp+1,w
   312  00BB  0082               	movwf	2
   313  00BC                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  00BC  120A  118A  20B8  120A  118A  	fcall	init_fetch0
   321  00C1  0080               	movwf	0
   322  00C2  0A84               	incf	4,f
   323  00C3  0804               	movf	4,w
   324  00C4  067D               	xorwf	btemp+-1,w
   325  00C5  1903               	btfsc	3,2
   326  00C6  3400               	retlw	0
   327  00C7  0AFF               	incf	btemp+1,f
   328  00C8  1903               	btfsc	3,2
   329  00C9  0AFE               	incf	btemp,f
   330  00CA  28BC               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_isr:
   335  0070                     ??_isr:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_main:	
   339                           ; 1 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	3
   344  0073                     ??_main:
   345                           
   346                           ; 1 bytes @ 0x3
   347  0073                     	ds	1
   348                           
   349                           	psect	maintext
   350  0029                     __pmaintext:	
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 55 in file "Lab0.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0
   365 ;; Tracked objects:
   366 ;;		On entry : B00/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   370 ;;      Params:         0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0
   372 ;;      Temps:          1       0       0       0       0
   373 ;;      Totals:         1       0       0       0       0
   374 ;;Total ram usage:        1 bytes
   375 ;; Hardware stack levels required when called:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _main
   385  0029                     _main:
   386  0029                     l748:	
   387                           ;incstack = 0
   388                           ; Regs used in _main: [wreg+status,2+status,0]
   389                           
   390                           
   391                           ;Lab0.c: 56:     ANSEL = 0x00;
   392  0029  1683               	bsf	3,5	;RP0=1, select bank3
   393  002A  1703               	bsf	3,6	;RP1=1, select bank3
   394  002B  0188               	clrf	8	;volatile
   395                           
   396                           ;Lab0.c: 57:     ANSELH = 0x00;
   397  002C  0189               	clrf	9	;volatile
   398                           
   399                           ;Lab0.c: 59:     TRISA = 0x00;
   400  002D  1683               	bsf	3,5	;RP0=1, select bank1
   401  002E  1303               	bcf	3,6	;RP1=0, select bank1
   402  002F  0185               	clrf	5	;volatile
   403  0030                     l750:
   404                           
   405                           ;Lab0.c: 60:     TRISB = 0x07;
   406  0030  3007               	movlw	7
   407  0031  0086               	movwf	6	;volatile
   408  0032                     l752:
   409                           
   410                           ;Lab0.c: 61:     TRISC = 0x00;
   411  0032  0187               	clrf	7	;volatile
   412  0033                     l754:
   413                           
   414                           ;Lab0.c: 62:     TRISD = 0x00;
   415  0033  0188               	clrf	8	;volatile
   416  0034                     l756:
   417                           
   418                           ;Lab0.c: 63:     TRISE = 0x00;
   419  0034  0189               	clrf	9	;volatile
   420  0035                     l758:
   421                           
   422                           ;Lab0.c: 65:     OSCCONbits.IRCF = 0B010;
   423  0035  080F               	movf	15,w	;volatile
   424  0036  398F               	andlw	-113
   425  0037  3820               	iorlw	32
   426  0038  008F               	movwf	15	;volatile
   427  0039                     l760:
   428                           
   429                           ;Lab0.c: 66:     OSCCONbits.OSTS = 0;
   430  0039  118F               	bcf	15,3	;volatile
   431  003A                     l762:
   432                           
   433                           ;Lab0.c: 67:     OSCCONbits.SCS = 1;
   434  003A  140F               	bsf	15,0	;volatile
   435  003B                     l764:
   436                           
   437                           ;Lab0.c: 69:     OPTION_REGbits.nRBPU = 0;
   438  003B  1381               	bcf	1,7	;volatile
   439  003C                     l766:
   440                           
   441                           ;Lab0.c: 70:     OPTION_REGbits.T0CS = 0;
   442  003C  1281               	bcf	1,5	;volatile
   443  003D                     l768:
   444                           
   445                           ;Lab0.c: 71:     OPTION_REGbits.T0SE = 0;
   446  003D  1201               	bcf	1,4	;volatile
   447  003E                     l770:
   448                           
   449                           ;Lab0.c: 72:     OPTION_REGbits.PSA = 0;
   450  003E  1181               	bcf	1,3	;volatile
   451  003F                     l772:
   452                           
   453                           ;Lab0.c: 73:     OPTION_REGbits.PS = 0B111;
   454  003F  3007               	movlw	7
   455  0040  0481               	iorwf	1,f	;volatile
   456                           
   457                           ;Lab0.c: 74:     TMR0 = 12;
   458  0041  300C               	movlw	12
   459  0042  1283               	bcf	3,5	;RP0=0, select bank0
   460  0043  1303               	bcf	3,6	;RP1=0, select bank0
   461  0044  0081               	movwf	1	;volatile
   462                           
   463                           ;Lab0.c: 75:     IOCB = 0x06;
   464  0045  3006               	movlw	6
   465  0046  1683               	bsf	3,5	;RP0=1, select bank1
   466  0047  1303               	bcf	3,6	;RP1=0, select bank1
   467  0048  0096               	movwf	22	;volatile
   468                           
   469                           ;Lab0.c: 77:     WPUB = 0x07;
   470  0049  3007               	movlw	7
   471  004A  0095               	movwf	21	;volatile
   472  004B                     l774:
   473                           
   474                           ;Lab0.c: 79:     PORTA = 0;
   475  004B  1283               	bcf	3,5	;RP0=0, select bank0
   476  004C  1303               	bcf	3,6	;RP1=0, select bank0
   477  004D  0185               	clrf	5	;volatile
   478  004E                     l776:
   479                           
   480                           ;Lab0.c: 81:     PORTC = display[3];
   481  004E  0823               	movf	_display+3,w
   482  004F  0087               	movwf	7	;volatile
   483                           
   484                           ;Lab0.c: 82:     PORTD = 0;
   485  0050  0188               	clrf	8	;volatile
   486  0051                     l778:
   487                           
   488                           ;Lab0.c: 84:     INTCONbits.GIE = 1;
   489  0051  178B               	bsf	11,7	;volatile
   490  0052                     l780:
   491                           
   492                           ;Lab0.c: 85:     INTCONbits.T0IE = 1;
   493  0052  168B               	bsf	11,5	;volatile
   494  0053                     l782:
   495                           
   496                           ;Lab0.c: 86:     INTCONbits.RBIE = 1;
   497  0053  158B               	bsf	11,3	;volatile
   498  0054                     l784:
   499                           
   500                           ;Lab0.c: 87:     INTCONbits.INTE = 0;
   501  0054  120B               	bcf	11,4	;volatile
   502  0055                     l786:
   503                           
   504                           ;Lab0.c: 89:     INTCONbits.RBIF = 0;
   505  0055  100B               	bcf	11,0	;volatile
   506  0056                     l788:
   507                           
   508                           ;Lab0.c: 90:     INTCONbits.T0IF = 0;
   509  0056  110B               	bcf	11,2	;volatile
   510  0057                     l790:
   511                           
   512                           ;Lab0.c: 92:     PORTB = 0B00001000;
   513  0057  3008               	movlw	8
   514  0058  0086               	movwf	6	;volatile
   515  0059                     l792:
   516                           
   517                           ;Lab0.c: 93:     modo = 1;
   518  0059  01F7               	clrf	_modo
   519  005A  0AF7               	incf	_modo,f
   520  005B                     l794:
   521                           
   522                           ;Lab0.c: 94:     val = 3;
   523  005B  3003               	movlw	3
   524  005C  00F3               	movwf	??_main
   525  005D  0873               	movf	??_main,w
   526  005E  00F6               	movwf	_val
   527  005F                     l796:
   528                           
   529                           ;Lab0.c: 98:         PORTE = modo;
   530  005F  0877               	movf	_modo,w
   531  0060  0089               	movwf	9	;volatile
   532  0061                     l798:
   533                           
   534                           ;Lab0.c: 99:         if (val==3){
   535  0061  3003               	movlw	3
   536  0062  0676               	xorwf	_val,w
   537  0063  1D03               	btfss	3,2
   538  0064  2866               	goto	u71
   539  0065  2867               	goto	u70
   540  0066                     u71:
   541  0066  286C               	goto	l802
   542  0067                     u70:
   543  0067                     l800:
   544                           
   545                           ;Lab0.c: 100:             PORTC = display[3];
   546  0067  0823               	movf	_display+3,w
   547  0068  0087               	movwf	7	;volatile
   548                           
   549                           ;Lab0.c: 101:             PORTB = 0x08;
   550  0069  3008               	movlw	8
   551  006A  0086               	movwf	6	;volatile
   552                           
   553                           ;Lab0.c: 102:         }
   554  006B  285F               	goto	l796
   555  006C                     l802:
   556  006C  3002               	movlw	2
   557  006D  0676               	xorwf	_val,w
   558  006E  1D03               	btfss	3,2
   559  006F  2871               	goto	u81
   560  0070  2872               	goto	u80
   561  0071                     u81:
   562  0071  2877               	goto	l806
   563  0072                     u80:
   564  0072                     l804:
   565                           
   566                           ;Lab0.c: 104:             PORTC = display[2];
   567  0072  0822               	movf	_display+2,w
   568  0073  0087               	movwf	7	;volatile
   569                           
   570                           ;Lab0.c: 105:             PORTB = 0x08;
   571  0074  3008               	movlw	8
   572  0075  0086               	movwf	6	;volatile
   573                           
   574                           ;Lab0.c: 106:         }
   575  0076  285F               	goto	l796
   576  0077                     l806:
   577  0077  0376               	decf	_val,w
   578  0078  1D03               	btfss	3,2
   579  0079  287B               	goto	u91
   580  007A  287C               	goto	u90
   581  007B                     u91:
   582  007B  2881               	goto	l810
   583  007C                     u90:
   584  007C                     l808:
   585                           
   586                           ;Lab0.c: 108:             PORTC = display[1];
   587  007C  0821               	movf	_display+1,w
   588  007D  0087               	movwf	7	;volatile
   589                           
   590                           ;Lab0.c: 109:             PORTB = 0x10;
   591  007E  3010               	movlw	16
   592  007F  0086               	movwf	6	;volatile
   593                           
   594                           ;Lab0.c: 110:         }
   595  0080  285F               	goto	l796
   596  0081                     l810:
   597                           
   598                           ;Lab0.c: 112:             PORTC = display[0];
   599  0081  0820               	movf	_display,w
   600  0082  0087               	movwf	7	;volatile
   601                           
   602                           ;Lab0.c: 113:             PORTB = 0x20;
   603  0083  3020               	movlw	32
   604  0084  0086               	movwf	6	;volatile
   605                           
   606                           ;Lab0.c: 114:             val = 3;
   607  0085  3003               	movlw	3
   608  0086  00F3               	movwf	??_main
   609  0087  0873               	movf	??_main,w
   610  0088  00F6               	movwf	_val
   611  0089                     l812:
   612                           
   613                           ;Lab0.c: 115:             modo = 1;
   614  0089  01F7               	clrf	_modo
   615  008A  0AF7               	incf	_modo,f
   616  008B  285F               	goto	l796
   617  008C  120A  118A  280C   	ljmp	start
   618  008F                     __end_of_main:
   619                           
   620                           	psect	text1
   621  008F                     __ptext1:	
   622 ;; *************** function _isr *****************
   623 ;; Defined at:
   624 ;;		line 35 in file "Lab0.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   638 ;;      Params:         0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0
   640 ;;      Temps:          3       0       0       0       0
   641 ;;      Totals:         3       0       0       0       0
   642 ;;Total ram usage:        3 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		Interrupt level 1
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           
   652                           ;psect for function _isr
   653  008F                     _isr:
   654  008F                     i1l664:
   655                           
   656                           ;Lab0.c: 36:     if (RBIF){
   657  008F  1C0B               	btfss	11,0	;volatile
   658  0090  2892               	goto	u1_21
   659  0091  2893               	goto	u1_20
   660  0092                     u1_21:
   661  0092  289C               	goto	i1l670
   662  0093                     u1_20:
   663  0093                     i1l666:
   664                           
   665                           ;Lab0.c: 37:         PORTB = PORTB;
   666  0093  1283               	bcf	3,5	;RP0=0, select bank0
   667  0094  1303               	bcf	3,6	;RP1=0, select bank0
   668  0095  0806               	movf	6,w	;volatile
   669  0096  0086               	movwf	6	;volatile
   670                           
   671                           ;Lab0.c: 38:         modo = 2;
   672  0097  3002               	movlw	2
   673  0098  00F0               	movwf	??_isr
   674  0099  0870               	movf	??_isr,w
   675  009A  00F7               	movwf	_modo
   676  009B                     i1l668:
   677                           
   678                           ;Lab0.c: 39:         RBIF = 0;
   679  009B  100B               	bcf	11,0	;volatile
   680  009C                     i1l670:
   681                           
   682                           ;Lab0.c: 41:     if (T0IF){
   683  009C  1D0B               	btfss	11,2	;volatile
   684  009D  289F               	goto	u2_21
   685  009E  28A0               	goto	u2_20
   686  009F                     u2_21:
   687  009F  28B1               	goto	i1l58
   688  00A0                     u2_20:
   689  00A0                     i1l672:
   690                           
   691                           ;Lab0.c: 42:         if (modo==2){
   692  00A0  3002               	movlw	2
   693  00A1  0677               	xorwf	_modo,w
   694  00A2  1D03               	btfss	3,2
   695  00A3  28A5               	goto	u3_21
   696  00A4  28A6               	goto	u3_20
   697  00A5                     u3_21:
   698  00A5  28AC               	goto	i1l678
   699  00A6                     u3_20:
   700  00A6                     i1l674:
   701                           
   702                           ;Lab0.c: 43:             val--;
   703  00A6  3001               	movlw	1
   704  00A7  02F6               	subwf	_val,f
   705  00A8                     i1l676:
   706                           
   707                           ;Lab0.c: 44:             PORTA = val;
   708  00A8  0876               	movf	_val,w
   709  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   710  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   711  00AB  0085               	movwf	5	;volatile
   712  00AC                     i1l678:
   713                           
   714                           ;Lab0.c: 47:         TMR0 = 12;
   715  00AC  300C               	movlw	12
   716  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   717  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   718  00AF  0081               	movwf	1	;volatile
   719  00B0                     i1l680:
   720                           
   721                           ;Lab0.c: 50:         T0IF = 0;
   722  00B0  110B               	bcf	11,2	;volatile
   723  00B1                     i1l58:
   724  00B1  0872               	movf	??_isr+2,w
   725  00B2  008A               	movwf	10
   726  00B3  0E71               	swapf	??_isr+1,w
   727  00B4  0083               	movwf	3
   728  00B5  0EFE               	swapf	btemp,f
   729  00B6  0E7E               	swapf	btemp,w
   730  00B7  0009               	retfie
   731  00B8                     __end_of_isr:
   732  007E                     btemp	set	126	;btemp
   733  007E                     wtemp0	set	126
   734                           
   735                           	psect	intentry
   736  0004                     __pintentry:	
   737                           ;incstack = 0
   738                           ; Regs used in _isr: [wreg+status,2+status,0]
   739                           
   740  0004                     interrupt_function:
   741  007E                     saved_w	set	btemp
   742  0004  00FE               	movwf	btemp
   743  0005  0E03               	swapf	3,w
   744  0006  00F1               	movwf	??_isr+1
   745  0007  080A               	movf	10,w
   746  0008  00F2               	movwf	??_isr+2
   747  0009  120A  118A  288F   	ljmp	_isr
   748                           
   749                           	psect	config
   750                           
   751                           ;Config register CONFIG1 @ 0x2007
   752                           ;	Oscillator Selection bits
   753                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   754                           ;	Watchdog Timer Enable bit
   755                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   756                           ;	Power-up Timer Enable bit
   757                           ;	PWRTE = ON, PWRT enabled
   758                           ;	RE3/MCLR pin function select bit
   759                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   760                           ;	Code Protection bit
   761                           ;	CP = OFF, Program memory code protection is disabled
   762                           ;	Data Code Protection bit
   763                           ;	CPD = OFF, Data memory code protection is disabled
   764                           ;	Brown Out Reset Selection bits
   765                           ;	BOREN = OFF, BOR disabled
   766                           ;	Internal External Switchover bit
   767                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   768                           ;	Fail-Safe Clock Monitor Enabled bit
   769                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   770                           ;	Low Voltage Programming Enable bit
   771                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   772                           ;	In-Circuit Debugger Mode bit
   773                           ;	DEBUG = 0x1, unprogrammed default
   774  2007                     	org	8199
   775  2007  30C4               	dw	12484
   776                           
   777                           ;Config register CONFIG2 @ 0x2008
   778                           ;	Brown-out Reset Selection bit
   779                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   780                           ;	Flash Program Memory Self Write Enable bits
   781                           ;	WRT = OFF, Write protection off
   782  2008                     	org	8200
   783  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 14 15:44:07 2021

                      pc 0002                       u70 0067                       u71 0066  
                     u80 0072                       u81 0071                       u90 007C  
                     u91 007B                       fsr 0004                      l800 0067  
                    l810 0081                      l802 006C                      l812 0089  
                    l804 0072                      l806 0077                      l750 0030  
                    l808 007C                      l760 0039                      l752 0032  
                    l770 003E                      l762 003A                      l754 0033  
                    l780 0052                      l772 003F                      l764 003B  
                    l756 0034                      l748 0029                      l790 0057  
                    l782 0053                      l774 004B                      l766 003C  
                    l758 0035                      l792 0059                      l784 0054  
                    l776 004E                      l768 003D                      l794 005B  
                    l786 0055                      l778 0051                      l796 005F  
                    l788 0056                      l798 0061                      _isr 008F  
                    _val 0076                      indf 0000                     ?_isr 0070  
                   _T0IF 005A                     _IOCB 0096                     _RBIF 0058  
                   i1l58 00B1                     _TMR0 0001                     _WPUB 0095  
                   u1_20 0093                     u1_21 0092                     u2_20 00A0  
                   u2_21 009F                     u3_20 00A6                     u3_21 00A5  
                   _main 0029                     _modo 0077                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l670 009C                    i1l680 00B0  
                  i1l672 00A0                    i1l664 008F                    i1l674 00A6  
                  i1l666 0093                    i1l676 00A8                    i1l668 009B  
                  i1l678 00AC                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _cont1 0075  
                  _cont2 0074                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 008F  
                 ??_main 0073                   _ANSELH 0189             __pdataCOMMON 0077  
                 saved_w 007E  __end_of__initialization 0025           __pcstackCOMMON 0070  
           __pidataBANK0 00CB           _OPTION_REGbits 0081               __pnvCOMMON 0076  
             __pmaintext 0029               __pintentry 0004                  __ptext1 008F  
                _display 0020             __size_of_isr 0029     end_of_initialization 0025  
          __pidataCOMMON 00D5      start_initialization 000F              __end_of_isr 00B8  
             init_fetch0 00B8              __pdataBANK0 0020              __pbssCOMMON 0074  
              ___latbits 0002        interrupt_function 0004            __size_of_main 0066  
             _INTCONbits 000B                 init_ram0 00BC                 intlevel1 0000  
             _OSCCONbits 008F  
