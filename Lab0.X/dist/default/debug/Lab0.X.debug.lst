

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 14 14:58:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  00E3                     __pidataCOMMON:
   212                           
   213                           ;initializer for _modo
   214  00E3  3401               	retlw	1
   215                           
   216                           	psect	idataBANK0
   217  00D9                     __pidataBANK0:
   218                           
   219                           ;initializer for _display
   220  00D9  343F               	retlw	63
   221  00DA  3406               	retlw	6
   222  00DB  345B               	retlw	91
   223  00DC  344F               	retlw	79
   224  00DD  3466               	retlw	102
   225  00DE  346D               	retlw	109
   226  00DF  347D               	retlw	125
   227  00E0  3447               	retlw	71
   228  00E1  347F               	retlw	127
   229  00E2  3467               	retlw	103
   230                           
   231                           	psect	nvCOMMON
   232  0076                     __pnvCOMMON:
   233  0076                     _val:
   234  0076                     	ds	1
   235  000B                     _INTCONbits	set	11
   236  0001                     _TMR0	set	1
   237  0007                     _PORTC	set	7
   238  0008                     _PORTD	set	8
   239  0006                     _PORTB	set	6
   240  0005                     _PORTA	set	5
   241  005A                     _T0IF	set	90
   242  0031                     _RB1	set	49
   243  0058                     _RBIF	set	88
   244  0095                     _WPUB	set	149
   245  0096                     _IOCB	set	150
   246  0081                     _OPTION_REGbits	set	129
   247  008F                     _OSCCONbits	set	143
   248  0088                     _TRISD	set	136
   249  0087                     _TRISC	set	135
   250  0086                     _TRISB	set	134
   251  0085                     _TRISA	set	133
   252  0189                     _ANSELH	set	393
   253  0188                     _ANSEL	set	392
   254                           
   255                           	psect	cinit
   256  000F                     start_initialization:	
   257                           ; #config settings
   258                           
   259  000F                     __initialization:
   260                           
   261                           ; Initialize objects allocated to BANK0
   262  000F  1383               	bcf	3,7	;select IRP bank0
   263  0010  302A               	movlw	low (__pdataBANK0+10)
   264  0011  00FD               	movwf	btemp+-1
   265  0012  3000               	movlw	high __pidataBANK0
   266  0013  00FE               	movwf	btemp
   267  0014  30D9               	movlw	low __pidataBANK0
   268  0015  00FF               	movwf	btemp+1
   269  0016  3020               	movlw	low __pdataBANK0
   270  0017  0084               	movwf	4
   271  0018  120A  118A  20CA  120A  118A  	fcall	init_ram0
   272                           
   273                           ; Initialize objects allocated to COMMON
   274  001D  120A  118A  20E3  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   275  0022  00F7               	movwf	__pdataCOMMON& (0+127)
   276                           
   277                           ; Clear objects allocated to COMMON
   278  0023  01F4               	clrf	__pbssCOMMON& (0+127)
   279  0024  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   280  0025                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  0025                     __end_of__initialization:
   284  0025  0183               	clrf	3
   285  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0074                     __pbssCOMMON:
   289  0074                     _cont2:
   290  0074                     	ds	1
   291  0075                     _cont1:
   292  0075                     	ds	1
   293                           
   294                           	psect	dataCOMMON
   295  0077                     __pdataCOMMON:
   296  0077                     _modo:
   297  0077                     	ds	1
   298                           
   299                           	psect	dataBANK0
   300  0020                     __pdataBANK0:
   301  0020                     _display:
   302  0020                     	ds	10
   303                           
   304                           	psect	inittext
   305  00C6                     init_fetch0:	
   306                           ;	Called with low address in FSR and high address in W
   307                           
   308  00C6  087E               	movf	btemp,w
   309  00C7  008A               	movwf	10
   310  00C8  087F               	movf	btemp+1,w
   311  00C9  0082               	movwf	2
   312  00CA                     init_ram0:	
   313                           ;Called with:
   314                           ;	high address of idata address in btemp 
   315                           ;	low address of idata address in btemp+1 
   316                           ;	low address of data in FSR
   317                           ;	high address + 1 of data in btemp-1
   318                           
   319  00CA  120A  118A  20C6  120A  118A  	fcall	init_fetch0
   320  00CF  0080               	movwf	0
   321  00D0  0A84               	incf	4,f
   322  00D1  0804               	movf	4,w
   323  00D2  067D               	xorwf	btemp+-1,w
   324  00D3  1903               	btfsc	3,2
   325  00D4  3400               	retlw	0
   326  00D5  0AFF               	incf	btemp+1,f
   327  00D6  1903               	btfsc	3,2
   328  00D7  0AFE               	incf	btemp,f
   329  00D8  28CA               	goto	init_ram0
   330                           
   331                           	psect	cstackCOMMON
   332  0070                     __pcstackCOMMON:
   333  0070                     ?_isr:
   334  0070                     ??_isr:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	3
   343  0073                     ??_main:
   344                           
   345                           ; 1 bytes @ 0x3
   346  0073                     	ds	1
   347                           
   348                           	psect	maintext
   349  0029                     __pmaintext:	
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 54 in file "Lab0.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0
   364 ;; Tracked objects:
   365 ;;		On entry : B00/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          1       0       0       0       0
   372 ;;      Totals:         1       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels required when called:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _main
   384  0029                     _main:
   385  0029                     l774:	
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg+status,2+status,0]
   388                           
   389                           
   390                           ;Lab0.c: 55:     ANSEL = 0x00;
   391  0029  1683               	bsf	3,5	;RP0=1, select bank3
   392  002A  1703               	bsf	3,6	;RP1=1, select bank3
   393  002B  0188               	clrf	8	;volatile
   394                           
   395                           ;Lab0.c: 56:     ANSELH = 0x00;
   396  002C  0189               	clrf	9	;volatile
   397                           
   398                           ;Lab0.c: 58:     TRISA = 0x00;
   399  002D  1683               	bsf	3,5	;RP0=1, select bank1
   400  002E  1303               	bcf	3,6	;RP1=0, select bank1
   401  002F  0185               	clrf	5	;volatile
   402  0030                     l776:
   403                           
   404                           ;Lab0.c: 59:     TRISB = 0x07;
   405  0030  3007               	movlw	7
   406  0031  0086               	movwf	6	;volatile
   407  0032                     l778:
   408                           
   409                           ;Lab0.c: 60:     TRISC = 0x00;
   410  0032  0187               	clrf	7	;volatile
   411  0033                     l780:
   412                           
   413                           ;Lab0.c: 61:     TRISD = 0x00;
   414  0033  0188               	clrf	8	;volatile
   415  0034                     l782:
   416                           
   417                           ;Lab0.c: 63:     OSCCONbits.IRCF = 0B010;
   418  0034  080F               	movf	15,w	;volatile
   419  0035  398F               	andlw	-113
   420  0036  3820               	iorlw	32
   421  0037  008F               	movwf	15	;volatile
   422  0038                     l784:
   423                           
   424                           ;Lab0.c: 64:     OSCCONbits.OSTS = 0;
   425  0038  118F               	bcf	15,3	;volatile
   426  0039                     l786:
   427                           
   428                           ;Lab0.c: 65:     OSCCONbits.SCS = 0;
   429  0039  100F               	bcf	15,0	;volatile
   430  003A                     l788:
   431                           
   432                           ;Lab0.c: 67:     OPTION_REGbits.nRBPU = 0;
   433  003A  1381               	bcf	1,7	;volatile
   434  003B                     l790:
   435                           
   436                           ;Lab0.c: 68:     OPTION_REGbits.T0CS = 0;
   437  003B  1281               	bcf	1,5	;volatile
   438  003C                     l792:
   439                           
   440                           ;Lab0.c: 69:     OPTION_REGbits.T0SE = 0;
   441  003C  1201               	bcf	1,4	;volatile
   442  003D                     l794:
   443                           
   444                           ;Lab0.c: 70:     OPTION_REGbits.PS = 0B111;
   445  003D  3007               	movlw	7
   446  003E  0481               	iorwf	1,f	;volatile
   447  003F                     l796:
   448                           
   449                           ;Lab0.c: 71:     TMR0 = 12;
   450  003F  300C               	movlw	12
   451  0040  1283               	bcf	3,5	;RP0=0, select bank0
   452  0041  1303               	bcf	3,6	;RP1=0, select bank0
   453  0042  0081               	movwf	1	;volatile
   454  0043                     l798:
   455                           
   456                           ;Lab0.c: 72:     IOCB = 0x07;
   457  0043  3007               	movlw	7
   458  0044  1683               	bsf	3,5	;RP0=1, select bank1
   459  0045  1303               	bcf	3,6	;RP1=0, select bank1
   460  0046  0096               	movwf	22	;volatile
   461  0047                     l800:
   462                           
   463                           ;Lab0.c: 74:     WPUB = 0x07;
   464  0047  3007               	movlw	7
   465  0048  0095               	movwf	21	;volatile
   466                           
   467                           ;Lab0.c: 76:     PORTA = 0;
   468  0049  1283               	bcf	3,5	;RP0=0, select bank0
   469  004A  1303               	bcf	3,6	;RP1=0, select bank0
   470  004B  0185               	clrf	5	;volatile
   471  004C                     l802:
   472                           
   473                           ;Lab0.c: 77:     PORTB = 0B00001000;
   474  004C  3008               	movlw	8
   475  004D  0086               	movwf	6	;volatile
   476  004E                     l804:
   477                           
   478                           ;Lab0.c: 78:     PORTC = display[3];
   479  004E  0823               	movf	_display+3,w
   480  004F  0087               	movwf	7	;volatile
   481                           
   482                           ;Lab0.c: 79:     PORTD = 0;
   483  0050  0188               	clrf	8	;volatile
   484  0051                     l806:
   485                           
   486                           ;Lab0.c: 81:     INTCONbits.GIE = 1;
   487  0051  178B               	bsf	11,7	;volatile
   488  0052                     l808:
   489                           
   490                           ;Lab0.c: 82:     INTCONbits.T0IE = 1;
   491  0052  168B               	bsf	11,5	;volatile
   492  0053                     l810:
   493                           
   494                           ;Lab0.c: 83:     INTCONbits.RBIE = 1;
   495  0053  158B               	bsf	11,3	;volatile
   496  0054                     l812:
   497                           
   498                           ;Lab0.c: 84:     INTCONbits.INTE = 0;
   499  0054  120B               	bcf	11,4	;volatile
   500  0055                     l814:
   501                           
   502                           ;Lab0.c: 86:     modo = 1;
   503  0055  01F7               	clrf	_modo
   504  0056  0AF7               	incf	_modo,f
   505  0057                     l816:
   506                           
   507                           ;Lab0.c: 87:     val = 3;
   508  0057  3003               	movlw	3
   509  0058  00F3               	movwf	??_main
   510  0059  0873               	movf	??_main,w
   511  005A  00F6               	movwf	_val
   512  005B                     l818:
   513                           
   514                           ;Lab0.c: 91:         if (val==3){
   515  005B  3003               	movlw	3
   516  005C  0676               	xorwf	_val,w
   517  005D  1D03               	btfss	3,2
   518  005E  2860               	goto	u131
   519  005F  2861               	goto	u130
   520  0060                     u131:
   521  0060  2868               	goto	l822
   522  0061                     u130:
   523  0061                     l820:
   524                           
   525                           ;Lab0.c: 92:             PORTC = display[3];
   526  0061  1283               	bcf	3,5	;RP0=0, select bank0
   527  0062  1303               	bcf	3,6	;RP1=0, select bank0
   528  0063  0823               	movf	_display+3,w
   529  0064  0087               	movwf	7	;volatile
   530                           
   531                           ;Lab0.c: 93:             PORTB = 0x08;
   532  0065  3008               	movlw	8
   533  0066  0086               	movwf	6	;volatile
   534                           
   535                           ;Lab0.c: 94:         }
   536  0067  285B               	goto	l818
   537  0068                     l822:
   538  0068  3002               	movlw	2
   539  0069  0676               	xorwf	_val,w
   540  006A  1D03               	btfss	3,2
   541  006B  286D               	goto	u141
   542  006C  286E               	goto	u140
   543  006D                     u141:
   544  006D  2875               	goto	l826
   545  006E                     u140:
   546  006E                     l824:
   547                           
   548                           ;Lab0.c: 96:             PORTC = display[2];
   549  006E  1283               	bcf	3,5	;RP0=0, select bank0
   550  006F  1303               	bcf	3,6	;RP1=0, select bank0
   551  0070  0822               	movf	_display+2,w
   552  0071  0087               	movwf	7	;volatile
   553                           
   554                           ;Lab0.c: 97:             PORTB = 0x08;
   555  0072  3008               	movlw	8
   556  0073  0086               	movwf	6	;volatile
   557                           
   558                           ;Lab0.c: 98:         }
   559  0074  285B               	goto	l818
   560  0075                     l826:
   561  0075  0376               	decf	_val,w
   562  0076  1D03               	btfss	3,2
   563  0077  2879               	goto	u151
   564  0078  287A               	goto	u150
   565  0079                     u151:
   566  0079  2881               	goto	l830
   567  007A                     u150:
   568  007A                     l828:
   569                           
   570                           ;Lab0.c: 100:             PORTC = display[1];
   571  007A  1283               	bcf	3,5	;RP0=0, select bank0
   572  007B  1303               	bcf	3,6	;RP1=0, select bank0
   573  007C  0821               	movf	_display+1,w
   574  007D  0087               	movwf	7	;volatile
   575                           
   576                           ;Lab0.c: 101:             PORTB = 0x10;
   577  007E  3010               	movlw	16
   578  007F  0086               	movwf	6	;volatile
   579                           
   580                           ;Lab0.c: 102:         }
   581  0080  285B               	goto	l818
   582  0081                     l830:
   583  0081  0876               	movf	_val,w
   584  0082  1D03               	btfss	3,2
   585  0083  2885               	goto	u161
   586  0084  2886               	goto	u160
   587  0085                     u161:
   588  0085  2893               	goto	l64
   589  0086                     u160:
   590  0086                     l832:
   591                           
   592                           ;Lab0.c: 104:             PORTC = display[0];
   593  0086  1283               	bcf	3,5	;RP0=0, select bank0
   594  0087  1303               	bcf	3,6	;RP1=0, select bank0
   595  0088  0820               	movf	_display,w
   596  0089  0087               	movwf	7	;volatile
   597                           
   598                           ;Lab0.c: 105:             PORTB = 0x20;
   599  008A  3020               	movlw	32
   600  008B  0086               	movwf	6	;volatile
   601                           
   602                           ;Lab0.c: 106:             val = 3;
   603  008C  3003               	movlw	3
   604  008D  00F3               	movwf	??_main
   605  008E  0873               	movf	??_main,w
   606  008F  00F6               	movwf	_val
   607  0090                     l834:
   608                           
   609                           ;Lab0.c: 107:             modo = 1;
   610  0090  01F7               	clrf	_modo
   611  0091  0AF7               	incf	_modo,f
   612  0092  285B               	goto	l818
   613  0093                     l64:
   614  0093  285B               	goto	l818
   615  0094  120A  118A  280C   	ljmp	start
   616  0097                     __end_of_main:
   617                           
   618                           	psect	text1
   619  0097                     __ptext1:	
   620 ;; *************** function _isr *****************
   621 ;; Defined at:
   622 ;;		line 35 in file "Lab0.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          3       0       0       0       0
   639 ;;      Totals:         3       0       0       0       0
   640 ;;Total ram usage:        3 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		Interrupt level 1
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _isr
   651  0097                     _isr:
   652  0097                     i1l750:
   653                           
   654                           ;Lab0.c: 36:     if (RBIF){
   655  0097  1C0B               	btfss	11,0	;volatile
   656  0098  289A               	goto	u9_21
   657  0099  289B               	goto	u9_20
   658  009A                     u9_21:
   659  009A  28AE               	goto	i1l764
   660  009B                     u9_20:
   661  009B                     i1l752:
   662                           
   663                           ;Lab0.c: 37:         PORTA = PORTB;
   664  009B  1283               	bcf	3,5	;RP0=0, select bank0
   665  009C  1303               	bcf	3,6	;RP1=0, select bank0
   666  009D  0806               	movf	6,w	;volatile
   667  009E  0085               	movwf	5	;volatile
   668  009F                     i1l754:
   669                           
   670                           ;Lab0.c: 38:         if (RB1 == 0){
   671  009F  1886               	btfsc	6,1	;volatile
   672  00A0  28A2               	goto	u10_21
   673  00A1  28A3               	goto	u10_20
   674  00A2                     u10_21:
   675  00A2  28AD               	goto	i1l762
   676  00A3                     u10_20:
   677  00A3                     i1l756:
   678                           
   679                           ;Lab0.c: 39:             PORTD++;
   680  00A3  3001               	movlw	1
   681  00A4  00F0               	movwf	??_isr
   682  00A5  0870               	movf	??_isr,w
   683  00A6  0788               	addwf	8,f	;volatile
   684  00A7                     i1l758:
   685                           
   686                           ;Lab0.c: 40:             modo = 2;
   687  00A7  3002               	movlw	2
   688  00A8  00F0               	movwf	??_isr
   689  00A9  0870               	movf	??_isr,w
   690  00AA  00F7               	movwf	_modo
   691  00AB                     i1l760:
   692                           
   693                           ;Lab0.c: 41:             PORTC = display[2];
   694  00AB  0822               	movf	_display+2,w
   695  00AC  0087               	movwf	7	;volatile
   696  00AD                     i1l762:
   697                           
   698                           ;Lab0.c: 43:         RBIF = 0;
   699  00AD  100B               	bcf	11,0	;volatile
   700  00AE                     i1l764:
   701                           
   702                           ;Lab0.c: 45:     if (T0IF){
   703  00AE  1D0B               	btfss	11,2	;volatile
   704  00AF  28B1               	goto	u11_21
   705  00B0  28B2               	goto	u11_20
   706  00B1                     u11_21:
   707  00B1  28BF               	goto	i1l57
   708  00B2                     u11_20:
   709  00B2                     i1l766:
   710                           
   711                           ;Lab0.c: 46:         if (modo==2){
   712  00B2  3002               	movlw	2
   713  00B3  0677               	xorwf	_modo,w
   714  00B4  1D03               	btfss	3,2
   715  00B5  28B7               	goto	u12_21
   716  00B6  28B8               	goto	u12_20
   717  00B7                     u12_21:
   718  00B7  28BA               	goto	i1l770
   719  00B8                     u12_20:
   720  00B8                     i1l768:
   721                           
   722                           ;Lab0.c: 47:             val--;
   723  00B8  3001               	movlw	1
   724  00B9  02F6               	subwf	_val,f
   725  00BA                     i1l770:
   726                           
   727                           ;Lab0.c: 49:         TMR0 = 134;
   728  00BA  3086               	movlw	134
   729  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   730  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   731  00BD  0081               	movwf	1	;volatile
   732  00BE                     i1l772:
   733                           
   734                           ;Lab0.c: 50:         T0IF = 0;
   735  00BE  110B               	bcf	11,2	;volatile
   736  00BF                     i1l57:
   737  00BF  0872               	movf	??_isr+2,w
   738  00C0  008A               	movwf	10
   739  00C1  0E71               	swapf	??_isr+1,w
   740  00C2  0083               	movwf	3
   741  00C3  0EFE               	swapf	btemp,f
   742  00C4  0E7E               	swapf	btemp,w
   743  00C5  0009               	retfie
   744  00C6                     __end_of_isr:
   745  007E                     btemp	set	126	;btemp
   746  007E                     wtemp0	set	126
   747                           
   748                           	psect	intentry
   749  0004                     __pintentry:	
   750                           ;incstack = 0
   751                           ; Regs used in _isr: [wreg+status,2+status,0]
   752                           
   753  0004                     interrupt_function:
   754  007E                     saved_w	set	btemp
   755  0004  00FE               	movwf	btemp
   756  0005  0E03               	swapf	3,w
   757  0006  00F1               	movwf	??_isr+1
   758  0007  080A               	movf	10,w
   759  0008  00F2               	movwf	??_isr+2
   760  0009  120A  118A  2897   	ljmp	_isr
   761                           
   762                           	psect	config
   763                           
   764                           ;Config register CONFIG1 @ 0x2007
   765                           ;	Oscillator Selection bits
   766                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   767                           ;	Watchdog Timer Enable bit
   768                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   769                           ;	Power-up Timer Enable bit
   770                           ;	PWRTE = ON, PWRT enabled
   771                           ;	RE3/MCLR pin function select bit
   772                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   773                           ;	Code Protection bit
   774                           ;	CP = OFF, Program memory code protection is disabled
   775                           ;	Data Code Protection bit
   776                           ;	CPD = OFF, Data memory code protection is disabled
   777                           ;	Brown Out Reset Selection bits
   778                           ;	BOREN = OFF, BOR disabled
   779                           ;	Internal External Switchover bit
   780                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   781                           ;	Fail-Safe Clock Monitor Enabled bit
   782                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   783                           ;	Low Voltage Programming Enable bit
   784                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   785                           ;	In-Circuit Debugger Mode bit
   786                           ;	DEBUG = 0x1, unprogrammed default
   787  2007                     	org	8199
   788  2007  30C4               	dw	12484
   789                           
   790                           ;Config register CONFIG2 @ 0x2008
   791                           ;	Brown-out Reset Selection bit
   792                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   793                           ;	Flash Program Memory Self Write Enable bits
   794                           ;	WRT = OFF, Write protection off
   795  2008                     	org	8200
   796  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       8
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       A       5       12.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      12      12        0.0%
ABS                  0      0      12       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 14 14:58:36 2021

                      pc 0002                       l64 0093                       fsr 0004  
                    l800 0047                      l810 0053                      l802 004C  
                    l820 0061                      l812 0054                      l804 004E  
                    l830 0081                      l822 0068                      l814 0055  
                    l806 0051                      l832 0086                      l824 006E  
                    l816 0057                      l808 0052                      l834 0090  
                    l826 0075                      l818 005B                      l828 007A  
                    l780 0033                      l790 003B                      l782 0034  
                    l774 0029                      l792 003C                      l784 0038  
                    l776 0030                      l794 003D                      l786 0039  
                    l778 0032                      l796 003F                      l788 003A  
                    l798 0043                      _RB1 0031                      u130 0061  
                    u131 0060                      u140 006E                      u141 006D  
                    u150 007A                      u151 0079                      u160 0086  
                    u161 0085                      _isr 0097                      _val 0076  
                    indf 0000                     ?_isr 0070                     _T0IF 005A  
                   _IOCB 0096                     _RBIF 0058                     i1l57 00BF  
                   _TMR0 0001                     _WPUB 0095                     u9_20 009B  
                   u9_21 009A                     _main 0029                     _modo 0077  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l750 0097  
                  i1l760 00AB                    i1l752 009B                    i1l770 00BA  
                  i1l762 00AD                    i1l754 009F                    i1l772 00BE  
                  i1l756 00A3                    i1l764 00AE                    i1l766 00B2  
                  i1l758 00A7                    i1l768 00B8                    u10_20 00A3  
                  u10_21 00A2                    u11_20 00B2                    u11_21 00B1  
                  u12_20 00B8                    u12_21 00B7                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _cont1 0075                    _cont2 0074  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0097                   ??_main 0073  
                 _ANSELH 0189             __pdataCOMMON 0077                   saved_w 007E  
__end_of__initialization 0025           __pcstackCOMMON 0070             __pidataBANK0 00D9  
         _OPTION_REGbits 0081               __pnvCOMMON 0076               __pmaintext 0029  
             __pintentry 0004                  __ptext1 0097                  _display 0020  
           __size_of_isr 002F     end_of_initialization 0025            __pidataCOMMON 00E3  
    start_initialization 000F              __end_of_isr 00C6               init_fetch0 00C6  
            __pdataBANK0 0020              __pbssCOMMON 0074                ___latbits 0002  
      interrupt_function 0004            __size_of_main 006E               _INTCONbits 000B  
               init_ram0 00CA                 intlevel1 0000               _OSCCONbits 008F  
