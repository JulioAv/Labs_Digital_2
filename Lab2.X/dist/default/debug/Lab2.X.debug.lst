

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 16:04:21 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  0800                     __pstrings:
   464  0800                     stringtab:
   465  0800                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468  0800  1BFF               	btfsc	btemp+1,7
   469  0801  280A               	ljmp	stringcode
   470  0802  1383               	bcf	3,7
   471  0803  187F               	btfsc	btemp+1,0
   472  0804  1783               	bsf	3,7
   473  0805  0800               	movf	0,w
   474  0806  0A84               	incf	4,f
   475  0807  1903               	skipnz
   476  0808  0AFF               	incf	btemp+1,f
   477  0809  0008               	return
   478  080A                     stringcode:
   479  080A                     stringdir:
   480  080A  3008               	movlw	high stringdir
   481  080B  008A               	movwf	10
   482  080C  0804               	movf	4,w
   483  080D  0A84               	incf	4,f
   484  080E  0782               	addwf	2,f
   485  080F                     __stringbase:
   486  080F  3400               	retlw	0
   487  0810                     __end_of__stringtab:
   488  0810                     _dpowers:
   489  0810  3401               	retlw	1
   490  0811  3400               	retlw	0
   491  0812  340A               	retlw	10
   492  0813  3400               	retlw	0
   493  0814  3464               	retlw	100
   494  0815  3400               	retlw	0
   495  0816  34E8               	retlw	232
   496  0817  3403               	retlw	3
   497  0818  3410               	retlw	16
   498  0819  3427               	retlw	39
   499  081A                     __end_of_dpowers:
   500  0008                     _PORTD	set	8
   501  0018                     _RCSTAbits	set	24
   502  0006                     _PORTB	set	6
   503  000B                     _INTCONbits	set	11
   504  001A                     _RCREG	set	26
   505  001E                     _ADRESH	set	30
   506  001F                     _ADCON0bits	set	31
   507  0019                     _TXREG	set	25
   508  003D                     _RC5	set	61
   509  003C                     _RC4	set	60
   510  0065                     _RCIF	set	101
   511  0066                     _ADIF	set	102
   512  0099                     _SPBRG	set	153
   513  009F                     _ADCON1bits	set	159
   514  008C                     _PIE1bits	set	140
   515  008F                     _OSCCONbits	set	143
   516  0088                     _TRISD	set	136
   517  0087                     _TRISC	set	135
   518  0086                     _TRISB	set	134
   519  0085                     _TRISA	set	133
   520  0098                     _TXSTAbits	set	152
   521  04C5                     _TXEN	set	1221
   522  0187                     _BAUDCTLbits	set	391
   523  0189                     _ANSELH	set	393
   524  0188                     _ANSEL	set	392
   525  081A                     STR_11:
   526  081A  3453               	retlw	83	;'S'
   527  081B  3431               	retlw	49	;'1'
   528  081C  343A               	retlw	58	;':'
   529  081D  3420               	retlw	32	;' '
   530  081E  3420               	retlw	32	;' '
   531  081F  3453               	retlw	83	;'S'
   532  0820  3432               	retlw	50	;'2'
   533  0821  343A               	retlw	58	;':'
   534  0822  3420               	retlw	32	;' '
   535  0823  3420               	retlw	32	;' '
   536  0824  3453               	retlw	83	;'S'
   537  0825  3433               	retlw	51	;'3'
   538  0826  343A               	retlw	58	;':'
   539  0827  3400               	retlw	0
   540  0828                     STR_12:
   541  0828  3425               	retlw	37	;'%'
   542  0829  3464               	retlw	100	;'d'
   543  082A  3456               	retlw	86	;'V'
   544  082B  3420               	retlw	32	;' '
   545  082C  3400               	retlw	0
   546  082D                     STR_1:
   547  082D  3430               	retlw	48	;'0'
   548  082E  3400               	retlw	0
   549  082F                     STR_2:
   550  082F  3431               	retlw	49	;'1'
   551  0830  3400               	retlw	0
   552  0831                     STR_3:
   553  0831  3432               	retlw	50	;'2'
   554  0832  3400               	retlw	0
   555  0833                     STR_4:
   556  0833  3433               	retlw	51	;'3'
   557  0834  3400               	retlw	0
   558  0835                     STR_5:
   559  0835  3434               	retlw	52	;'4'
   560  0836  3400               	retlw	0
   561  0837                     STR_6:
   562  0837  3435               	retlw	53	;'5'
   563  0838  3400               	retlw	0
   564  0839                     STR_7:
   565  0839  3436               	retlw	54	;'6'
   566  083A  3400               	retlw	0
   567  083B                     STR_8:
   568  083B  3437               	retlw	55	;'7'
   569  083C  3400               	retlw	0
   570  083D                     STR_9:
   571  083D  3438               	retlw	56	;'8'
   572  083E  3400               	retlw	0
   573  083F                     STR_10:
   574  083F  3439               	retlw	57	;'9'
   575  0840  3400               	retlw	0
   576  0828                     
   577                           	psect	cinit
   578  000F                     start_initialization:	
   579                           ; #config settings
   580                           
   581  000F                     __initialization:
   582                           
   583                           ; Clear objects allocated to COMMON
   584  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   585  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   586  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK0
   589  0012  1383               	bcf	3,7	;select IRP bank0
   590  0013  3053               	movlw	low __pbssBANK0
   591  0014  0084               	movwf	4
   592  0015  306F               	movlw	low (__pbssBANK0+28)
   593  0016  120A  158A  24ED  120A  118A  	fcall	clear_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  001B  30A0               	movlw	low __pbssBANK1
   597  001C  0084               	movwf	4
   598  001D  30B4               	movlw	low (__pbssBANK1+20)
   599  001E  120A  158A  24ED  120A  118A  	fcall	clear_ram0
   600  0023                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  0023                     __end_of__initialization:
   604  0023  0183               	clrf	3
   605  0024  120A  118A  2B88   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssCOMMON
   608  0077                     __pbssCOMMON:
   609  0077                     _rc:
   610  0077                     	ds	1
   611  0078                     _tr:
   612  0078                     	ds	1
   613  0079                     _frec:
   614  0079                     	ds	1
   615                           
   616                           	psect	bssBANK0
   617  0053                     __pbssBANK0:
   618  0053                     _uni:
   619  0053                     	ds	1
   620  0054                     _dec:
   621  0054                     	ds	1
   622  0055                     _cen:
   623  0055                     	ds	1
   624  0056                     _vol2:
   625  0056                     	ds	1
   626  0057                     _vol1:
   627  0057                     	ds	1
   628  0058                     _con:
   629  0058                     	ds	1
   630  0059                     _pot2:
   631  0059                     	ds	1
   632  005A                     _pot1:
   633  005A                     	ds	1
   634  005B                     _buffer:
   635  005B                     	ds	20
   636                           
   637                           	psect	bssBANK1
   638  00A0                     __pbssBANK1:
   639  00A0                     _buffer1:
   640  00A0                     	ds	20
   641                           
   642                           	psect	clrtext
   643  0CED                     clear_ram0:	
   644                           ;	Called with FSR containing the base address, and
   645                           ;	W with the last address+1
   646                           
   647  0CED  0064               	clrwdt	;clear the watchdog before getting into this loop
   648  0CEE                     clrloop0:
   649  0CEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   650  0CEF  0A84               	incf	4,f	;increment pointer
   651  0CF0  0604               	xorwf	4,w	;XOR with final address
   652  0CF1  1903               	btfsc	3,2	;have we reached the end yet?
   653  0CF2  3400               	retlw	0	;all done for this memory range, return
   654  0CF3  0604               	xorwf	4,w	;XOR again to restore value
   655  0CF4  2CEE               	goto	clrloop0	;do the next byte
   656                           
   657                           	psect	cstackBANK1
   658  00B4                     __pcstackBANK1:
   659  00B4                     ??_main:
   660                           
   661                           ; 1 bytes @ 0x0
   662  00B4                     	ds	5
   663  00B9                     _main$1125:
   664                           
   665                           ; 2 bytes @ 0x5
   666  00B9                     	ds	2
   667                           
   668                           	psect	cstackCOMMON
   669  0070                     __pcstackCOMMON:
   670  0070                     ?_ADC_IF:
   671  0070                     ??_ADC_IF:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_Lcd_Init:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_Lcd_Clear:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_Lcd_Write_Char:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_isr:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_main:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Lcd_Cmd:	
   690                           ; 1 bytes @ 0x0
   691                           
   692                           
   693                           ; 1 bytes @ 0x0
   694  0070                     	ds	1
   695  0071                     ??_isr:
   696                           
   697                           ; 1 bytes @ 0x1
   698  0071                     	ds	3
   699  0074                     ?_ADC_CONFIG:
   700  0074                     ??_USART_CONFIG:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??_Lcd_Write_Char:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??_Lcd_Cmd:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ??___awmod:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     ??___lwdiv:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ?__Umul8_16:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     __Umul8_16@multiplicand:	
   719                           ; 2 bytes @ 0x4
   720                           
   721  0074                     ADC_CONFIG@frec:	
   722                           ; 1 bytes @ 0x4
   723                           
   724                           
   725                           ; 2 bytes @ 0x4
   726  0074                     	ds	1
   727  0075                     ??___lwmod:
   728  0075                     Lcd_Write_Char@a:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     ___awmod@counter:	
   732                           ; 1 bytes @ 0x5
   733                           
   734                           
   735                           ; 1 bytes @ 0x5
   736  0075                     	ds	1
   737  0076                     ??_ADC_CONFIG:
   738  0076                     Lcd_Cmd@a:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     ___awmod@sign:	
   742                           ; 1 bytes @ 0x6
   743                           
   744  0076                     ___lwmod@counter:	
   745                           ; 1 bytes @ 0x6
   746                           
   747                           
   748                           ; 1 bytes @ 0x6
   749  0076                     	ds	1
   750  0077                     ??_Lcd_Clear:
   751  0077                     ??_Lcd_Set_Cursor:	
   752                           ; 1 bytes @ 0x7
   753                           
   754                           
   755                           	psect	cstackBANK0
   756  0020                     __pcstackBANK0:	
   757                           ; 1 bytes @ 0x7
   758                           
   759  0020                     ?_USART_CONFIG:
   760  0020                     ??_Lcd_Init:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ?_Lcd_Set_Cursor:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0020                     ?_Lcd_Write_String:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0020                     ??__Umul8_16:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0020                     ?___awmod:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ?___lwdiv:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0020                     ?___xxtofl:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0020                     Lcd_Set_Cursor@b:	
   782                           ; 4 bytes @ 0x0
   783                           
   784  0020                     USART_CONFIG@frec:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0020                     Lcd_Write_String@a:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0020                     ___awmod@divisor:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0020                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0020                     ___xxtofl@val:	
   797                           ; 2 bytes @ 0x0
   798                           
   799                           
   800                           ; 4 bytes @ 0x0
   801  0020                     	ds	1
   802  0021                     Lcd_Set_Cursor@a:
   803                           
   804                           ; 1 bytes @ 0x1
   805  0021                     	ds	1
   806  0022                     ??_Lcd_Write_String:
   807  0022                     USART_CONFIG@tr:	
   808                           ; 1 bytes @ 0x2
   809                           
   810  0022                     ___awmod@dividend:	
   811                           ; 2 bytes @ 0x2
   812                           
   813  0022                     ___lwdiv@dividend:	
   814                           ; 2 bytes @ 0x2
   815                           
   816  0022                     __Umul8_16@product:	
   817                           ; 2 bytes @ 0x2
   818                           
   819                           
   820                           ; 2 bytes @ 0x2
   821  0022                     	ds	2
   822  0024                     ??___xxtofl:
   823  0024                     ?___awdiv:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0024                     ___lwdiv@counter:	
   827                           ; 2 bytes @ 0x4
   828                           
   829  0024                     USART_CONFIG@rc:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     ___awdiv@divisor:	
   833                           ; 2 bytes @ 0x4
   834                           
   835  0024                     __Umul8_16@word_mpld:	
   836                           ; 2 bytes @ 0x4
   837                           
   838                           
   839                           ; 2 bytes @ 0x4
   840  0024                     	ds	1
   841  0025                     Lcd_Write_String@i:
   842  0025                     ___lwdiv@quotient:	
   843                           ; 2 bytes @ 0x5
   844                           
   845                           
   846                           ; 2 bytes @ 0x5
   847  0025                     	ds	1
   848  0026                     __Umul8_16@multiplier:
   849  0026                     ___awdiv@dividend:	
   850                           ; 1 bytes @ 0x6
   851                           
   852                           
   853                           ; 2 bytes @ 0x6
   854  0026                     	ds	1
   855  0027                     ?___lwmod:
   856  0027                     ___lwmod@divisor:	
   857                           ; 2 bytes @ 0x7
   858                           
   859                           
   860                           ; 2 bytes @ 0x7
   861  0027                     	ds	1
   862  0028                     ??___awdiv:
   863  0028                     ___xxtofl@sign:	
   864                           ; 1 bytes @ 0x8
   865                           
   866                           
   867                           ; 1 bytes @ 0x8
   868  0028                     	ds	1
   869  0029                     ___awdiv@counter:
   870  0029                     ___xxtofl@exp:	
   871                           ; 1 bytes @ 0x9
   872                           
   873  0029                     ___lwmod@dividend:	
   874                           ; 1 bytes @ 0x9
   875                           
   876                           
   877                           ; 2 bytes @ 0x9
   878  0029                     	ds	1
   879  002A                     ___awdiv@sign:
   880  002A                     ___xxtofl@arg:	
   881                           ; 1 bytes @ 0xA
   882                           
   883                           
   884                           ; 4 bytes @ 0xA
   885  002A                     	ds	1
   886  002B                     ?_sprintf:
   887  002B                     sprintf@f:	
   888                           ; 2 bytes @ 0xB
   889                           
   890  002B                     ___awdiv@quotient:	
   891                           ; 1 bytes @ 0xB
   892                           
   893                           
   894                           ; 2 bytes @ 0xB
   895  002B                     	ds	3
   896  002E                     ??_sprintf:
   897  002E                     ?___flmul:	
   898                           ; 1 bytes @ 0xE
   899                           
   900  002E                     ___flmul@b:	
   901                           ; 4 bytes @ 0xE
   902                           
   903                           
   904                           ; 4 bytes @ 0xE
   905  002E                     	ds	3
   906  0031                     sprintf@ap:
   907                           
   908                           ; 1 bytes @ 0x11
   909  0031                     	ds	1
   910  0032                     sprintf@flag:
   911  0032                     ___flmul@a:	
   912                           ; 1 bytes @ 0x12
   913                           
   914                           
   915                           ; 4 bytes @ 0x12
   916  0032                     	ds	1
   917  0033                     sprintf@prec:
   918                           
   919                           ; 1 bytes @ 0x13
   920  0033                     	ds	1
   921  0034                     sprintf@val:
   922                           
   923                           ; 2 bytes @ 0x14
   924  0034                     	ds	2
   925  0036                     ??___flmul:
   926  0036                     sprintf@sp:	
   927                           ; 1 bytes @ 0x16
   928                           
   929                           
   930                           ; 1 bytes @ 0x16
   931  0036                     	ds	1
   932  0037                     sprintf@c:
   933                           
   934                           ; 1 bytes @ 0x17
   935  0037                     	ds	4
   936  003B                     ___flmul@sign:
   937                           
   938                           ; 1 bytes @ 0x1B
   939  003B                     	ds	1
   940  003C                     ___flmul@aexp:
   941                           
   942                           ; 1 bytes @ 0x1C
   943  003C                     	ds	1
   944  003D                     ___flmul@grs:
   945                           
   946                           ; 4 bytes @ 0x1D
   947  003D                     	ds	4
   948  0041                     ___flmul@bexp:
   949                           
   950                           ; 1 bytes @ 0x21
   951  0041                     	ds	1
   952  0042                     ___flmul@prod:
   953                           
   954                           ; 4 bytes @ 0x22
   955  0042                     	ds	4
   956  0046                     ___flmul@temp:
   957                           
   958                           ; 2 bytes @ 0x26
   959  0046                     	ds	2
   960  0048                     ?___fltol:
   961  0048                     ___fltol@f1:	
   962                           ; 4 bytes @ 0x28
   963                           
   964                           
   965                           ; 4 bytes @ 0x28
   966  0048                     	ds	4
   967  004C                     ??___fltol:
   968                           
   969                           ; 1 bytes @ 0x2C
   970  004C                     	ds	5
   971  0051                     ___fltol@sign1:
   972                           
   973                           ; 1 bytes @ 0x31
   974  0051                     	ds	1
   975  0052                     ___fltol@exp1:
   976                           
   977                           ; 1 bytes @ 0x32
   978  0052                     	ds	1
   979                           
   980                           	psect	maintext
   981  0388                     __pmaintext:	
   982 ;;
   983 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   984 ;;
   985 ;; *************** function _main *****************
   986 ;; Defined at:
   987 ;;		line 111 in file "Lab2.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : B00/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       2       0       0
  1003 ;;      Temps:          0       0       5       0       0
  1004 ;;      Totals:         0       0       7       0       0
  1005 ;;Total ram usage:        7 bytes
  1006 ;; Hardware stack levels required when called:    4
  1007 ;; This function calls:
  1008 ;;		_ADC_CONFIG
  1009 ;;		_Lcd_Clear
  1010 ;;		_Lcd_Init
  1011 ;;		_Lcd_Set_Cursor
  1012 ;;		_Lcd_Write_Char
  1013 ;;		_Lcd_Write_String
  1014 ;;		_USART_CONFIG
  1015 ;;		___awdiv
  1016 ;;		___awmod
  1017 ;;		___flmul
  1018 ;;		___fltol
  1019 ;;		___xxtofl
  1020 ;;		_sprintf
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _main
  1028  0388                     _main:
  1029  0388                     l2819:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1032                           
  1033                           
  1034                           ;Lab2.c: 112:     ANSEL = 0x03;
  1035  0388  3003               	movlw	3
  1036  0389  1683               	bsf	3,5	;RP0=1, select bank3
  1037  038A  1703               	bsf	3,6	;RP1=1, select bank3
  1038  038B  0088               	movwf	8	;volatile
  1039  038C                     l2821:
  1040                           
  1041                           ;Lab2.c: 113:     ANSELH = 0x00;
  1042  038C  0189               	clrf	9	;volatile
  1043  038D                     l2823:
  1044                           
  1045                           ;Lab2.c: 115:     TRISA = 0x03;
  1046  038D  3003               	movlw	3
  1047  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1048  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1049  0390  0085               	movwf	5	;volatile
  1050                           
  1051                           ;Lab2.c: 116:     TRISB = 0x00;
  1052  0391  0186               	clrf	6	;volatile
  1053  0392                     l2825:
  1054                           
  1055                           ;Lab2.c: 117:     TRISC = 0x80;
  1056  0392  3080               	movlw	128
  1057  0393  0087               	movwf	7	;volatile
  1058  0394                     l2827:
  1059                           
  1060                           ;Lab2.c: 118:     TRISD = 0x00;
  1061  0394  0188               	clrf	8	;volatile
  1062  0395                     l2829:
  1063                           
  1064                           ;Lab2.c: 120:     OSCCONbits.IRCF = 0B110;
  1065  0395  080F               	movf	15,w	;volatile
  1066  0396  398F               	andlw	-113
  1067  0397  3860               	iorlw	96
  1068  0398  008F               	movwf	15	;volatile
  1069  0399                     l2831:
  1070                           
  1071                           ;Lab2.c: 121:     OSCCONbits.OSTS = 0;
  1072  0399  118F               	bcf	15,3	;volatile
  1073  039A                     l2833:
  1074                           
  1075                           ;Lab2.c: 122:     OSCCONbits.SCS = 1;
  1076  039A  140F               	bsf	15,0	;volatile
  1077  039B                     l2835:
  1078                           
  1079                           ;Lab2.c: 124:     ADC_CONFIG(4);
  1080  039B  3004               	movlw	4
  1081  039C  00F4               	movwf	ADC_CONFIG@frec
  1082  039D  3000               	movlw	0
  1083  039E  00F5               	movwf	ADC_CONFIG@frec+1
  1084  039F  120A  118A  27D0  120A  118A  	fcall	_ADC_CONFIG
  1085  03A4                     l2837:
  1086                           
  1087                           ;Lab2.c: 125:     USART_CONFIG(4, 1, 1);
  1088  03A4  3004               	movlw	4
  1089  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1090  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1091  03A7  00A0               	movwf	USART_CONFIG@frec
  1092  03A8  3000               	movlw	0
  1093  03A9  00A1               	movwf	USART_CONFIG@frec+1
  1094  03AA  3001               	movlw	1
  1095  03AB  00A2               	movwf	USART_CONFIG@tr
  1096  03AC  3000               	movlw	0
  1097  03AD  00A3               	movwf	USART_CONFIG@tr+1
  1098  03AE  3001               	movlw	1
  1099  03AF  00A4               	movwf	USART_CONFIG@rc
  1100  03B0  3000               	movlw	0
  1101  03B1  00A5               	movwf	USART_CONFIG@rc+1
  1102  03B2  120A  158A  2607  120A  118A  	fcall	_USART_CONFIG
  1103  03B7                     l2839:
  1104                           
  1105                           ;Lab2.c: 127:     INTCONbits.PEIE = 1;
  1106  03B7  170B               	bsf	11,6	;volatile
  1107  03B8                     l2841:
  1108                           
  1109                           ;Lab2.c: 128:     PIE1bits.ADIE = 1;
  1110  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1111  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1112  03BA  170C               	bsf	12,6	;volatile
  1113  03BB                     l2843:
  1114                           
  1115                           ;Lab2.c: 130:     PIE1bits.RCIE = 1;
  1116  03BB  168C               	bsf	12,5	;volatile
  1117  03BC                     l2845:
  1118                           
  1119                           ;Lab2.c: 131:     ADCON0bits.GO = 1;
  1120  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1121  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1122  03BE  149F               	bsf	31,1	;volatile
  1123  03BF                     l2847:
  1124                           
  1125                           ;Lab2.c: 132:     Lcd_Init();
  1126  03BF  120A  158A  2733  120A  118A  	fcall	_Lcd_Init
  1127  03C4                     l2849:
  1128                           
  1129                           ;Lab2.c: 133:     RCIF = 0;
  1130  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1131  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1132  03C6  128C               	bcf	12,5	;volatile
  1133  03C7                     l2851:
  1134                           
  1135                           ;Lab2.c: 135:     INTCONbits.GIE = 1;
  1136  03C7  178B               	bsf	11,7	;volatile
  1137  03C8                     l2853:
  1138                           
  1139                           ;Lab2.c: 136:     Lcd_Clear();
  1140  03C8  120A  158A  24F5  120A  118A  	fcall	_Lcd_Clear
  1141  03CD                     l2855:
  1142                           
  1143                           ;Lab2.c: 137:     Lcd_Set_Cursor(1,1);
  1144  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1145  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1146  03CF  01A0               	clrf	Lcd_Set_Cursor@b
  1147  03D0  0AA0               	incf	Lcd_Set_Cursor@b,f
  1148  03D1  3001               	movlw	1
  1149  03D2  120A  158A  2543  120A  118A  	fcall	_Lcd_Set_Cursor
  1150  03D7                     l2857:
  1151                           
  1152                           ;Lab2.c: 138:     Lcd_Write_String("S1:  S2:  S3:");
  1153  03D7  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1154  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1155  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1156  03DA  00A0               	movwf	Lcd_Write_String@a
  1157  03DB  3080               	movlw	128
  1158  03DC  00A1               	movwf	Lcd_Write_String@a+1
  1159  03DD  120A  158A  264C  120A  118A  	fcall	_Lcd_Write_String
  1160  03E2                     l2859:
  1161                           
  1162                           ;Lab2.c: 141:         PORTB = con;
  1163  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1164  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1165  03E4  0858               	movf	_con,w
  1166  03E5  0086               	movwf	6	;volatile
  1167  03E6                     l2861:
  1168                           
  1169                           ;Lab2.c: 142:         vol1 = (pot1*0.01961);
  1170  03E6  085A               	movf	_pot1,w
  1171  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1172  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  1173  03E9  00B4               	movwf	??_main^(0+128)
  1174  03EA  01B5               	clrf	(??_main^(0+128)+1)
  1175  03EB  01B6               	clrf	(??_main^(0+128)+2)
  1176  03EC  01B7               	clrf	(??_main^(0+128)+3)
  1177  03ED  0837               	movf	(??_main+3)^(0+128),w
  1178  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1179  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1180  03F0  00A3               	movwf	___xxtofl@val+3
  1181  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1182  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1183  03F3  0836               	movf	(??_main+2)^(0+128),w
  1184  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1185  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1186  03F6  00A2               	movwf	___xxtofl@val+2
  1187  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  1188  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  1189  03F9  0835               	movf	(??_main+1)^(0+128),w
  1190  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1191  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1192  03FC  00A1               	movwf	___xxtofl@val+1
  1193  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  1194  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  1195  03FF  0834               	movf	??_main^(0+128),w
  1196  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0402  00A0               	movwf	___xxtofl@val
  1199  0403  3001               	movlw	1
  1200  0404  120A  118A  2698  120A  118A  	fcall	___xxtofl
  1201  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1202  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1203  040B  0823               	movf	?___xxtofl+3,w
  1204  040C  00B5               	movwf	___flmul@a+3
  1205  040D  0822               	movf	?___xxtofl+2,w
  1206  040E  00B4               	movwf	___flmul@a+2
  1207  040F  0821               	movf	?___xxtofl+1,w
  1208  0410  00B3               	movwf	___flmul@a+1
  1209  0411  0820               	movf	?___xxtofl,w
  1210  0412  00B2               	movwf	___flmul@a
  1211  0413  303C               	movlw	60
  1212  0414  00B1               	movwf	___flmul@b+3
  1213  0415  30A0               	movlw	160
  1214  0416  00B0               	movwf	___flmul@b+2
  1215  0417  30A5               	movlw	165
  1216  0418  00AF               	movwf	___flmul@b+1
  1217  0419  3027               	movlw	39
  1218  041A  00AE               	movwf	___flmul@b
  1219  041B  120A  118A  2027  120A  118A  	fcall	___flmul
  1220  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0422  0831               	movf	?___flmul+3,w
  1223  0423  00CB               	movwf	___fltol@f1+3
  1224  0424  0830               	movf	?___flmul+2,w
  1225  0425  00CA               	movwf	___fltol@f1+2
  1226  0426  082F               	movf	?___flmul+1,w
  1227  0427  00C9               	movwf	___fltol@f1+1
  1228  0428  082E               	movf	?___flmul,w
  1229  0429  00C8               	movwf	___fltol@f1
  1230  042A  120A  118A  2754  120A  118A  	fcall	___fltol
  1231  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0431  0848               	movf	?___fltol,w
  1234  0432  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0433  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0434  00B8               	movwf	(??_main+4)^(0+128)
  1237  0435  0838               	movf	(??_main+4)^(0+128),w
  1238  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0438  00D7               	movwf	_vol1
  1241  0439                     l2863:
  1242                           
  1243                           ;Lab2.c: 143:         vol2 = (pot2*0.01961);
  1244  0439  0859               	movf	_pot2,w
  1245  043A  1683               	bsf	3,5	;RP0=1, select bank1
  1246  043B  1303               	bcf	3,6	;RP1=0, select bank1
  1247  043C  00B4               	movwf	??_main^(0+128)
  1248  043D  01B5               	clrf	(??_main^(0+128)+1)
  1249  043E  01B6               	clrf	(??_main^(0+128)+2)
  1250  043F  01B7               	clrf	(??_main^(0+128)+3)
  1251  0440  0837               	movf	(??_main+3)^(0+128),w
  1252  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0443  00A3               	movwf	___xxtofl@val+3
  1255  0444  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0445  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0446  0836               	movf	(??_main+2)^(0+128),w
  1258  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0449  00A2               	movwf	___xxtofl@val+2
  1261  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1262  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1263  044C  0835               	movf	(??_main+1)^(0+128),w
  1264  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1266  044F  00A1               	movwf	___xxtofl@val+1
  1267  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0452  0834               	movf	??_main^(0+128),w
  1270  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0455  00A0               	movwf	___xxtofl@val
  1273  0456  3001               	movlw	1
  1274  0457  120A  118A  2698  120A  118A  	fcall	___xxtofl
  1275  045C  1283               	bcf	3,5	;RP0=0, select bank0
  1276  045D  1303               	bcf	3,6	;RP1=0, select bank0
  1277  045E  0823               	movf	?___xxtofl+3,w
  1278  045F  00B5               	movwf	___flmul@a+3
  1279  0460  0822               	movf	?___xxtofl+2,w
  1280  0461  00B4               	movwf	___flmul@a+2
  1281  0462  0821               	movf	?___xxtofl+1,w
  1282  0463  00B3               	movwf	___flmul@a+1
  1283  0464  0820               	movf	?___xxtofl,w
  1284  0465  00B2               	movwf	___flmul@a
  1285  0466  303C               	movlw	60
  1286  0467  00B1               	movwf	___flmul@b+3
  1287  0468  30A0               	movlw	160
  1288  0469  00B0               	movwf	___flmul@b+2
  1289  046A  30A5               	movlw	165
  1290  046B  00AF               	movwf	___flmul@b+1
  1291  046C  3027               	movlw	39
  1292  046D  00AE               	movwf	___flmul@b
  1293  046E  120A  118A  2027  120A  118A  	fcall	___flmul
  1294  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0475  0831               	movf	?___flmul+3,w
  1297  0476  00CB               	movwf	___fltol@f1+3
  1298  0477  0830               	movf	?___flmul+2,w
  1299  0478  00CA               	movwf	___fltol@f1+2
  1300  0479  082F               	movf	?___flmul+1,w
  1301  047A  00C9               	movwf	___fltol@f1+1
  1302  047B  082E               	movf	?___flmul,w
  1303  047C  00C8               	movwf	___fltol@f1
  1304  047D  120A  118A  2754  120A  118A  	fcall	___fltol
  1305  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1306  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0484  0848               	movf	?___fltol,w
  1308  0485  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0486  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0487  00B8               	movwf	(??_main+4)^(0+128)
  1311  0488  0838               	movf	(??_main+4)^(0+128),w
  1312  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1313  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1314  048B  00D6               	movwf	_vol2
  1315  048C                     l2865:
  1316                           
  1317                           ;Lab2.c: 144:         sprintf(buffer, "%dV ", vol1);
  1318  048C  3019               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1319  048D  1683               	bsf	3,5	;RP0=1, select bank1
  1320  048E  1303               	bcf	3,6	;RP1=0, select bank1
  1321  048F  00B4               	movwf	??_main^(0+128)
  1322  0490  0834               	movf	??_main^(0+128),w
  1323  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0493  00AB               	movwf	sprintf@f
  1326  0494  0857               	movf	_vol1,w
  1327  0495  1683               	bsf	3,5	;RP0=1, select bank1
  1328  0496  1303               	bcf	3,6	;RP1=0, select bank1
  1329  0497  00B5               	movwf	(??_main+1)^(0+128)
  1330  0498  01B6               	clrf	((??_main+1)^(0+128)+1)
  1331  0499  0835               	movf	(??_main+1)^(0+128),w
  1332  049A  1283               	bcf	3,5	;RP0=0, select bank0
  1333  049B  1303               	bcf	3,6	;RP1=0, select bank0
  1334  049C  00AC               	movwf	?_sprintf+1
  1335  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1336  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1337  049F  0836               	movf	(??_main+2)^(0+128),w
  1338  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1339  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1340  04A2  00AD               	movwf	?_sprintf+2
  1341  04A3  305B               	movlw	(low (_buffer| 0))& (0+255)
  1342  04A4  120A  118A  25AE  120A  118A  	fcall	_sprintf
  1343  04A9                     l2867:
  1344                           
  1345                           ;Lab2.c: 145:         sprintf(buffer1, "%dV ", vol2);
  1346  04A9  3019               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1347  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  1348  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  1349  04AC  00B4               	movwf	??_main^(0+128)
  1350  04AD  0834               	movf	??_main^(0+128),w
  1351  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1352  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1353  04B0  00AB               	movwf	sprintf@f
  1354  04B1  0856               	movf	_vol2,w
  1355  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  1356  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  1357  04B4  00B5               	movwf	(??_main+1)^(0+128)
  1358  04B5  01B6               	clrf	((??_main+1)^(0+128)+1)
  1359  04B6  0835               	movf	(??_main+1)^(0+128),w
  1360  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1361  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1362  04B9  00AC               	movwf	?_sprintf+1
  1363  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1364  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1365  04BC  0836               	movf	(??_main+2)^(0+128),w
  1366  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1367  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1368  04BF  00AD               	movwf	?_sprintf+2
  1369  04C0  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  1370  04C1  120A  118A  25AE  120A  118A  	fcall	_sprintf
  1371  04C6                     l2869:
  1372                           
  1373                           ;Lab2.c: 147:         cen = (con/100);
  1374  04C6  3064               	movlw	100
  1375  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1376  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1377  04C9  00A4               	movwf	___awdiv@divisor
  1378  04CA  3000               	movlw	0
  1379  04CB  00A5               	movwf	___awdiv@divisor+1
  1380  04CC  0858               	movf	_con,w
  1381  04CD  1683               	bsf	3,5	;RP0=1, select bank1
  1382  04CE  1303               	bcf	3,6	;RP1=0, select bank1
  1383  04CF  00B4               	movwf	??_main^(0+128)
  1384  04D0  01B5               	clrf	(??_main^(0+128)+1)
  1385  04D1  0834               	movf	??_main^(0+128),w
  1386  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  1387  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  1388  04D4  00A6               	movwf	___awdiv@dividend
  1389  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  1390  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  1391  04D7  0835               	movf	(??_main+1)^(0+128),w
  1392  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1393  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1394  04DA  00A7               	movwf	___awdiv@dividend+1
  1395  04DB  120A  158A  2797  120A  118A  	fcall	___awdiv
  1396  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1397  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1398  04E2  0824               	movf	?___awdiv,w
  1399  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  1400  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  1401  04E5  00B6               	movwf	(??_main+2)^(0+128)
  1402  04E6  0836               	movf	(??_main+2)^(0+128),w
  1403  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1404  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1405  04E9  00D5               	movwf	_cen
  1406  04EA                     l2871:
  1407                           
  1408                           ;Lab2.c: 148:         dec = ((con%100)/10);
  1409  04EA  300A               	movlw	10
  1410  04EB  00A4               	movwf	___awdiv@divisor
  1411  04EC  3000               	movlw	0
  1412  04ED  00A5               	movwf	___awdiv@divisor+1
  1413  04EE  0858               	movf	_con,w
  1414  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  1415  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  1416  04F1  00B4               	movwf	??_main^(0+128)
  1417  04F2  01B5               	clrf	(??_main^(0+128)+1)
  1418  04F3  0834               	movf	??_main^(0+128),w
  1419  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1420  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1421  04F6  00A2               	movwf	___awmod@dividend
  1422  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1423  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1424  04F9  0835               	movf	(??_main+1)^(0+128),w
  1425  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1426  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1427  04FC  00A3               	movwf	___awmod@dividend+1
  1428  04FD  3064               	movlw	100
  1429  04FE  00A0               	movwf	___awmod@divisor
  1430  04FF  3000               	movlw	0
  1431  0500  00A1               	movwf	___awmod@divisor+1
  1432  0501  120A  158A  26D8  120A  118A  	fcall	___awmod
  1433  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0508  0821               	movf	?___awmod+1,w
  1436  0509  00A7               	movwf	___awdiv@dividend+1
  1437  050A  0820               	movf	?___awmod,w
  1438  050B  00A6               	movwf	___awdiv@dividend
  1439  050C  120A  158A  2797  120A  118A  	fcall	___awdiv
  1440  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0513  0824               	movf	?___awdiv,w
  1443  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1444  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1445  0516  00B6               	movwf	(??_main+2)^(0+128)
  1446  0517  0836               	movf	(??_main+2)^(0+128),w
  1447  0518  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0519  1303               	bcf	3,6	;RP1=0, select bank0
  1449  051A  00D4               	movwf	_dec
  1450  051B                     l2873:
  1451                           
  1452                           ;Lab2.c: 149:         uni = ((con%100)%10);
  1453  051B  0858               	movf	_con,w
  1454  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1455  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1456  051E  00B4               	movwf	??_main^(0+128)
  1457  051F  01B5               	clrf	(??_main^(0+128)+1)
  1458  0520  0834               	movf	??_main^(0+128),w
  1459  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0523  00A2               	movwf	___awmod@dividend
  1462  0524  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0525  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0526  0835               	movf	(??_main+1)^(0+128),w
  1465  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0529  00A3               	movwf	___awmod@dividend+1
  1468  052A  3064               	movlw	100
  1469  052B  00A0               	movwf	___awmod@divisor
  1470  052C  3000               	movlw	0
  1471  052D  00A1               	movwf	___awmod@divisor+1
  1472  052E  120A  158A  26D8  120A  118A  	fcall	___awmod
  1473  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0535  0821               	movf	?___awmod+1,w
  1476  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0538  00BA               	movwf	(_main$1125+1)^(0+128)
  1479  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1480  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1481  053B  0820               	movf	?___awmod,w
  1482  053C  1683               	bsf	3,5	;RP0=1, select bank1
  1483  053D  1303               	bcf	3,6	;RP1=0, select bank1
  1484  053E  00B9               	movwf	_main$1125^(0+128)
  1485  053F                     l2875:
  1486                           
  1487                           ;Lab2.c: 149:         uni = ((con%100)%10);
  1488  053F  300A               	movlw	10
  1489  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0542  00A0               	movwf	___awmod@divisor
  1492  0543  3000               	movlw	0
  1493  0544  00A1               	movwf	___awmod@divisor+1
  1494  0545  1683               	bsf	3,5	;RP0=1, select bank1
  1495  0546  1303               	bcf	3,6	;RP1=0, select bank1
  1496  0547  083A               	movf	(_main$1125+1)^(0+128),w
  1497  0548  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0549  1303               	bcf	3,6	;RP1=0, select bank0
  1499  054A  00A3               	movwf	___awmod@dividend+1
  1500  054B  1683               	bsf	3,5	;RP0=1, select bank1
  1501  054C  1303               	bcf	3,6	;RP1=0, select bank1
  1502  054D  0839               	movf	_main$1125^(0+128),w
  1503  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1504  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0550  00A2               	movwf	___awmod@dividend
  1506  0551  120A  158A  26D8  120A  118A  	fcall	___awmod
  1507  0556  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0557  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0558  0820               	movf	?___awmod,w
  1510  0559  1683               	bsf	3,5	;RP0=1, select bank1
  1511  055A  1303               	bcf	3,6	;RP1=0, select bank1
  1512  055B  00B4               	movwf	??_main^(0+128)
  1513  055C  0834               	movf	??_main^(0+128),w
  1514  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1515  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1516  055F  00D3               	movwf	_uni
  1517  0560                     l2877:
  1518                           
  1519                           ;Lab2.c: 151:         Lcd_Set_Cursor(2,2);
  1520  0560  3002               	movlw	2
  1521  0561  1683               	bsf	3,5	;RP0=1, select bank1
  1522  0562  1303               	bcf	3,6	;RP1=0, select bank1
  1523  0563  00B4               	movwf	??_main^(0+128)
  1524  0564  0834               	movf	??_main^(0+128),w
  1525  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0567  00A0               	movwf	Lcd_Set_Cursor@b
  1528  0568  3002               	movlw	2
  1529  0569  120A  158A  2543  120A  118A  	fcall	_Lcd_Set_Cursor
  1530  056E                     l2879:
  1531                           
  1532                           ;Lab2.c: 152:         Lcd_Write_String(buffer);
  1533  056E  305B               	movlw	(low (_buffer| 0))& (0+255)
  1534  056F  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0570  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0571  00A0               	movwf	Lcd_Write_String@a
  1537  0572  3000               	movlw	0
  1538  0573  00A1               	movwf	Lcd_Write_String@a+1
  1539  0574  120A  158A  264C  120A  118A  	fcall	_Lcd_Write_String
  1540  0579                     l2881:
  1541                           
  1542                           ;Lab2.c: 153:         Lcd_Write_String(buffer1);
  1543  0579  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  1544  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1545  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1546  057C  00A0               	movwf	Lcd_Write_String@a
  1547  057D  3000               	movlw	0
  1548  057E  00A1               	movwf	Lcd_Write_String@a+1
  1549  057F  120A  158A  264C  120A  118A  	fcall	_Lcd_Write_String
  1550  0584                     l2883:
  1551                           
  1552                           ;Lab2.c: 154:         Lcd_Set_Cursor(2,11);
  1553  0584  300B               	movlw	11
  1554  0585  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0586  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0587  00B4               	movwf	??_main^(0+128)
  1557  0588  0834               	movf	??_main^(0+128),w
  1558  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1559  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1560  058B  00A0               	movwf	Lcd_Set_Cursor@b
  1561  058C  3002               	movlw	2
  1562  058D  120A  158A  2543  120A  118A  	fcall	_Lcd_Set_Cursor
  1563  0592                     l2885:
  1564                           
  1565                           ;Lab2.c: 155:         Lcd_Write_Char(cen);
  1566  0592  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0593  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0594  0855               	movf	_cen,w
  1569  0595  120A  158A  2502  120A  118A  	fcall	_Lcd_Write_Char
  1570  059A                     l2887:
  1571                           
  1572                           ;Lab2.c: 156:         Lcd_Write_Char(dec);
  1573  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1574  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1575  059C  0854               	movf	_dec,w
  1576  059D  120A  158A  2502  120A  118A  	fcall	_Lcd_Write_Char
  1577  05A2                     l2889:
  1578                           
  1579                           ;Lab2.c: 157:         Lcd_Write_Char(uni);
  1580  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1581  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1582  05A4  0853               	movf	_uni,w
  1583  05A5  120A  158A  2502  120A  118A  	fcall	_Lcd_Write_Char
  1584  05AA  2BE2               	goto	l2859
  1585  05AB  120A  118A  280C   	ljmp	start
  1586  05AE                     __end_of_main:
  1587                           
  1588                           	psect	text1
  1589  05AE                     __ptext1:	
  1590 ;; *************** function _sprintf *****************
  1591 ;; Defined at:
  1592 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  sp              1    wreg     PTR unsigned char 
  1595 ;;		 -> buffer1(20), buffer(20), 
  1596 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  1597 ;;		 -> STR_13(5), STR_12(5), 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  sp              1   22[BANK0 ] PTR unsigned char 
  1600 ;;		 -> buffer1(20), buffer(20), 
  1601 ;;  tmpval          4    0        struct .
  1602 ;;  val             2   20[BANK0 ] unsigned int 
  1603 ;;  cp              2    0        PTR const unsigned char 
  1604 ;;  len             2    0        unsigned int 
  1605 ;;  c               1   23[BANK0 ] unsigned char 
  1606 ;;  prec            1   19[BANK0 ] char 
  1607 ;;  flag            1   18[BANK0 ] unsigned char 
  1608 ;;  ap              1   17[BANK0 ] PTR void [1]
  1609 ;;		 -> ?_sprintf(2), 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  2   11[BANK0 ] int 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       3       0       0       0
  1620 ;;      Locals:         0       7       0       0       0
  1621 ;;      Temps:          0       3       0       0       0
  1622 ;;      Totals:         0      13       0       0       0
  1623 ;;Total ram usage:       13 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    3
  1626 ;; This function calls:
  1627 ;;		___lwdiv
  1628 ;;		___lwmod
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _sprintf
  1636  05AE                     _sprintf:
  1637                           
  1638                           ;incstack = 0
  1639                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1640                           ;sprintf@sp stored from wreg
  1641  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1642  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1643  05B0  00B6               	movwf	sprintf@sp
  1644  05B1                     l2455:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1647  05B1  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1648  05B2  00AE               	movwf	??_sprintf
  1649  05B3  082E               	movf	??_sprintf,w
  1650  05B4  00B1               	movwf	sprintf@ap
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1653  05B5  2E81               	goto	l2507
  1654  05B6                     l2457:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1657  05B6  3025               	movlw	37
  1658  05B7  0637               	xorwf	sprintf@c,w
  1659  05B8  1903               	btfsc	3,2
  1660  05B9  2DBB               	goto	u2601
  1661  05BA  2DBC               	goto	u2600
  1662  05BB                     u2601:
  1663  05BB  2DC8               	goto	l2463
  1664  05BC                     u2600:
  1665  05BC                     l2459:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1668  05BC  0837               	movf	sprintf@c,w
  1669  05BD  00AE               	movwf	??_sprintf
  1670  05BE  0836               	movf	sprintf@sp,w
  1671  05BF  0084               	movwf	4
  1672  05C0  082E               	movf	??_sprintf,w
  1673  05C1  1383               	bcf	3,7	;select IRP bank0
  1674  05C2  0080               	movwf	0
  1675  05C3                     l2461:
  1676  05C3  3001               	movlw	1
  1677  05C4  00AE               	movwf	??_sprintf
  1678  05C5  082E               	movf	??_sprintf,w
  1679  05C6  07B6               	addwf	sprintf@sp,f
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1682  05C7  2E81               	goto	l2507
  1683  05C8                     l2463:
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1686  05C8  01B2               	clrf	sprintf@flag
  1687  05C9                     l2467:	
  1688                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1689                           
  1690  05C9  3001               	movlw	1
  1691  05CA  07AB               	addwf	sprintf@f,f
  1692  05CB  30FF               	movlw	-1
  1693  05CC  072B               	addwf	sprintf@f,w
  1694  05CD  0084               	movwf	4
  1695  05CE  120A  158A  200A  120A  118A  	fcall	stringdir
  1696  05D3  00B7               	movwf	sprintf@c
  1697  05D4  00AE               	movwf	??_sprintf
  1698  05D5  01AF               	clrf	??_sprintf+1
  1699                           
  1700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1701                           ; Switch size 1, requested type "simple"
  1702                           ; Number of cases is 1, Range of values is 0 to 0
  1703                           ; switch strategies available:
  1704                           ; Name         Instructions Cycles
  1705                           ; simple_byte            4     3 (average)
  1706                           ; direct_byte           11     8 (fixed)
  1707                           ; jumptable            260     6 (fixed)
  1708                           ;	Chosen strategy is simple_byte
  1709  05D6  082F               	movf	??_sprintf+1,w
  1710  05D7  3A00               	xorlw	0	; case 0
  1711  05D8  1903               	skipnz
  1712  05D9  2DDB               	goto	l2955
  1713  05DA  2E81               	goto	l2507
  1714  05DB                     l2955:
  1715                           
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 3, Range of values is 0 to 105
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte           10     6 (average)
  1721                           ; jumptable            260     6 (fixed)
  1722                           ;	Chosen strategy is simple_byte
  1723  05DB  082E               	movf	??_sprintf,w
  1724  05DC  3A00               	xorlw	0	; case 0
  1725  05DD  1903               	skipnz
  1726  05DE  2E93               	goto	l2509
  1727  05DF  3A64               	xorlw	100	; case 100
  1728  05E0  1903               	skipnz
  1729  05E1  2DE6               	goto	l2469
  1730  05E2  3A0D               	xorlw	13	; case 105
  1731  05E3  1903               	skipnz
  1732  05E4  2DE6               	goto	l2469
  1733  05E5  2E81               	goto	l2507
  1734  05E6                     l2469:
  1735                           
  1736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1737  05E6  0831               	movf	sprintf@ap,w
  1738  05E7  0084               	movwf	4
  1739  05E8  1383               	bcf	3,7	;select IRP bank0
  1740  05E9  0800               	movf	0,w
  1741  05EA  00B4               	movwf	sprintf@val
  1742  05EB  0A84               	incf	4,f
  1743  05EC  0800               	movf	0,w
  1744  05ED  00B5               	movwf	sprintf@val+1
  1745  05EE                     l2471:
  1746  05EE  3002               	movlw	2
  1747  05EF  00AE               	movwf	??_sprintf
  1748  05F0  082E               	movf	??_sprintf,w
  1749  05F1  07B1               	addwf	sprintf@ap,f
  1750  05F2                     l2473:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1753  05F2  1FB5               	btfss	sprintf@val+1,7
  1754  05F3  2DF5               	goto	u2611
  1755  05F4  2DF6               	goto	u2610
  1756  05F5                     u2611:
  1757  05F5  2DFF               	goto	l2479
  1758  05F6                     u2610:
  1759  05F6                     l2475:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1762  05F6  3003               	movlw	3
  1763  05F7  00AE               	movwf	??_sprintf
  1764  05F8  082E               	movf	??_sprintf,w
  1765  05F9  04B2               	iorwf	sprintf@flag,f
  1766  05FA                     l2477:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1769  05FA  09B4               	comf	sprintf@val,f
  1770  05FB  09B5               	comf	sprintf@val+1,f
  1771  05FC  0AB4               	incf	sprintf@val,f
  1772  05FD  1903               	skipnz
  1773  05FE  0AB5               	incf	sprintf@val+1,f
  1774  05FF                     l2479:
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1777  05FF  01B7               	clrf	sprintf@c
  1778  0600  0AB7               	incf	sprintf@c,f
  1779  0601                     l2485:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1782  0601  0837               	movf	sprintf@c,w
  1783  0602  00AE               	movwf	??_sprintf
  1784  0603  072E               	addwf	??_sprintf,w
  1785  0604  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1786  0605  0084               	movwf	4
  1787  0606  120A  158A  200A  120A  118A  	fcall	stringdir
  1788  060B  00AF               	movwf	??_sprintf+1
  1789  060C  120A  158A  200A  120A  118A  	fcall	stringdir
  1790  0611  00B0               	movwf	??_sprintf+2
  1791  0612  0830               	movf	??_sprintf+2,w
  1792  0613  0235               	subwf	sprintf@val+1,w
  1793  0614  1D03               	skipz
  1794  0615  2E18               	goto	u2625
  1795  0616  082F               	movf	??_sprintf+1,w
  1796  0617  0234               	subwf	sprintf@val,w
  1797  0618                     u2625:
  1798  0618  1803               	skipnc
  1799  0619  2E1B               	goto	u2621
  1800  061A  2E1C               	goto	u2620
  1801  061B                     u2621:
  1802  061B  2E1D               	goto	l2489
  1803  061C                     u2620:
  1804  061C  2E27               	goto	l2491
  1805  061D                     l2489:
  1806  061D  3001               	movlw	1
  1807  061E  00AE               	movwf	??_sprintf
  1808  061F  082E               	movf	??_sprintf,w
  1809  0620  07B7               	addwf	sprintf@c,f
  1810  0621  3005               	movlw	5
  1811  0622  0637               	xorwf	sprintf@c,w
  1812  0623  1D03               	btfss	3,2
  1813  0624  2E26               	goto	u2631
  1814  0625  2E27               	goto	u2630
  1815  0626                     u2631:
  1816  0626  2E01               	goto	l2485
  1817  0627                     u2630:
  1818  0627                     l2491:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1821  0627  0832               	movf	sprintf@flag,w
  1822  0628  3903               	andlw	3
  1823  0629  1903               	btfsc	3,2
  1824  062A  2E2C               	goto	u2641
  1825  062B  2E2D               	goto	u2640
  1826  062C                     u2641:
  1827  062C  2E38               	goto	l2497
  1828  062D                     u2640:
  1829  062D                     l2493:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1832  062D  302D               	movlw	45
  1833  062E  00AE               	movwf	??_sprintf
  1834  062F  0836               	movf	sprintf@sp,w
  1835  0630  0084               	movwf	4
  1836  0631  082E               	movf	??_sprintf,w
  1837  0632  1383               	bcf	3,7	;select IRP bank0
  1838  0633  0080               	movwf	0
  1839  0634                     l2495:
  1840  0634  3001               	movlw	1
  1841  0635  00AE               	movwf	??_sprintf
  1842  0636  082E               	movf	??_sprintf,w
  1843  0637  07B6               	addwf	sprintf@sp,f
  1844  0638                     l2497:
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1847  0638  0837               	movf	sprintf@c,w
  1848  0639  00AE               	movwf	??_sprintf
  1849  063A  082E               	movf	??_sprintf,w
  1850  063B  00B3               	movwf	sprintf@prec
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1853  063C  2E78               	goto	l2505
  1854  063D                     l2499:
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1857  063D  300A               	movlw	10
  1858  063E  00A7               	movwf	___lwmod@divisor
  1859  063F  3000               	movlw	0
  1860  0640  00A8               	movwf	___lwmod@divisor+1
  1861  0641  0833               	movf	sprintf@prec,w
  1862  0642  00AE               	movwf	??_sprintf
  1863  0643  072E               	addwf	??_sprintf,w
  1864  0644  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1865  0645  0084               	movwf	4
  1866  0646  120A  158A  200A  120A  118A  	fcall	stringdir
  1867  064B  00A0               	movwf	___lwdiv@divisor
  1868  064C  120A  158A  200A  120A  118A  	fcall	stringdir
  1869  0651  00A1               	movwf	___lwdiv@divisor+1
  1870  0652  0835               	movf	sprintf@val+1,w
  1871  0653  00A3               	movwf	___lwdiv@dividend+1
  1872  0654  0834               	movf	sprintf@val,w
  1873  0655  00A2               	movwf	___lwdiv@dividend
  1874  0656  120A  158A  2692  120A  118A  	fcall	___lwdiv
  1875  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1876  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1877  065D  0821               	movf	?___lwdiv+1,w
  1878  065E  00AA               	movwf	___lwmod@dividend+1
  1879  065F  0820               	movf	?___lwdiv,w
  1880  0660  00A9               	movwf	___lwmod@dividend
  1881  0661  120A  158A  258C  120A  118A  	fcall	___lwmod
  1882  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0668  0827               	movf	?___lwmod,w
  1885  0669  3E30               	addlw	48
  1886  066A  00AF               	movwf	??_sprintf+1
  1887  066B  082F               	movf	??_sprintf+1,w
  1888  066C  00B7               	movwf	sprintf@c
  1889  066D                     l2501:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1892  066D  0837               	movf	sprintf@c,w
  1893  066E  00AE               	movwf	??_sprintf
  1894  066F  0836               	movf	sprintf@sp,w
  1895  0670  0084               	movwf	4
  1896  0671  082E               	movf	??_sprintf,w
  1897  0672  1383               	bcf	3,7	;select IRP bank0
  1898  0673  0080               	movwf	0
  1899  0674                     l2503:
  1900  0674  3001               	movlw	1
  1901  0675  00AE               	movwf	??_sprintf
  1902  0676  082E               	movf	??_sprintf,w
  1903  0677  07B6               	addwf	sprintf@sp,f
  1904  0678                     l2505:
  1905                           
  1906                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1907  0678  30FF               	movlw	255
  1908  0679  00AE               	movwf	??_sprintf
  1909  067A  082E               	movf	??_sprintf,w
  1910  067B  07B3               	addwf	sprintf@prec,f
  1911  067C  0A33               	incf	sprintf@prec,w
  1912  067D  1D03               	btfss	3,2
  1913  067E  2E80               	goto	u2651
  1914  067F  2E81               	goto	u2650
  1915  0680                     u2651:
  1916  0680  2E3D               	goto	l2499
  1917  0681                     u2650:
  1918  0681                     l2507:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1921  0681  3001               	movlw	1
  1922  0682  07AB               	addwf	sprintf@f,f
  1923  0683  30FF               	movlw	-1
  1924  0684  072B               	addwf	sprintf@f,w
  1925  0685  0084               	movwf	4
  1926  0686  120A  158A  200A  120A  118A  	fcall	stringdir
  1927  068B  00AE               	movwf	??_sprintf
  1928  068C  082E               	movf	??_sprintf,w
  1929  068D  00B7               	movwf	sprintf@c
  1930  068E  0837               	movf	sprintf@c,w
  1931  068F  1D03               	btfss	3,2
  1932  0690  2E92               	goto	u2661
  1933  0691  2E93               	goto	u2660
  1934  0692                     u2661:
  1935  0692  2DB6               	goto	l2457
  1936  0693                     u2660:
  1937  0693                     l2509:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1940  0693  0836               	movf	sprintf@sp,w
  1941  0694  0084               	movwf	4
  1942  0695  1383               	bcf	3,7	;select IRP bank0
  1943  0696  0180               	clrf	0
  1944  0697                     l311:
  1945  0697  0008               	return
  1946  0698                     __end_of_sprintf:
  1947                           
  1948                           	psect	text2
  1949  0D8C                     __ptext2:	
  1950 ;; *************** function ___lwmod *****************
  1951 ;; Defined at:
  1952 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  divisor         2    7[BANK0 ] unsigned int 
  1955 ;;  dividend        2    9[BANK0 ] unsigned int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  counter         1    6[COMMON] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    7[BANK0 ] unsigned int 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1967 ;;      Params:         0       4       0       0       0
  1968 ;;      Locals:         1       0       0       0       0
  1969 ;;      Temps:          1       0       0       0       0
  1970 ;;      Totals:         2       4       0       0       0
  1971 ;;Total ram usage:        6 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    2
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_sprintf
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function ___lwmod
  1983  0D8C                     ___lwmod:
  1984  0D8C                     l2317:	
  1985                           ;incstack = 0
  1986                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1987                           
  1988  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0D8E  0827               	movf	___lwmod@divisor,w
  1991  0D8F  0428               	iorwf	___lwmod@divisor+1,w
  1992  0D90  1903               	btfsc	3,2
  1993  0D91  2D93               	goto	u2441
  1994  0D92  2D94               	goto	u2440
  1995  0D93                     u2441:
  1996  0D93  2DC3               	goto	l2335
  1997  0D94                     u2440:
  1998  0D94                     l2319:
  1999  0D94  01F6               	clrf	___lwmod@counter
  2000  0D95  0AF6               	incf	___lwmod@counter,f
  2001  0D96  2DA2               	goto	l2325
  2002  0D97                     l2321:
  2003  0D97  3001               	movlw	1
  2004  0D98                     u2455:
  2005  0D98  1003               	clrc
  2006  0D99  0DA7               	rlf	___lwmod@divisor,f
  2007  0D9A  0DA8               	rlf	___lwmod@divisor+1,f
  2008  0D9B  3EFF               	addlw	-1
  2009  0D9C  1D03               	skipz
  2010  0D9D  2D98               	goto	u2455
  2011  0D9E                     l2323:
  2012  0D9E  3001               	movlw	1
  2013  0D9F  00F5               	movwf	??___lwmod
  2014  0DA0  0875               	movf	??___lwmod,w
  2015  0DA1  07F6               	addwf	___lwmod@counter,f
  2016  0DA2                     l2325:
  2017  0DA2  1FA8               	btfss	___lwmod@divisor+1,7
  2018  0DA3  2DA5               	goto	u2461
  2019  0DA4  2DA6               	goto	u2460
  2020  0DA5                     u2461:
  2021  0DA5  2D97               	goto	l2321
  2022  0DA6                     u2460:
  2023  0DA6                     l2327:
  2024  0DA6  0828               	movf	___lwmod@divisor+1,w
  2025  0DA7  022A               	subwf	___lwmod@dividend+1,w
  2026  0DA8  1D03               	skipz
  2027  0DA9  2DAC               	goto	u2475
  2028  0DAA  0827               	movf	___lwmod@divisor,w
  2029  0DAB  0229               	subwf	___lwmod@dividend,w
  2030  0DAC                     u2475:
  2031  0DAC  1C03               	skipc
  2032  0DAD  2DAF               	goto	u2471
  2033  0DAE  2DB0               	goto	u2470
  2034  0DAF                     u2471:
  2035  0DAF  2DB6               	goto	l2331
  2036  0DB0                     u2470:
  2037  0DB0                     l2329:
  2038  0DB0  0827               	movf	___lwmod@divisor,w
  2039  0DB1  02A9               	subwf	___lwmod@dividend,f
  2040  0DB2  0828               	movf	___lwmod@divisor+1,w
  2041  0DB3  1C03               	skipc
  2042  0DB4  03AA               	decf	___lwmod@dividend+1,f
  2043  0DB5  02AA               	subwf	___lwmod@dividend+1,f
  2044  0DB6                     l2331:
  2045  0DB6  3001               	movlw	1
  2046  0DB7                     u2485:
  2047  0DB7  1003               	clrc
  2048  0DB8  0CA8               	rrf	___lwmod@divisor+1,f
  2049  0DB9  0CA7               	rrf	___lwmod@divisor,f
  2050  0DBA  3EFF               	addlw	-1
  2051  0DBB  1D03               	skipz
  2052  0DBC  2DB7               	goto	u2485
  2053  0DBD                     l2333:
  2054  0DBD  3001               	movlw	1
  2055  0DBE  02F6               	subwf	___lwmod@counter,f
  2056  0DBF  1D03               	btfss	3,2
  2057  0DC0  2DC2               	goto	u2491
  2058  0DC1  2DC3               	goto	u2490
  2059  0DC2                     u2491:
  2060  0DC2  2DA6               	goto	l2327
  2061  0DC3                     u2490:
  2062  0DC3                     l2335:
  2063  0DC3  082A               	movf	___lwmod@dividend+1,w
  2064  0DC4  00A8               	movwf	?___lwmod+1
  2065  0DC5  0829               	movf	___lwmod@dividend,w
  2066  0DC6  00A7               	movwf	?___lwmod
  2067  0DC7                     l597:
  2068  0DC7  0008               	return
  2069  0DC8                     __end_of___lwmod:
  2070                           
  2071                           	psect	text3
  2072  0E92                     __ptext3:	
  2073 ;; *************** function ___lwdiv *****************
  2074 ;; Defined at:
  2075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  divisor         2    0[BANK0 ] unsigned int 
  2078 ;;  dividend        2    2[BANK0 ] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  quotient        2    5[BANK0 ] unsigned int 
  2081 ;;  counter         1    4[BANK0 ] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  2    0[BANK0 ] unsigned int 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       4       0       0       0
  2092 ;;      Locals:         0       3       0       0       0
  2093 ;;      Temps:          1       0       0       0       0
  2094 ;;      Totals:         1       7       0       0       0
  2095 ;;Total ram usage:        8 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    2
  2098 ;; This function calls:
  2099 ;;		Nothing
  2100 ;; This function is called by:
  2101 ;;		_sprintf
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function ___lwdiv
  2107  0E92                     ___lwdiv:
  2108  0E92                     l2291:	
  2109                           ;incstack = 0
  2110                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2111                           
  2112  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0E94  01A5               	clrf	___lwdiv@quotient
  2115  0E95  01A6               	clrf	___lwdiv@quotient+1
  2116  0E96                     l2293:
  2117  0E96  0820               	movf	___lwdiv@divisor,w
  2118  0E97  0421               	iorwf	___lwdiv@divisor+1,w
  2119  0E98  1903               	btfsc	3,2
  2120  0E99  2E9B               	goto	u2371
  2121  0E9A  2E9C               	goto	u2370
  2122  0E9B                     u2371:
  2123  0E9B  2ED3               	goto	l2313
  2124  0E9C                     u2370:
  2125  0E9C                     l2295:
  2126  0E9C  01A4               	clrf	___lwdiv@counter
  2127  0E9D  0AA4               	incf	___lwdiv@counter,f
  2128  0E9E  2EAA               	goto	l2301
  2129  0E9F                     l2297:
  2130  0E9F  3001               	movlw	1
  2131  0EA0                     u2385:
  2132  0EA0  1003               	clrc
  2133  0EA1  0DA0               	rlf	___lwdiv@divisor,f
  2134  0EA2  0DA1               	rlf	___lwdiv@divisor+1,f
  2135  0EA3  3EFF               	addlw	-1
  2136  0EA4  1D03               	skipz
  2137  0EA5  2EA0               	goto	u2385
  2138  0EA6                     l2299:
  2139  0EA6  3001               	movlw	1
  2140  0EA7  00F4               	movwf	??___lwdiv
  2141  0EA8  0874               	movf	??___lwdiv,w
  2142  0EA9  07A4               	addwf	___lwdiv@counter,f
  2143  0EAA                     l2301:
  2144  0EAA  1FA1               	btfss	___lwdiv@divisor+1,7
  2145  0EAB  2EAD               	goto	u2391
  2146  0EAC  2EAE               	goto	u2390
  2147  0EAD                     u2391:
  2148  0EAD  2E9F               	goto	l2297
  2149  0EAE                     u2390:
  2150  0EAE                     l2303:
  2151  0EAE  3001               	movlw	1
  2152  0EAF                     u2405:
  2153  0EAF  1003               	clrc
  2154  0EB0  0DA5               	rlf	___lwdiv@quotient,f
  2155  0EB1  0DA6               	rlf	___lwdiv@quotient+1,f
  2156  0EB2  3EFF               	addlw	-1
  2157  0EB3  1D03               	skipz
  2158  0EB4  2EAF               	goto	u2405
  2159  0EB5  0821               	movf	___lwdiv@divisor+1,w
  2160  0EB6  0223               	subwf	___lwdiv@dividend+1,w
  2161  0EB7  1D03               	skipz
  2162  0EB8  2EBB               	goto	u2415
  2163  0EB9  0820               	movf	___lwdiv@divisor,w
  2164  0EBA  0222               	subwf	___lwdiv@dividend,w
  2165  0EBB                     u2415:
  2166  0EBB  1C03               	skipc
  2167  0EBC  2EBE               	goto	u2411
  2168  0EBD  2EBF               	goto	u2410
  2169  0EBE                     u2411:
  2170  0EBE  2EC6               	goto	l2309
  2171  0EBF                     u2410:
  2172  0EBF                     l2305:
  2173  0EBF  0820               	movf	___lwdiv@divisor,w
  2174  0EC0  02A2               	subwf	___lwdiv@dividend,f
  2175  0EC1  0821               	movf	___lwdiv@divisor+1,w
  2176  0EC2  1C03               	skipc
  2177  0EC3  03A3               	decf	___lwdiv@dividend+1,f
  2178  0EC4  02A3               	subwf	___lwdiv@dividend+1,f
  2179  0EC5                     l2307:
  2180  0EC5  1425               	bsf	___lwdiv@quotient,0
  2181  0EC6                     l2309:
  2182  0EC6  3001               	movlw	1
  2183  0EC7                     u2425:
  2184  0EC7  1003               	clrc
  2185  0EC8  0CA1               	rrf	___lwdiv@divisor+1,f
  2186  0EC9  0CA0               	rrf	___lwdiv@divisor,f
  2187  0ECA  3EFF               	addlw	-1
  2188  0ECB  1D03               	skipz
  2189  0ECC  2EC7               	goto	u2425
  2190  0ECD                     l2311:
  2191  0ECD  3001               	movlw	1
  2192  0ECE  02A4               	subwf	___lwdiv@counter,f
  2193  0ECF  1D03               	btfss	3,2
  2194  0ED0  2ED2               	goto	u2431
  2195  0ED1  2ED3               	goto	u2430
  2196  0ED2                     u2431:
  2197  0ED2  2EAE               	goto	l2303
  2198  0ED3                     u2430:
  2199  0ED3                     l2313:
  2200  0ED3  0826               	movf	___lwdiv@quotient+1,w
  2201  0ED4  00A1               	movwf	?___lwdiv+1
  2202  0ED5  0825               	movf	___lwdiv@quotient,w
  2203  0ED6  00A0               	movwf	?___lwdiv
  2204  0ED7                     l587:
  2205  0ED7  0008               	return
  2206  0ED8                     __end_of___lwdiv:
  2207                           
  2208                           	psect	text4
  2209  0698                     __ptext4:	
  2210 ;; *************** function ___xxtofl *****************
  2211 ;; Defined at:
  2212 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  sign            1    wreg     unsigned char 
  2215 ;;  val             4    0[BANK0 ] long 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  sign            1    8[BANK0 ] unsigned char 
  2218 ;;  arg             4   10[BANK0 ] unsigned long 
  2219 ;;  exp             1    9[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  4    0[BANK0 ] unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       4       0       0       0
  2230 ;;      Locals:         0       6       0       0       0
  2231 ;;      Temps:          0       4       0       0       0
  2232 ;;      Totals:         0      14       0       0       0
  2233 ;;Total ram usage:       14 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    2
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           
  2244                           ;psect for function ___xxtofl
  2245  0698                     ___xxtofl:
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2249                           ;___xxtofl@sign stored from wreg
  2250  0698  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0699  1303               	bcf	3,6	;RP1=0, select bank0
  2252  069A  00A8               	movwf	___xxtofl@sign
  2253  069B                     l2775:
  2254  069B  0828               	movf	___xxtofl@sign,w
  2255  069C  1903               	btfsc	3,2
  2256  069D  2E9F               	goto	u3331
  2257  069E  2EA0               	goto	u3330
  2258  069F                     u3331:
  2259  069F  2EB4               	goto	l2781
  2260  06A0                     u3330:
  2261  06A0                     l2777:
  2262  06A0  1FA3               	btfss	___xxtofl@val+3,7
  2263  06A1  2EA3               	goto	u3341
  2264  06A2  2EA4               	goto	u3340
  2265  06A3                     u3341:
  2266  06A3  2EB4               	goto	l2781
  2267  06A4                     u3340:
  2268  06A4                     l2779:
  2269  06A4  0920               	comf	___xxtofl@val,w
  2270  06A5  00AA               	movwf	___xxtofl@arg
  2271  06A6  0921               	comf	___xxtofl@val+1,w
  2272  06A7  00AB               	movwf	___xxtofl@arg+1
  2273  06A8  0922               	comf	___xxtofl@val+2,w
  2274  06A9  00AC               	movwf	___xxtofl@arg+2
  2275  06AA  0923               	comf	___xxtofl@val+3,w
  2276  06AB  00AD               	movwf	___xxtofl@arg+3
  2277  06AC  0AAA               	incf	___xxtofl@arg,f
  2278  06AD  1903               	skipnz
  2279  06AE  0AAB               	incf	___xxtofl@arg+1,f
  2280  06AF  1903               	skipnz
  2281  06B0  0AAC               	incf	___xxtofl@arg+2,f
  2282  06B1  1903               	skipnz
  2283  06B2  0AAD               	incf	___xxtofl@arg+3,f
  2284  06B3  2EBC               	goto	l748
  2285  06B4                     l2781:
  2286  06B4  0823               	movf	___xxtofl@val+3,w
  2287  06B5  00AD               	movwf	___xxtofl@arg+3
  2288  06B6  0822               	movf	___xxtofl@val+2,w
  2289  06B7  00AC               	movwf	___xxtofl@arg+2
  2290  06B8  0821               	movf	___xxtofl@val+1,w
  2291  06B9  00AB               	movwf	___xxtofl@arg+1
  2292  06BA  0820               	movf	___xxtofl@val,w
  2293  06BB  00AA               	movwf	___xxtofl@arg
  2294  06BC                     l748:
  2295  06BC  0823               	movf	___xxtofl@val+3,w
  2296  06BD  0422               	iorwf	___xxtofl@val+2,w
  2297  06BE  0421               	iorwf	___xxtofl@val+1,w
  2298  06BF  0420               	iorwf	___xxtofl@val,w
  2299  06C0  1D03               	skipz
  2300  06C1  2EC3               	goto	u3351
  2301  06C2  2EC4               	goto	u3350
  2302  06C3                     u3351:
  2303  06C3  2ECD               	goto	l2787
  2304  06C4                     u3350:
  2305  06C4                     l2783:
  2306  06C4  3000               	movlw	0
  2307  06C5  00A3               	movwf	?___xxtofl+3
  2308  06C6  3000               	movlw	0
  2309  06C7  00A2               	movwf	?___xxtofl+2
  2310  06C8  3000               	movlw	0
  2311  06C9  00A1               	movwf	?___xxtofl+1
  2312  06CA  3000               	movlw	0
  2313  06CB  00A0               	movwf	?___xxtofl
  2314  06CC  2F53               	goto	l750
  2315  06CD                     l2787:
  2316  06CD  3096               	movlw	150
  2317  06CE  00A4               	movwf	??___xxtofl
  2318  06CF  0824               	movf	??___xxtofl,w
  2319  06D0  00A9               	movwf	___xxtofl@exp
  2320  06D1  2EDF               	goto	l2791
  2321  06D2                     l2789:
  2322  06D2  3001               	movlw	1
  2323  06D3  00A4               	movwf	??___xxtofl
  2324  06D4  0824               	movf	??___xxtofl,w
  2325  06D5  07A9               	addwf	___xxtofl@exp,f
  2326  06D6  3001               	movlw	1
  2327  06D7                     u3365:
  2328  06D7  1003               	clrc
  2329  06D8  0CAD               	rrf	___xxtofl@arg+3,f
  2330  06D9  0CAC               	rrf	___xxtofl@arg+2,f
  2331  06DA  0CAB               	rrf	___xxtofl@arg+1,f
  2332  06DB  0CAA               	rrf	___xxtofl@arg,f
  2333  06DC  3EFF               	addlw	-1
  2334  06DD  1D03               	skipz
  2335  06DE  2ED7               	goto	u3365
  2336  06DF                     l2791:
  2337  06DF  30FE               	movlw	254
  2338  06E0  052D               	andwf	___xxtofl@arg+3,w
  2339  06E1  1D03               	btfss	3,2
  2340  06E2  2EE4               	goto	u3371
  2341  06E3  2EE5               	goto	u3370
  2342  06E4                     u3371:
  2343  06E4  2ED2               	goto	l2789
  2344  06E5                     u3370:
  2345  06E5  2F01               	goto	l754
  2346  06E6                     l2793:
  2347  06E6  3001               	movlw	1
  2348  06E7  00A4               	movwf	??___xxtofl
  2349  06E8  0824               	movf	??___xxtofl,w
  2350  06E9  07A9               	addwf	___xxtofl@exp,f
  2351  06EA                     l2795:
  2352  06EA  3001               	movlw	1
  2353  06EB  07AA               	addwf	___xxtofl@arg,f
  2354  06EC  3000               	movlw	0
  2355  06ED  1803               	skipnc
  2356  06EE  3001               	movlw	1
  2357  06EF  07AB               	addwf	___xxtofl@arg+1,f
  2358  06F0  3000               	movlw	0
  2359  06F1  1803               	skipnc
  2360  06F2  3001               	movlw	1
  2361  06F3  07AC               	addwf	___xxtofl@arg+2,f
  2362  06F4  3000               	movlw	0
  2363  06F5  1803               	skipnc
  2364  06F6  3001               	movlw	1
  2365  06F7  07AD               	addwf	___xxtofl@arg+3,f
  2366  06F8                     l2797:
  2367  06F8  3001               	movlw	1
  2368  06F9                     u3385:
  2369  06F9  1003               	clrc
  2370  06FA  0CAD               	rrf	___xxtofl@arg+3,f
  2371  06FB  0CAC               	rrf	___xxtofl@arg+2,f
  2372  06FC  0CAB               	rrf	___xxtofl@arg+1,f
  2373  06FD  0CAA               	rrf	___xxtofl@arg,f
  2374  06FE  3EFF               	addlw	-1
  2375  06FF  1D03               	skipz
  2376  0700  2EF9               	goto	u3385
  2377  0701                     l754:
  2378  0701  30FF               	movlw	255
  2379  0702  052D               	andwf	___xxtofl@arg+3,w
  2380  0703  1D03               	btfss	3,2
  2381  0704  2F06               	goto	u3391
  2382  0705  2F07               	goto	u3390
  2383  0706                     u3391:
  2384  0706  2EE6               	goto	l2793
  2385  0707                     u3390:
  2386  0707  2F13               	goto	l2801
  2387  0708                     l2799:
  2388  0708  3001               	movlw	1
  2389  0709  02A9               	subwf	___xxtofl@exp,f
  2390  070A  3001               	movlw	1
  2391  070B  00A4               	movwf	??___xxtofl
  2392  070C                     u3405:
  2393  070C  1003               	clrc
  2394  070D  0DAA               	rlf	___xxtofl@arg,f
  2395  070E  0DAB               	rlf	___xxtofl@arg+1,f
  2396  070F  0DAC               	rlf	___xxtofl@arg+2,f
  2397  0710  0DAD               	rlf	___xxtofl@arg+3,f
  2398  0711  0BA4               	decfsz	??___xxtofl,f
  2399  0712  2F0C               	goto	u3405
  2400  0713                     l2801:
  2401  0713  1BAC               	btfsc	___xxtofl@arg+2,7
  2402  0714  2F16               	goto	u3411
  2403  0715  2F17               	goto	u3410
  2404  0716                     u3411:
  2405  0716  2F1D               	goto	l761
  2406  0717                     u3410:
  2407  0717                     l2803:
  2408  0717  3002               	movlw	2
  2409  0718  0229               	subwf	___xxtofl@exp,w
  2410  0719  1803               	skipnc
  2411  071A  2F1C               	goto	u3421
  2412  071B  2F1D               	goto	u3420
  2413  071C                     u3421:
  2414  071C  2F08               	goto	l2799
  2415  071D                     u3420:
  2416  071D                     l761:
  2417  071D  1829               	btfsc	___xxtofl@exp,0
  2418  071E  2F20               	goto	u3431
  2419  071F  2F21               	goto	u3430
  2420  0720                     u3431:
  2421  0720  2F29               	goto	l762
  2422  0721                     u3430:
  2423  0721                     l2805:
  2424  0721  30FF               	movlw	255
  2425  0722  05AA               	andwf	___xxtofl@arg,f
  2426  0723  30FF               	movlw	255
  2427  0724  05AB               	andwf	___xxtofl@arg+1,f
  2428  0725  307F               	movlw	127
  2429  0726  05AC               	andwf	___xxtofl@arg+2,f
  2430  0727  30FF               	movlw	255
  2431  0728  05AD               	andwf	___xxtofl@arg+3,f
  2432  0729                     l762:
  2433  0729  1003               	clrc
  2434  072A  0CA9               	rrf	___xxtofl@exp,f
  2435  072B                     l2807:
  2436  072B  0829               	movf	___xxtofl@exp,w
  2437  072C  00A4               	movwf	??___xxtofl
  2438  072D  01A5               	clrf	??___xxtofl+1
  2439  072E  01A6               	clrf	??___xxtofl+2
  2440  072F  01A7               	clrf	??___xxtofl+3
  2441  0730  3018               	movlw	24
  2442  0731                     u3445:
  2443  0731  1003               	clrc
  2444  0732  0DA4               	rlf	??___xxtofl,f
  2445  0733  0DA5               	rlf	??___xxtofl+1,f
  2446  0734  0DA6               	rlf	??___xxtofl+2,f
  2447  0735  0DA7               	rlf	??___xxtofl+3,f
  2448  0736                     u3440:
  2449  0736  3EFF               	addlw	-1
  2450  0737  1D03               	skipz
  2451  0738  2F31               	goto	u3445
  2452  0739  0824               	movf	??___xxtofl,w
  2453  073A  04AA               	iorwf	___xxtofl@arg,f
  2454  073B  0825               	movf	??___xxtofl+1,w
  2455  073C  04AB               	iorwf	___xxtofl@arg+1,f
  2456  073D  0826               	movf	??___xxtofl+2,w
  2457  073E  04AC               	iorwf	___xxtofl@arg+2,f
  2458  073F  0827               	movf	??___xxtofl+3,w
  2459  0740  04AD               	iorwf	___xxtofl@arg+3,f
  2460  0741                     l2809:
  2461  0741  0828               	movf	___xxtofl@sign,w
  2462  0742  1903               	btfsc	3,2
  2463  0743  2F45               	goto	u3451
  2464  0744  2F46               	goto	u3450
  2465  0745                     u3451:
  2466  0745  2F4B               	goto	l2815
  2467  0746                     u3450:
  2468  0746                     l2811:
  2469  0746  1FA3               	btfss	___xxtofl@val+3,7
  2470  0747  2F49               	goto	u3461
  2471  0748  2F4A               	goto	u3460
  2472  0749                     u3461:
  2473  0749  2F4B               	goto	l2815
  2474  074A                     u3460:
  2475  074A                     l2813:
  2476  074A  17AD               	bsf	___xxtofl@arg+3,7
  2477  074B                     l2815:
  2478  074B  082D               	movf	___xxtofl@arg+3,w
  2479  074C  00A3               	movwf	?___xxtofl+3
  2480  074D  082C               	movf	___xxtofl@arg+2,w
  2481  074E  00A2               	movwf	?___xxtofl+2
  2482  074F  082B               	movf	___xxtofl@arg+1,w
  2483  0750  00A1               	movwf	?___xxtofl+1
  2484  0751  082A               	movf	___xxtofl@arg,w
  2485  0752  00A0               	movwf	?___xxtofl
  2486  0753                     l750:
  2487  0753  0008               	return
  2488  0754                     __end_of___xxtofl:
  2489                           
  2490                           	psect	text5
  2491  0754                     __ptext5:	
  2492 ;; *************** function ___fltol *****************
  2493 ;; Defined at:
  2494 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  f1              4   40[BANK0 ] unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  exp1            1   50[BANK0 ] unsigned char 
  2499 ;;  sign1           1   49[BANK0 ] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  4   40[BANK0 ] long 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         0       4       0       0       0
  2510 ;;      Locals:         0       2       0       0       0
  2511 ;;      Temps:          0       5       0       0       0
  2512 ;;      Totals:         0      11       0       0       0
  2513 ;;Total ram usage:       11 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    2
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           
  2524                           ;psect for function ___fltol
  2525  0754                     ___fltol:
  2526  0754                     l2599:	
  2527                           ;incstack = 0
  2528                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2529                           
  2530  0754  1003               	clrc
  2531  0755  1283               	bcf	3,5	;RP0=0, select bank0
  2532  0756  1303               	bcf	3,6	;RP1=0, select bank0
  2533  0757  0D4A               	rlf	___fltol@f1+2,w
  2534  0758  0D4B               	rlf	___fltol@f1+3,w
  2535  0759  00CC               	movwf	??___fltol
  2536  075A  084C               	movf	??___fltol,w
  2537  075B  00D2               	movwf	___fltol@exp1
  2538  075C  0852               	movf	___fltol@exp1,w
  2539  075D  1D03               	btfss	3,2
  2540  075E  2F60               	goto	u2861
  2541  075F  2F61               	goto	u2860
  2542  0760                     u2861:
  2543  0760  2F6A               	goto	l2605
  2544  0761                     u2860:
  2545  0761                     l2601:
  2546  0761  3000               	movlw	0
  2547  0762  00CB               	movwf	?___fltol+3
  2548  0763  3000               	movlw	0
  2549  0764  00CA               	movwf	?___fltol+2
  2550  0765  3000               	movlw	0
  2551  0766  00C9               	movwf	?___fltol+1
  2552  0767  3000               	movlw	0
  2553  0768  00C8               	movwf	?___fltol
  2554  0769  2FCF               	goto	l501
  2555  076A                     l2605:
  2556  076A  0848               	movf	___fltol@f1,w
  2557  076B  00CC               	movwf	??___fltol
  2558  076C  0849               	movf	___fltol@f1+1,w
  2559  076D  00CD               	movwf	??___fltol+1
  2560  076E  084A               	movf	___fltol@f1+2,w
  2561  076F  00CE               	movwf	??___fltol+2
  2562  0770  084B               	movf	___fltol@f1+3,w
  2563  0771  00CF               	movwf	??___fltol+3
  2564  0772  301F               	movlw	31
  2565  0773                     u2875:
  2566  0773  1003               	clrc
  2567  0774  0CCF               	rrf	??___fltol+3,f
  2568  0775  0CCE               	rrf	??___fltol+2,f
  2569  0776  0CCD               	rrf	??___fltol+1,f
  2570  0777  0CCC               	rrf	??___fltol,f
  2571  0778                     u2870:
  2572  0778  3EFF               	addlw	-1
  2573  0779  1D03               	skipz
  2574  077A  2F73               	goto	u2875
  2575  077B  084C               	movf	??___fltol,w
  2576  077C  00D0               	movwf	??___fltol+4
  2577  077D  0850               	movf	??___fltol+4,w
  2578  077E  00D1               	movwf	___fltol@sign1
  2579  077F                     l2607:
  2580  077F  17CA               	bsf	___fltol@f1+2,7
  2581  0780                     l2609:
  2582  0780  30FF               	movlw	255
  2583  0781  05C8               	andwf	___fltol@f1,f
  2584  0782  30FF               	movlw	255
  2585  0783  05C9               	andwf	___fltol@f1+1,f
  2586  0784  30FF               	movlw	255
  2587  0785  05CA               	andwf	___fltol@f1+2,f
  2588  0786  3000               	movlw	0
  2589  0787  05CB               	andwf	___fltol@f1+3,f
  2590  0788                     l2611:
  2591  0788  3096               	movlw	150
  2592  0789  02D2               	subwf	___fltol@exp1,f
  2593  078A                     l2613:
  2594  078A  1FD2               	btfss	___fltol@exp1,7
  2595  078B  2F8D               	goto	u2881
  2596  078C  2F8E               	goto	u2880
  2597  078D                     u2881:
  2598  078D  2FA8               	goto	l2623
  2599  078E                     u2880:
  2600  078E                     l2615:
  2601  078E  0852               	movf	___fltol@exp1,w
  2602  078F  3A80               	xorlw	128
  2603  0790  3E97               	addlw	151
  2604  0791  1803               	skipnc
  2605  0792  2F94               	goto	u2891
  2606  0793  2F95               	goto	u2890
  2607  0794                     u2891:
  2608  0794  2F96               	goto	l2621
  2609  0795                     u2890:
  2610  0795  2F61               	goto	l2601
  2611  0796                     l2621:
  2612  0796  3001               	movlw	1
  2613  0797                     u2905:
  2614  0797  1003               	clrc
  2615  0798  0CCB               	rrf	___fltol@f1+3,f
  2616  0799  0CCA               	rrf	___fltol@f1+2,f
  2617  079A  0CC9               	rrf	___fltol@f1+1,f
  2618  079B  0CC8               	rrf	___fltol@f1,f
  2619  079C  3EFF               	addlw	-1
  2620  079D  1D03               	skipz
  2621  079E  2F97               	goto	u2905
  2622  079F  3001               	movlw	1
  2623  07A0  00CC               	movwf	??___fltol
  2624  07A1  084C               	movf	??___fltol,w
  2625  07A2  07D2               	addwf	___fltol@exp1,f
  2626  07A3  1D03               	btfss	3,2
  2627  07A4  2FA6               	goto	u2911
  2628  07A5  2FA7               	goto	u2910
  2629  07A6                     u2911:
  2630  07A6  2F96               	goto	l2621
  2631  07A7                     u2910:
  2632  07A7  2FBF               	goto	l2631
  2633  07A8                     l2623:
  2634  07A8  3020               	movlw	32
  2635  07A9  0252               	subwf	___fltol@exp1,w
  2636  07AA  1C03               	skipc
  2637  07AB  2FAD               	goto	u2921
  2638  07AC  2FAE               	goto	u2920
  2639  07AD                     u2921:
  2640  07AD  2FBA               	goto	l508
  2641  07AE                     u2920:
  2642  07AE  2F61               	goto	l2601
  2643  07AF                     l2629:
  2644  07AF  3001               	movlw	1
  2645  07B0  00CC               	movwf	??___fltol
  2646  07B1                     u2935:
  2647  07B1  1003               	clrc
  2648  07B2  0DC8               	rlf	___fltol@f1,f
  2649  07B3  0DC9               	rlf	___fltol@f1+1,f
  2650  07B4  0DCA               	rlf	___fltol@f1+2,f
  2651  07B5  0DCB               	rlf	___fltol@f1+3,f
  2652  07B6  0BCC               	decfsz	??___fltol,f
  2653  07B7  2FB1               	goto	u2935
  2654  07B8  3001               	movlw	1
  2655  07B9  02D2               	subwf	___fltol@exp1,f
  2656  07BA                     l508:
  2657  07BA  0852               	movf	___fltol@exp1,w
  2658  07BB  1D03               	btfss	3,2
  2659  07BC  2FBE               	goto	u2941
  2660  07BD  2FBF               	goto	u2940
  2661  07BE                     u2941:
  2662  07BE  2FAF               	goto	l2629
  2663  07BF                     u2940:
  2664  07BF                     l2631:
  2665  07BF  0851               	movf	___fltol@sign1,w
  2666  07C0  1903               	btfsc	3,2
  2667  07C1  2FC3               	goto	u2951
  2668  07C2  2FC4               	goto	u2950
  2669  07C3                     u2951:
  2670  07C3  2FCF               	goto	l511
  2671  07C4                     u2950:
  2672  07C4                     l2633:
  2673  07C4  09C8               	comf	___fltol@f1,f
  2674  07C5  09C9               	comf	___fltol@f1+1,f
  2675  07C6  09CA               	comf	___fltol@f1+2,f
  2676  07C7  09CB               	comf	___fltol@f1+3,f
  2677  07C8  0AC8               	incf	___fltol@f1,f
  2678  07C9  1903               	skipnz
  2679  07CA  0AC9               	incf	___fltol@f1+1,f
  2680  07CB  1903               	skipnz
  2681  07CC  0ACA               	incf	___fltol@f1+2,f
  2682  07CD  1903               	skipnz
  2683  07CE  0ACB               	incf	___fltol@f1+3,f
  2684  07CF                     l511:
  2685  07CF                     l501:
  2686  07CF  0008               	return
  2687  07D0                     __end_of___fltol:
  2688                           
  2689                           	psect	text6
  2690  0027                     __ptext6:	
  2691 ;; *************** function ___flmul *****************
  2692 ;; Defined at:
  2693 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  b               4   14[BANK0 ] long 
  2696 ;;  a               4   18[BANK0 ] long 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  prod            4   34[BANK0 ] struct .
  2699 ;;  grs             4   29[BANK0 ] unsigned long 
  2700 ;;  temp            2   38[BANK0 ] struct .
  2701 ;;  bexp            1   33[BANK0 ] unsigned char 
  2702 ;;  aexp            1   28[BANK0 ] unsigned char 
  2703 ;;  sign            1   27[BANK0 ] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  4   14[BANK0 ] unsigned char 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       8       0       0       0
  2714 ;;      Locals:         0      13       0       0       0
  2715 ;;      Temps:          0       5       0       0       0
  2716 ;;      Totals:         0      26       0       0       0
  2717 ;;Total ram usage:       26 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    3
  2720 ;; This function calls:
  2721 ;;		__Umul8_16
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function ___flmul
  2729  0027                     ___flmul:
  2730  0027                     l2635:	
  2731                           ;incstack = 0
  2732                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2733                           
  2734  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0029  0831               	movf	___flmul@b+3,w
  2737  002A  3980               	andlw	128
  2738  002B  00B6               	movwf	??___flmul
  2739  002C  0836               	movf	??___flmul,w
  2740  002D  00BB               	movwf	___flmul@sign
  2741  002E                     l2637:
  2742  002E  0831               	movf	___flmul@b+3,w
  2743  002F  00B6               	movwf	??___flmul
  2744  0030  0736               	addwf	??___flmul,w
  2745  0031  00B7               	movwf	??___flmul+1
  2746  0032  0837               	movf	??___flmul+1,w
  2747  0033  00C1               	movwf	___flmul@bexp
  2748  0034                     l2639:
  2749  0034  1FB0               	btfss	___flmul@b+2,7
  2750  0035  2837               	goto	u2961
  2751  0036  2838               	goto	u2960
  2752  0037                     u2961:
  2753  0037  2839               	goto	l2643
  2754  0038                     u2960:
  2755  0038                     l2641:
  2756  0038  1441               	bsf	___flmul@bexp,0
  2757  0039                     l2643:
  2758  0039  0841               	movf	___flmul@bexp,w
  2759  003A  1903               	btfsc	3,2
  2760  003B  283D               	goto	u2971
  2761  003C  283E               	goto	u2970
  2762  003D                     u2971:
  2763  003D  284D               	goto	l2651
  2764  003E                     u2970:
  2765  003E                     l2645:
  2766  003E  0A41               	incf	___flmul@bexp,w
  2767  003F  1D03               	btfss	3,2
  2768  0040  2842               	goto	u2981
  2769  0041  2843               	goto	u2980
  2770  0042                     u2981:
  2771  0042  284B               	goto	l2649
  2772  0043                     u2980:
  2773  0043                     l2647:
  2774  0043  3000               	movlw	0
  2775  0044  00B1               	movwf	___flmul@b+3
  2776  0045  3000               	movlw	0
  2777  0046  00B0               	movwf	___flmul@b+2
  2778  0047  3000               	movlw	0
  2779  0048  00AF               	movwf	___flmul@b+1
  2780  0049  3000               	movlw	0
  2781  004A  00AE               	movwf	___flmul@b
  2782  004B                     l2649:
  2783  004B  17B0               	bsf	___flmul@b+2,7
  2784  004C  2855               	goto	l2653
  2785  004D                     l2651:
  2786  004D  3000               	movlw	0
  2787  004E  00B1               	movwf	___flmul@b+3
  2788  004F  3000               	movlw	0
  2789  0050  00B0               	movwf	___flmul@b+2
  2790  0051  3000               	movlw	0
  2791  0052  00AF               	movwf	___flmul@b+1
  2792  0053  3000               	movlw	0
  2793  0054  00AE               	movwf	___flmul@b
  2794  0055                     l2653:
  2795  0055  0835               	movf	___flmul@a+3,w
  2796  0056  3980               	andlw	128
  2797  0057  00B6               	movwf	??___flmul
  2798  0058  0836               	movf	??___flmul,w
  2799  0059  06BB               	xorwf	___flmul@sign,f
  2800  005A                     l2655:
  2801  005A  0835               	movf	___flmul@a+3,w
  2802  005B  00B6               	movwf	??___flmul
  2803  005C  0736               	addwf	??___flmul,w
  2804  005D  00B7               	movwf	??___flmul+1
  2805  005E  0837               	movf	??___flmul+1,w
  2806  005F  00BC               	movwf	___flmul@aexp
  2807  0060                     l2657:
  2808  0060  1FB4               	btfss	___flmul@a+2,7
  2809  0061  2863               	goto	u2991
  2810  0062  2864               	goto	u2990
  2811  0063                     u2991:
  2812  0063  2865               	goto	l2661
  2813  0064                     u2990:
  2814  0064                     l2659:
  2815  0064  143C               	bsf	___flmul@aexp,0
  2816  0065                     l2661:
  2817  0065  083C               	movf	___flmul@aexp,w
  2818  0066  1903               	btfsc	3,2
  2819  0067  2869               	goto	u3001
  2820  0068  286A               	goto	u3000
  2821  0069                     u3001:
  2822  0069  2879               	goto	l2669
  2823  006A                     u3000:
  2824  006A                     l2663:
  2825  006A  0A3C               	incf	___flmul@aexp,w
  2826  006B  1D03               	btfss	3,2
  2827  006C  286E               	goto	u3011
  2828  006D  286F               	goto	u3010
  2829  006E                     u3011:
  2830  006E  2877               	goto	l2667
  2831  006F                     u3010:
  2832  006F                     l2665:
  2833  006F  3000               	movlw	0
  2834  0070  00B5               	movwf	___flmul@a+3
  2835  0071  3000               	movlw	0
  2836  0072  00B4               	movwf	___flmul@a+2
  2837  0073  3000               	movlw	0
  2838  0074  00B3               	movwf	___flmul@a+1
  2839  0075  3000               	movlw	0
  2840  0076  00B2               	movwf	___flmul@a
  2841  0077                     l2667:
  2842  0077  17B4               	bsf	___flmul@a+2,7
  2843  0078  2881               	goto	l2671
  2844  0079                     l2669:
  2845  0079  3000               	movlw	0
  2846  007A  00B5               	movwf	___flmul@a+3
  2847  007B  3000               	movlw	0
  2848  007C  00B4               	movwf	___flmul@a+2
  2849  007D  3000               	movlw	0
  2850  007E  00B3               	movwf	___flmul@a+1
  2851  007F  3000               	movlw	0
  2852  0080  00B2               	movwf	___flmul@a
  2853  0081                     l2671:
  2854  0081  083C               	movf	___flmul@aexp,w
  2855  0082  1903               	btfsc	3,2
  2856  0083  2885               	goto	u3021
  2857  0084  2886               	goto	u3020
  2858  0085                     u3021:
  2859  0085  288B               	goto	l2675
  2860  0086                     u3020:
  2861  0086                     l2673:
  2862  0086  0841               	movf	___flmul@bexp,w
  2863  0087  1D03               	btfss	3,2
  2864  0088  288A               	goto	u3031
  2865  0089  288B               	goto	u3030
  2866  008A                     u3031:
  2867  008A  2894               	goto	l2679
  2868  008B                     u3030:
  2869  008B                     l2675:
  2870  008B  3000               	movlw	0
  2871  008C  00B1               	movwf	?___flmul+3
  2872  008D  3000               	movlw	0
  2873  008E  00B0               	movwf	?___flmul+2
  2874  008F  3000               	movlw	0
  2875  0090  00AF               	movwf	?___flmul+1
  2876  0091  3000               	movlw	0
  2877  0092  00AE               	movwf	?___flmul
  2878  0093  2B87               	goto	l704
  2879  0094                     l2679:
  2880  0094  082E               	movf	___flmul@b,w
  2881  0095  00B6               	movwf	??___flmul
  2882  0096  0836               	movf	??___flmul,w
  2883  0097  00F4               	movwf	__Umul8_16@multiplicand
  2884  0098  0834               	movf	___flmul@a+2,w
  2885  0099  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  2886  009E  0875               	movf	?__Umul8_16+1,w
  2887  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2888  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2889  00A1  00C7               	movwf	___flmul@temp+1
  2890  00A2  0874               	movf	?__Umul8_16,w
  2891  00A3  00C6               	movwf	___flmul@temp
  2892  00A4                     l2681:
  2893  00A4  0846               	movf	___flmul@temp,w
  2894  00A5  00B6               	movwf	??___flmul
  2895  00A6  01B7               	clrf	??___flmul+1
  2896  00A7  01B8               	clrf	??___flmul+2
  2897  00A8  01B9               	clrf	??___flmul+3
  2898  00A9  0839               	movf	??___flmul+3,w
  2899  00AA  00C0               	movwf	___flmul@grs+3
  2900  00AB  0838               	movf	??___flmul+2,w
  2901  00AC  00BF               	movwf	___flmul@grs+2
  2902  00AD  0837               	movf	??___flmul+1,w
  2903  00AE  00BE               	movwf	___flmul@grs+1
  2904  00AF  0836               	movf	??___flmul,w
  2905  00B0  00BD               	movwf	___flmul@grs
  2906  00B1                     l2683:
  2907  00B1  0847               	movf	___flmul@temp+1,w
  2908  00B2  00B6               	movwf	??___flmul
  2909  00B3  01B7               	clrf	??___flmul+1
  2910  00B4  01B8               	clrf	??___flmul+2
  2911  00B5  01B9               	clrf	??___flmul+3
  2912  00B6  0839               	movf	??___flmul+3,w
  2913  00B7  00C5               	movwf	___flmul@prod+3
  2914  00B8  0838               	movf	??___flmul+2,w
  2915  00B9  00C4               	movwf	___flmul@prod+2
  2916  00BA  0837               	movf	??___flmul+1,w
  2917  00BB  00C3               	movwf	___flmul@prod+1
  2918  00BC  0836               	movf	??___flmul,w
  2919  00BD  00C2               	movwf	___flmul@prod
  2920  00BE  082F               	movf	___flmul@b+1,w
  2921  00BF  00B6               	movwf	??___flmul
  2922  00C0  0836               	movf	??___flmul,w
  2923  00C1  00F4               	movwf	__Umul8_16@multiplicand
  2924  00C2  0833               	movf	___flmul@a+1,w
  2925  00C3  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  2926  00C8  0875               	movf	?__Umul8_16+1,w
  2927  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2928  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2929  00CB  00C7               	movwf	___flmul@temp+1
  2930  00CC  0874               	movf	?__Umul8_16,w
  2931  00CD  00C6               	movwf	___flmul@temp
  2932  00CE                     l2685:
  2933  00CE  0846               	movf	___flmul@temp,w
  2934  00CF  00B6               	movwf	??___flmul
  2935  00D0  01B7               	clrf	??___flmul+1
  2936  00D1  01B8               	clrf	??___flmul+2
  2937  00D2  01B9               	clrf	??___flmul+3
  2938  00D3  0836               	movf	??___flmul,w
  2939  00D4  07BD               	addwf	___flmul@grs,f
  2940  00D5  0837               	movf	??___flmul+1,w
  2941  00D6  1103               	clrz
  2942  00D7  1803               	skipnc
  2943  00D8  3E01               	addlw	1
  2944  00D9  1903               	skipnz
  2945  00DA  28DC               	goto	u3041
  2946  00DB  07BE               	addwf	___flmul@grs+1,f
  2947  00DC                     u3041:
  2948  00DC  0838               	movf	??___flmul+2,w
  2949  00DD  1103               	clrz
  2950  00DE  1803               	skipnc
  2951  00DF  3E01               	addlw	1
  2952  00E0  1903               	skipnz
  2953  00E1  28E3               	goto	u3042
  2954  00E2  07BF               	addwf	___flmul@grs+2,f
  2955  00E3                     u3042:
  2956  00E3  0839               	movf	??___flmul+3,w
  2957  00E4  1103               	clrz
  2958  00E5  1803               	skipnc
  2959  00E6  3E01               	addlw	1
  2960  00E7  1903               	skipnz
  2961  00E8  28EA               	goto	u3043
  2962  00E9  07C0               	addwf	___flmul@grs+3,f
  2963  00EA                     u3043:
  2964  00EA                     l2687:
  2965  00EA  0847               	movf	___flmul@temp+1,w
  2966  00EB  00B6               	movwf	??___flmul
  2967  00EC  01B7               	clrf	??___flmul+1
  2968  00ED  01B8               	clrf	??___flmul+2
  2969  00EE  01B9               	clrf	??___flmul+3
  2970  00EF  0836               	movf	??___flmul,w
  2971  00F0  07C2               	addwf	___flmul@prod,f
  2972  00F1  0837               	movf	??___flmul+1,w
  2973  00F2  1103               	clrz
  2974  00F3  1803               	skipnc
  2975  00F4  3E01               	addlw	1
  2976  00F5  1903               	skipnz
  2977  00F6  28F8               	goto	u3051
  2978  00F7  07C3               	addwf	___flmul@prod+1,f
  2979  00F8                     u3051:
  2980  00F8  0838               	movf	??___flmul+2,w
  2981  00F9  1103               	clrz
  2982  00FA  1803               	skipnc
  2983  00FB  3E01               	addlw	1
  2984  00FC  1903               	skipnz
  2985  00FD  28FF               	goto	u3052
  2986  00FE  07C4               	addwf	___flmul@prod+2,f
  2987  00FF                     u3052:
  2988  00FF  0839               	movf	??___flmul+3,w
  2989  0100  1103               	clrz
  2990  0101  1803               	skipnc
  2991  0102  3E01               	addlw	1
  2992  0103  1903               	skipnz
  2993  0104  2906               	goto	u3053
  2994  0105  07C5               	addwf	___flmul@prod+3,f
  2995  0106                     u3053:
  2996  0106  0830               	movf	___flmul@b+2,w
  2997  0107  00B6               	movwf	??___flmul
  2998  0108  0836               	movf	??___flmul,w
  2999  0109  00F4               	movwf	__Umul8_16@multiplicand
  3000  010A  0832               	movf	___flmul@a,w
  3001  010B  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3002  0110  0875               	movf	?__Umul8_16+1,w
  3003  0111  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0112  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0113  00C7               	movwf	___flmul@temp+1
  3006  0114  0874               	movf	?__Umul8_16,w
  3007  0115  00C6               	movwf	___flmul@temp
  3008  0116                     l2689:
  3009  0116  0846               	movf	___flmul@temp,w
  3010  0117  00B6               	movwf	??___flmul
  3011  0118  01B7               	clrf	??___flmul+1
  3012  0119  01B8               	clrf	??___flmul+2
  3013  011A  01B9               	clrf	??___flmul+3
  3014  011B  0836               	movf	??___flmul,w
  3015  011C  07BD               	addwf	___flmul@grs,f
  3016  011D  0837               	movf	??___flmul+1,w
  3017  011E  1103               	clrz
  3018  011F  1803               	skipnc
  3019  0120  3E01               	addlw	1
  3020  0121  1903               	skipnz
  3021  0122  2924               	goto	u3061
  3022  0123  07BE               	addwf	___flmul@grs+1,f
  3023  0124                     u3061:
  3024  0124  0838               	movf	??___flmul+2,w
  3025  0125  1103               	clrz
  3026  0126  1803               	skipnc
  3027  0127  3E01               	addlw	1
  3028  0128  1903               	skipnz
  3029  0129  292B               	goto	u3062
  3030  012A  07BF               	addwf	___flmul@grs+2,f
  3031  012B                     u3062:
  3032  012B  0839               	movf	??___flmul+3,w
  3033  012C  1103               	clrz
  3034  012D  1803               	skipnc
  3035  012E  3E01               	addlw	1
  3036  012F  1903               	skipnz
  3037  0130  2932               	goto	u3063
  3038  0131  07C0               	addwf	___flmul@grs+3,f
  3039  0132                     u3063:
  3040  0132                     l2691:
  3041  0132  0847               	movf	___flmul@temp+1,w
  3042  0133  00B6               	movwf	??___flmul
  3043  0134  01B7               	clrf	??___flmul+1
  3044  0135  01B8               	clrf	??___flmul+2
  3045  0136  01B9               	clrf	??___flmul+3
  3046  0137  0836               	movf	??___flmul,w
  3047  0138  07C2               	addwf	___flmul@prod,f
  3048  0139  0837               	movf	??___flmul+1,w
  3049  013A  1103               	clrz
  3050  013B  1803               	skipnc
  3051  013C  3E01               	addlw	1
  3052  013D  1903               	skipnz
  3053  013E  2940               	goto	u3071
  3054  013F  07C3               	addwf	___flmul@prod+1,f
  3055  0140                     u3071:
  3056  0140  0838               	movf	??___flmul+2,w
  3057  0141  1103               	clrz
  3058  0142  1803               	skipnc
  3059  0143  3E01               	addlw	1
  3060  0144  1903               	skipnz
  3061  0145  2947               	goto	u3072
  3062  0146  07C4               	addwf	___flmul@prod+2,f
  3063  0147                     u3072:
  3064  0147  0839               	movf	??___flmul+3,w
  3065  0148  1103               	clrz
  3066  0149  1803               	skipnc
  3067  014A  3E01               	addlw	1
  3068  014B  1903               	skipnz
  3069  014C  294E               	goto	u3073
  3070  014D  07C5               	addwf	___flmul@prod+3,f
  3071  014E                     u3073:
  3072  014E                     l2693:
  3073  014E  3008               	movlw	8
  3074  014F  00B6               	movwf	??___flmul
  3075  0150                     u3085:
  3076  0150  1003               	clrc
  3077  0151  0DBD               	rlf	___flmul@grs,f
  3078  0152  0DBE               	rlf	___flmul@grs+1,f
  3079  0153  0DBF               	rlf	___flmul@grs+2,f
  3080  0154  0DC0               	rlf	___flmul@grs+3,f
  3081  0155  0BB6               	decfsz	??___flmul,f
  3082  0156  2950               	goto	u3085
  3083  0157                     l2695:
  3084  0157  082F               	movf	___flmul@b+1,w
  3085  0158  00B6               	movwf	??___flmul
  3086  0159  0836               	movf	??___flmul,w
  3087  015A  00F4               	movwf	__Umul8_16@multiplicand
  3088  015B  0832               	movf	___flmul@a,w
  3089  015C  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3090  0161  0875               	movf	?__Umul8_16+1,w
  3091  0162  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0163  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0164  00C7               	movwf	___flmul@temp+1
  3094  0165  0874               	movf	?__Umul8_16,w
  3095  0166  00C6               	movwf	___flmul@temp
  3096  0167                     l2697:
  3097  0167  0846               	movf	___flmul@temp,w
  3098  0168  00B6               	movwf	??___flmul
  3099  0169  0847               	movf	___flmul@temp+1,w
  3100  016A  00B7               	movwf	??___flmul+1
  3101  016B  01B8               	clrf	??___flmul+2
  3102  016C  01B9               	clrf	??___flmul+3
  3103  016D  0836               	movf	??___flmul,w
  3104  016E  07BD               	addwf	___flmul@grs,f
  3105  016F  0837               	movf	??___flmul+1,w
  3106  0170  1103               	clrz
  3107  0171  1803               	skipnc
  3108  0172  3E01               	addlw	1
  3109  0173  1903               	skipnz
  3110  0174  2976               	goto	u3091
  3111  0175  07BE               	addwf	___flmul@grs+1,f
  3112  0176                     u3091:
  3113  0176  0838               	movf	??___flmul+2,w
  3114  0177  1103               	clrz
  3115  0178  1803               	skipnc
  3116  0179  3E01               	addlw	1
  3117  017A  1903               	skipnz
  3118  017B  297D               	goto	u3092
  3119  017C  07BF               	addwf	___flmul@grs+2,f
  3120  017D                     u3092:
  3121  017D  0839               	movf	??___flmul+3,w
  3122  017E  1103               	clrz
  3123  017F  1803               	skipnc
  3124  0180  3E01               	addlw	1
  3125  0181  1903               	skipnz
  3126  0182  2984               	goto	u3093
  3127  0183  07C0               	addwf	___flmul@grs+3,f
  3128  0184                     u3093:
  3129  0184                     l2699:
  3130  0184  082E               	movf	___flmul@b,w
  3131  0185  00B6               	movwf	??___flmul
  3132  0186  0836               	movf	??___flmul,w
  3133  0187  00F4               	movwf	__Umul8_16@multiplicand
  3134  0188  0833               	movf	___flmul@a+1,w
  3135  0189  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3136  018E  0875               	movf	?__Umul8_16+1,w
  3137  018F  1283               	bcf	3,5	;RP0=0, select bank0
  3138  0190  1303               	bcf	3,6	;RP1=0, select bank0
  3139  0191  00C7               	movwf	___flmul@temp+1
  3140  0192  0874               	movf	?__Umul8_16,w
  3141  0193  00C6               	movwf	___flmul@temp
  3142  0194                     l2701:
  3143  0194  0846               	movf	___flmul@temp,w
  3144  0195  00B6               	movwf	??___flmul
  3145  0196  0847               	movf	___flmul@temp+1,w
  3146  0197  00B7               	movwf	??___flmul+1
  3147  0198  01B8               	clrf	??___flmul+2
  3148  0199  01B9               	clrf	??___flmul+3
  3149  019A  0836               	movf	??___flmul,w
  3150  019B  07BD               	addwf	___flmul@grs,f
  3151  019C  0837               	movf	??___flmul+1,w
  3152  019D  1103               	clrz
  3153  019E  1803               	skipnc
  3154  019F  3E01               	addlw	1
  3155  01A0  1903               	skipnz
  3156  01A1  29A3               	goto	u3101
  3157  01A2  07BE               	addwf	___flmul@grs+1,f
  3158  01A3                     u3101:
  3159  01A3  0838               	movf	??___flmul+2,w
  3160  01A4  1103               	clrz
  3161  01A5  1803               	skipnc
  3162  01A6  3E01               	addlw	1
  3163  01A7  1903               	skipnz
  3164  01A8  29AA               	goto	u3102
  3165  01A9  07BF               	addwf	___flmul@grs+2,f
  3166  01AA                     u3102:
  3167  01AA  0839               	movf	??___flmul+3,w
  3168  01AB  1103               	clrz
  3169  01AC  1803               	skipnc
  3170  01AD  3E01               	addlw	1
  3171  01AE  1903               	skipnz
  3172  01AF  29B1               	goto	u3103
  3173  01B0  07C0               	addwf	___flmul@grs+3,f
  3174  01B1                     u3103:
  3175  01B1                     l2703:
  3176  01B1  3008               	movlw	8
  3177  01B2  00B6               	movwf	??___flmul
  3178  01B3                     u3115:
  3179  01B3  1003               	clrc
  3180  01B4  0DBD               	rlf	___flmul@grs,f
  3181  01B5  0DBE               	rlf	___flmul@grs+1,f
  3182  01B6  0DBF               	rlf	___flmul@grs+2,f
  3183  01B7  0DC0               	rlf	___flmul@grs+3,f
  3184  01B8  0BB6               	decfsz	??___flmul,f
  3185  01B9  29B3               	goto	u3115
  3186  01BA  082E               	movf	___flmul@b,w
  3187  01BB  00B6               	movwf	??___flmul
  3188  01BC  0836               	movf	??___flmul,w
  3189  01BD  00F4               	movwf	__Umul8_16@multiplicand
  3190  01BE  0832               	movf	___flmul@a,w
  3191  01BF  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3192  01C4  0875               	movf	?__Umul8_16+1,w
  3193  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3194  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3195  01C7  00C7               	movwf	___flmul@temp+1
  3196  01C8  0874               	movf	?__Umul8_16,w
  3197  01C9  00C6               	movwf	___flmul@temp
  3198  01CA                     l2705:
  3199  01CA  0846               	movf	___flmul@temp,w
  3200  01CB  00B6               	movwf	??___flmul
  3201  01CC  0847               	movf	___flmul@temp+1,w
  3202  01CD  00B7               	movwf	??___flmul+1
  3203  01CE  01B8               	clrf	??___flmul+2
  3204  01CF  01B9               	clrf	??___flmul+3
  3205  01D0  0836               	movf	??___flmul,w
  3206  01D1  07BD               	addwf	___flmul@grs,f
  3207  01D2  0837               	movf	??___flmul+1,w
  3208  01D3  1103               	clrz
  3209  01D4  1803               	skipnc
  3210  01D5  3E01               	addlw	1
  3211  01D6  1903               	skipnz
  3212  01D7  29D9               	goto	u3121
  3213  01D8  07BE               	addwf	___flmul@grs+1,f
  3214  01D9                     u3121:
  3215  01D9  0838               	movf	??___flmul+2,w
  3216  01DA  1103               	clrz
  3217  01DB  1803               	skipnc
  3218  01DC  3E01               	addlw	1
  3219  01DD  1903               	skipnz
  3220  01DE  29E0               	goto	u3122
  3221  01DF  07BF               	addwf	___flmul@grs+2,f
  3222  01E0                     u3122:
  3223  01E0  0839               	movf	??___flmul+3,w
  3224  01E1  1103               	clrz
  3225  01E2  1803               	skipnc
  3226  01E3  3E01               	addlw	1
  3227  01E4  1903               	skipnz
  3228  01E5  29E7               	goto	u3123
  3229  01E6  07C0               	addwf	___flmul@grs+3,f
  3230  01E7                     u3123:
  3231  01E7                     l2707:
  3232  01E7  082F               	movf	___flmul@b+1,w
  3233  01E8  00B6               	movwf	??___flmul
  3234  01E9  0836               	movf	??___flmul,w
  3235  01EA  00F4               	movwf	__Umul8_16@multiplicand
  3236  01EB  0834               	movf	___flmul@a+2,w
  3237  01EC  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3238  01F1  0875               	movf	?__Umul8_16+1,w
  3239  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3240  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3241  01F4  00C7               	movwf	___flmul@temp+1
  3242  01F5  0874               	movf	?__Umul8_16,w
  3243  01F6  00C6               	movwf	___flmul@temp
  3244  01F7  0846               	movf	___flmul@temp,w
  3245  01F8  00B6               	movwf	??___flmul
  3246  01F9  0847               	movf	___flmul@temp+1,w
  3247  01FA  00B7               	movwf	??___flmul+1
  3248  01FB  01B8               	clrf	??___flmul+2
  3249  01FC  01B9               	clrf	??___flmul+3
  3250  01FD  0836               	movf	??___flmul,w
  3251  01FE  07C2               	addwf	___flmul@prod,f
  3252  01FF  0837               	movf	??___flmul+1,w
  3253  0200  1103               	clrz
  3254  0201  1803               	skipnc
  3255  0202  3E01               	addlw	1
  3256  0203  1903               	skipnz
  3257  0204  2A06               	goto	u3131
  3258  0205  07C3               	addwf	___flmul@prod+1,f
  3259  0206                     u3131:
  3260  0206  0838               	movf	??___flmul+2,w
  3261  0207  1103               	clrz
  3262  0208  1803               	skipnc
  3263  0209  3E01               	addlw	1
  3264  020A  1903               	skipnz
  3265  020B  2A0D               	goto	u3132
  3266  020C  07C4               	addwf	___flmul@prod+2,f
  3267  020D                     u3132:
  3268  020D  0839               	movf	??___flmul+3,w
  3269  020E  1103               	clrz
  3270  020F  1803               	skipnc
  3271  0210  3E01               	addlw	1
  3272  0211  1903               	skipnz
  3273  0212  2A14               	goto	u3133
  3274  0213  07C5               	addwf	___flmul@prod+3,f
  3275  0214                     u3133:
  3276  0214                     l2709:
  3277  0214  0830               	movf	___flmul@b+2,w
  3278  0215  00B6               	movwf	??___flmul
  3279  0216  0836               	movf	??___flmul,w
  3280  0217  00F4               	movwf	__Umul8_16@multiplicand
  3281  0218  0833               	movf	___flmul@a+1,w
  3282  0219  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3283  021E  0875               	movf	?__Umul8_16+1,w
  3284  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0221  00C7               	movwf	___flmul@temp+1
  3287  0222  0874               	movf	?__Umul8_16,w
  3288  0223  00C6               	movwf	___flmul@temp
  3289  0224                     l2711:
  3290  0224  0846               	movf	___flmul@temp,w
  3291  0225  00B6               	movwf	??___flmul
  3292  0226  0847               	movf	___flmul@temp+1,w
  3293  0227  00B7               	movwf	??___flmul+1
  3294  0228  01B8               	clrf	??___flmul+2
  3295  0229  01B9               	clrf	??___flmul+3
  3296  022A  0836               	movf	??___flmul,w
  3297  022B  07C2               	addwf	___flmul@prod,f
  3298  022C  0837               	movf	??___flmul+1,w
  3299  022D  1103               	clrz
  3300  022E  1803               	skipnc
  3301  022F  3E01               	addlw	1
  3302  0230  1903               	skipnz
  3303  0231  2A33               	goto	u3141
  3304  0232  07C3               	addwf	___flmul@prod+1,f
  3305  0233                     u3141:
  3306  0233  0838               	movf	??___flmul+2,w
  3307  0234  1103               	clrz
  3308  0235  1803               	skipnc
  3309  0236  3E01               	addlw	1
  3310  0237  1903               	skipnz
  3311  0238  2A3A               	goto	u3142
  3312  0239  07C4               	addwf	___flmul@prod+2,f
  3313  023A                     u3142:
  3314  023A  0839               	movf	??___flmul+3,w
  3315  023B  1103               	clrz
  3316  023C  1803               	skipnc
  3317  023D  3E01               	addlw	1
  3318  023E  1903               	skipnz
  3319  023F  2A41               	goto	u3143
  3320  0240  07C5               	addwf	___flmul@prod+3,f
  3321  0241                     u3143:
  3322  0241  0830               	movf	___flmul@b+2,w
  3323  0242  00B6               	movwf	??___flmul
  3324  0243  0836               	movf	??___flmul,w
  3325  0244  00F4               	movwf	__Umul8_16@multiplicand
  3326  0245  0834               	movf	___flmul@a+2,w
  3327  0246  120A  158A  2563  120A  118A  	fcall	__Umul8_16
  3328  024B  0875               	movf	?__Umul8_16+1,w
  3329  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3330  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3331  024E  00C7               	movwf	___flmul@temp+1
  3332  024F  0874               	movf	?__Umul8_16,w
  3333  0250  00C6               	movwf	___flmul@temp
  3334  0251                     l2713:
  3335  0251  0846               	movf	___flmul@temp,w
  3336  0252  00B6               	movwf	??___flmul
  3337  0253  0847               	movf	___flmul@temp+1,w
  3338  0254  00B7               	movwf	??___flmul+1
  3339  0255  01B8               	clrf	??___flmul+2
  3340  0256  01B9               	clrf	??___flmul+3
  3341  0257  3008               	movlw	8
  3342  0258                     u3155:
  3343  0258  1003               	clrc
  3344  0259  0DB6               	rlf	??___flmul,f
  3345  025A  0DB7               	rlf	??___flmul+1,f
  3346  025B  0DB8               	rlf	??___flmul+2,f
  3347  025C  0DB9               	rlf	??___flmul+3,f
  3348  025D                     u3150:
  3349  025D  3EFF               	addlw	-1
  3350  025E  1D03               	skipz
  3351  025F  2A58               	goto	u3155
  3352  0260  0836               	movf	??___flmul,w
  3353  0261  07C2               	addwf	___flmul@prod,f
  3354  0262  0837               	movf	??___flmul+1,w
  3355  0263  1103               	clrz
  3356  0264  1803               	skipnc
  3357  0265  3E01               	addlw	1
  3358  0266  1903               	skipnz
  3359  0267  2A69               	goto	u3161
  3360  0268  07C3               	addwf	___flmul@prod+1,f
  3361  0269                     u3161:
  3362  0269  0838               	movf	??___flmul+2,w
  3363  026A  1103               	clrz
  3364  026B  1803               	skipnc
  3365  026C  3E01               	addlw	1
  3366  026D  1903               	skipnz
  3367  026E  2A70               	goto	u3162
  3368  026F  07C4               	addwf	___flmul@prod+2,f
  3369  0270                     u3162:
  3370  0270  0839               	movf	??___flmul+3,w
  3371  0271  1103               	clrz
  3372  0272  1803               	skipnc
  3373  0273  3E01               	addlw	1
  3374  0274  1903               	skipnz
  3375  0275  2A77               	goto	u3163
  3376  0276  07C5               	addwf	___flmul@prod+3,f
  3377  0277                     u3163:
  3378  0277                     l2715:
  3379  0277  083D               	movf	___flmul@grs,w
  3380  0278  00B6               	movwf	??___flmul
  3381  0279  083E               	movf	___flmul@grs+1,w
  3382  027A  00B7               	movwf	??___flmul+1
  3383  027B  083F               	movf	___flmul@grs+2,w
  3384  027C  00B8               	movwf	??___flmul+2
  3385  027D  0840               	movf	___flmul@grs+3,w
  3386  027E  00B9               	movwf	??___flmul+3
  3387  027F  3018               	movlw	24
  3388  0280                     u3175:
  3389  0280  1003               	clrc
  3390  0281  0CB9               	rrf	??___flmul+3,f
  3391  0282  0CB8               	rrf	??___flmul+2,f
  3392  0283  0CB7               	rrf	??___flmul+1,f
  3393  0284  0CB6               	rrf	??___flmul,f
  3394  0285                     u3170:
  3395  0285  3EFF               	addlw	-1
  3396  0286  1D03               	skipz
  3397  0287  2A80               	goto	u3175
  3398  0288  0836               	movf	??___flmul,w
  3399  0289  07C2               	addwf	___flmul@prod,f
  3400  028A  0837               	movf	??___flmul+1,w
  3401  028B  1103               	clrz
  3402  028C  1803               	skipnc
  3403  028D  3E01               	addlw	1
  3404  028E  1903               	skipnz
  3405  028F  2A91               	goto	u3181
  3406  0290  07C3               	addwf	___flmul@prod+1,f
  3407  0291                     u3181:
  3408  0291  0838               	movf	??___flmul+2,w
  3409  0292  1103               	clrz
  3410  0293  1803               	skipnc
  3411  0294  3E01               	addlw	1
  3412  0295  1903               	skipnz
  3413  0296  2A98               	goto	u3182
  3414  0297  07C4               	addwf	___flmul@prod+2,f
  3415  0298                     u3182:
  3416  0298  0839               	movf	??___flmul+3,w
  3417  0299  1103               	clrz
  3418  029A  1803               	skipnc
  3419  029B  3E01               	addlw	1
  3420  029C  1903               	skipnz
  3421  029D  2A9F               	goto	u3183
  3422  029E  07C5               	addwf	___flmul@prod+3,f
  3423  029F                     u3183:
  3424  029F                     l2717:
  3425  029F  3008               	movlw	8
  3426  02A0  00B6               	movwf	??___flmul
  3427  02A1                     u3195:
  3428  02A1  1003               	clrc
  3429  02A2  0DBD               	rlf	___flmul@grs,f
  3430  02A3  0DBE               	rlf	___flmul@grs+1,f
  3431  02A4  0DBF               	rlf	___flmul@grs+2,f
  3432  02A5  0DC0               	rlf	___flmul@grs+3,f
  3433  02A6  0BB6               	decfsz	??___flmul,f
  3434  02A7  2AA1               	goto	u3195
  3435  02A8                     l2719:
  3436  02A8  0841               	movf	___flmul@bexp,w
  3437  02A9  073C               	addwf	___flmul@aexp,w
  3438  02AA  00B6               	movwf	??___flmul
  3439  02AB  01B7               	clrf	??___flmul+1
  3440  02AC  0DB7               	rlf	??___flmul+1,f
  3441  02AD  0836               	movf	??___flmul,w
  3442  02AE  3E82               	addlw	130
  3443  02AF  00C6               	movwf	___flmul@temp
  3444  02B0  0837               	movf	??___flmul+1,w
  3445  02B1  1803               	skipnc
  3446  02B2  3E01               	addlw	1
  3447  02B3  3EFF               	addlw	255
  3448  02B4  00C7               	movwf	___flmul@temp+1
  3449  02B5  2AD3               	goto	l2731
  3450  02B6                     l2721:
  3451  02B6  3001               	movlw	1
  3452  02B7  00B6               	movwf	??___flmul
  3453  02B8                     u3205:
  3454  02B8  1003               	clrc
  3455  02B9  0DC2               	rlf	___flmul@prod,f
  3456  02BA  0DC3               	rlf	___flmul@prod+1,f
  3457  02BB  0DC4               	rlf	___flmul@prod+2,f
  3458  02BC  0DC5               	rlf	___flmul@prod+3,f
  3459  02BD  0BB6               	decfsz	??___flmul,f
  3460  02BE  2AB8               	goto	u3205
  3461  02BF                     l2723:
  3462  02BF  1FC0               	btfss	___flmul@grs+3,7
  3463  02C0  2AC2               	goto	u3211
  3464  02C1  2AC3               	goto	u3210
  3465  02C2                     u3211:
  3466  02C2  2AC4               	goto	l2727
  3467  02C3                     u3210:
  3468  02C3                     l2725:
  3469  02C3  1442               	bsf	___flmul@prod,0
  3470  02C4                     l2727:
  3471  02C4  3001               	movlw	1
  3472  02C5  00B6               	movwf	??___flmul
  3473  02C6                     u3225:
  3474  02C6  1003               	clrc
  3475  02C7  0DBD               	rlf	___flmul@grs,f
  3476  02C8  0DBE               	rlf	___flmul@grs+1,f
  3477  02C9  0DBF               	rlf	___flmul@grs+2,f
  3478  02CA  0DC0               	rlf	___flmul@grs+3,f
  3479  02CB  0BB6               	decfsz	??___flmul,f
  3480  02CC  2AC6               	goto	u3225
  3481  02CD                     l2729:
  3482  02CD  30FF               	movlw	255
  3483  02CE  07C6               	addwf	___flmul@temp,f
  3484  02CF  1803               	skipnc
  3485  02D0  0AC7               	incf	___flmul@temp+1,f
  3486  02D1  30FF               	movlw	255
  3487  02D2  07C7               	addwf	___flmul@temp+1,f
  3488  02D3                     l2731:
  3489  02D3  1FC4               	btfss	___flmul@prod+2,7
  3490  02D4  2AD6               	goto	u3231
  3491  02D5  2AD7               	goto	u3230
  3492  02D6                     u3231:
  3493  02D6  2AB6               	goto	l2721
  3494  02D7                     u3230:
  3495  02D7                     l2733:
  3496  02D7  01BC               	clrf	___flmul@aexp
  3497  02D8                     l2735:
  3498  02D8  1FC0               	btfss	___flmul@grs+3,7
  3499  02D9  2ADB               	goto	u3241
  3500  02DA  2ADC               	goto	u3240
  3501  02DB                     u3241:
  3502  02DB  2AF8               	goto	l2743
  3503  02DC                     u3240:
  3504  02DC                     l2737:
  3505  02DC  30FF               	movlw	255
  3506  02DD  053D               	andwf	___flmul@grs,w
  3507  02DE  00B6               	movwf	??___flmul
  3508  02DF  30FF               	movlw	255
  3509  02E0  053E               	andwf	___flmul@grs+1,w
  3510  02E1  00B7               	movwf	??___flmul+1
  3511  02E2  30FF               	movlw	255
  3512  02E3  053F               	andwf	___flmul@grs+2,w
  3513  02E4  00B8               	movwf	??___flmul+2
  3514  02E5  307F               	movlw	127
  3515  02E6  0540               	andwf	___flmul@grs+3,w
  3516  02E7  00B9               	movwf	??___flmul+3
  3517  02E8  0839               	movf	??___flmul+3,w
  3518  02E9  0438               	iorwf	??___flmul+2,w
  3519  02EA  0437               	iorwf	??___flmul+1,w
  3520  02EB  0436               	iorwf	??___flmul,w
  3521  02EC  1903               	skipnz
  3522  02ED  2AEF               	goto	u3251
  3523  02EE  2AF0               	goto	u3250
  3524  02EF                     u3251:
  3525  02EF  2AF3               	goto	l710
  3526  02F0                     u3250:
  3527  02F0                     l2739:
  3528  02F0  01BC               	clrf	___flmul@aexp
  3529  02F1  0ABC               	incf	___flmul@aexp,f
  3530  02F2  2AF8               	goto	l2743
  3531  02F3                     l710:
  3532  02F3  1C42               	btfss	___flmul@prod,0
  3533  02F4  2AF6               	goto	u3261
  3534  02F5  2AF7               	goto	u3260
  3535  02F6                     u3261:
  3536  02F6  2AF8               	goto	l2743
  3537  02F7                     u3260:
  3538  02F7  2AF0               	goto	l2739
  3539  02F8                     l2743:
  3540  02F8  083C               	movf	___flmul@aexp,w
  3541  02F9  1903               	btfsc	3,2
  3542  02FA  2AFC               	goto	u3271
  3543  02FB  2AFD               	goto	u3270
  3544  02FC                     u3271:
  3545  02FC  2B2E               	goto	l2753
  3546  02FD                     u3270:
  3547  02FD                     l2745:
  3548  02FD  3001               	movlw	1
  3549  02FE  07C2               	addwf	___flmul@prod,f
  3550  02FF  3000               	movlw	0
  3551  0300  1803               	skipnc
  3552  0301  3001               	movlw	1
  3553  0302  07C3               	addwf	___flmul@prod+1,f
  3554  0303  3000               	movlw	0
  3555  0304  1803               	skipnc
  3556  0305  3001               	movlw	1
  3557  0306  07C4               	addwf	___flmul@prod+2,f
  3558  0307  3000               	movlw	0
  3559  0308  1803               	skipnc
  3560  0309  3001               	movlw	1
  3561  030A  07C5               	addwf	___flmul@prod+3,f
  3562  030B                     l2747:
  3563  030B  1C45               	btfss	___flmul@prod+3,0
  3564  030C  2B0E               	goto	u3281
  3565  030D  2B0F               	goto	u3280
  3566  030E                     u3281:
  3567  030E  2B2E               	goto	l2753
  3568  030F                     u3280:
  3569  030F                     l2749:
  3570  030F  0842               	movf	___flmul@prod,w
  3571  0310  00B6               	movwf	??___flmul
  3572  0311  0843               	movf	___flmul@prod+1,w
  3573  0312  00B7               	movwf	??___flmul+1
  3574  0313  0844               	movf	___flmul@prod+2,w
  3575  0314  00B8               	movwf	??___flmul+2
  3576  0315  0845               	movf	___flmul@prod+3,w
  3577  0316  00B9               	movwf	??___flmul+3
  3578  0317  3001               	movlw	1
  3579  0318  00BA               	movwf	??___flmul+4
  3580  0319                     u3295:
  3581  0319  0D39               	rlf	??___flmul+3,w
  3582  031A  0CB9               	rrf	??___flmul+3,f
  3583  031B  0CB8               	rrf	??___flmul+2,f
  3584  031C  0CB7               	rrf	??___flmul+1,f
  3585  031D  0CB6               	rrf	??___flmul,f
  3586  031E                     u3290:
  3587  031E  0BBA               	decfsz	??___flmul+4,f
  3588  031F  2B19               	goto	u3295
  3589  0320  0839               	movf	??___flmul+3,w
  3590  0321  00C5               	movwf	___flmul@prod+3
  3591  0322  0838               	movf	??___flmul+2,w
  3592  0323  00C4               	movwf	___flmul@prod+2
  3593  0324  0837               	movf	??___flmul+1,w
  3594  0325  00C3               	movwf	___flmul@prod+1
  3595  0326  0836               	movf	??___flmul,w
  3596  0327  00C2               	movwf	___flmul@prod
  3597  0328                     l2751:
  3598  0328  3001               	movlw	1
  3599  0329  07C6               	addwf	___flmul@temp,f
  3600  032A  1803               	skipnc
  3601  032B  0AC7               	incf	___flmul@temp+1,f
  3602  032C  3000               	movlw	0
  3603  032D  07C7               	addwf	___flmul@temp+1,f
  3604  032E                     l2753:
  3605  032E  0847               	movf	___flmul@temp+1,w
  3606  032F  3A80               	xorlw	128
  3607  0330  00FF               	movwf	btemp+1
  3608  0331  3080               	movlw	128
  3609  0332  027F               	subwf	btemp+1,w
  3610  0333  1D03               	skipz
  3611  0334  2B37               	goto	u3305
  3612  0335  30FF               	movlw	255
  3613  0336  0246               	subwf	___flmul@temp,w
  3614  0337                     u3305:
  3615  0337  1C03               	skipc
  3616  0338  2B3A               	goto	u3301
  3617  0339  2B3B               	goto	u3300
  3618  033A                     u3301:
  3619  033A  2B46               	goto	l2757
  3620  033B                     u3300:
  3621  033B                     l2755:
  3622  033B  307F               	movlw	127
  3623  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3624  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3625  033E  00C5               	movwf	___flmul@prod+3
  3626  033F  3080               	movlw	128
  3627  0340  00C4               	movwf	___flmul@prod+2
  3628  0341  3000               	movlw	0
  3629  0342  00C3               	movwf	___flmul@prod+1
  3630  0343  3000               	movlw	0
  3631  0344  00C2               	movwf	___flmul@prod
  3632  0345  2B7B               	goto	l716
  3633  0346                     l2757:
  3634  0346  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0347  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0348  0847               	movf	___flmul@temp+1,w
  3637  0349  3A80               	xorlw	128
  3638  034A  00FF               	movwf	btemp+1
  3639  034B  3080               	movlw	128
  3640  034C  027F               	subwf	btemp+1,w
  3641  034D  1D03               	skipz
  3642  034E  2B51               	goto	u3315
  3643  034F  3001               	movlw	1
  3644  0350  0246               	subwf	___flmul@temp,w
  3645  0351                     u3315:
  3646  0351  1803               	skipnc
  3647  0352  2B54               	goto	u3311
  3648  0353  2B55               	goto	u3310
  3649  0354                     u3311:
  3650  0354  2B61               	goto	l2763
  3651  0355                     u3310:
  3652  0355                     l2759:
  3653  0355  3000               	movlw	0
  3654  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0358  00C5               	movwf	___flmul@prod+3
  3657  0359  3000               	movlw	0
  3658  035A  00C4               	movwf	___flmul@prod+2
  3659  035B  3000               	movlw	0
  3660  035C  00C3               	movwf	___flmul@prod+1
  3661  035D  3000               	movlw	0
  3662  035E  00C2               	movwf	___flmul@prod
  3663  035F                     l2761:
  3664  035F  01BB               	clrf	___flmul@sign
  3665  0360  2B7B               	goto	l716
  3666  0361                     l2763:
  3667  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0363  0846               	movf	___flmul@temp,w
  3670  0364  00B6               	movwf	??___flmul
  3671  0365  0836               	movf	??___flmul,w
  3672  0366  00C1               	movwf	___flmul@bexp
  3673  0367  30FF               	movlw	255
  3674  0368  05C2               	andwf	___flmul@prod,f
  3675  0369  30FF               	movlw	255
  3676  036A  05C3               	andwf	___flmul@prod+1,f
  3677  036B  307F               	movlw	127
  3678  036C  05C4               	andwf	___flmul@prod+2,f
  3679  036D  3000               	movlw	0
  3680  036E  05C5               	andwf	___flmul@prod+3,f
  3681  036F                     l2765:
  3682  036F  1C41               	btfss	___flmul@bexp,0
  3683  0370  2B72               	goto	u3321
  3684  0371  2B73               	goto	u3320
  3685  0372                     u3321:
  3686  0372  2B74               	goto	l2769
  3687  0373                     u3320:
  3688  0373                     l2767:
  3689  0373  17C4               	bsf	___flmul@prod+2,7
  3690  0374                     l2769:
  3691  0374  0841               	movf	___flmul@bexp,w
  3692  0375  00B6               	movwf	??___flmul
  3693  0376  1003               	clrc
  3694  0377  0C36               	rrf	??___flmul,w
  3695  0378  00B7               	movwf	??___flmul+1
  3696  0379  0837               	movf	??___flmul+1,w
  3697  037A  00C5               	movwf	___flmul@prod+3
  3698  037B                     l716:
  3699  037B  083B               	movf	___flmul@sign,w
  3700  037C  00B6               	movwf	??___flmul
  3701  037D  0836               	movf	??___flmul,w
  3702  037E  04C5               	iorwf	___flmul@prod+3,f
  3703  037F                     l2771:
  3704  037F  0845               	movf	___flmul@prod+3,w
  3705  0380  00B1               	movwf	?___flmul+3
  3706  0381  0844               	movf	___flmul@prod+2,w
  3707  0382  00B0               	movwf	?___flmul+2
  3708  0383  0843               	movf	___flmul@prod+1,w
  3709  0384  00AF               	movwf	?___flmul+1
  3710  0385  0842               	movf	___flmul@prod,w
  3711  0386  00AE               	movwf	?___flmul
  3712  0387                     l704:
  3713  0387  0008               	return
  3714  0388                     __end_of___flmul:
  3715                           
  3716                           	psect	text7
  3717  0D63                     __ptext7:	
  3718 ;; *************** function __Umul8_16 *****************
  3719 ;; Defined at:
  3720 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  multiplier      1    wreg     unsigned char 
  3723 ;;  multiplicand    1    4[COMMON] unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  multiplier      1    6[BANK0 ] unsigned char 
  3726 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  3727 ;;  product         2    2[BANK0 ] unsigned int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2    4[COMMON] unsigned int 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3737 ;;      Params:         2       0       0       0       0
  3738 ;;      Locals:         0       5       0       0       0
  3739 ;;      Temps:          0       2       0       0       0
  3740 ;;      Totals:         2       7       0       0       0
  3741 ;;Total ram usage:        9 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    2
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		___flmul
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function __Umul8_16
  3753  0D63                     __Umul8_16:
  3754                           
  3755                           ;incstack = 0
  3756                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3757                           ;__Umul8_16@multiplier stored from wreg
  3758  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0D65  00A6               	movwf	__Umul8_16@multiplier
  3761  0D66                     l2339:
  3762  0D66  01A2               	clrf	__Umul8_16@product
  3763  0D67  01A3               	clrf	__Umul8_16@product+1
  3764  0D68                     l2341:
  3765  0D68  0874               	movf	__Umul8_16@multiplicand,w
  3766  0D69  00A0               	movwf	??__Umul8_16
  3767  0D6A  01A1               	clrf	??__Umul8_16+1
  3768  0D6B  0820               	movf	??__Umul8_16,w
  3769  0D6C  00A4               	movwf	__Umul8_16@word_mpld
  3770  0D6D  0821               	movf	??__Umul8_16+1,w
  3771  0D6E  00A5               	movwf	__Umul8_16@word_mpld+1
  3772  0D6F                     l2343:
  3773  0D6F  1C26               	btfss	__Umul8_16@multiplier,0
  3774  0D70  2D72               	goto	u2501
  3775  0D71  2D73               	goto	u2500
  3776  0D72                     u2501:
  3777  0D72  2D79               	goto	l723
  3778  0D73                     u2500:
  3779  0D73                     l2345:
  3780  0D73  0824               	movf	__Umul8_16@word_mpld,w
  3781  0D74  07A2               	addwf	__Umul8_16@product,f
  3782  0D75  1803               	skipnc
  3783  0D76  0AA3               	incf	__Umul8_16@product+1,f
  3784  0D77  0825               	movf	__Umul8_16@word_mpld+1,w
  3785  0D78  07A3               	addwf	__Umul8_16@product+1,f
  3786  0D79                     l723:
  3787  0D79  3001               	movlw	1
  3788  0D7A                     u2515:
  3789  0D7A  1003               	clrc
  3790  0D7B  0DA4               	rlf	__Umul8_16@word_mpld,f
  3791  0D7C  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  3792  0D7D  3EFF               	addlw	-1
  3793  0D7E  1D03               	skipz
  3794  0D7F  2D7A               	goto	u2515
  3795  0D80  1003               	clrc
  3796  0D81  0CA6               	rrf	__Umul8_16@multiplier,f
  3797  0D82                     l2347:
  3798  0D82  0826               	movf	__Umul8_16@multiplier,w
  3799  0D83  1D03               	btfss	3,2
  3800  0D84  2D86               	goto	u2521
  3801  0D85  2D87               	goto	u2520
  3802  0D86                     u2521:
  3803  0D86  2D6F               	goto	l2343
  3804  0D87                     u2520:
  3805  0D87                     l2349:
  3806  0D87  0823               	movf	__Umul8_16@product+1,w
  3807  0D88  00F5               	movwf	?__Umul8_16+1
  3808  0D89  0822               	movf	__Umul8_16@product,w
  3809  0D8A  00F4               	movwf	?__Umul8_16
  3810  0D8B                     l725:
  3811  0D8B  0008               	return
  3812  0D8C                     __end_of__Umul8_16:
  3813                           
  3814                           	psect	text8
  3815  0ED8                     __ptext8:	
  3816 ;; *************** function ___awmod *****************
  3817 ;; Defined at:
  3818 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  divisor         2    0[BANK0 ] int 
  3821 ;;  dividend        2    2[BANK0 ] int 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  sign            1    6[COMMON] unsigned char 
  3824 ;;  counter         1    5[COMMON] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  2    0[BANK0 ] int 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       4       0       0       0
  3835 ;;      Locals:         2       0       0       0       0
  3836 ;;      Temps:          1       0       0       0       0
  3837 ;;      Totals:         3       4       0       0       0
  3838 ;;Total ram usage:        7 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    2
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           
  3849                           ;psect for function ___awmod
  3850  0ED8                     ___awmod:
  3851  0ED8                     l2561:	
  3852                           ;incstack = 0
  3853                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3854                           
  3855  0ED8  01F6               	clrf	___awmod@sign
  3856  0ED9                     l2563:
  3857  0ED9  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0EDA  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0EDB  1FA3               	btfss	___awmod@dividend+1,7
  3860  0EDC  2EDE               	goto	u2771
  3861  0EDD  2EDF               	goto	u2770
  3862  0EDE                     u2771:
  3863  0EDE  2EE6               	goto	l2569
  3864  0EDF                     u2770:
  3865  0EDF                     l2565:
  3866  0EDF  09A2               	comf	___awmod@dividend,f
  3867  0EE0  09A3               	comf	___awmod@dividend+1,f
  3868  0EE1  0AA2               	incf	___awmod@dividend,f
  3869  0EE2  1903               	skipnz
  3870  0EE3  0AA3               	incf	___awmod@dividend+1,f
  3871  0EE4                     l2567:
  3872  0EE4  01F6               	clrf	___awmod@sign
  3873  0EE5  0AF6               	incf	___awmod@sign,f
  3874  0EE6                     l2569:
  3875  0EE6  1FA1               	btfss	___awmod@divisor+1,7
  3876  0EE7  2EE9               	goto	u2781
  3877  0EE8  2EEA               	goto	u2780
  3878  0EE9                     u2781:
  3879  0EE9  2EEF               	goto	l2573
  3880  0EEA                     u2780:
  3881  0EEA                     l2571:
  3882  0EEA  09A0               	comf	___awmod@divisor,f
  3883  0EEB  09A1               	comf	___awmod@divisor+1,f
  3884  0EEC  0AA0               	incf	___awmod@divisor,f
  3885  0EED  1903               	skipnz
  3886  0EEE  0AA1               	incf	___awmod@divisor+1,f
  3887  0EEF                     l2573:
  3888  0EEF  0820               	movf	___awmod@divisor,w
  3889  0EF0  0421               	iorwf	___awmod@divisor+1,w
  3890  0EF1  1903               	btfsc	3,2
  3891  0EF2  2EF4               	goto	u2791
  3892  0EF3  2EF5               	goto	u2790
  3893  0EF4                     u2791:
  3894  0EF4  2F24               	goto	l2591
  3895  0EF5                     u2790:
  3896  0EF5                     l2575:
  3897  0EF5  01F5               	clrf	___awmod@counter
  3898  0EF6  0AF5               	incf	___awmod@counter,f
  3899  0EF7  2F03               	goto	l2581
  3900  0EF8                     l2577:
  3901  0EF8  3001               	movlw	1
  3902  0EF9                     u2805:
  3903  0EF9  1003               	clrc
  3904  0EFA  0DA0               	rlf	___awmod@divisor,f
  3905  0EFB  0DA1               	rlf	___awmod@divisor+1,f
  3906  0EFC  3EFF               	addlw	-1
  3907  0EFD  1D03               	skipz
  3908  0EFE  2EF9               	goto	u2805
  3909  0EFF                     l2579:
  3910  0EFF  3001               	movlw	1
  3911  0F00  00F4               	movwf	??___awmod
  3912  0F01  0874               	movf	??___awmod,w
  3913  0F02  07F5               	addwf	___awmod@counter,f
  3914  0F03                     l2581:
  3915  0F03  1FA1               	btfss	___awmod@divisor+1,7
  3916  0F04  2F06               	goto	u2811
  3917  0F05  2F07               	goto	u2810
  3918  0F06                     u2811:
  3919  0F06  2EF8               	goto	l2577
  3920  0F07                     u2810:
  3921  0F07                     l2583:
  3922  0F07  0821               	movf	___awmod@divisor+1,w
  3923  0F08  0223               	subwf	___awmod@dividend+1,w
  3924  0F09  1D03               	skipz
  3925  0F0A  2F0D               	goto	u2825
  3926  0F0B  0820               	movf	___awmod@divisor,w
  3927  0F0C  0222               	subwf	___awmod@dividend,w
  3928  0F0D                     u2825:
  3929  0F0D  1C03               	skipc
  3930  0F0E  2F10               	goto	u2821
  3931  0F0F  2F11               	goto	u2820
  3932  0F10                     u2821:
  3933  0F10  2F17               	goto	l2587
  3934  0F11                     u2820:
  3935  0F11                     l2585:
  3936  0F11  0820               	movf	___awmod@divisor,w
  3937  0F12  02A2               	subwf	___awmod@dividend,f
  3938  0F13  0821               	movf	___awmod@divisor+1,w
  3939  0F14  1C03               	skipc
  3940  0F15  03A3               	decf	___awmod@dividend+1,f
  3941  0F16  02A3               	subwf	___awmod@dividend+1,f
  3942  0F17                     l2587:
  3943  0F17  3001               	movlw	1
  3944  0F18                     u2835:
  3945  0F18  1003               	clrc
  3946  0F19  0CA1               	rrf	___awmod@divisor+1,f
  3947  0F1A  0CA0               	rrf	___awmod@divisor,f
  3948  0F1B  3EFF               	addlw	-1
  3949  0F1C  1D03               	skipz
  3950  0F1D  2F18               	goto	u2835
  3951  0F1E                     l2589:
  3952  0F1E  3001               	movlw	1
  3953  0F1F  02F5               	subwf	___awmod@counter,f
  3954  0F20  1D03               	btfss	3,2
  3955  0F21  2F23               	goto	u2841
  3956  0F22  2F24               	goto	u2840
  3957  0F23                     u2841:
  3958  0F23  2F07               	goto	l2583
  3959  0F24                     u2840:
  3960  0F24                     l2591:
  3961  0F24  0876               	movf	___awmod@sign,w
  3962  0F25  1903               	btfsc	3,2
  3963  0F26  2F28               	goto	u2851
  3964  0F27  2F29               	goto	u2850
  3965  0F28                     u2851:
  3966  0F28  2F2E               	goto	l2595
  3967  0F29                     u2850:
  3968  0F29                     l2593:
  3969  0F29  09A2               	comf	___awmod@dividend,f
  3970  0F2A  09A3               	comf	___awmod@dividend+1,f
  3971  0F2B  0AA2               	incf	___awmod@dividend,f
  3972  0F2C  1903               	skipnz
  3973  0F2D  0AA3               	incf	___awmod@dividend+1,f
  3974  0F2E                     l2595:
  3975  0F2E  0823               	movf	___awmod@dividend+1,w
  3976  0F2F  00A1               	movwf	?___awmod+1
  3977  0F30  0822               	movf	___awmod@dividend,w
  3978  0F31  00A0               	movwf	?___awmod
  3979  0F32                     l481:
  3980  0F32  0008               	return
  3981  0F33                     __end_of___awmod:
  3982                           
  3983                           	psect	text9
  3984  0F97                     __ptext9:	
  3985 ;; *************** function ___awdiv *****************
  3986 ;; Defined at:
  3987 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  divisor         2    4[BANK0 ] int 
  3990 ;;  dividend        2    6[BANK0 ] int 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  quotient        2   11[BANK0 ] int 
  3993 ;;  sign            1   10[BANK0 ] unsigned char 
  3994 ;;  counter         1    9[BANK0 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2    4[BANK0 ] int 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4004 ;;      Params:         0       4       0       0       0
  4005 ;;      Locals:         0       4       0       0       0
  4006 ;;      Temps:          0       1       0       0       0
  4007 ;;      Totals:         0       9       0       0       0
  4008 ;;Total ram usage:        9 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    2
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function ___awdiv
  4020  0F97                     ___awdiv:
  4021  0F97                     l2517:	
  4022                           ;incstack = 0
  4023                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4024                           
  4025  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0F99  01AA               	clrf	___awdiv@sign
  4028  0F9A                     l2519:
  4029  0F9A  1FA5               	btfss	___awdiv@divisor+1,7
  4030  0F9B  2F9D               	goto	u2671
  4031  0F9C  2F9E               	goto	u2670
  4032  0F9D                     u2671:
  4033  0F9D  2FA5               	goto	l2525
  4034  0F9E                     u2670:
  4035  0F9E                     l2521:
  4036  0F9E  09A4               	comf	___awdiv@divisor,f
  4037  0F9F  09A5               	comf	___awdiv@divisor+1,f
  4038  0FA0  0AA4               	incf	___awdiv@divisor,f
  4039  0FA1  1903               	skipnz
  4040  0FA2  0AA5               	incf	___awdiv@divisor+1,f
  4041  0FA3                     l2523:
  4042  0FA3  01AA               	clrf	___awdiv@sign
  4043  0FA4  0AAA               	incf	___awdiv@sign,f
  4044  0FA5                     l2525:
  4045  0FA5  1FA7               	btfss	___awdiv@dividend+1,7
  4046  0FA6  2FA8               	goto	u2681
  4047  0FA7  2FA9               	goto	u2680
  4048  0FA8                     u2681:
  4049  0FA8  2FB2               	goto	l2531
  4050  0FA9                     u2680:
  4051  0FA9                     l2527:
  4052  0FA9  09A6               	comf	___awdiv@dividend,f
  4053  0FAA  09A7               	comf	___awdiv@dividend+1,f
  4054  0FAB  0AA6               	incf	___awdiv@dividend,f
  4055  0FAC  1903               	skipnz
  4056  0FAD  0AA7               	incf	___awdiv@dividend+1,f
  4057  0FAE                     l2529:
  4058  0FAE  3001               	movlw	1
  4059  0FAF  00A8               	movwf	??___awdiv
  4060  0FB0  0828               	movf	??___awdiv,w
  4061  0FB1  06AA               	xorwf	___awdiv@sign,f
  4062  0FB2                     l2531:
  4063  0FB2  01AB               	clrf	___awdiv@quotient
  4064  0FB3  01AC               	clrf	___awdiv@quotient+1
  4065  0FB4                     l2533:
  4066  0FB4  0824               	movf	___awdiv@divisor,w
  4067  0FB5  0425               	iorwf	___awdiv@divisor+1,w
  4068  0FB6  1903               	btfsc	3,2
  4069  0FB7  2FB9               	goto	u2691
  4070  0FB8  2FBA               	goto	u2690
  4071  0FB9                     u2691:
  4072  0FB9  2FF1               	goto	l2553
  4073  0FBA                     u2690:
  4074  0FBA                     l2535:
  4075  0FBA  01A9               	clrf	___awdiv@counter
  4076  0FBB  0AA9               	incf	___awdiv@counter,f
  4077  0FBC  2FC8               	goto	l2541
  4078  0FBD                     l2537:
  4079  0FBD  3001               	movlw	1
  4080  0FBE                     u2705:
  4081  0FBE  1003               	clrc
  4082  0FBF  0DA4               	rlf	___awdiv@divisor,f
  4083  0FC0  0DA5               	rlf	___awdiv@divisor+1,f
  4084  0FC1  3EFF               	addlw	-1
  4085  0FC2  1D03               	skipz
  4086  0FC3  2FBE               	goto	u2705
  4087  0FC4                     l2539:
  4088  0FC4  3001               	movlw	1
  4089  0FC5  00A8               	movwf	??___awdiv
  4090  0FC6  0828               	movf	??___awdiv,w
  4091  0FC7  07A9               	addwf	___awdiv@counter,f
  4092  0FC8                     l2541:
  4093  0FC8  1FA5               	btfss	___awdiv@divisor+1,7
  4094  0FC9  2FCB               	goto	u2711
  4095  0FCA  2FCC               	goto	u2710
  4096  0FCB                     u2711:
  4097  0FCB  2FBD               	goto	l2537
  4098  0FCC                     u2710:
  4099  0FCC                     l2543:
  4100  0FCC  3001               	movlw	1
  4101  0FCD                     u2725:
  4102  0FCD  1003               	clrc
  4103  0FCE  0DAB               	rlf	___awdiv@quotient,f
  4104  0FCF  0DAC               	rlf	___awdiv@quotient+1,f
  4105  0FD0  3EFF               	addlw	-1
  4106  0FD1  1D03               	skipz
  4107  0FD2  2FCD               	goto	u2725
  4108  0FD3  0825               	movf	___awdiv@divisor+1,w
  4109  0FD4  0227               	subwf	___awdiv@dividend+1,w
  4110  0FD5  1D03               	skipz
  4111  0FD6  2FD9               	goto	u2735
  4112  0FD7  0824               	movf	___awdiv@divisor,w
  4113  0FD8  0226               	subwf	___awdiv@dividend,w
  4114  0FD9                     u2735:
  4115  0FD9  1C03               	skipc
  4116  0FDA  2FDC               	goto	u2731
  4117  0FDB  2FDD               	goto	u2730
  4118  0FDC                     u2731:
  4119  0FDC  2FE4               	goto	l2549
  4120  0FDD                     u2730:
  4121  0FDD                     l2545:
  4122  0FDD  0824               	movf	___awdiv@divisor,w
  4123  0FDE  02A6               	subwf	___awdiv@dividend,f
  4124  0FDF  0825               	movf	___awdiv@divisor+1,w
  4125  0FE0  1C03               	skipc
  4126  0FE1  03A7               	decf	___awdiv@dividend+1,f
  4127  0FE2  02A7               	subwf	___awdiv@dividend+1,f
  4128  0FE3                     l2547:
  4129  0FE3  142B               	bsf	___awdiv@quotient,0
  4130  0FE4                     l2549:
  4131  0FE4  3001               	movlw	1
  4132  0FE5                     u2745:
  4133  0FE5  1003               	clrc
  4134  0FE6  0CA5               	rrf	___awdiv@divisor+1,f
  4135  0FE7  0CA4               	rrf	___awdiv@divisor,f
  4136  0FE8  3EFF               	addlw	-1
  4137  0FE9  1D03               	skipz
  4138  0FEA  2FE5               	goto	u2745
  4139  0FEB                     l2551:
  4140  0FEB  3001               	movlw	1
  4141  0FEC  02A9               	subwf	___awdiv@counter,f
  4142  0FED  1D03               	btfss	3,2
  4143  0FEE  2FF0               	goto	u2751
  4144  0FEF  2FF1               	goto	u2750
  4145  0FF0                     u2751:
  4146  0FF0  2FCC               	goto	l2543
  4147  0FF1                     u2750:
  4148  0FF1                     l2553:
  4149  0FF1  082A               	movf	___awdiv@sign,w
  4150  0FF2  1903               	btfsc	3,2
  4151  0FF3  2FF5               	goto	u2761
  4152  0FF4  2FF6               	goto	u2760
  4153  0FF5                     u2761:
  4154  0FF5  2FFB               	goto	l2557
  4155  0FF6                     u2760:
  4156  0FF6                     l2555:
  4157  0FF6  09AB               	comf	___awdiv@quotient,f
  4158  0FF7  09AC               	comf	___awdiv@quotient+1,f
  4159  0FF8  0AAB               	incf	___awdiv@quotient,f
  4160  0FF9  1903               	skipnz
  4161  0FFA  0AAC               	incf	___awdiv@quotient+1,f
  4162  0FFB                     l2557:
  4163  0FFB  082C               	movf	___awdiv@quotient+1,w
  4164  0FFC  00A5               	movwf	?___awdiv+1
  4165  0FFD  082B               	movf	___awdiv@quotient,w
  4166  0FFE  00A4               	movwf	?___awdiv
  4167  0FFF                     l468:
  4168  0FFF  0008               	return
  4169  1000                     __end_of___awdiv:
  4170                           
  4171                           	psect	text10
  4172  0E07                     __ptext10:	
  4173 ;; *************** function _USART_CONFIG *****************
  4174 ;; Defined at:
  4175 ;;		line 11 in file "USART.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  frec            2    0[BANK0 ] int 
  4178 ;;  tr              2    2[BANK0 ] int 
  4179 ;;  rc              2    4[BANK0 ] int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         0       6       0       0       0
  4192 ;;      Locals:         0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0
  4194 ;;      Totals:         0       6       0       0       0
  4195 ;;Total ram usage:        6 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    2
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           
  4206                           ;psect for function _USART_CONFIG
  4207  0E07                     _USART_CONFIG:
  4208  0E07                     l2379:	
  4209                           ;incstack = 0
  4210                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  4211                           
  4212                           
  4213                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  4214  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0E09  1798               	bsf	24,7	;volatile
  4217                           
  4218                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  4219  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  4221  0E0C  1218               	bcf	24,4	;volatile
  4222                           
  4223                           ;USART.c: 14:     TXSTAbits.TX9 = 0;
  4224  0E0D  1318               	bcf	24,6	;volatile
  4225                           
  4226                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  4227  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  4228  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0E10  1318               	bcf	24,6	;volatile
  4230                           
  4231                           ;USART.c: 16:     switch(frec){
  4232  0E11  2E24               	goto	l2395
  4233  0E12                     l2381:
  4234                           
  4235                           ;USART.c: 18:             SPBRG = 25;
  4236  0E12  3019               	movlw	25
  4237  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  4238  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  4239  0E15  0099               	movwf	25	;volatile
  4240  0E16                     l2383:
  4241                           
  4242                           ;USART.c: 19:             TXSTAbits.BRGH = 1;
  4243  0E16  1518               	bsf	24,2	;volatile
  4244  0E17                     l2385:
  4245                           
  4246                           ;USART.c: 20:             BAUDCTLbits.BRG16 = 0;
  4247  0E17  1683               	bsf	3,5	;RP0=1, select bank3
  4248  0E18  1703               	bsf	3,6	;RP1=1, select bank3
  4249  0E19  1187               	bcf	7,3	;volatile
  4250                           
  4251                           ;USART.c: 21:             break;
  4252  0E1A  2E31               	goto	l2397
  4253  0E1B                     l2387:
  4254                           
  4255                           ;USART.c: 23:             SPBRG = 12;
  4256  0E1B  300C               	movlw	12
  4257  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  4258  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  4259  0E1E  0099               	movwf	25	;volatile
  4260  0E1F                     l2389:
  4261                           
  4262                           ;USART.c: 24:             TXSTAbits.BRGH = 0;
  4263  0E1F  1118               	bcf	24,2	;volatile
  4264  0E20                     l2391:
  4265                           
  4266                           ;USART.c: 25:             BAUDCTLbits.BRG16 = 0;
  4267  0E20  1683               	bsf	3,5	;RP0=1, select bank3
  4268  0E21  1703               	bsf	3,6	;RP1=1, select bank3
  4269  0E22  1187               	bcf	7,3	;volatile
  4270                           
  4271                           ;USART.c: 26:             break;
  4272  0E23  2E31               	goto	l2397
  4273  0E24                     l2395:
  4274                           
  4275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4276                           ; Switch size 1, requested type "simple"
  4277                           ; Number of cases is 1, Range of values is 0 to 0
  4278                           ; switch strategies available:
  4279                           ; Name         Instructions Cycles
  4280                           ; simple_byte            4     3 (average)
  4281                           ; direct_byte           11     8 (fixed)
  4282                           ; jumptable            260     6 (fixed)
  4283                           ;	Chosen strategy is simple_byte
  4284  0E24  0821               	movf	USART_CONFIG@frec+1,w
  4285  0E25  3A00               	xorlw	0	; case 0
  4286  0E26  1903               	skipnz
  4287  0E27  2E29               	goto	l2957
  4288  0E28  2E31               	goto	l2397
  4289  0E29                     l2957:
  4290                           
  4291                           ; Switch size 1, requested type "simple"
  4292                           ; Number of cases is 2, Range of values is 4 to 8
  4293                           ; switch strategies available:
  4294                           ; Name         Instructions Cycles
  4295                           ; simple_byte            7     4 (average)
  4296                           ; direct_byte           26    11 (fixed)
  4297                           ; jumptable            263     9 (fixed)
  4298                           ;	Chosen strategy is simple_byte
  4299  0E29  0820               	movf	USART_CONFIG@frec,w
  4300  0E2A  3A04               	xorlw	4	; case 4
  4301  0E2B  1903               	skipnz
  4302  0E2C  2E12               	goto	l2381
  4303  0E2D  3A0C               	xorlw	12	; case 8
  4304  0E2E  1903               	skipnz
  4305  0E2F  2E1B               	goto	l2387
  4306  0E30  2E31               	goto	l2397
  4307  0E31                     l2397:
  4308                           
  4309                           ;USART.c: 28:     if(tr==1){
  4310  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0E33  0322               	decf	USART_CONFIG@tr,w
  4313  0E34  0423               	iorwf	USART_CONFIG@tr+1,w
  4314  0E35  1D03               	btfss	3,2
  4315  0E36  2E38               	goto	u2531
  4316  0E37  2E39               	goto	u2530
  4317  0E38                     u2531:
  4318  0E38  2E3D               	goto	l159
  4319  0E39                     u2530:
  4320  0E39                     l2399:
  4321                           
  4322                           ;USART.c: 29:         TXEN = 1;
  4323  0E39  1683               	bsf	3,5	;RP0=1, select bank1
  4324  0E3A  1303               	bcf	3,6	;RP1=0, select bank1
  4325  0E3B  1698               	bsf	24,5	;volatile
  4326                           
  4327                           ;USART.c: 30:     }
  4328  0E3C  2E40               	goto	l2401
  4329  0E3D                     l159:	
  4330                           ;USART.c: 31:     else{
  4331                           
  4332                           
  4333                           ;USART.c: 32:         TXEN = 0;
  4334  0E3D  1683               	bsf	3,5	;RP0=1, select bank1
  4335  0E3E  1303               	bcf	3,6	;RP1=0, select bank1
  4336  0E3F  1298               	bcf	24,5	;volatile
  4337  0E40                     l2401:
  4338                           
  4339                           ;USART.c: 34:     if(rc == 1){
  4340  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0E42  0324               	decf	USART_CONFIG@rc,w
  4343  0E43  0425               	iorwf	USART_CONFIG@rc+1,w
  4344  0E44  1D03               	btfss	3,2
  4345  0E45  2E47               	goto	u2541
  4346  0E46  2E48               	goto	u2540
  4347  0E47                     u2541:
  4348  0E47  2E4A               	goto	l161
  4349  0E48                     u2540:
  4350  0E48                     l2403:
  4351                           
  4352                           ;USART.c: 35:         RCSTAbits.CREN = 1;
  4353  0E48  1618               	bsf	24,4	;volatile
  4354                           
  4355                           ;USART.c: 36:     }
  4356  0E49  2E4B               	goto	l163
  4357  0E4A                     l161:	
  4358                           ;USART.c: 37:     else{
  4359                           
  4360                           
  4361                           ;USART.c: 38:         RCSTAbits.CREN = 0;
  4362  0E4A  1218               	bcf	24,4	;volatile
  4363  0E4B                     l163:
  4364  0E4B  0008               	return
  4365  0E4C                     __end_of_USART_CONFIG:
  4366                           
  4367                           	psect	text11
  4368  0E4C                     __ptext11:	
  4369 ;; *************** function _Lcd_Write_String *****************
  4370 ;; Defined at:
  4371 ;;		line 72 in file "LCDh.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  a               2    0[BANK0 ] PTR unsigned char 
  4374 ;;		 -> buffer1(20), buffer(20), STR_11(14), 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  i               2    5[BANK0 ] int 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       2       0       0       0
  4387 ;;      Locals:         0       2       0       0       0
  4388 ;;      Temps:          0       3       0       0       0
  4389 ;;      Totals:         0       7       0       0       0
  4390 ;;Total ram usage:        7 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    3
  4393 ;; This function calls:
  4394 ;;		_Lcd_Write_Char
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function _Lcd_Write_String
  4402  0E4C                     _Lcd_Write_String:
  4403  0E4C                     l2447:	
  4404                           ;incstack = 0
  4405                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4406                           
  4407                           
  4408                           ;LCDh.c: 73:     int i;;LCDh.c: 74:     for (i = 0; a[i] != '\0'; i++)
  4409  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  4411  0E4E  01A5               	clrf	Lcd_Write_String@i
  4412  0E4F  01A6               	clrf	Lcd_Write_String@i+1
  4413  0E50  2E75               	goto	l2453
  4414  0E51                     l2449:
  4415                           
  4416                           ;LCDh.c: 75:         Lcd_Write_Char(a[i]);
  4417  0E51  0825               	movf	Lcd_Write_String@i,w
  4418  0E52  0720               	addwf	Lcd_Write_String@a,w
  4419  0E53  00A3               	movwf	??_Lcd_Write_String+1
  4420  0E54  0821               	movf	Lcd_Write_String@a+1,w
  4421  0E55  00A2               	movwf	??_Lcd_Write_String
  4422  0E56  1803               	skipnc
  4423  0E57  0AA2               	incf	??_Lcd_Write_String,f
  4424  0E58  1FA5               	btfss	Lcd_Write_String@i,7
  4425  0E59  2E5B               	goto	u2570
  4426  0E5A  03A2               	decf	??_Lcd_Write_String,f
  4427  0E5B                     u2570:
  4428  0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0E5D  0822               	movf	??_Lcd_Write_String,w
  4431  0E5E  00A4               	movwf	??_Lcd_Write_String+2
  4432  0E5F  0824               	movf	??_Lcd_Write_String+2,w
  4433  0E60  00FF               	movwf	btemp+1
  4434  0E61  0823               	movf	??_Lcd_Write_String+1,w
  4435  0E62  0084               	movwf	4
  4436  0E63  120A  158A  2000  120A  158A  	fcall	stringtab
  4437  0E68  120A  158A  2502  120A  158A  	fcall	_Lcd_Write_Char
  4438  0E6D                     l2451:
  4439  0E6D  3001               	movlw	1
  4440  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0E70  07A5               	addwf	Lcd_Write_String@i,f
  4443  0E71  1803               	skipnc
  4444  0E72  0AA6               	incf	Lcd_Write_String@i+1,f
  4445  0E73  3000               	movlw	0
  4446  0E74  07A6               	addwf	Lcd_Write_String@i+1,f
  4447  0E75                     l2453:
  4448  0E75  0825               	movf	Lcd_Write_String@i,w
  4449  0E76  0720               	addwf	Lcd_Write_String@a,w
  4450  0E77  00A3               	movwf	??_Lcd_Write_String+1
  4451  0E78  0821               	movf	Lcd_Write_String@a+1,w
  4452  0E79  00A2               	movwf	??_Lcd_Write_String
  4453  0E7A  1803               	skipnc
  4454  0E7B  0AA2               	incf	??_Lcd_Write_String,f
  4455  0E7C  1FA5               	btfss	Lcd_Write_String@i,7
  4456  0E7D  2E7F               	goto	u2580
  4457  0E7E  03A2               	decf	??_Lcd_Write_String,f
  4458  0E7F                     u2580:
  4459  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0E81  0822               	movf	??_Lcd_Write_String,w
  4462  0E82  00A4               	movwf	??_Lcd_Write_String+2
  4463  0E83  0824               	movf	??_Lcd_Write_String+2,w
  4464  0E84  00FF               	movwf	btemp+1
  4465  0E85  0823               	movf	??_Lcd_Write_String+1,w
  4466  0E86  0084               	movwf	4
  4467  0E87  120A  158A  2000  120A  158A  	fcall	stringtab
  4468  0E8C  3A00               	xorlw	0
  4469  0E8D  1D03               	skipz
  4470  0E8E  2E90               	goto	u2591
  4471  0E8F  2E91               	goto	u2590
  4472  0E90                     u2591:
  4473  0E90  2E51               	goto	l2449
  4474  0E91                     u2590:
  4475  0E91                     l195:
  4476  0E91  0008               	return
  4477  0E92                     __end_of_Lcd_Write_String:
  4478                           
  4479                           	psect	text12
  4480  0D02                     __ptext12:	
  4481 ;; *************** function _Lcd_Write_Char *****************
  4482 ;; Defined at:
  4483 ;;		line 58 in file "LCDh.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  a               1    wreg     unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  a               1    5[COMMON] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         0       0       0       0       0
  4498 ;;      Locals:         1       0       0       0       0
  4499 ;;      Temps:          1       0       0       0       0
  4500 ;;      Totals:         2       0       0       0       0
  4501 ;;Total ram usage:        2 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    2
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;;		_Lcd_Write_String
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           
  4513                           ;psect for function _Lcd_Write_Char
  4514  0D02                     _Lcd_Write_Char:
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in _Lcd_Write_Char: [wreg]
  4518                           ;Lcd_Write_Char@a stored from wreg
  4519  0D02  00F5               	movwf	Lcd_Write_Char@a
  4520  0D03                     l2275:
  4521                           
  4522                           ;LCDh.c: 61:     RC4 = 1;
  4523  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0D05  1607               	bsf	7,4	;volatile
  4526  0D06                     l2277:
  4527                           
  4528                           ;LCDh.c: 62:     PORTD = a;
  4529  0D06  0875               	movf	Lcd_Write_Char@a,w
  4530  0D07  0088               	movwf	8	;volatile
  4531  0D08                     l2279:
  4532                           
  4533                           ;LCDh.c: 63:     RC5 = 1;
  4534  0D08  1687               	bsf	7,5	;volatile
  4535                           
  4536                           ;LCDh.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4537  0D09  300D               	movlw	13
  4538  0D0A  00F4               	movwf	??_Lcd_Write_Char
  4539  0D0B                     u3477:
  4540  0D0B  0BF4               	decfsz	??_Lcd_Write_Char,f
  4541  0D0C  2D0B               	goto	u3477
  4542  0D0D                     l2281:
  4543                           
  4544                           ;LCDh.c: 69:     RC5 = 0;
  4545  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  4546  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  4547  0D0F  1287               	bcf	7,5	;volatile
  4548  0D10                     l189:
  4549  0D10  0008               	return
  4550  0D11                     __end_of_Lcd_Write_Char:
  4551                           
  4552                           	psect	text13
  4553  0D43                     __ptext13:	
  4554 ;; *************** function _Lcd_Set_Cursor *****************
  4555 ;; Defined at:
  4556 ;;		line 29 in file "LCDh.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  a               1    wreg     unsigned char 
  4559 ;;  b               1    0[BANK0 ] unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  a               1    1[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       1       0       0       0
  4572 ;;      Locals:         0       1       0       0       0
  4573 ;;      Temps:          0       0       0       0       0
  4574 ;;      Totals:         0       2       0       0       0
  4575 ;;Total ram usage:        2 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    3
  4578 ;; This function calls:
  4579 ;;		_Lcd_Cmd
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _Lcd_Set_Cursor
  4587  0D43                     _Lcd_Set_Cursor:
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4591                           ;Lcd_Set_Cursor@a stored from wreg
  4592  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0D45  00A1               	movwf	Lcd_Set_Cursor@a
  4595  0D46                     l2439:
  4596                           
  4597                           ;LCDh.c: 30:     if (a == 1){
  4598  0D46  0321               	decf	Lcd_Set_Cursor@a,w
  4599  0D47  1D03               	btfss	3,2
  4600  0D48  2D4A               	goto	u2551
  4601  0D49  2D4B               	goto	u2550
  4602  0D4A                     u2551:
  4603  0D4A  2D54               	goto	l2443
  4604  0D4B                     u2550:
  4605  0D4B                     l2441:
  4606                           
  4607                           ;LCDh.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  4608  0D4B  0820               	movf	Lcd_Set_Cursor@b,w
  4609  0D4C  390F               	andlw	15
  4610  0D4D  3880               	iorlw	128
  4611  0D4E  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4612                           
  4613                           ;LCDh.c: 32:     }
  4614  0D53  2D62               	goto	l183
  4615  0D54                     l2443:
  4616  0D54  3002               	movlw	2
  4617  0D55  0621               	xorwf	Lcd_Set_Cursor@a,w
  4618  0D56  1D03               	btfss	3,2
  4619  0D57  2D59               	goto	u2561
  4620  0D58  2D5A               	goto	u2560
  4621  0D59                     u2561:
  4622  0D59  2D62               	goto	l183
  4623  0D5A                     u2560:
  4624  0D5A                     l2445:
  4625                           
  4626                           ;LCDh.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  4627  0D5A  0820               	movf	Lcd_Set_Cursor@b,w
  4628  0D5B  390F               	andlw	15
  4629  0D5C  38C0               	iorlw	192
  4630  0D5D  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4631  0D62                     l183:
  4632  0D62  0008               	return
  4633  0D63                     __end_of_Lcd_Set_Cursor:
  4634                           
  4635                           	psect	text14
  4636  0F33                     __ptext14:	
  4637 ;; *************** function _Lcd_Init *****************
  4638 ;; Defined at:
  4639 ;;		line 39 in file "LCDh.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, pclath, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         0       0       0       0       0
  4654 ;;      Locals:         0       0       0       0       0
  4655 ;;      Temps:          0       2       0       0       0
  4656 ;;      Totals:         0       2       0       0       0
  4657 ;;Total ram usage:        2 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    3
  4660 ;; This function calls:
  4661 ;;		_Lcd_Cmd
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _Lcd_Init
  4669  0F33                     _Lcd_Init:
  4670  0F33                     l2409:	
  4671                           ;incstack = 0
  4672                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4673                           
  4674                           
  4675                           ;LCDh.c: 40:     PORTD = (0x00);
  4676  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0F35  0188               	clrf	8	;volatile
  4679  0F36                     l2411:
  4680                           
  4681                           ;LCDh.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4682  0F36  301A               	movlw	26
  4683  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  4684  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  4685  0F39  00A1               	movwf	??_Lcd_Init+1
  4686  0F3A  30F7               	movlw	247
  4687  0F3B  00A0               	movwf	??_Lcd_Init
  4688  0F3C                     u3487:
  4689  0F3C  0BA0               	decfsz	??_Lcd_Init,f
  4690  0F3D  2F3C               	goto	u3487
  4691  0F3E  0BA1               	decfsz	??_Lcd_Init+1,f
  4692  0F3F  2F3C               	goto	u3487
  4693  0F40  2F41               	nop2
  4694  0F41                     l2413:
  4695                           
  4696                           ;LCDh.c: 42:     Lcd_Cmd(0x30);
  4697  0F41  3030               	movlw	48
  4698  0F42  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4699  0F47                     l2415:
  4700                           
  4701                           ;LCDh.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4702  0F47  3007               	movlw	7
  4703  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  4704  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  4705  0F4A  00A1               	movwf	??_Lcd_Init+1
  4706  0F4B  307C               	movlw	124
  4707  0F4C  00A0               	movwf	??_Lcd_Init
  4708  0F4D                     u3497:
  4709  0F4D  0BA0               	decfsz	??_Lcd_Init,f
  4710  0F4E  2F4D               	goto	u3497
  4711  0F4F  0BA1               	decfsz	??_Lcd_Init+1,f
  4712  0F50  2F4D               	goto	u3497
  4713  0F51  0000               	nop
  4714  0F52                     l2417:
  4715                           
  4716                           ;LCDh.c: 44:     Lcd_Cmd(0x30);
  4717  0F52  3030               	movlw	48
  4718  0F53  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4719  0F58                     l2419:
  4720                           
  4721                           ;LCDh.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4722  0F58  300F               	movlw	15
  4723  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  4724  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  4725  0F5B  00A1               	movwf	??_Lcd_Init+1
  4726  0F5C  3047               	movlw	71
  4727  0F5D  00A0               	movwf	??_Lcd_Init
  4728  0F5E                     u3507:
  4729  0F5E  0BA0               	decfsz	??_Lcd_Init,f
  4730  0F5F  2F5E               	goto	u3507
  4731  0F60  0BA1               	decfsz	??_Lcd_Init+1,f
  4732  0F61  2F5E               	goto	u3507
  4733  0F62                     l2421:
  4734                           
  4735                           ;LCDh.c: 46:     Lcd_Cmd(0x30);
  4736  0F62  3030               	movlw	48
  4737  0F63  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4738  0F68                     l2423:
  4739                           
  4740                           ;LCDh.c: 48:     Lcd_Cmd(0x38);
  4741  0F68  3038               	movlw	56
  4742  0F69  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4743  0F6E                     l2425:
  4744                           
  4745                           ;LCDh.c: 49:     Lcd_Cmd(0x10);
  4746  0F6E  3010               	movlw	16
  4747  0F6F  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4748  0F74                     l2427:
  4749                           
  4750                           ;LCDh.c: 50:     Lcd_Cmd(0x01);
  4751  0F74  3001               	movlw	1
  4752  0F75  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4753  0F7A                     l2429:
  4754                           
  4755                           ;LCDh.c: 51:     Lcd_Cmd(0x06);
  4756  0F7A  3006               	movlw	6
  4757  0F7B  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4758  0F80                     l2431:
  4759                           
  4760                           ;LCDh.c: 52:     Lcd_Cmd(0x10);
  4761  0F80  3010               	movlw	16
  4762  0F81  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4763  0F86                     l2433:
  4764                           
  4765                           ;LCDh.c: 53:     Lcd_Cmd(0x0C);
  4766  0F86  300C               	movlw	12
  4767  0F87  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4768  0F8C                     l2435:
  4769                           
  4770                           ;LCDh.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4771  0F8C  3082               	movlw	130
  4772  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0F8F  00A1               	movwf	??_Lcd_Init+1
  4775  0F90  30DD               	movlw	221
  4776  0F91  00A0               	movwf	??_Lcd_Init
  4777  0F92                     u3517:
  4778  0F92  0BA0               	decfsz	??_Lcd_Init,f
  4779  0F93  2F92               	goto	u3517
  4780  0F94  0BA1               	decfsz	??_Lcd_Init+1,f
  4781  0F95  2F92               	goto	u3517
  4782  0F96                     l186:
  4783  0F96  0008               	return
  4784  0F97                     __end_of_Lcd_Init:
  4785                           
  4786                           	psect	text15
  4787  0CF5                     __ptext15:	
  4788 ;; *************** function _Lcd_Clear *****************
  4789 ;; Defined at:
  4790 ;;		line 24 in file "LCDh.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0, pclath, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    3
  4811 ;; This function calls:
  4812 ;;		_Lcd_Cmd
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _Lcd_Clear
  4820  0CF5                     _Lcd_Clear:
  4821  0CF5                     l2437:	
  4822                           ;incstack = 0
  4823                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4824                           
  4825                           
  4826                           ;LCDh.c: 25:     Lcd_Cmd(0);
  4827  0CF5  3000               	movlw	0
  4828  0CF6  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4829                           
  4830                           ;LCDh.c: 26:     Lcd_Cmd(1);
  4831  0CFB  3001               	movlw	1
  4832  0CFC  120A  158A  2511  120A  158A  	fcall	_Lcd_Cmd
  4833  0D01                     l177:
  4834  0D01  0008               	return
  4835  0D02                     __end_of_Lcd_Clear:
  4836                           
  4837                           	psect	text16
  4838  0D11                     __ptext16:	
  4839 ;; *************** function _Lcd_Cmd *****************
  4840 ;; Defined at:
  4841 ;;		line 16 in file "LCDh.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  a               1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  a               1    6[COMMON] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4855 ;;      Params:         0       0       0       0       0
  4856 ;;      Locals:         1       0       0       0       0
  4857 ;;      Temps:          2       0       0       0       0
  4858 ;;      Totals:         3       0       0       0       0
  4859 ;;Total ram usage:        3 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    2
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_Lcd_Clear
  4866 ;;		_Lcd_Set_Cursor
  4867 ;;		_Lcd_Init
  4868 ;;		_Lcd_Shift_Right
  4869 ;;		_Lcd_Shift_Left
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _Lcd_Cmd
  4875  0D11                     _Lcd_Cmd:
  4876                           
  4877                           ;incstack = 0
  4878                           ; Regs used in _Lcd_Cmd: [wreg]
  4879                           ;Lcd_Cmd@a stored from wreg
  4880  0D11  00F6               	movwf	Lcd_Cmd@a
  4881  0D12                     l2283:
  4882                           
  4883                           ;LCDh.c: 17:     RC4 = 0;
  4884  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0D14  1207               	bcf	7,4	;volatile
  4887  0D15                     l2285:
  4888                           
  4889                           ;LCDh.c: 18:     PORTD = a;
  4890  0D15  0876               	movf	Lcd_Cmd@a,w
  4891  0D16  0088               	movwf	8	;volatile
  4892  0D17                     l2287:
  4893                           
  4894                           ;LCDh.c: 19:     RC5 = 1;
  4895  0D17  1687               	bsf	7,5	;volatile
  4896                           
  4897                           ;LCDh.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4898  0D18  3007               	movlw	7
  4899  0D19  00F5               	movwf	??_Lcd_Cmd+1
  4900  0D1A  307D               	movlw	125
  4901  0D1B  00F4               	movwf	??_Lcd_Cmd
  4902  0D1C                     u3527:
  4903  0D1C  0BF4               	decfsz	??_Lcd_Cmd,f
  4904  0D1D  2D1C               	goto	u3527
  4905  0D1E  0BF5               	decfsz	??_Lcd_Cmd+1,f
  4906  0D1F  2D1C               	goto	u3527
  4907  0D20                     l2289:
  4908                           
  4909                           ;LCDh.c: 21:     RC5 = 0;
  4910  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  4911  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  4912  0D22  1287               	bcf	7,5	;volatile
  4913  0D23                     l174:
  4914  0D23  0008               	return
  4915  0D24                     __end_of_Lcd_Cmd:
  4916                           
  4917                           	psect	text17
  4918  07D0                     __ptext17:	
  4919 ;; *************** function _ADC_CONFIG *****************
  4920 ;; Defined at:
  4921 ;;		line 14 in file "ADC.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  frec            2    4[COMMON] int 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4935 ;;      Params:         2       0       0       0       0
  4936 ;;      Locals:         0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0
  4938 ;;      Totals:         2       0       0       0       0
  4939 ;;Total ram usage:        2 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    2
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           
  4950                           ;psect for function _ADC_CONFIG
  4951  07D0                     _ADC_CONFIG:
  4952  07D0                     l2353:	
  4953                           ;incstack = 0
  4954                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  4955                           
  4956                           
  4957                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  4958  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  4959  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  4960  07D2  141F               	bsf	31,0	;volatile
  4961  07D3                     l2355:
  4962                           
  4963                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  4964  07D3  30C3               	movlw	-61
  4965  07D4  059F               	andwf	31,f	;volatile
  4966  07D5                     l2357:
  4967                           
  4968                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  4969  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  4970  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  4971  07D7  139F               	bcf	31,7	;volatile
  4972  07D8                     l2359:
  4973                           
  4974                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  4975  07D8  121F               	bcf	31,4	;volatile
  4976  07D9                     l2361:
  4977                           
  4978                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  4979  07D9  129F               	bcf	31,5	;volatile
  4980  07DA                     l2363:
  4981                           
  4982                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  4983  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4984  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4985  07DC  109F               	bcf	31,1	;volatile
  4986                           
  4987                           ;ADC.c: 23:     switch(frec){
  4988  07DD  2FEB               	goto	l2373
  4989  07DE                     l2365:
  4990                           
  4991                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  4992  07DE  303F               	movlw	-193
  4993  07DF  059F               	andwf	31,f	;volatile
  4994                           
  4995                           ;ADC.c: 26:             break;
  4996  07E0  2FFB               	goto	l136
  4997  07E1                     l2367:
  4998                           
  4999                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  5000  07E1  081F               	movf	31,w	;volatile
  5001  07E2  393F               	andlw	-193
  5002  07E3  3840               	iorlw	64
  5003  07E4  009F               	movwf	31	;volatile
  5004                           
  5005                           ;ADC.c: 29:             break;
  5006  07E5  2FFB               	goto	l136
  5007  07E6                     l2369:
  5008                           
  5009                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  5010  07E6  081F               	movf	31,w	;volatile
  5011  07E7  393F               	andlw	-193
  5012  07E8  3880               	iorlw	128
  5013  07E9  009F               	movwf	31	;volatile
  5014                           
  5015                           ;ADC.c: 32:             break;
  5016  07EA  2FFB               	goto	l136
  5017  07EB                     l2373:
  5018                           
  5019                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5020                           ; Switch size 1, requested type "simple"
  5021                           ; Number of cases is 1, Range of values is 0 to 0
  5022                           ; switch strategies available:
  5023                           ; Name         Instructions Cycles
  5024                           ; simple_byte            4     3 (average)
  5025                           ; direct_byte           11     8 (fixed)
  5026                           ; jumptable            260     6 (fixed)
  5027                           ;	Chosen strategy is simple_byte
  5028  07EB  0875               	movf	ADC_CONFIG@frec+1,w
  5029  07EC  3A00               	xorlw	0	; case 0
  5030  07ED  1903               	skipnz
  5031  07EE  2FF0               	goto	l2959
  5032  07EF  2FFB               	goto	l136
  5033  07F0                     l2959:
  5034                           
  5035                           ; Switch size 1, requested type "simple"
  5036                           ; Number of cases is 3, Range of values is 1 to 8
  5037                           ; switch strategies available:
  5038                           ; Name         Instructions Cycles
  5039                           ; simple_byte           10     6 (average)
  5040                           ; direct_byte           35    11 (fixed)
  5041                           ; jumptable            263     9 (fixed)
  5042                           ;	Chosen strategy is simple_byte
  5043  07F0  0874               	movf	ADC_CONFIG@frec,w
  5044  07F1  3A01               	xorlw	1	; case 1
  5045  07F2  1903               	skipnz
  5046  07F3  2FDE               	goto	l2365
  5047  07F4  3A05               	xorlw	5	; case 4
  5048  07F5  1903               	skipnz
  5049  07F6  2FE1               	goto	l2367
  5050  07F7  3A0C               	xorlw	12	; case 8
  5051  07F8  1903               	skipnz
  5052  07F9  2FE6               	goto	l2369
  5053  07FA  2FFB               	goto	l136
  5054  07FB                     l136:
  5055  07FB  0008               	return
  5056  07FC                     __end_of_ADC_CONFIG:
  5057                           
  5058                           	psect	text18
  5059  0DC8                     __ptext18:	
  5060 ;; *************** function _isr *****************
  5061 ;; Defined at:
  5062 ;;		line 87 in file "Lab2.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0, pclath, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5076 ;;      Params:         0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0
  5078 ;;      Temps:          3       0       0       0       0
  5079 ;;      Totals:         3       0       0       0       0
  5080 ;;Total ram usage:        3 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    1
  5083 ;; This function calls:
  5084 ;;		_ADC_IF
  5085 ;; This function is called by:
  5086 ;;		Interrupt level 1
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           
  5091                           ;psect for function _isr
  5092  0DC8                     _isr:
  5093  0DC8                     i1l2113:
  5094                           
  5095                           ;Lab2.c: 88:     if(ADIF){
  5096  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0DCA  1F0C               	btfss	12,6	;volatile
  5099  0DCB  2DCD               	goto	u232_21
  5100  0DCC  2DCE               	goto	u232_20
  5101  0DCD                     u232_21:
  5102  0DCD  2DE8               	goto	i1l2125
  5103  0DCE                     u232_20:
  5104  0DCE                     i1l2115:
  5105                           
  5106                           ;Lab2.c: 89:         if (ADCON0bits.CHS == 0){
  5107  0DCE  0C1F               	rrf	31,w	;volatile
  5108  0DCF  00F1               	movwf	??_isr
  5109  0DD0  0C71               	rrf	??_isr,w
  5110  0DD1  390F               	andlw	15
  5111  0DD2  3A00               	xorlw	0
  5112  0DD3  1D03               	skipz
  5113  0DD4  2DD6               	goto	u233_21
  5114  0DD5  2DD7               	goto	u233_20
  5115  0DD6                     u233_21:
  5116  0DD6  2DDC               	goto	i1l2119
  5117  0DD7                     u233_20:
  5118  0DD7                     i1l2117:
  5119                           
  5120                           ;Lab2.c: 90:             pot1 = ADRESH;
  5121  0DD7  081E               	movf	30,w	;volatile
  5122  0DD8  00F1               	movwf	??_isr
  5123  0DD9  0871               	movf	??_isr,w
  5124  0DDA  00DA               	movwf	_pot1
  5125                           
  5126                           ;Lab2.c: 91:         }
  5127  0DDB  2DE0               	goto	i1l2121
  5128  0DDC                     i1l2119:
  5129                           
  5130                           ;Lab2.c: 93:             pot2 = ADRESH;
  5131  0DDC  081E               	movf	30,w	;volatile
  5132  0DDD  00F1               	movwf	??_isr
  5133  0DDE  0871               	movf	??_isr,w
  5134  0DDF  00D9               	movwf	_pot2
  5135  0DE0                     i1l2121:
  5136                           
  5137                           ;Lab2.c: 95:         ADC_IF();
  5138  0DE0  120A  158A  2524  120A  158A  	fcall	_ADC_IF
  5139  0DE5                     i1l2123:
  5140                           
  5141                           ;Lab2.c: 96:         ADIF = 0;
  5142  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  5143  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  5144  0DE7  130C               	bcf	12,6	;volatile
  5145  0DE8                     i1l2125:
  5146                           
  5147                           ;Lab2.c: 98:     if (RCIF){
  5148  0DE8  1E8C               	btfss	12,5	;volatile
  5149  0DE9  2DEB               	goto	u234_21
  5150  0DEA  2DEC               	goto	u234_20
  5151  0DEB                     u234_21:
  5152  0DEB  2E00               	goto	i1l114
  5153  0DEC                     u234_20:
  5154  0DEC                     i1l2127:
  5155                           
  5156                           ;Lab2.c: 99:         if (RCREG == '+'){
  5157  0DEC  302B               	movlw	43
  5158  0DED  061A               	xorwf	26,w	;volatile
  5159  0DEE  1D03               	btfss	3,2
  5160  0DEF  2DF1               	goto	u235_21
  5161  0DF0  2DF2               	goto	u235_20
  5162  0DF1                     u235_21:
  5163  0DF1  2DF7               	goto	i1l2131
  5164  0DF2                     u235_20:
  5165  0DF2                     i1l2129:
  5166                           
  5167                           ;Lab2.c: 100:             con++;
  5168  0DF2  3001               	movlw	1
  5169  0DF3  00F1               	movwf	??_isr
  5170  0DF4  0871               	movf	??_isr,w
  5171  0DF5  07D8               	addwf	_con,f
  5172                           
  5173                           ;Lab2.c: 101:         }
  5174  0DF6  2DFF               	goto	i1l2135
  5175  0DF7                     i1l2131:
  5176  0DF7  302D               	movlw	45
  5177  0DF8  061A               	xorwf	26,w	;volatile
  5178  0DF9  1D03               	btfss	3,2
  5179  0DFA  2DFC               	goto	u236_21
  5180  0DFB  2DFD               	goto	u236_20
  5181  0DFC                     u236_21:
  5182  0DFC  2DFF               	goto	i1l2135
  5183  0DFD                     u236_20:
  5184  0DFD                     i1l2133:
  5185                           
  5186                           ;Lab2.c: 103:             con--;
  5187  0DFD  3001               	movlw	1
  5188  0DFE  02D8               	subwf	_con,f
  5189  0DFF                     i1l2135:
  5190                           
  5191                           ;Lab2.c: 106:         RCIF = 0;
  5192  0DFF  128C               	bcf	12,5	;volatile
  5193  0E00                     i1l114:
  5194  0E00  0873               	movf	??_isr+2,w
  5195  0E01  008A               	movwf	10
  5196  0E02  0E72               	swapf	??_isr+1,w
  5197  0E03  0083               	movwf	3
  5198  0E04  0EFE               	swapf	btemp,f
  5199  0E05  0E7E               	swapf	btemp,w
  5200  0E06  0009               	retfie
  5201  0E07                     __end_of_isr:
  5202                           
  5203                           	psect	intentry
  5204  0004                     __pintentry:	
  5205                           ;incstack = 0
  5206                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5207                           
  5208  0004                     interrupt_function:
  5209  007E                     saved_w	set	btemp
  5210  0004  00FE               	movwf	btemp
  5211  0005  0E03               	swapf	3,w
  5212  0006  00F2               	movwf	??_isr+1
  5213  0007  080A               	movf	10,w
  5214  0008  00F3               	movwf	??_isr+2
  5215  0009  120A  158A  2DC8   	ljmp	_isr
  5216                           
  5217                           	psect	text19
  5218  0D24                     __ptext19:	
  5219 ;; *************** function _ADC_IF *****************
  5220 ;; Defined at:
  5221 ;;		line 36 in file "ADC.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;		None
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;		None
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       0       0       0       0
  5236 ;;      Locals:         0       0       0       0       0
  5237 ;;      Temps:          1       0       0       0       0
  5238 ;;      Totals:         1       0       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_isr
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           
  5249                           ;psect for function _ADC_IF
  5250  0D24                     _ADC_IF:
  5251  0D24                     i1l1635:	
  5252                           ;incstack = 0
  5253                           ; Regs used in _ADC_IF: [wreg+status,2+status,0]
  5254                           
  5255                           
  5256                           ;ADC.c: 37:     if (ADCON0bits.GO == 0){
  5257  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0D26  189F               	btfsc	31,1	;volatile
  5260  0D27  2D29               	goto	u136_21
  5261  0D28  2D2A               	goto	u136_20
  5262  0D29                     u136_21:
  5263  0D29  2D42               	goto	i1l142
  5264  0D2A                     u136_20:
  5265  0D2A                     i1l1637:
  5266                           
  5267                           ;ADC.c: 38:             if(ADCON0bits.CHS == 0){
  5268  0D2A  0C1F               	rrf	31,w	;volatile
  5269  0D2B  00F0               	movwf	??_ADC_IF
  5270  0D2C  0C70               	rrf	??_ADC_IF,w
  5271  0D2D  390F               	andlw	15
  5272  0D2E  3A00               	xorlw	0
  5273  0D2F  1D03               	skipz
  5274  0D30  2D32               	goto	u137_21
  5275  0D31  2D33               	goto	u137_20
  5276  0D32                     u137_21:
  5277  0D32  2D38               	goto	i1l1641
  5278  0D33                     u137_20:
  5279  0D33                     i1l1639:
  5280                           
  5281                           ;ADC.c: 39:                 ADCON0bits.CHS = 1;
  5282  0D33  081F               	movf	31,w	;volatile
  5283  0D34  39C3               	andlw	-61
  5284  0D35  3804               	iorlw	4
  5285  0D36  009F               	movwf	31	;volatile
  5286                           
  5287                           ;ADC.c: 40:             }
  5288  0D37  2D3A               	goto	i1l1643
  5289  0D38                     i1l1641:
  5290                           
  5291                           ;ADC.c: 42:                 ADCON0bits.CHS = 0;
  5292  0D38  30C3               	movlw	-61
  5293  0D39  059F               	andwf	31,f	;volatile
  5294  0D3A                     i1l1643:
  5295                           
  5296                           ;ADC.c: 44:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5297  0D3A  3010               	movlw	16
  5298  0D3B  00F0               	movwf	??_ADC_IF
  5299  0D3C                     u353_27:
  5300  0D3C  0BF0               	decfsz	??_ADC_IF,f
  5301  0D3D  2D3C               	goto	u353_27
  5302  0D3E  0000               	nop
  5303  0D3F                     i1l1645:
  5304                           
  5305                           ;ADC.c: 45:             ADCON0bits.GO = 1;
  5306  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0D41  149F               	bsf	31,1	;volatile
  5309  0D42                     i1l142:
  5310  0D42  0008               	return
  5311  0D43                     __end_of_ADC_IF:
  5312  007E                     btemp	set	126	;btemp
  5313  007E                     wtemp0	set	126
  5314                           
  5315                           	psect	config
  5316                           
  5317                           ;Config register CONFIG1 @ 0x2007
  5318                           ;	Oscillator Selection bits
  5319                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5320                           ;	Watchdog Timer Enable bit
  5321                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5322                           ;	Power-up Timer Enable bit
  5323                           ;	PWRTE = ON, PWRT enabled
  5324                           ;	RE3/MCLR pin function select bit
  5325                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5326                           ;	Code Protection bit
  5327                           ;	CP = OFF, Program memory code protection is disabled
  5328                           ;	Data Code Protection bit
  5329                           ;	CPD = OFF, Data memory code protection is disabled
  5330                           ;	Brown Out Reset Selection bits
  5331                           ;	BOREN = OFF, BOR disabled
  5332                           ;	Internal External Switchover bit
  5333                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5334                           ;	Fail-Safe Clock Monitor Enabled bit
  5335                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5336                           ;	Low Voltage Programming Enable bit
  5337                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  5338                           ;	In-Circuit Debugger Mode bit
  5339                           ;	DEBUG = 0x1, unprogrammed default
  5340  2007                     	org	8199
  5341  2007  30C4               	dw	12484
  5342                           
  5343                           ;Config register CONFIG2 @ 0x2008
  5344                           ;	Brown-out Reset Selection bit
  5345                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5346                           ;	Flash Program Memory Self Write Enable bits
  5347                           ;	WRT = OFF, Write protection off
  5348  2008                     	org	8200
  5349  2008  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     51      79
    BANK1            80      7      27
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer1(BANK1[20]), buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK1[20]), buffer(BANK0[20]), STR_11(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    ___awdiv->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in COMMON

    _isr->_ADC_IF

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    9732
                                              0 BANK1      7     7      0
                         _ADC_CONFIG
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                       _USART_CONFIG
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1781
                                             11 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              5 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3533
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              4 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_CONFIG                                         6     0      6     363
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     431
                                              0 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     425
                                              0 BANK0      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      31
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      31
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      31
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              1 COMMON     3     3      0
                             _ADC_IF
 ---------------------------------------------------------------------------------
 (4) _ADC_IF                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_CONFIG
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   _ADC_IF

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      74       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      7      1B       7       33.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      74      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 16:04:21 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0074                          pc 0002  
             ___awdiv@sign 002A                         _rc 0077                         _tr 0078  
                       fsr 0004        __Umul8_16@word_mpld 0024                        l311 0697  
                      l136 07FB                        l161 0E4A                        l163 0E4B  
                      l501 07CF                        l174 0D23                        l183 0D62  
                      l159 0E3D                        l511 07CF                        l177 0D01  
                      l186 0F96                        l195 0E91                        l508 07BA  
                      l189 0D10                        l710 02F3                        l704 0387  
                      l481 0F32                        l723 0D79                        l468 0FFF  
                      l716 037B                        l725 0D8B                        l750 0753  
                      l761 071D                        l762 0729                        l754 0701  
                      l587 0ED7                        l748 06BC                        l597 0DC7  
                      _RC4 003C                        _RC5 003D                        _dec 0054  
                      _cen 0055                        _con 0058                        _isr 0DC8  
                      fsr0 0004                        _uni 0053                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 003C               ___flmul@bexp 0041  
             ___flmul@sign 003B               ___flmul@temp 0046               ___flmul@prod 0042  
             ___fltol@exp1 0052                       l2301 0EAA                       l2311 0ECD  
                     l2303 0EAE                       l2401 0E40                       l2305 0EBF  
                     l2313 0ED3                       l2321 0D97                       l2411 0F36  
                     l2403 0E48                       l2307 0EC5                       l2331 0DB6  
                     l2323 0D9E                       l2421 0F62                       l2413 0F41  
                     l2341 0D68                       l2309 0EC6                       l2333 0DBD  
                     l2325 0DA2                       l2317 0D8C                       l2501 066D  
                     l2431 0F80                       l2423 0F68                       l2415 0F47  
                     l2343 0D6F                       l2327 0DA6                       l2319 0D94  
                     l2335 0DC3                       l2503 0674                       l2361 07D9  
                     l2353 07D0                       l2433 0F86                       l2425 0F6E  
                     l2417 0F52                       l2409 0F33                       l2441 0D4B  
                     l2281 0D0D                       l2521 0F9E                       l2345 0D73  
                     l2601 0761                       l2329 0DB0                       l2505 0678  
                     l2363 07DA                       l2355 07D3                       l2283 0D12  
                     l2435 0F8C                       l2427 0F74                       l2419 0F58  
                     l2443 0D54                       l2275 0D03                       l2451 0E6D  
                     l2531 0FB2                       l2523 0FA3                       l2347 0D82  
                     l2339 0D66                       l2611 0788                       l2291 0E92  
                     l2507 0681                       l2365 07DE                       l2373 07EB  
                     l2357 07D5                       l2285 0D15                       l2437 0CF5  
                     l2429 0F7A                       l2445 0D5A                       l2277 0D06  
                     l2453 0E75                       l2381 0E12                       l2541 0FC8  
                     l2533 0FB4                       l2525 0FA5                       l2517 0F97  
                     l2349 0D87                       l2701 0194                       l2621 0796  
                     l2613 078A                       l2605 076A                       l2293 0E96  
                     l2509 0693                       l2461 05C3                       l2367 07E1  
                     l2359 07D8                       l2287 0D17                       l2439 0D46  
                     l2279 0D08                       l2447 0E4C                       l2391 0E20  
                     l2383 0E16                       l2551 0FEB                       l2543 0FCC  
                     l2535 0FBA                       l2527 0FA9                       l2519 0F9A  
                     l2711 0224                       l2703 01B1                       l2631 07BF  
                     l2615 078E                       l2623 07A8                       l2607 077F  
                     l2295 0E9C                       l2471 05EE                       l2463 05C8  
                     l2455 05B1                       l2369 07E6                       l2289 0D20  
                     l2449 0E51                       l2385 0E17                       l2545 0FDD  
                     l2537 0FBD                       l2553 0FF1                       l2529 0FAE  
                     l2561 0ED8                       l2721 02B6                       l2713 0251  
                     l2705 01CA                       l2641 0038                       l2633 07C4  
                     l2609 0780                       l2801 0713                       l2297 0E9F  
                     l2473 05F2                       l2457 05B6                       l2387 0E1B  
                     l2395 0E24                       l2379 0E07                       l2555 0FF6  
                     l2547 0FE3                       l2539 0FC4                       l2571 0EEA  
                     l2563 0ED9                       l2723 02BF                       l2731 02D3  
                     l2715 0277                       l2707 01E7                       l2651 004D  
                     l2643 0039                       l2635 0027                       l2811 0746  
                     l2803 0717                       l2299 0EA6                       l2491 0627  
                     l2475 05F6                       l2467 05C9                       l2459 05BC  
                     l2389 0E1F                       l2397 0E31                       l2557 0FFB  
                     l2549 0FE4                       l2581 0F03                       l2573 0EEF  
                     l2565 0EDF                       l2733 02D7                       l2725 02C3  
                     l2717 029F                       l2709 0214                       l2661 0065  
                     l2653 0055                       l2645 003E                       l2637 002E  
                     l2629 07AF                       l2813 074A                       l2805 0721  
                     l2493 062D                       l2485 0601                       l2477 05FA  
                     l2469 05E6                       l2821 038C                       l2399 0E39  
                     l2583 0F07                       l2575 0EF5                       l2591 0F24  
                     l2567 0EE4                       l2751 0328                       l2743 02F8  
                     l2735 02D8                       l2727 02C4                       l2719 02A8  
                     l2671 0081                       l2663 006A                       l2655 005A  
                     l2647 0043                       l2639 0034                       l2815 074B  
                     l2807 072B                       l2495 0634                       l2479 05FF  
                     l2831 0399                       l2823 038D                       l2593 0F29  
                     l2585 0F11                       l2577 0EF8                       l2569 0EE6  
                     l2761 035F                       l2745 02FD                       l2753 032E  
                     l2737 02DC                       l2729 02CD                       l2681 00A4  
                     l2673 0086                       l2665 006F                       l2657 0060  
                     l2649 004B                       l2809 0741                       l2497 0638  
                     l2489 061D                       l2841 03B8                       l2833 039A  
                     l2825 0392                       l2595 0F2E                       l2587 0F17  
                     l2579 0EFF                       l2771 037F                       l2763 0361  
                     l2755 033B                       l2747 030B                       l2739 02F0  
                     l2691 0132                       l2683 00B1                       l2675 008B  
                     l2667 0077                       l2659 0064                       l2499 063D  
                     l2851 03C7                       l2843 03BB                       l2835 039B  
                     l2827 0394                       l2819 0388                       l2589 0F1E  
                     l2765 036F                       l2757 0346                       l2749 030F  
                     l2693 014E                       l2685 00CE                       l2669 0079  
                     l2781 06B4                       l2861 03E6                       l2853 03C8  
                     l2845 03BC                       l2837 03A4                       l2829 0395  
                     l2767 0373                       l2759 0355                       l2695 0157  
                     l2687 00EA                       l2679 0094                       l2599 0754  
                     l2791 06DF                       l2783 06C4                       l2775 069B  
                     l2871 04EA                       l2863 0439                       l2855 03CD  
                     l2847 03BF                       l2839 03B7                       l2769 0374  
                     l2697 0167                       l2689 0116                       l2793 06E6  
                     l2777 06A0                       l2881 0579                       l2873 051B  
                     l2865 048C                       l2857 03D7                       l2849 03C4  
                     l2699 0184                       l2795 06EA                       l2787 06CD  
                     l2779 06A4                       l2955 05DB                       l2883 0584  
                     l2875 053F                       l2867 04A9                       l2859 03E2  
                     l2957 0E29                       l2797 06F8                       l2789 06D2  
                     l2885 0592                       l2877 0560                       l2869 04C6  
                     l2959 07F0                       l2799 0708                       l2887 059A  
                     l2879 056E                       l2889 05A2                       _ADIF 0066  
                     ?_isr 0070                       STR_1 082D                       STR_2 082F  
                     STR_3 0831                       STR_4 0833                       STR_5 0835  
                     STR_6 0837                       STR_7 0839                       STR_8 083B  
                     STR_9 083D                       u3000 006A                       u3001 0069  
                     u3010 006F                       u3011 006E                       u3020 0086  
                     u3101 01A3                       u3021 0085                       u3102 01AA  
                     u3030 008B                       u3103 01B1                       u3031 008A  
                     u3121 01D9                       u3041 00DC                       u3210 02C3  
                     u3122 01E0                       u3042 00E3                       u2410 0EBF  
                     u3211 02C2                       u3131 0206                       u3123 01E7  
                     u3115 01B3                       u3051 00F8                       u3043 00EA  
                     u2411 0EBE                       u2500 0D73                       u3300 033B  
                     u3132 020D                       u3052 00FF                       u2501 0D72  
                     u3301 033A                       u3205 02B8                       u3141 0233  
                     u3133 0214                       u3061 0124                       u3053 0106  
                     u2405 0EAF                       u3310 0355                       u3230 02D7  
                     u3150 025D                       u3142 023A                       u3062 012B  
                     u2430 0ED3                       u3311 0354                       u3231 02D6  
                     u3143 0241                       u3071 0140                       u3063 0132  
                     u2431 0ED2                       u2415 0EBB                       u2520 0D87  
                     u3320 0373                       u3240 02DC                       u3072 0147  
                     u2440 0D94                       u2600 05BC                       u2521 0D86  
                     u3321 0372                       u3305 0337                       u3241 02DB  
                     u3225 02C6                       u3161 0269                       u3073 014E  
                     u2425 0EC7                       u2441 0D93                       u2601 05BB  
                     u2530 0E39                       u3250 02F0                       u3170 0285  
                     u3162 0270                       u3410 0717                       u3330 06A0  
                     u2370 0E9C                       u2610 05F6                       u2531 0E38  
                     u2515 0D7A                       u3315 0351                       u3251 02EF  
                     u3163 0277                       u3155 0258                       u3091 0176  
                     u3411 0716                       u3331 069F                       u2371 0E9B  
                     u2611 05F5                       u2540 0E48                       u3260 02F7  
                     u3092 017D                       u3420 071D                       u3340 06A4  
                     u2460 0DA6                       u2620 061C                       u2541 0E47  
                     u3261 02F6                       u3181 0291                       u3093 0184  
                     u3085 0150                       u3421 071C                       u3405 070C  
                     u3341 06A3                       u2461 0DA5                       u2621 061B  
                     u2550 0D4B                       u2710 0FCC                       u3270 02FD  
                     u3182 0298                       u3430 0721                       u3350 06C4  
                     u2390 0EAE                       u2470 0DB0                       u2630 0627  
                     u2551 0D4A                       u2711 0FCB                       u3271 02FC  
                     u3183 029F                       u3175 0280                       u3431 0720  
                     u3351 06C3                       u2391 0EAD                       u2471 0DAF  
                     u2455 0D98                       u2631 0626                       u2560 0D5A  
                     u3280 030F                       u3440 0736                       u2640 062D  
                     u2561 0D59                       u2705 0FBE                       u3281 030E  
                     u2385 0EA0                       u2641 062C                       u2625 0618  
                     u2570 0E5B                       u2730 0FDD                       u2810 0F07  
                     u3290 031E                       u3450 0746                       u3370 06E5  
                     u2490 0DC3                       u2650 0681                       u3507 0F5E  
                     u2731 0FDC                       u2811 0F06                       u3195 02A1  
                     u3451 0745                       u3371 06E4                       u2491 0DC2  
                     u2475 0DAC                       u2651 0680                       u2580 0E7F  
                     u2820 0F11                       u3460 074A                       u2660 0693  
                     u3517 0F92                       u2725 0FCD                       u2821 0F10  
                     u2805 0EF9                       u3461 0749                       u3445 0731  
                     u3365 06D7                       u2485 0DB7                       u2661 0692  
                     u2590 0E91                       u2750 0FF1                       u2670 0F9E  
                     u2910 07A7                       u3390 0707                       u3527 0D1C  
                     u2591 0E90                       u2751 0FF0                       u2735 0FD9  
                     u2671 0F9D                       u3295 0319                       u2911 07A6  
                     u3391 0706                       u2760 0FF6                       u2680 0FA9  
                     u2840 0F24                       u2920 07AE                       u2761 0FF5  
                     u2745 0FE5                       u2681 0FA8                       u2841 0F23  
                     u2825 0F0D                       u2921 07AD                       u2905 0797  
                     u3385 06F9                       u2690 0FBA                       u2850 0F29  
                     u2770 0EDF                       u2691 0FB9                       u2851 0F28  
                     u2835 0F18                       u2771 0EDE                       u2780 0EEA  
                     u2940 07BF                       u2860 0761                       u3477 0D0B  
                     u2781 0EE9                       u2941 07BE                       u2861 0760  
                     u2790 0EF5                       u2950 07C4                       u2870 0778  
                     u3487 0F3C                       u2791 0EF4                       u2951 07C3  
                     u2935 07B1                       u2960 0038                       u2880 078E  
                     u3497 0F4D                       u2961 0037                       u2881 078D  
                     u2970 003E                       u2890 0795                       u2971 003D  
                     u2891 0794                       u2875 0773                       u2980 0043  
                     _RCIF 0065                       u2981 0042                       u2990 0064  
                     u2991 0063                       _TXEN 04C5          ?_Lcd_Write_String 0020  
                     _frec 0079                       _main 0388                       _pot1 005A  
                     _pot2 0059                       _vol1 0057                       _vol2 0056  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0022  
          __end_of_Lcd_Cmd 0D24                      ??_isr 0071              ___fltol@sign1 0051  
                    ?_main 0070            __end_of___awdiv 1000                      STR_10 083F  
                    STR_11 081A                      STR_12 0828                      STR_13 0828  
          __end_of___awmod 0F33            __end_of___flmul 0388            __end_of___fltol 07D0  
                    _ANSEL 0188            ___awdiv@divisor 0024            __end_of___lwdiv 0ED8  
                    i1l114 0E00                      i1l142 0D42            __end_of___lwmod 0DC8  
          ___awdiv@counter 0029                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0020  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019           USART_CONFIG@frec 0020  
          __end_of_dpowers 081A                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0698           __end_of_Lcd_Init 0F97  
          __initialization 000F               __end_of_main 05AE                     ??_main 00B4  
       __size_of_Lcd_Clear 000D               ??_ADC_CONFIG 0076                     _ADC_IF 0D24  
                   _ADRESH 001E           ___awdiv@dividend 0026                     _ANSELH 0189  
                   i1l2121 0DE0                     i1l2113 0DC8                     i1l2131 0DF7  
                   i1l2123 0DE5                     i1l2115 0DCE                     i1l2133 0DFD  
                   i1l2117 0DD7                     i1l2125 0DE8                     i1l2135 0DFF  
                   i1l2127 0DEC                     i1l2119 0DDC                     i1l2129 0DF2  
                   i1l1641 0D38                     i1l1643 0D3A                     i1l1635 0D24  
                   i1l1645 0D3F                     i1l1637 0D2A                     i1l1639 0D33  
                   u136_20 0D2A                     u232_20 0DCE                     u136_21 0D29  
                   u232_21 0DCD                     u137_20 0D33                     u233_20 0DD7  
                   u137_21 0D32                     u233_21 0DD6                     u234_20 0DEC  
                   u234_21 0DEB                     u235_20 0DF2                     u235_21 0DF1  
                   u236_20 0DFD                     u236_21 0DFC                     u353_27 0D3C  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 000F           __end_of___xxtofl 0754  
       __end_of_ADC_CONFIG 07FC                  ??___awdiv 0028                  ??___awmod 0074  
                ??___flmul 0036                  ??___fltol 004C                  ??___lwdiv 0074  
                ??___lwmod 0075                     _buffer 005B           ___awdiv@quotient 002B  
          ___awmod@divisor 0020            ___awmod@counter 0075         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 002E            Lcd_Set_Cursor@a 0021  
          Lcd_Set_Cursor@b 0020               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020    __end_of__initialization 0023          __end_of_Lcd_Clear 0D02  
               ___fltol@f1 0048             __pcstackCOMMON 0070             USART_CONFIG@rc 0024  
           USART_CONFIG@tr 0022             _Lcd_Set_Cursor 0D43                  ?_Lcd_Init 0070  
                  ?_ADC_IF 0070                 __pbssBANK0 0053                 __pbssBANK1 00A0  
        __end_of__Umul8_16 0D8C                 __pmaintext 0388                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0D63                  ?___xxtofl 0020  
               ??_Lcd_Init 0020            __size_of_ADC_IF 001F                 __stringtab 0800  
           _Lcd_Write_Char 0D02                    _Lcd_Cmd 0D11                    ___awdiv 0F97  
                  ___awmod 0ED8                    ___flmul 0027                    ___fltol 0754  
                  ___lwdiv 0E92                    ___lwmod 0D8C            ?_Lcd_Set_Cursor 0020  
                  __ptext1 05AE                    __ptext2 0D8C                    __ptext3 0E92  
                  __ptext4 0698                    __ptext5 0754                    __ptext6 0027  
                  __ptext7 0D63                    __ptext8 0ED8                    __ptext9 0F97  
                  _buffer1 00A0                    _dpowers 0810               __size_of_isr 003F  
               ??___xxtofl 0024           ___awmod@dividend 0022                    _sprintf 05AE  
                  clrloop0 0CEE     __end_of_Lcd_Write_Char 0D11       end_of_initialization 0023  
                _RCSTAbits 0018              ___xxtofl@sign 0028              ?_USART_CONFIG 0020  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020          Lcd_Write_String@i 0025  
           __end_of_ADC_IF 0D43                ___flmul@grs 003D                  _TXSTAbits 0098  
                _Lcd_Clear 0CF5           _Lcd_Write_String 0E4C                _BAUDCTLbits 0187  
           ??_USART_CONFIG 0074        start_initialization 000F                __end_of_isr 0E07  
                 ??_ADC_IF 0070          __size_of_Lcd_Init 0064                 ?_Lcd_Clear 0070  
                __Umul8_16 0D63            Lcd_Write_Char@a 0075                  ___flmul@a 0032  
                ___flmul@b 002E                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00B4          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 0032                sprintf@prec 0033  
                _main$1125 00B9           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0024                   ?___awmod 0020                   ?___flmul 002E  
                 ?___fltol 0048                 ?__Umul8_16 0074                   ?___lwdiv 0020  
                 ?___lwmod 0027                  __pstrings 0800           ___lwdiv@quotient 0025  
                 ?_sprintf 002B          interrupt_function 0004                  clear_ram0 0CED  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076       __end_of_USART_CONFIG 0E4C  
              ??_Lcd_Clear 0077                 _ADCON0bits 001F                __stringbase 080F  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0074                 _ADC_CONFIG 07D0  
                 _Lcd_Init 0F33   __end_of_Lcd_Write_String 0E92           __size_of_Lcd_Cmd 0013  
              ??__Umul8_16 0020           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 0810                 sprintf@val 0034  
                 ___xxtofl 0698            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 0E07                   __ptext11 0E4C                   __ptext12 0D02  
                 __ptext13 0D43                   __ptext14 0F33                   __ptext15 0CF5  
                 __ptext16 0D11                   __ptext17 07D0                   __ptext18 0DC8  
                 __ptext19 0D24           __size_of_sprintf 00EA              __size_of_main 0226  
               _INTCONbits 000B                ?_ADC_CONFIG 0074                   intlevel1 0000  
                sprintf@ap 0031                  sprintf@sp 0036      __size_of_USART_CONFIG 0045  
         ___lwmod@dividend 0029                  stringcode 080A                 _OSCCONbits 008F  
   __Umul8_16@multiplicand 0074                   sprintf@c 0037                   sprintf@f 002B  
          ___lwmod@divisor 0027            ___lwmod@counter 0076                   stringdir 080A  
                 stringtab 0800               _USART_CONFIG 0E07       __Umul8_16@multiplier 0026  
        __Umul8_16@product 0022  
