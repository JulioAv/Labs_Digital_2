Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Lab2.X.production.sym \
  --cmf=dist/default/production\Lab2.X.production.cmf -z -Q16F887 \
  -oC:\Users\swimm\AppData\Local\Temp\sg9o.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Lab2.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\swimm\AppData\Local\Temp\sg9o.o \
  dist/default/production\Lab2.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\swimm\AppData\Local\Temp\sg9o.o
                end_init                              E        E        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Lab2.X.production.o
                cinit                                11       11       1B        8       0
                intentry                              4        4        A        8       0
                config                             2007     2007        2        0       4
                text14                              419      419       1F        8       0
                text13                              3CE      3CE       2B        8       0
                text12                              205      205       67        8       0
                text11                              113      113       89        8       0
                text10                              3A2      3A2       2C        8       0
                text9                               456      456       16      8AC       0
                text8                               491      491        D      8AC       0
                text7                               26C      26C       64        8       0
                text6                               3F9      3F9       20        8       0
                text5                               47F      47F       12      8AC       0
                text4                               370      370       32        8       0
                text3                               32B      32B       45        8       0
                text2                               19C      19C       69        8       0
                text1                               2D0      2D0       5B        8       0
                maintext                             2C       2C       E7        8       0
                cstackBANK0                          20       20       1B       20       1
                cstackCOMMON                         70       70        D       70       1
                clrtext                             4A8      4A8        8      8AC       0
                inittext                            46C      46C       13      8AC       0
                dataBANK0                            50       50        A       20       1
                bssBANK0                             3B       3B       15       20       1
                bssCOMMON                            7D       7D        1       70       1
                strings                             438      438       1E      870       0
                idataBANK0                          49E      49E        A      8AC       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              E        E        3         0
                cinit                                11       11       1B         0
                intentry                              4        4        A         0
                reset_vec                             0        0        3         0
                text14                              419      419       1F         0
                text13                              3CE      3CE       2B         0
                text12                              205      205       67         0
                text11                              113      113       89         0
                text10                              3A2      3A2       2C         0
                text9                               456      456       16         0
                text8                               491      491        D         0
                text7                               26C      26C       64         0
                text6                               3F9      3F9       20         0
                text5                               47F      47F       12         0
                text4                               370      370       32         0
                text3                               32B      32B       45         0
                text2                               19C      19C       69         0
                text1                               2D0      2D0       5B         0
                maintext                             2C       2C       E7         0
                clrtext                             4A8      4A8        8         0
                inittext                            46C      46C       13         0
                idataBANK0                          49E      49E        A         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             438      438       1E         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1
                bssCOMMON                            7D       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1B         1
                dataBANK0                            50       50        A         1
                bssBANK0                             3B       3B       15         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000434  000438         8       0  CODE        2
                cstackBANK0                    000020  00003A  00005A        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                strings                        000438  00001E  000456       870       0  STRING      2
                text9                          000456  00005A  0004B0       8AC       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            005A-006F             16           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         04B0-1FFF            800
        CONST            0003-0003              1           2
                         04B0-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         04B0-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              005A-006F             16           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         04B0-1FFF           1B50
        STRING           0003-0003              1           2
                         04B0-1FFF            100

                                  Symbol Table

?___awdiv                  cstackBANK0  002D
?___awmod                  cstackBANK0  0026
?___wmul                   cstackCOMMON 0079
?i1___awdiv                cstackCOMMON 0070
ADC_CONFIG@frec            cstackBANK0  0026
Lcd_Cmd@a                  cstackBANK0  0028
Lcd_Set_Cursor@a           cstackBANK0  002A
Lcd_Set_Cursor@b           cstackBANK0  0029
Lcd_Write_Char@a           cstackBANK0  0027
Lcd_Write_String@a         cstackBANK0  0028
Lcd_Write_String@i         cstackBANK0  002A
USART_CONFIG@frec          cstackBANK0  0026
USART_CONFIG@rc            cstackBANK0  002A
USART_CONFIG@tr            cstackBANK0  0028
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADC_CONFIG                text10       03A2
_ADC_IF                    text14       0419
_ADIF                      (abs)        0066
_ADRESH                    (abs)        001E
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_BAUDCTLbits               (abs)        0187
_INTCONbits                (abs)        000B
_Lcd_Clear                 text8        0491
_Lcd_Cmd                   text9        0456
_Lcd_Init                  text7        026C
_Lcd_Set_Cursor            text6        03F9
_Lcd_Write_Char            text5        047F
_Lcd_Write_String          text4        0370
_OSCCONbits                (abs)        008F
_PIE1bits                  (abs)        008C
_PORTD                     (abs)        0008
_RC4                       (abs)        003C
_RC5                       (abs)        003D
_RCIF                      (abs)        0065
_RCREG                     (abs)        001A
_RCSTAbits                 (abs)        0018
_SPBRG                     (abs)        0099
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISC                     (abs)        0087
_TRISD                     (abs)        0088
_TXEN                      (abs)        04C5
_TXREG                     (abs)        0019
_TXSTAbits                 (abs)        0098
_USART_CONFIG              text3        032B
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        002C
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0011
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__Hinit                    init         000E
__Hinittext                inittext     0000
__Hintentry                intentry     000E
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        04B0
__Hspace_1                 (abs)        007E
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hspace_4                 (abs)        4010
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0011
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       0000
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     000E
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__Linit                    init         000E
__Linittext                inittext     0000
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lspace_4                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        04B0
__S1                       (abs)        007E
__S2                       (abs)        0000
__S3                       (abs)        0000
___awdiv                   text2        019C
___awdiv@counter           cstackBANK0  0032
___awdiv@dividend          cstackBANK0  002F
___awdiv@divisor           cstackBANK0  002D
___awdiv@quotient          cstackBANK0  0034
___awdiv@sign              cstackBANK0  0033
___awmod                   text1        02D0
___awmod@counter           cstackBANK0  002B
___awmod@dividend          cstackBANK0  0028
___awmod@divisor           cstackBANK0  0026
___awmod@sign              cstackBANK0  002C
___int_sp                  stack        0000
___latbits                 (abs)        0002
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
___wmul                    text13       03CE
___wmul@multiplicand       cstackCOMMON 007B
___wmul@multiplier         cstackCOMMON 0079
___wmul@product            cstackBANK0  0020
__end_of_ADC_CONFIG        text10       03CE
__end_of_ADC_IF            text14       0438
__end_of_Lcd_Clear         text8        049E
__end_of_Lcd_Cmd           text9        046C
__end_of_Lcd_Init          text7        02D0
__end_of_Lcd_Set_Cursor    text6        0419
__end_of_Lcd_Write_Char    text5        0491
__end_of_Lcd_Write_String  text4        03A2
__end_of_USART_CONFIG      text3        0370
__end_of___awdiv           text2        0205
__end_of___awmod           text1        032B
__end_of___wmul            text13       03F9
__end_of__initialization   cinit        0028
__end_of__stringtab        strings      0448
__end_of_isr               text11       019C
__end_of_main              maintext     0113
__end_ofi1___awdiv         text12       026C
__initialization           cinit        0011
__pbssBANK0                bssBANK0     003B
__pbssCOMMON               bssCOMMON    007D
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    0050
__pidataBANK0              idataBANK0   049E
__pintentry                intentry     0004
__pmaintext                maintext     002C
__pstrings                 strings      0438
__ptext1                   text1        02D0
__ptext10                  text10       03A2
__ptext11                  text11       0113
__ptext12                  text12       0205
__ptext13                  text13       03CE
__ptext14                  text14       0419
__ptext2                   text2        019C
__ptext3                   text3        032B
__ptext4                   text4        0370
__ptext5                   text5        047F
__ptext6                   text6        03F9
__ptext7                   text7        026C
__ptext8                   text8        0491
__ptext9                   text9        0456
__size_of_ADC_CONFIG       (abs)        0000
__size_of_ADC_IF           (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_USART_CONFIG     (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___awmod          (abs)        0000
__size_of___wmul           (abs)        0000
__size_of_isr              (abs)        0000
__size_of_main             (abs)        0000
__size_ofi1___awdiv        (abs)        0000
__stringbase               strings      0447
__stringtab                strings      0438
_cen1                      bssBANK0     004F
_con                       bssBANK0     003F
_dec1                      bssBANK0     004E
_isr                       text11       0113
_main                      maintext     002C
_main$1077                 cstackBANK0  0039
_num                       dataBANK0    0050
_pot1                      bssBANK0     0049
_pot2                      bssBANK0     0047
_uni1                      bssBANK0     004D
_vol1                      bssBANK0     003D
_vol2                      bssBANK0     003B
btemp                      (abs)        007E
clear_ram0                 clrtext      04A8
end_of_initialization      cinit        0028
i1___awdiv                 text12       0205
i1___awdiv@counter         cstackCOMMON 0075
i1___awdiv@dividend        cstackCOMMON 0072
i1___awdiv@divisor         cstackCOMMON 0070
i1___awdiv@quotient        cstackCOMMON 0077
i1___awdiv@sign            cstackCOMMON 0076
init_fetch0                inittext     046C
init_ram0                  inittext     0470
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
start                      init         000E
start_initialization       cinit        0011
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 83 in file "Lab2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADC_CONFIG
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
		_USART_CONFIG
		___awdiv
		___awmod
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    6[BANK0 ] int 
  dividend        2    8[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1   12[BANK0 ] unsigned char 
  counter         1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2   13[BANK0 ] int 
  dividend        2   15[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   20[BANK0 ] int 
  sign            1   19[BANK0 ] unsigned char 
  counter         1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   13[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _USART_CONFIG *****************
 Defined at:
		line 11 in file "USART.c"
 Parameters:    Size  Location     Type
  frec            2    6[BANK0 ] int 
  tr              2    8[BANK0 ] int 
  rc              2   10[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 72 in file "LCDh.c"
 Parameters:    Size  Location     Type
  a               2    8[BANK0 ] PTR unsigned char 
		 -> RAM(512), STR_1(14), 
 Auto vars:     Size  Location     Type
  i               2   10[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 58 in file "LCDh.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 29 in file "LCDh.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 39 in file "LCDh.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 24 in file "LCDh.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 16 in file "LCDh.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _ADC_CONFIG *****************
 Defined at:
		line 14 in file "ADC.c"
 Parameters:    Size  Location     Type
  frec            2    6[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 57 in file "Lab2.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ADC_IF
		___wmul
		i1___awdiv
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1___awdiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[COMMON] int 
  sign            1    6[COMMON] unsigned char 
  counter         1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    9[COMMON] unsigned int 
  multiplicand    2   11[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    9[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       2       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _ADC_IF *****************
 Defined at:
		line 36 in file "ADC.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
USART.c
		_USART_CONFIG  		CODE           	032B	0000	69

USART.c estimated size: 69

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	02D0	0000	91

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c estimated size: 91

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c
		___wmul        		CODE           	03CE	0000	43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c estimated size: 43

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c
		___awdiv       		CODE           	019C	0000	105

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c estimated size: 105

shared
		__stringtab    		STRING         	0438	0000	16
		i1___awdiv     		CODE           	0205	0000	103
		__initialization		CODE           	0011	0000	23

shared estimated size: 142

ADC.c
		_ADC_CONFIG    		CODE           	03A2	0000	44
		_ADC_IF        		CODE           	0419	0000	31

ADC.c estimated size: 75

LCDh.c
		_Lcd_Write_String		CODE           	0370	0000	50
		_Lcd_Init      		CODE           	026C	0000	100
		_Lcd_Write_Char		CODE           	047F	0000	18
		_Lcd_Cmd       		CODE           	0456	0000	22
		_Lcd_Set_Cursor		CODE           	03F9	0000	32
		_Lcd_Clear     		CODE           	0491	0000	13

LCDh.c estimated size: 235

Lab2.c
		_main          		CODE           	002C	0000	231
		_isr           		CODE           	0113	0000	137

Lab2.c estimated size: 368

