

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 10:27:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463                           
   464                           	psect	strings
   465  078E                     __pstrings:
   466  078E                     stringtab:
   467  078E                     __stringtab:
   468                           
   469                           ;	String table - string pointers are 1 byte each
   470  078E  1BFF               	btfsc	btemp+1,7
   471  078F  2F98               	ljmp	stringcode
   472  0790  1383               	bcf	3,7
   473  0791  187F               	btfsc	btemp+1,0
   474  0792  1783               	bsf	3,7
   475  0793  0800               	movf	0,w
   476  0794  0A84               	incf	4,f
   477  0795  1903               	skipnz
   478  0796  0AFF               	incf	btemp+1,f
   479  0797  0008               	return
   480  0798                     stringcode:
   481  0798                     stringdir:
   482  0798  3007               	movlw	high stringdir
   483  0799  008A               	movwf	10
   484  079A  0804               	movf	4,w
   485  079B  0A84               	incf	4,f
   486  079C  0782               	addwf	2,f
   487  079D                     __stringbase:
   488  079D  3400               	retlw	0
   489  079E                     __end_of__stringtab:
   490  079E                     _dpowers:
   491  079E  3401               	retlw	1
   492  079F  3400               	retlw	0
   493  07A0  340A               	retlw	10
   494  07A1  3400               	retlw	0
   495  07A2  3464               	retlw	100
   496  07A3  3400               	retlw	0
   497  07A4  34E8               	retlw	232
   498  07A5  3403               	retlw	3
   499  07A6  3410               	retlw	16
   500  07A7  3427               	retlw	39
   501  07A8                     __end_of_dpowers:
   502  0008                     _PORTD	set	8
   503  0018                     _RCSTAbits	set	24
   504  0006                     _PORTB	set	6
   505  000B                     _INTCONbits	set	11
   506  001A                     _RCREG	set	26
   507  001E                     _ADRESH	set	30
   508  001F                     _ADCON0bits	set	31
   509  0019                     _TXREG	set	25
   510  003D                     _RC5	set	61
   511  003C                     _RC4	set	60
   512  0065                     _RCIF	set	101
   513  0066                     _ADIF	set	102
   514  0099                     _SPBRG	set	153
   515  009F                     _ADCON1bits	set	159
   516  008C                     _PIE1bits	set	140
   517  008F                     _OSCCONbits	set	143
   518  0088                     _TRISD	set	136
   519  0087                     _TRISC	set	135
   520  0086                     _TRISB	set	134
   521  0085                     _TRISA	set	133
   522  0098                     _TXSTAbits	set	152
   523  04C5                     _TXEN	set	1221
   524  0187                     _BAUDCTLbits	set	391
   525  0189                     _ANSELH	set	393
   526  0188                     _ANSEL	set	392
   527  07A8                     STR_2:
   528  07A8  3450               	retlw	80	;'P'
   529  07A9  3472               	retlw	114	;'r'
   530  07AA  3465               	retlw	101	;'e'
   531  07AB  3473               	retlw	115	;'s'
   532  07AC  3469               	retlw	105	;'i'
   533  07AD  346F               	retlw	111	;'o'
   534  07AE  346E               	retlw	110	;'n'
   535  07AF  3465               	retlw	101	;'e'
   536  07B0  3420               	retlw	32	;' '
   537  07B1  342A               	retlw	42	;'*'
   538  07B2  3420               	retlw	32	;' '
   539  07B3  3470               	retlw	112	;'p'
   540  07B4  3461               	retlw	97	;'a'
   541  07B5  3472               	retlw	114	;'r'
   542  07B6  3461               	retlw	97	;'a'
   543  07B7  3420               	retlw	32	;' '
   544  07B8  346D               	retlw	109	;'m'
   545  07B9  346F               	retlw	111	;'o'
   546  07BA  3473               	retlw	115	;'s'
   547  07BB  3474               	retlw	116	;'t'
   548  07BC  3472               	retlw	114	;'r'
   549  07BD  3461               	retlw	97	;'a'
   550  07BE  3472               	retlw	114	;'r'
   551  07BF  3420               	retlw	32	;' '
   552  07C0  346C               	retlw	108	;'l'
   553  07C1  346F               	retlw	111	;'o'
   554  07C2  3473               	retlw	115	;'s'
   555  07C3  3420               	retlw	32	;' '
   556  07C4  3470               	retlw	112	;'p'
   557  07C5  346F               	retlw	111	;'o'
   558  07C6  3474               	retlw	116	;'t'
   559  07C7  3400               	retlw	0
   560  07C8                     STR_1:
   561  07C8  3453               	retlw	83	;'S'
   562  07C9  3431               	retlw	49	;'1'
   563  07CA  343A               	retlw	58	;':'
   564  07CB  3420               	retlw	32	;' '
   565  07CC  3420               	retlw	32	;' '
   566  07CD  3453               	retlw	83	;'S'
   567  07CE  3432               	retlw	50	;'2'
   568  07CF  343A               	retlw	58	;':'
   569  07D0  3420               	retlw	32	;' '
   570  07D1  3420               	retlw	32	;' '
   571  07D2  3453               	retlw	83	;'S'
   572  07D3  3433               	retlw	51	;'3'
   573  07D4  343A               	retlw	58	;':'
   574  07D5  3400               	retlw	0
   575  07D6                     STR_10:
   576  07D6  3420               	retlw	32	;' '
   577  07D7  3450               	retlw	80	;'P'
   578  07D8  346F               	retlw	111	;'o'
   579  07D9  3474               	retlw	116	;'t'
   580  07DA  3420               	retlw	32	;' '
   581  07DB  3432               	retlw	50	;'2'
   582  07DC  343A               	retlw	58	;':'
   583  07DD  3420               	retlw	32	;' '
   584  07DE  3400               	retlw	0
   585  07DF                     STR_9:
   586  07DF  3450               	retlw	80	;'P'
   587  07E0  346F               	retlw	111	;'o'
   588  07E1  3474               	retlw	116	;'t'
   589  07E2  3420               	retlw	32	;' '
   590  07E3  3431               	retlw	49	;'1'
   591  07E4  343A               	retlw	58	;':'
   592  07E5  3420               	retlw	32	;' '
   593  07E6  3400               	retlw	0
   594  07E7                     STR_3:
   595  07E7  3425               	retlw	37	;'%'
   596  07E8  3464               	retlw	100	;'d'
   597  07E9  3456               	retlw	86	;'V'
   598  07EA  3420               	retlw	32	;' '
   599  07EB  3420               	retlw	32	;' '
   600  07EC  3400               	retlw	0
   601  07ED                     STR_4:
   602  07ED  3420               	retlw	32	;' '
   603  07EE  3425               	retlw	37	;'%'
   604  07EF  3464               	retlw	100	;'d'
   605  07F0  3456               	retlw	86	;'V'
   606  07F1  3420               	retlw	32	;' '
   607  07F2  3400               	retlw	0
   608  07F3                     STR_5:
   609  07F3  3420               	retlw	32	;' '
   610  07F4  3420               	retlw	32	;' '
   611  07F5  3425               	retlw	37	;'%'
   612  07F6  3464               	retlw	100	;'d'
   613  07F7  3400               	retlw	0
   614  07F8                     STR_8:
   615  07F8  340D               	retlw	13
   616  07F9  3420               	retlw	32	;' '
   617  07FA  3400               	retlw	0
   618  07FB  3400               	retlw	0
   619  07F8                     
   620                           	psect	cinit
   621  000F                     start_initialization:	
   622                           ; #config settings
   623                           
   624  000F                     __initialization:
   625                           
   626                           ; Clear objects allocated to COMMON
   627  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   628  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   629  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   630                           
   631                           ; Clear objects allocated to BANK0
   632  0012  1383               	bcf	3,7	;select IRP bank0
   633  0013  304F               	movlw	low __pbssBANK0
   634  0014  0084               	movwf	4
   635  0015  306F               	movlw	low (__pbssBANK0+32)
   636  0016  120A  158A  2436  120A  118A  	fcall	clear_ram0
   637                           
   638                           ; Clear objects allocated to BANK1
   639  001B  30A0               	movlw	low __pbssBANK1
   640  001C  0084               	movwf	4
   641  001D  30BE               	movlw	low (__pbssBANK1+30)
   642  001E  120A  158A  2436  120A  118A  	fcall	clear_ram0
   643  0023                     end_of_initialization:	
   644                           ;End of C runtime variable initialization code
   645                           
   646  0023                     __end_of__initialization:
   647  0023  0183               	clrf	3
   648  0024  120A  118A  2B88   	ljmp	_main	;jump to C main() function
   649                           
   650                           	psect	bssCOMMON
   651  0078                     __pbssCOMMON:
   652  0078                     _rc:
   653  0078                     	ds	1
   654  0079                     _tr:
   655  0079                     	ds	1
   656  007A                     _frec:
   657  007A                     	ds	1
   658                           
   659                           	psect	bssBANK0
   660  004F                     __pbssBANK0:
   661  004F                     _x:
   662  004F                     	ds	2
   663  0051                     _vol2:
   664  0051                     	ds	2
   665  0053                     _vol1:
   666  0053                     	ds	2
   667  0055                     _uni:
   668  0055                     	ds	1
   669  0056                     _dec:
   670  0056                     	ds	1
   671  0057                     _cen:
   672  0057                     	ds	1
   673  0058                     _con:
   674  0058                     	ds	1
   675  0059                     _pot2:
   676  0059                     	ds	1
   677  005A                     _pot1:
   678  005A                     	ds	1
   679  005B                     _buffer1:
   680  005B                     	ds	10
   681  0065                     _buffer:
   682  0065                     	ds	10
   683                           
   684                           	psect	bssBANK1
   685  00A0                     __pbssBANK1:
   686  00A0                     _buffer4:
   687  00A0                     	ds	10
   688  00AA                     _buffer3:
   689  00AA                     	ds	10
   690  00B4                     _buffer2:
   691  00B4                     	ds	10
   692                           
   693                           	psect	clrtext
   694  0C36                     clear_ram0:	
   695                           ;	Called with FSR containing the base address, and
   696                           ;	W with the last address+1
   697                           
   698  0C36  0064               	clrwdt	;clear the watchdog before getting into this loop
   699  0C37                     clrloop0:
   700  0C37  0180               	clrf	0	;clear RAM location pointed to by FSR
   701  0C38  0A84               	incf	4,f	;increment pointer
   702  0C39  0604               	xorwf	4,w	;XOR with final address
   703  0C3A  1903               	btfsc	3,2	;have we reached the end yet?
   704  0C3B  3400               	retlw	0	;all done for this memory range, return
   705  0C3C  0604               	xorwf	4,w	;XOR again to restore value
   706  0C3D  2C37               	goto	clrloop0	;do the next byte
   707                           
   708                           	psect	cstackBANK1
   709  00BE                     __pcstackBANK1:
   710  00BE                     ??_main:
   711                           
   712                           ; 1 bytes @ 0x0
   713  00BE                     	ds	4
   714                           
   715                           	psect	cstackCOMMON
   716  0070                     __pcstackCOMMON:
   717  0070                     ?_Lcd_Init:
   718  0070                     ?_Lcd_Clear:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_ADC_IF:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_Division:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_isr:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??_isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_main:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_Lcd_Cmd:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_Lcd_Write_Char:	
   740                           ; 1 bytes @ 0x0
   741                           
   742                           
   743                           ; 1 bytes @ 0x0
   744  0070                     	ds	3
   745  0073                     ?_ADC_CONFIG:
   746  0073                     ??_USART_CONFIG:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0073                     ??_ADC_IF:	
   750                           ; 1 bytes @ 0x3
   751                           
   752  0073                     ?_UART_write:	
   753                           ; 1 bytes @ 0x3
   754                           
   755  0073                     ??_Lcd_Cmd:	
   756                           ; 1 bytes @ 0x3
   757                           
   758  0073                     ??_Lcd_Write_Char:	
   759                           ; 1 bytes @ 0x3
   760                           
   761  0073                     ?__Umul8_16:	
   762                           ; 1 bytes @ 0x3
   763                           
   764  0073                     ?___awmod:	
   765                           ; 2 bytes @ 0x3
   766                           
   767  0073                     ?___lwdiv:	
   768                           ; 2 bytes @ 0x3
   769                           
   770  0073                     ?___xxtofl:	
   771                           ; 2 bytes @ 0x3
   772                           
   773  0073                     __Umul8_16@multiplicand:	
   774                           ; 4 bytes @ 0x3
   775                           
   776  0073                     UART_write@word:	
   777                           ; 1 bytes @ 0x3
   778                           
   779  0073                     ADC_CONFIG@frec:	
   780                           ; 2 bytes @ 0x3
   781                           
   782  0073                     ___awmod@divisor:	
   783                           ; 2 bytes @ 0x3
   784                           
   785  0073                     ___lwdiv@divisor:	
   786                           ; 2 bytes @ 0x3
   787                           
   788  0073                     ___xxtofl@val:	
   789                           ; 2 bytes @ 0x3
   790                           
   791                           
   792                           ; 4 bytes @ 0x3
   793  0073                     	ds	1
   794  0074                     Lcd_Write_Char@a:
   795                           
   796                           ; 1 bytes @ 0x4
   797  0074                     	ds	1
   798  0075                     ??_ADC_CONFIG:
   799  0075                     ?_Lcd_Write_String:	
   800                           ; 1 bytes @ 0x5
   801                           
   802  0075                     ??__Umul8_16:	
   803                           ; 1 bytes @ 0x5
   804                           
   805  0075                     ??_UART_write:	
   806                           ; 1 bytes @ 0x5
   807                           
   808  0075                     Lcd_Cmd@a:	
   809                           ; 1 bytes @ 0x5
   810                           
   811  0075                     Lcd_Write_String@a:	
   812                           ; 1 bytes @ 0x5
   813                           
   814  0075                     ___awmod@dividend:	
   815                           ; 2 bytes @ 0x5
   816                           
   817  0075                     ___lwdiv@dividend:	
   818                           ; 2 bytes @ 0x5
   819                           
   820                           
   821                           ; 2 bytes @ 0x5
   822  0075                     	ds	1
   823  0076                     ??_Lcd_Init:
   824  0076                     ??_Lcd_Clear:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0076                     ?_Lcd_Set_Cursor:	
   828                           ; 1 bytes @ 0x6
   829                           
   830  0076                     Lcd_Set_Cursor@b:	
   831                           ; 1 bytes @ 0x6
   832                           
   833                           
   834                           ; 1 bytes @ 0x6
   835  0076                     	ds	1
   836  0077                     ??_Lcd_Set_Cursor:
   837  0077                     ??___awmod:	
   838                           ; 1 bytes @ 0x7
   839                           
   840  0077                     ??___lwdiv:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0077                     Lcd_Set_Cursor@a:	
   844                           ; 1 bytes @ 0x7
   845                           
   846                           
   847                           ; 1 bytes @ 0x7
   848  0077                     	ds	1
   849                           
   850                           	psect	cstackBANK0
   851  0020                     __pcstackBANK0:
   852  0020                     ?_USART_CONFIG:
   853  0020                     ??_Lcd_Write_String:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0020                     ??___xxtofl:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0020                     ___awmod@counter:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0020                     ___lwdiv@counter:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0020                     USART_CONFIG@frec:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0020                     __Umul8_16@product:	
   869                           ; 2 bytes @ 0x0
   870                           
   871                           
   872                           ; 2 bytes @ 0x0
   873  0020                     	ds	1
   874  0021                     ___awmod@sign:
   875  0021                     ___lwdiv@quotient:	
   876                           ; 1 bytes @ 0x1
   877                           
   878                           
   879                           ; 2 bytes @ 0x1
   880  0021                     	ds	1
   881  0022                     ?___awdiv:
   882  0022                     USART_CONFIG@tr:	
   883                           ; 2 bytes @ 0x2
   884                           
   885  0022                     ___awdiv@divisor:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0022                     __Umul8_16@word_mpld:	
   889                           ; 2 bytes @ 0x2
   890                           
   891                           
   892                           ; 2 bytes @ 0x2
   893  0022                     	ds	1
   894  0023                     ?___lwmod:
   895  0023                     Lcd_Write_String@i:	
   896                           ; 2 bytes @ 0x3
   897                           
   898  0023                     ___lwmod@divisor:	
   899                           ; 2 bytes @ 0x3
   900                           
   901                           
   902                           ; 2 bytes @ 0x3
   903  0023                     	ds	1
   904  0024                     __Umul8_16@multiplier:
   905  0024                     ___xxtofl@sign:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0024                     USART_CONFIG@rc:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0024                     ___awdiv@dividend:	
   912                           ; 2 bytes @ 0x4
   913                           
   914                           
   915                           ; 2 bytes @ 0x4
   916  0024                     	ds	1
   917  0025                     ___xxtofl@exp:
   918  0025                     ___lwmod@dividend:	
   919                           ; 1 bytes @ 0x5
   920                           
   921                           
   922                           ; 2 bytes @ 0x5
   923  0025                     	ds	1
   924  0026                     ??___awdiv:
   925  0026                     ___xxtofl@arg:	
   926                           ; 1 bytes @ 0x6
   927                           
   928                           
   929                           ; 4 bytes @ 0x6
   930  0026                     	ds	1
   931  0027                     ??___lwmod:
   932  0027                     ___awdiv@counter:	
   933                           ; 1 bytes @ 0x7
   934                           
   935                           
   936                           ; 1 bytes @ 0x7
   937  0027                     	ds	1
   938  0028                     ___awdiv@sign:
   939  0028                     ___lwmod@counter:	
   940                           ; 1 bytes @ 0x8
   941                           
   942                           
   943                           ; 1 bytes @ 0x8
   944  0028                     	ds	1
   945  0029                     ?_sprintf:
   946  0029                     sprintf@f:	
   947                           ; 2 bytes @ 0x9
   948                           
   949  0029                     ___awdiv@quotient:	
   950                           ; 1 bytes @ 0x9
   951                           
   952                           
   953                           ; 2 bytes @ 0x9
   954  0029                     	ds	1
   955  002A                     ?___flmul:
   956  002A                     ___flmul@b:	
   957                           ; 4 bytes @ 0xA
   958                           
   959                           
   960                           ; 4 bytes @ 0xA
   961  002A                     	ds	1
   962  002B                     ??_Division:
   963                           
   964                           ; 1 bytes @ 0xB
   965  002B                     	ds	1
   966  002C                     ??_sprintf:
   967                           
   968                           ; 1 bytes @ 0xC
   969  002C                     	ds	2
   970  002E                     _Division$1124:
   971  002E                     ___flmul@a:	
   972                           ; 2 bytes @ 0xE
   973                           
   974                           
   975                           ; 4 bytes @ 0xE
   976  002E                     	ds	1
   977  002F                     sprintf@ap:
   978                           
   979                           ; 1 bytes @ 0xF
   980  002F                     	ds	1
   981  0030                     Division@y:
   982  0030                     sprintf@flag:	
   983                           ; 1 bytes @ 0x10
   984                           
   985                           
   986                           ; 1 bytes @ 0x10
   987  0030                     	ds	1
   988  0031                     sprintf@prec:
   989                           
   990                           ; 1 bytes @ 0x11
   991  0031                     	ds	1
   992  0032                     ??___flmul:
   993  0032                     sprintf@val:	
   994                           ; 1 bytes @ 0x12
   995                           
   996                           
   997                           ; 2 bytes @ 0x12
   998  0032                     	ds	2
   999  0034                     sprintf@sp:
  1000                           
  1001                           ; 1 bytes @ 0x14
  1002  0034                     	ds	1
  1003  0035                     sprintf@c:
  1004                           
  1005                           ; 1 bytes @ 0x15
  1006  0035                     	ds	2
  1007  0037                     ___flmul@sign:
  1008                           
  1009                           ; 1 bytes @ 0x17
  1010  0037                     	ds	1
  1011  0038                     ___flmul@grs:
  1012                           
  1013                           ; 4 bytes @ 0x18
  1014  0038                     	ds	4
  1015  003C                     ___flmul@aexp:
  1016                           
  1017                           ; 1 bytes @ 0x1C
  1018  003C                     	ds	1
  1019  003D                     ___flmul@bexp:
  1020                           
  1021                           ; 1 bytes @ 0x1D
  1022  003D                     	ds	1
  1023  003E                     ___flmul@prod:
  1024                           
  1025                           ; 4 bytes @ 0x1E
  1026  003E                     	ds	4
  1027  0042                     ___flmul@temp:
  1028                           
  1029                           ; 2 bytes @ 0x22
  1030  0042                     	ds	2
  1031  0044                     ?___fltol:
  1032  0044                     ___fltol@f1:	
  1033                           ; 4 bytes @ 0x24
  1034                           
  1035                           
  1036                           ; 4 bytes @ 0x24
  1037  0044                     	ds	4
  1038  0048                     ??___fltol:
  1039                           
  1040                           ; 1 bytes @ 0x28
  1041  0048                     	ds	5
  1042  004D                     ___fltol@sign1:
  1043                           
  1044                           ; 1 bytes @ 0x2D
  1045  004D                     	ds	1
  1046  004E                     ___fltol@exp1:
  1047                           
  1048                           ; 1 bytes @ 0x2E
  1049  004E                     	ds	1
  1050                           
  1051                           	psect	maintext
  1052  0388                     __pmaintext:	
  1053 ;;
  1054 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1055 ;;
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 93 in file "Lab2.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B00/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       0       4       0       0
  1075 ;;      Totals:         0       0       4       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels required when called:    3
  1078 ;; This function calls:
  1079 ;;		_ADC_CONFIG
  1080 ;;		_ADC_IF
  1081 ;;		_Division
  1082 ;;		_Lcd_Clear
  1083 ;;		_Lcd_Init
  1084 ;;		_Lcd_Set_Cursor
  1085 ;;		_Lcd_Write_String
  1086 ;;		_UART_write
  1087 ;;		_USART_CONFIG
  1088 ;;		___flmul
  1089 ;;		___fltol
  1090 ;;		___xxtofl
  1091 ;;		_sprintf
  1092 ;; This function is called by:
  1093 ;;		Startup code after reset
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _main
  1099  0388                     _main:
  1100  0388                     l2564:	
  1101                           ;incstack = 0
  1102                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1103                           
  1104                           
  1105                           ;Lab2.c: 94:     ANSEL = 0x03;
  1106  0388  3003               	movlw	3
  1107  0389  1683               	bsf	3,5	;RP0=1, select bank3
  1108  038A  1703               	bsf	3,6	;RP1=1, select bank3
  1109  038B  0088               	movwf	8	;volatile
  1110  038C                     l2566:
  1111                           
  1112                           ;Lab2.c: 95:     ANSELH = 0x00;
  1113  038C  0189               	clrf	9	;volatile
  1114  038D                     l2568:
  1115                           
  1116                           ;Lab2.c: 97:     TRISA = 0x03;
  1117  038D  3003               	movlw	3
  1118  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1119  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0390  0085               	movwf	5	;volatile
  1121                           
  1122                           ;Lab2.c: 98:     TRISB = 0x00;
  1123  0391  0186               	clrf	6	;volatile
  1124  0392                     l2570:
  1125                           
  1126                           ;Lab2.c: 99:     TRISC = 0x80;
  1127  0392  3080               	movlw	128
  1128  0393  0087               	movwf	7	;volatile
  1129  0394                     l2572:
  1130                           
  1131                           ;Lab2.c: 100:     TRISD = 0x00;
  1132  0394  0188               	clrf	8	;volatile
  1133  0395                     l2574:
  1134                           
  1135                           ;Lab2.c: 102:     OSCCONbits.IRCF = 0B110;
  1136  0395  080F               	movf	15,w	;volatile
  1137  0396  398F               	andlw	-113
  1138  0397  3860               	iorlw	96
  1139  0398  008F               	movwf	15	;volatile
  1140  0399                     l2576:
  1141                           
  1142                           ;Lab2.c: 103:     OSCCONbits.OSTS = 0;
  1143  0399  118F               	bcf	15,3	;volatile
  1144  039A                     l2578:
  1145                           
  1146                           ;Lab2.c: 104:     OSCCONbits.SCS = 1;
  1147  039A  140F               	bsf	15,0	;volatile
  1148  039B                     l2580:
  1149                           
  1150                           ;Lab2.c: 106:     ADC_CONFIG(4);
  1151  039B  3004               	movlw	4
  1152  039C  00F3               	movwf	ADC_CONFIG@frec
  1153  039D  3000               	movlw	0
  1154  039E  00F4               	movwf	ADC_CONFIG@frec+1
  1155  039F  120A  158A  24FB  120A  118A  	fcall	_ADC_CONFIG
  1156  03A4                     l2582:
  1157                           
  1158                           ;Lab2.c: 107:     USART_CONFIG(4, 1, 1);
  1159  03A4  3004               	movlw	4
  1160  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1161  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1162  03A7  00A0               	movwf	USART_CONFIG@frec
  1163  03A8  3000               	movlw	0
  1164  03A9  00A1               	movwf	USART_CONFIG@frec+1
  1165  03AA  3001               	movlw	1
  1166  03AB  00A2               	movwf	USART_CONFIG@tr
  1167  03AC  3000               	movlw	0
  1168  03AD  00A3               	movwf	USART_CONFIG@tr+1
  1169  03AE  3001               	movlw	1
  1170  03AF  00A4               	movwf	USART_CONFIG@rc
  1171  03B0  3000               	movlw	0
  1172  03B1  00A5               	movwf	USART_CONFIG@rc+1
  1173  03B2  120A  158A  25A6  120A  118A  	fcall	_USART_CONFIG
  1174  03B7                     l2584:
  1175                           
  1176                           ;Lab2.c: 109:     INTCONbits.PEIE = 1;
  1177  03B7  170B               	bsf	11,6	;volatile
  1178  03B8                     l2586:
  1179                           
  1180                           ;Lab2.c: 110:     PIE1bits.ADIE = 1;
  1181  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1182  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1183  03BA  170C               	bsf	12,6	;volatile
  1184  03BB                     l2588:
  1185                           
  1186                           ;Lab2.c: 112:     PIE1bits.RCIE = 1;
  1187  03BB  168C               	bsf	12,5	;volatile
  1188  03BC                     l2590:
  1189                           
  1190                           ;Lab2.c: 113:     ADCON0bits.GO = 1;
  1191  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1192  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1193  03BE  149F               	bsf	31,1	;volatile
  1194  03BF                     l2592:
  1195                           
  1196                           ;Lab2.c: 114:     Lcd_Init();
  1197  03BF  120A  158A  26D2  120A  118A  	fcall	_Lcd_Init
  1198  03C4                     l2594:
  1199                           
  1200                           ;Lab2.c: 115:     RCIF = 0;
  1201  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1202  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1203  03C6  128C               	bcf	12,5	;volatile
  1204  03C7                     l2596:
  1205                           
  1206                           ;Lab2.c: 117:     INTCONbits.GIE = 1;
  1207  03C7  178B               	bsf	11,7	;volatile
  1208  03C8                     l2598:
  1209                           
  1210                           ;Lab2.c: 118:     Lcd_Clear();
  1211  03C8  120A  158A  243E  120A  118A  	fcall	_Lcd_Clear
  1212  03CD                     l2600:
  1213                           
  1214                           ;Lab2.c: 119:     Lcd_Set_Cursor(1,1);
  1215  03CD  01F6               	clrf	Lcd_Set_Cursor@b
  1216  03CE  0AF6               	incf	Lcd_Set_Cursor@b,f
  1217  03CF  3001               	movlw	1
  1218  03D0  120A  158A  246D  120A  118A  	fcall	_Lcd_Set_Cursor
  1219  03D5                     l2602:
  1220                           
  1221                           ;Lab2.c: 120:     Lcd_Write_String("S1:  S2:  S3:");
  1222  03D5  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1223  03D6  00F5               	movwf	Lcd_Write_String@a
  1224  03D7  3080               	movlw	128
  1225  03D8  00F6               	movwf	Lcd_Write_String@a+1
  1226  03D9  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1227  03DE                     l2604:
  1228                           
  1229                           ;Lab2.c: 121:     UART_write("Presione * para mostrar los pot");
  1230  03DE  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1231  03DF  00F3               	movwf	UART_write@word
  1232  03E0  3080               	movlw	128
  1233  03E1  00F4               	movwf	UART_write@word+1
  1234  03E2  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1235  03E7                     l2606:
  1236                           
  1237                           ;Lab2.c: 124:         ADC_IF();
  1238  03E7  120A  158A  248B  120A  118A  	fcall	_ADC_IF
  1239  03EC                     l2608:
  1240                           
  1241                           ;Lab2.c: 125:         PORTB = con;
  1242  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1243  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1244  03EE  0858               	movf	_con,w
  1245  03EF  0086               	movwf	6	;volatile
  1246  03F0                     l2610:
  1247                           
  1248                           ;Lab2.c: 126:         vol1 = (pot1*0.01961);
  1249  03F0  085A               	movf	_pot1,w
  1250  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1251  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1252  03F3  00BE               	movwf	??_main^(0+128)
  1253  03F4  01BF               	clrf	(??_main^(0+128)+1)
  1254  03F5  01C0               	clrf	(??_main^(0+128)+2)
  1255  03F6  01C1               	clrf	(??_main^(0+128)+3)
  1256  03F7  0841               	movf	(??_main+3)^(0+128),w
  1257  03F8  00F6               	movwf	___xxtofl@val+3
  1258  03F9  0840               	movf	(??_main+2)^(0+128),w
  1259  03FA  00F5               	movwf	___xxtofl@val+2
  1260  03FB  083F               	movf	(??_main+1)^(0+128),w
  1261  03FC  00F4               	movwf	___xxtofl@val+1
  1262  03FD  083E               	movf	??_main^(0+128),w
  1263  03FE  00F3               	movwf	___xxtofl@val
  1264  03FF  3001               	movlw	1
  1265  0400  120A  118A  2656  120A  118A  	fcall	___xxtofl
  1266  0405  0876               	movf	?___xxtofl+3,w
  1267  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0408  00B1               	movwf	___flmul@a+3
  1270  0409  0875               	movf	?___xxtofl+2,w
  1271  040A  00B0               	movwf	___flmul@a+2
  1272  040B  0874               	movf	?___xxtofl+1,w
  1273  040C  00AF               	movwf	___flmul@a+1
  1274  040D  0873               	movf	?___xxtofl,w
  1275  040E  00AE               	movwf	___flmul@a
  1276  040F  303C               	movlw	60
  1277  0410  00AD               	movwf	___flmul@b+3
  1278  0411  30A0               	movlw	160
  1279  0412  00AC               	movwf	___flmul@b+2
  1280  0413  30A5               	movlw	165
  1281  0414  00AB               	movwf	___flmul@b+1
  1282  0415  3027               	movlw	39
  1283  0416  00AA               	movwf	___flmul@b
  1284  0417  120A  118A  2027  120A  118A  	fcall	___flmul
  1285  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1286  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1287  041E  082D               	movf	?___flmul+3,w
  1288  041F  00C7               	movwf	___fltol@f1+3
  1289  0420  082C               	movf	?___flmul+2,w
  1290  0421  00C6               	movwf	___fltol@f1+2
  1291  0422  082B               	movf	?___flmul+1,w
  1292  0423  00C5               	movwf	___fltol@f1+1
  1293  0424  082A               	movf	?___flmul,w
  1294  0425  00C4               	movwf	___fltol@f1
  1295  0426  120A  118A  2712  120A  118A  	fcall	___fltol
  1296  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1297  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1298  042D  0845               	movf	?___fltol+1,w
  1299  042E  00D4               	movwf	_vol1+1
  1300  042F  0844               	movf	?___fltol,w
  1301  0430  00D3               	movwf	_vol1
  1302  0431                     l2612:
  1303                           
  1304                           ;Lab2.c: 127:         vol2 = (pot2*0.01961);
  1305  0431  0859               	movf	_pot2,w
  1306  0432  1683               	bsf	3,5	;RP0=1, select bank1
  1307  0433  1303               	bcf	3,6	;RP1=0, select bank1
  1308  0434  00BE               	movwf	??_main^(0+128)
  1309  0435  01BF               	clrf	(??_main^(0+128)+1)
  1310  0436  01C0               	clrf	(??_main^(0+128)+2)
  1311  0437  01C1               	clrf	(??_main^(0+128)+3)
  1312  0438  0841               	movf	(??_main+3)^(0+128),w
  1313  0439  00F6               	movwf	___xxtofl@val+3
  1314  043A  0840               	movf	(??_main+2)^(0+128),w
  1315  043B  00F5               	movwf	___xxtofl@val+2
  1316  043C  083F               	movf	(??_main+1)^(0+128),w
  1317  043D  00F4               	movwf	___xxtofl@val+1
  1318  043E  083E               	movf	??_main^(0+128),w
  1319  043F  00F3               	movwf	___xxtofl@val
  1320  0440  3001               	movlw	1
  1321  0441  120A  118A  2656  120A  118A  	fcall	___xxtofl
  1322  0446  0876               	movf	?___xxtofl+3,w
  1323  0447  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0448  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0449  00B1               	movwf	___flmul@a+3
  1326  044A  0875               	movf	?___xxtofl+2,w
  1327  044B  00B0               	movwf	___flmul@a+2
  1328  044C  0874               	movf	?___xxtofl+1,w
  1329  044D  00AF               	movwf	___flmul@a+1
  1330  044E  0873               	movf	?___xxtofl,w
  1331  044F  00AE               	movwf	___flmul@a
  1332  0450  303C               	movlw	60
  1333  0451  00AD               	movwf	___flmul@b+3
  1334  0452  30A0               	movlw	160
  1335  0453  00AC               	movwf	___flmul@b+2
  1336  0454  30A5               	movlw	165
  1337  0455  00AB               	movwf	___flmul@b+1
  1338  0456  3027               	movlw	39
  1339  0457  00AA               	movwf	___flmul@b
  1340  0458  120A  118A  2027  120A  118A  	fcall	___flmul
  1341  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1342  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1343  045F  082D               	movf	?___flmul+3,w
  1344  0460  00C7               	movwf	___fltol@f1+3
  1345  0461  082C               	movf	?___flmul+2,w
  1346  0462  00C6               	movwf	___fltol@f1+2
  1347  0463  082B               	movf	?___flmul+1,w
  1348  0464  00C5               	movwf	___fltol@f1+1
  1349  0465  082A               	movf	?___flmul,w
  1350  0466  00C4               	movwf	___fltol@f1
  1351  0467  120A  118A  2712  120A  118A  	fcall	___fltol
  1352  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1353  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1354  046E  0845               	movf	?___fltol+1,w
  1355  046F  00D2               	movwf	_vol2+1
  1356  0470  0844               	movf	?___fltol,w
  1357  0471  00D1               	movwf	_vol2
  1358  0472                     l2614:
  1359                           
  1360                           ;Lab2.c: 129:         Division(con);
  1361  0472  0858               	movf	_con,w
  1362  0473  120A  158A  272F  120A  118A  	fcall	_Division
  1363  0478                     l2616:
  1364                           
  1365                           ;Lab2.c: 130:         sprintf(buffer, "%dV  ", vol1);
  1366  0478  304A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1367  0479  1683               	bsf	3,5	;RP0=1, select bank1
  1368  047A  1303               	bcf	3,6	;RP1=0, select bank1
  1369  047B  00BE               	movwf	??_main^(0+128)
  1370  047C  083E               	movf	??_main^(0+128),w
  1371  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1372  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1373  047F  00A9               	movwf	sprintf@f
  1374  0480  0854               	movf	_vol1+1,w
  1375  0481  00AB               	movwf	?_sprintf+2
  1376  0482  0853               	movf	_vol1,w
  1377  0483  00AA               	movwf	?_sprintf+1
  1378  0484  3065               	movlw	(low (_buffer| 0))& (0+255)
  1379  0485  120A  118A  256C  120A  118A  	fcall	_sprintf
  1380  048A                     l2618:
  1381                           
  1382                           ;Lab2.c: 131:         sprintf(buffer1, " %dV ", vol2);
  1383  048A  3050               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1384  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1385  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1386  048D  00BE               	movwf	??_main^(0+128)
  1387  048E  083E               	movf	??_main^(0+128),w
  1388  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0491  00A9               	movwf	sprintf@f
  1391  0492  0852               	movf	_vol2+1,w
  1392  0493  00AB               	movwf	?_sprintf+2
  1393  0494  0851               	movf	_vol2,w
  1394  0495  00AA               	movwf	?_sprintf+1
  1395  0496  305B               	movlw	(low (_buffer1| 0))& (0+255)
  1396  0497  120A  118A  256C  120A  118A  	fcall	_sprintf
  1397  049C                     l2620:
  1398                           
  1399                           ;Lab2.c: 132:         sprintf(buffer2, "  %d", cen);
  1400  049C  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1401  049D  1683               	bsf	3,5	;RP0=1, select bank1
  1402  049E  1303               	bcf	3,6	;RP1=0, select bank1
  1403  049F  00BE               	movwf	??_main^(0+128)
  1404  04A0  083E               	movf	??_main^(0+128),w
  1405  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1406  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1407  04A3  00A9               	movwf	sprintf@f
  1408  04A4  0857               	movf	_cen,w
  1409  04A5  1683               	bsf	3,5	;RP0=1, select bank1
  1410  04A6  1303               	bcf	3,6	;RP1=0, select bank1
  1411  04A7  00BF               	movwf	(??_main+1)^(0+128)
  1412  04A8  01C0               	clrf	((??_main+1)^(0+128)+1)
  1413  04A9  083F               	movf	(??_main+1)^(0+128),w
  1414  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1415  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1416  04AC  00AA               	movwf	?_sprintf+1
  1417  04AD  1683               	bsf	3,5	;RP0=1, select bank1
  1418  04AE  1303               	bcf	3,6	;RP1=0, select bank1
  1419  04AF  0840               	movf	(??_main+2)^(0+128),w
  1420  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1421  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1422  04B2  00AB               	movwf	?_sprintf+2
  1423  04B3  30B4               	movlw	(low (_buffer2| 0))& (0+255)
  1424  04B4  120A  118A  256C  120A  118A  	fcall	_sprintf
  1425  04B9                     l2622:
  1426                           
  1427                           ;Lab2.c: 133:         sprintf(buffer3, "%d", dec);
  1428  04B9  3058               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1429  04BA  1683               	bsf	3,5	;RP0=1, select bank1
  1430  04BB  1303               	bcf	3,6	;RP1=0, select bank1
  1431  04BC  00BE               	movwf	??_main^(0+128)
  1432  04BD  083E               	movf	??_main^(0+128),w
  1433  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1434  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1435  04C0  00A9               	movwf	sprintf@f
  1436  04C1  0856               	movf	_dec,w
  1437  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  1438  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  1439  04C4  00BF               	movwf	(??_main+1)^(0+128)
  1440  04C5  01C0               	clrf	((??_main+1)^(0+128)+1)
  1441  04C6  083F               	movf	(??_main+1)^(0+128),w
  1442  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1443  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1444  04C9  00AA               	movwf	?_sprintf+1
  1445  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1446  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1447  04CC  0840               	movf	(??_main+2)^(0+128),w
  1448  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1449  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1450  04CF  00AB               	movwf	?_sprintf+2
  1451  04D0  30AA               	movlw	(low (_buffer3| 0))& (0+255)
  1452  04D1  120A  118A  256C  120A  118A  	fcall	_sprintf
  1453  04D6                     l2624:
  1454                           
  1455                           ;Lab2.c: 134:         sprintf(buffer4, "%d", uni);
  1456  04D6  3058               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1457  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1458  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1459  04D9  00BE               	movwf	??_main^(0+128)
  1460  04DA  083E               	movf	??_main^(0+128),w
  1461  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1462  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1463  04DD  00A9               	movwf	sprintf@f
  1464  04DE  0855               	movf	_uni,w
  1465  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  1466  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  1467  04E1  00BF               	movwf	(??_main+1)^(0+128)
  1468  04E2  01C0               	clrf	((??_main+1)^(0+128)+1)
  1469  04E3  083F               	movf	(??_main+1)^(0+128),w
  1470  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1471  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1472  04E6  00AA               	movwf	?_sprintf+1
  1473  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  1474  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  1475  04E9  0840               	movf	(??_main+2)^(0+128),w
  1476  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1477  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1478  04EC  00AB               	movwf	?_sprintf+2
  1479  04ED  30A0               	movlw	(low (_buffer4| 0))& (0+255)
  1480  04EE  120A  118A  256C  120A  118A  	fcall	_sprintf
  1481  04F3                     l2626:
  1482                           
  1483                           ;Lab2.c: 137:         Lcd_Set_Cursor(2,1);
  1484  04F3  01F6               	clrf	Lcd_Set_Cursor@b
  1485  04F4  0AF6               	incf	Lcd_Set_Cursor@b,f
  1486  04F5  3002               	movlw	2
  1487  04F6  120A  158A  246D  120A  118A  	fcall	_Lcd_Set_Cursor
  1488  04FB                     l2628:
  1489                           
  1490                           ;Lab2.c: 138:         Lcd_Write_String(buffer);
  1491  04FB  3065               	movlw	(low (_buffer| 0))& (0+255)
  1492  04FC  00F5               	movwf	Lcd_Write_String@a
  1493  04FD  3000               	movlw	0
  1494  04FE  00F6               	movwf	Lcd_Write_String@a+1
  1495  04FF  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1496  0504                     l2630:
  1497                           
  1498                           ;Lab2.c: 139:         Lcd_Write_String(buffer1);
  1499  0504  305B               	movlw	(low (_buffer1| 0))& (0+255)
  1500  0505  00F5               	movwf	Lcd_Write_String@a
  1501  0506  3000               	movlw	0
  1502  0507  00F6               	movwf	Lcd_Write_String@a+1
  1503  0508  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1504  050D                     l2632:
  1505                           
  1506                           ;Lab2.c: 140:         Lcd_Write_String(buffer2);
  1507  050D  30B4               	movlw	(low (_buffer2| 0))& (0+255)
  1508  050E  00F5               	movwf	Lcd_Write_String@a
  1509  050F  3000               	movlw	0
  1510  0510  00F6               	movwf	Lcd_Write_String@a+1
  1511  0511  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1512  0516                     l2634:
  1513                           
  1514                           ;Lab2.c: 141:         Lcd_Write_String(buffer3);
  1515  0516  30AA               	movlw	(low (_buffer3| 0))& (0+255)
  1516  0517  00F5               	movwf	Lcd_Write_String@a
  1517  0518  3000               	movlw	0
  1518  0519  00F6               	movwf	Lcd_Write_String@a+1
  1519  051A  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1520  051F                     l2636:
  1521                           
  1522                           ;Lab2.c: 142:         Lcd_Write_String(buffer4);
  1523  051F  30A0               	movlw	(low (_buffer4| 0))& (0+255)
  1524  0520  00F5               	movwf	Lcd_Write_String@a
  1525  0521  3000               	movlw	0
  1526  0522  00F6               	movwf	Lcd_Write_String@a+1
  1527  0523  120A  158A  25EB  120A  118A  	fcall	_Lcd_Write_String
  1528                           
  1529                           ;Lab2.c: 144:         if (x == 1){
  1530  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1532  052A  034F               	decf	_x,w
  1533  052B  0450               	iorwf	_x+1,w
  1534  052C  1D03               	btfss	3,2
  1535  052D  2D2F               	goto	u2951
  1536  052E  2D30               	goto	u2950
  1537  052F                     u2951:
  1538  052F  2BE7               	goto	l2606
  1539  0530                     u2950:
  1540  0530                     l2638:
  1541                           
  1542                           ;Lab2.c: 145:             x = 0;
  1543  0530  01CF               	clrf	_x
  1544  0531  01D0               	clrf	_x+1
  1545  0532                     l2640:
  1546                           
  1547                           ;Lab2.c: 146:             UART_write("\r \0");
  1548  0532  305B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1549  0533  00F3               	movwf	UART_write@word
  1550  0534  3080               	movlw	128
  1551  0535  00F4               	movwf	UART_write@word+1
  1552  0536  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1553  053B                     l2642:
  1554                           
  1555                           ;Lab2.c: 147:             UART_write("Pot 1: ");
  1556  053B  3042               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1557  053C  00F3               	movwf	UART_write@word
  1558  053D  3080               	movlw	128
  1559  053E  00F4               	movwf	UART_write@word+1
  1560  053F  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1561  0544                     l2644:
  1562                           
  1563                           ;Lab2.c: 148:             UART_write(buffer);
  1564  0544  3065               	movlw	(low (_buffer| 0))& (0+255)
  1565  0545  00F3               	movwf	UART_write@word
  1566  0546  3000               	movlw	0
  1567  0547  00F4               	movwf	UART_write@word+1
  1568  0548  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1569  054D                     l2646:
  1570                           
  1571                           ;Lab2.c: 149:             UART_write(" Pot 2: ");
  1572  054D  3039               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1573  054E  00F3               	movwf	UART_write@word
  1574  054F  3080               	movlw	128
  1575  0550  00F4               	movwf	UART_write@word+1
  1576  0551  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1577  0556                     l2648:
  1578                           
  1579                           ;Lab2.c: 150:             UART_write(buffer1);
  1580  0556  305B               	movlw	(low (_buffer1| 0))& (0+255)
  1581  0557  00F3               	movwf	UART_write@word
  1582  0558  3000               	movlw	0
  1583  0559  00F4               	movwf	UART_write@word+1
  1584  055A  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1585  055F                     l2650:
  1586                           
  1587                           ;Lab2.c: 151:             UART_write("\r \0");
  1588  055F  305B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1589  0560  00F3               	movwf	UART_write@word
  1590  0561  3080               	movlw	128
  1591  0562  00F4               	movwf	UART_write@word+1
  1592  0563  120A  158A  24AA  120A  118A  	fcall	_UART_write
  1593  0568  2BE7               	goto	l2606
  1594  0569  120A  118A  280C   	ljmp	start
  1595  056C                     __end_of_main:
  1596                           
  1597                           	psect	text1
  1598  056C                     __ptext1:	
  1599 ;; *************** function _sprintf *****************
  1600 ;; Defined at:
  1601 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  sp              1    wreg     PTR unsigned char 
  1604 ;;		 -> buffer4(10), buffer3(10), buffer2(10), buffer1(10), 
  1605 ;;		 -> buffer(10), 
  1606 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1607 ;;		 -> STR_7(3), STR_6(3), STR_5(5), STR_4(6), 
  1608 ;;		 -> STR_3(6), 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1611 ;;		 -> buffer4(10), buffer3(10), buffer2(10), buffer1(10), 
  1612 ;;		 -> buffer(10), 
  1613 ;;  tmpval          4    0        struct .
  1614 ;;  val             2   18[BANK0 ] unsigned int 
  1615 ;;  cp              2    0        PTR const unsigned char 
  1616 ;;  len             2    0        unsigned int 
  1617 ;;  c               1   21[BANK0 ] unsigned char 
  1618 ;;  prec            1   17[BANK0 ] char 
  1619 ;;  flag            1   16[BANK0 ] unsigned char 
  1620 ;;  ap              1   15[BANK0 ] PTR void [1]
  1621 ;;		 -> ?_sprintf(2), 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    9[BANK0 ] int 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         0       3       0       0       0
  1632 ;;      Locals:         0       7       0       0       0
  1633 ;;      Temps:          0       3       0       0       0
  1634 ;;      Totals:         0      13       0       0       0
  1635 ;;Total ram usage:       13 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    2
  1638 ;; This function calls:
  1639 ;;		___lwdiv
  1640 ;;		___lwmod
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _sprintf
  1648  056C                     _sprintf:
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1652                           ;sprintf@sp stored from wreg
  1653  056C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  056D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  056E  00B4               	movwf	sprintf@sp
  1656  056F                     l2458:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1659  056F  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1660  0570  00AC               	movwf	??_sprintf
  1661  0571  082C               	movf	??_sprintf,w
  1662  0572  00AF               	movwf	sprintf@ap
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1665  0573  2E3F               	goto	l2510
  1666  0574                     l2460:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1669  0574  3025               	movlw	37
  1670  0575  0635               	xorwf	sprintf@c,w
  1671  0576  1903               	btfsc	3,2
  1672  0577  2D79               	goto	u2741
  1673  0578  2D7A               	goto	u2740
  1674  0579                     u2741:
  1675  0579  2D86               	goto	l2466
  1676  057A                     u2740:
  1677  057A                     l2462:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1680  057A  0835               	movf	sprintf@c,w
  1681  057B  00AC               	movwf	??_sprintf
  1682  057C  0834               	movf	sprintf@sp,w
  1683  057D  0084               	movwf	4
  1684  057E  082C               	movf	??_sprintf,w
  1685  057F  1383               	bcf	3,7	;select IRP bank0
  1686  0580  0080               	movwf	0
  1687  0581                     l2464:
  1688  0581  3001               	movlw	1
  1689  0582  00AC               	movwf	??_sprintf
  1690  0583  082C               	movf	??_sprintf,w
  1691  0584  07B4               	addwf	sprintf@sp,f
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1694  0585  2E3F               	goto	l2510
  1695  0586                     l2466:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1698  0586  01B0               	clrf	sprintf@flag
  1699  0587                     l2470:	
  1700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1701                           
  1702  0587  3001               	movlw	1
  1703  0588  07A9               	addwf	sprintf@f,f
  1704  0589  30FF               	movlw	-1
  1705  058A  0729               	addwf	sprintf@f,w
  1706  058B  0084               	movwf	4
  1707  058C  120A  118A  2798  120A  118A  	fcall	stringdir
  1708  0591  00B5               	movwf	sprintf@c
  1709  0592  00AC               	movwf	??_sprintf
  1710  0593  01AD               	clrf	??_sprintf+1
  1711                           
  1712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1713                           ; Switch size 1, requested type "simple"
  1714                           ; Number of cases is 1, Range of values is 0 to 0
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; simple_byte            4     3 (average)
  1718                           ; direct_byte           11     8 (fixed)
  1719                           ; jumptable            260     6 (fixed)
  1720                           ;	Chosen strategy is simple_byte
  1721  0594  082D               	movf	??_sprintf+1,w
  1722  0595  3A00               	xorlw	0	; case 0
  1723  0596  1903               	skipnz
  1724  0597  2D99               	goto	l2712
  1725  0598  2E3F               	goto	l2510
  1726  0599                     l2712:
  1727                           
  1728                           ; Switch size 1, requested type "simple"
  1729                           ; Number of cases is 3, Range of values is 0 to 105
  1730                           ; switch strategies available:
  1731                           ; Name         Instructions Cycles
  1732                           ; simple_byte           10     6 (average)
  1733                           ; jumptable            260     6 (fixed)
  1734                           ;	Chosen strategy is simple_byte
  1735  0599  082C               	movf	??_sprintf,w
  1736  059A  3A00               	xorlw	0	; case 0
  1737  059B  1903               	skipnz
  1738  059C  2E51               	goto	l2512
  1739  059D  3A64               	xorlw	100	; case 100
  1740  059E  1903               	skipnz
  1741  059F  2DA4               	goto	l2472
  1742  05A0  3A0D               	xorlw	13	; case 105
  1743  05A1  1903               	skipnz
  1744  05A2  2DA4               	goto	l2472
  1745  05A3  2E3F               	goto	l2510
  1746  05A4                     l2472:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1749  05A4  082F               	movf	sprintf@ap,w
  1750  05A5  0084               	movwf	4
  1751  05A6  1383               	bcf	3,7	;select IRP bank0
  1752  05A7  0800               	movf	0,w
  1753  05A8  00B2               	movwf	sprintf@val
  1754  05A9  0A84               	incf	4,f
  1755  05AA  0800               	movf	0,w
  1756  05AB  00B3               	movwf	sprintf@val+1
  1757  05AC                     l2474:
  1758  05AC  3002               	movlw	2
  1759  05AD  00AC               	movwf	??_sprintf
  1760  05AE  082C               	movf	??_sprintf,w
  1761  05AF  07AF               	addwf	sprintf@ap,f
  1762  05B0                     l2476:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1765  05B0  1FB3               	btfss	sprintf@val+1,7
  1766  05B1  2DB3               	goto	u2751
  1767  05B2  2DB4               	goto	u2750
  1768  05B3                     u2751:
  1769  05B3  2DBD               	goto	l2482
  1770  05B4                     u2750:
  1771  05B4                     l2478:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1774  05B4  3003               	movlw	3
  1775  05B5  00AC               	movwf	??_sprintf
  1776  05B6  082C               	movf	??_sprintf,w
  1777  05B7  04B0               	iorwf	sprintf@flag,f
  1778  05B8                     l2480:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1781  05B8  09B2               	comf	sprintf@val,f
  1782  05B9  09B3               	comf	sprintf@val+1,f
  1783  05BA  0AB2               	incf	sprintf@val,f
  1784  05BB  1903               	skipnz
  1785  05BC  0AB3               	incf	sprintf@val+1,f
  1786  05BD                     l2482:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1789  05BD  01B5               	clrf	sprintf@c
  1790  05BE  0AB5               	incf	sprintf@c,f
  1791  05BF                     l2488:
  1792                           
  1793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1794  05BF  0835               	movf	sprintf@c,w
  1795  05C0  00AC               	movwf	??_sprintf
  1796  05C1  072C               	addwf	??_sprintf,w
  1797  05C2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1798  05C3  0084               	movwf	4
  1799  05C4  120A  118A  2798  120A  118A  	fcall	stringdir
  1800  05C9  00AD               	movwf	??_sprintf+1
  1801  05CA  120A  118A  2798  120A  118A  	fcall	stringdir
  1802  05CF  00AE               	movwf	??_sprintf+2
  1803  05D0  082E               	movf	??_sprintf+2,w
  1804  05D1  0233               	subwf	sprintf@val+1,w
  1805  05D2  1D03               	skipz
  1806  05D3  2DD6               	goto	u2765
  1807  05D4  082D               	movf	??_sprintf+1,w
  1808  05D5  0232               	subwf	sprintf@val,w
  1809  05D6                     u2765:
  1810  05D6  1803               	skipnc
  1811  05D7  2DD9               	goto	u2761
  1812  05D8  2DDA               	goto	u2760
  1813  05D9                     u2761:
  1814  05D9  2DDB               	goto	l2492
  1815  05DA                     u2760:
  1816  05DA  2DE5               	goto	l2494
  1817  05DB                     l2492:
  1818  05DB  3001               	movlw	1
  1819  05DC  00AC               	movwf	??_sprintf
  1820  05DD  082C               	movf	??_sprintf,w
  1821  05DE  07B5               	addwf	sprintf@c,f
  1822  05DF  3005               	movlw	5
  1823  05E0  0635               	xorwf	sprintf@c,w
  1824  05E1  1D03               	btfss	3,2
  1825  05E2  2DE4               	goto	u2771
  1826  05E3  2DE5               	goto	u2770
  1827  05E4                     u2771:
  1828  05E4  2DBF               	goto	l2488
  1829  05E5                     u2770:
  1830  05E5                     l2494:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1833  05E5  0830               	movf	sprintf@flag,w
  1834  05E6  3903               	andlw	3
  1835  05E7  1903               	btfsc	3,2
  1836  05E8  2DEA               	goto	u2781
  1837  05E9  2DEB               	goto	u2780
  1838  05EA                     u2781:
  1839  05EA  2DF6               	goto	l2500
  1840  05EB                     u2780:
  1841  05EB                     l2496:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1844  05EB  302D               	movlw	45
  1845  05EC  00AC               	movwf	??_sprintf
  1846  05ED  0834               	movf	sprintf@sp,w
  1847  05EE  0084               	movwf	4
  1848  05EF  082C               	movf	??_sprintf,w
  1849  05F0  1383               	bcf	3,7	;select IRP bank0
  1850  05F1  0080               	movwf	0
  1851  05F2                     l2498:
  1852  05F2  3001               	movlw	1
  1853  05F3  00AC               	movwf	??_sprintf
  1854  05F4  082C               	movf	??_sprintf,w
  1855  05F5  07B4               	addwf	sprintf@sp,f
  1856  05F6                     l2500:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1859  05F6  0835               	movf	sprintf@c,w
  1860  05F7  00AC               	movwf	??_sprintf
  1861  05F8  082C               	movf	??_sprintf,w
  1862  05F9  00B1               	movwf	sprintf@prec
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1865  05FA  2E36               	goto	l2508
  1866  05FB                     l2502:
  1867                           
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1869  05FB  300A               	movlw	10
  1870  05FC  00A3               	movwf	___lwmod@divisor
  1871  05FD  3000               	movlw	0
  1872  05FE  00A4               	movwf	___lwmod@divisor+1
  1873  05FF  0831               	movf	sprintf@prec,w
  1874  0600  00AC               	movwf	??_sprintf
  1875  0601  072C               	addwf	??_sprintf,w
  1876  0602  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1877  0603  0084               	movwf	4
  1878  0604  120A  118A  2798  120A  118A  	fcall	stringdir
  1879  0609  00F3               	movwf	___lwdiv@divisor
  1880  060A  120A  118A  2798  120A  118A  	fcall	stringdir
  1881  060F  00F4               	movwf	___lwdiv@divisor+1
  1882  0610  0833               	movf	sprintf@val+1,w
  1883  0611  00F6               	movwf	___lwdiv@dividend+1
  1884  0612  0832               	movf	sprintf@val,w
  1885  0613  00F5               	movwf	___lwdiv@dividend
  1886  0614  120A  158A  2631  120A  118A  	fcall	___lwdiv
  1887  0619  0874               	movf	?___lwdiv+1,w
  1888  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1889  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1890  061C  00A6               	movwf	___lwmod@dividend+1
  1891  061D  0873               	movf	?___lwdiv,w
  1892  061E  00A5               	movwf	___lwmod@dividend
  1893  061F  120A  158A  2527  120A  118A  	fcall	___lwmod
  1894  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1896  0626  0823               	movf	?___lwmod,w
  1897  0627  3E30               	addlw	48
  1898  0628  00AD               	movwf	??_sprintf+1
  1899  0629  082D               	movf	??_sprintf+1,w
  1900  062A  00B5               	movwf	sprintf@c
  1901  062B                     l2504:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1904  062B  0835               	movf	sprintf@c,w
  1905  062C  00AC               	movwf	??_sprintf
  1906  062D  0834               	movf	sprintf@sp,w
  1907  062E  0084               	movwf	4
  1908  062F  082C               	movf	??_sprintf,w
  1909  0630  1383               	bcf	3,7	;select IRP bank0
  1910  0631  0080               	movwf	0
  1911  0632                     l2506:
  1912  0632  3001               	movlw	1
  1913  0633  00AC               	movwf	??_sprintf
  1914  0634  082C               	movf	??_sprintf,w
  1915  0635  07B4               	addwf	sprintf@sp,f
  1916  0636                     l2508:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1919  0636  30FF               	movlw	255
  1920  0637  00AC               	movwf	??_sprintf
  1921  0638  082C               	movf	??_sprintf,w
  1922  0639  07B1               	addwf	sprintf@prec,f
  1923  063A  0A31               	incf	sprintf@prec,w
  1924  063B  1D03               	btfss	3,2
  1925  063C  2E3E               	goto	u2791
  1926  063D  2E3F               	goto	u2790
  1927  063E                     u2791:
  1928  063E  2DFB               	goto	l2502
  1929  063F                     u2790:
  1930  063F                     l2510:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1933  063F  3001               	movlw	1
  1934  0640  07A9               	addwf	sprintf@f,f
  1935  0641  30FF               	movlw	-1
  1936  0642  0729               	addwf	sprintf@f,w
  1937  0643  0084               	movwf	4
  1938  0644  120A  118A  2798  120A  118A  	fcall	stringdir
  1939  0649  00AC               	movwf	??_sprintf
  1940  064A  082C               	movf	??_sprintf,w
  1941  064B  00B5               	movwf	sprintf@c
  1942  064C  0835               	movf	sprintf@c,w
  1943  064D  1D03               	btfss	3,2
  1944  064E  2E50               	goto	u2801
  1945  064F  2E51               	goto	u2800
  1946  0650                     u2801:
  1947  0650  2D74               	goto	l2460
  1948  0651                     u2800:
  1949  0651                     l2512:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1952  0651  0834               	movf	sprintf@sp,w
  1953  0652  0084               	movwf	4
  1954  0653  1383               	bcf	3,7	;select IRP bank0
  1955  0654  0180               	clrf	0
  1956  0655                     l308:
  1957  0655  0008               	return
  1958  0656                     __end_of_sprintf:
  1959                           
  1960                           	psect	text2
  1961  0D27                     __ptext2:	
  1962 ;; *************** function ___lwmod *****************
  1963 ;; Defined at:
  1964 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  divisor         2    3[BANK0 ] unsigned int 
  1967 ;;  dividend        2    5[BANK0 ] unsigned int 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  counter         1    8[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  2    3[BANK0 ] unsigned int 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       4       0       0       0
  1980 ;;      Locals:         0       1       0       0       0
  1981 ;;      Temps:          0       1       0       0       0
  1982 ;;      Totals:         0       6       0       0       0
  1983 ;;Total ram usage:        6 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_sprintf
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function ___lwmod
  1995  0D27                     ___lwmod:
  1996  0D27                     l1688:	
  1997                           ;incstack = 0
  1998                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1999                           
  2000  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0D29  0823               	movf	___lwmod@divisor,w
  2003  0D2A  0424               	iorwf	___lwmod@divisor+1,w
  2004  0D2B  1903               	btfsc	3,2
  2005  0D2C  2D2E               	goto	u1481
  2006  0D2D  2D2F               	goto	u1480
  2007  0D2E                     u1481:
  2008  0D2E  2D5E               	goto	l1706
  2009  0D2F                     u1480:
  2010  0D2F                     l1690:
  2011  0D2F  01A8               	clrf	___lwmod@counter
  2012  0D30  0AA8               	incf	___lwmod@counter,f
  2013  0D31  2D3D               	goto	l1696
  2014  0D32                     l1692:
  2015  0D32  3001               	movlw	1
  2016  0D33                     u1495:
  2017  0D33  1003               	clrc
  2018  0D34  0DA3               	rlf	___lwmod@divisor,f
  2019  0D35  0DA4               	rlf	___lwmod@divisor+1,f
  2020  0D36  3EFF               	addlw	-1
  2021  0D37  1D03               	skipz
  2022  0D38  2D33               	goto	u1495
  2023  0D39                     l1694:
  2024  0D39  3001               	movlw	1
  2025  0D3A  00A7               	movwf	??___lwmod
  2026  0D3B  0827               	movf	??___lwmod,w
  2027  0D3C  07A8               	addwf	___lwmod@counter,f
  2028  0D3D                     l1696:
  2029  0D3D  1FA4               	btfss	___lwmod@divisor+1,7
  2030  0D3E  2D40               	goto	u1501
  2031  0D3F  2D41               	goto	u1500
  2032  0D40                     u1501:
  2033  0D40  2D32               	goto	l1692
  2034  0D41                     u1500:
  2035  0D41                     l1698:
  2036  0D41  0824               	movf	___lwmod@divisor+1,w
  2037  0D42  0226               	subwf	___lwmod@dividend+1,w
  2038  0D43  1D03               	skipz
  2039  0D44  2D47               	goto	u1515
  2040  0D45  0823               	movf	___lwmod@divisor,w
  2041  0D46  0225               	subwf	___lwmod@dividend,w
  2042  0D47                     u1515:
  2043  0D47  1C03               	skipc
  2044  0D48  2D4A               	goto	u1511
  2045  0D49  2D4B               	goto	u1510
  2046  0D4A                     u1511:
  2047  0D4A  2D51               	goto	l1702
  2048  0D4B                     u1510:
  2049  0D4B                     l1700:
  2050  0D4B  0823               	movf	___lwmod@divisor,w
  2051  0D4C  02A5               	subwf	___lwmod@dividend,f
  2052  0D4D  0824               	movf	___lwmod@divisor+1,w
  2053  0D4E  1C03               	skipc
  2054  0D4F  03A6               	decf	___lwmod@dividend+1,f
  2055  0D50  02A6               	subwf	___lwmod@dividend+1,f
  2056  0D51                     l1702:
  2057  0D51  3001               	movlw	1
  2058  0D52                     u1525:
  2059  0D52  1003               	clrc
  2060  0D53  0CA4               	rrf	___lwmod@divisor+1,f
  2061  0D54  0CA3               	rrf	___lwmod@divisor,f
  2062  0D55  3EFF               	addlw	-1
  2063  0D56  1D03               	skipz
  2064  0D57  2D52               	goto	u1525
  2065  0D58                     l1704:
  2066  0D58  3001               	movlw	1
  2067  0D59  02A8               	subwf	___lwmod@counter,f
  2068  0D5A  1D03               	btfss	3,2
  2069  0D5B  2D5D               	goto	u1531
  2070  0D5C  2D5E               	goto	u1530
  2071  0D5D                     u1531:
  2072  0D5D  2D41               	goto	l1698
  2073  0D5E                     u1530:
  2074  0D5E                     l1706:
  2075  0D5E  0826               	movf	___lwmod@dividend+1,w
  2076  0D5F  00A4               	movwf	?___lwmod+1
  2077  0D60  0825               	movf	___lwmod@dividend,w
  2078  0D61  00A3               	movwf	?___lwmod
  2079  0D62                     l594:
  2080  0D62  0008               	return
  2081  0D63                     __end_of___lwmod:
  2082                           
  2083                           	psect	text3
  2084  0E31                     __ptext3:	
  2085 ;; *************** function ___lwdiv *****************
  2086 ;; Defined at:
  2087 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  divisor         2    3[COMMON] unsigned int 
  2090 ;;  dividend        2    5[COMMON] unsigned int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  quotient        2    1[BANK0 ] unsigned int 
  2093 ;;  counter         1    0[BANK0 ] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    3[COMMON] unsigned int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         4       0       0       0       0
  2104 ;;      Locals:         0       3       0       0       0
  2105 ;;      Temps:          1       0       0       0       0
  2106 ;;      Totals:         5       3       0       0       0
  2107 ;;Total ram usage:        8 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_sprintf
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function ___lwdiv
  2119  0E31                     ___lwdiv:
  2120  0E31                     l2392:	
  2121                           ;incstack = 0
  2122                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2123                           
  2124  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0E33  01A1               	clrf	___lwdiv@quotient
  2127  0E34  01A2               	clrf	___lwdiv@quotient+1
  2128  0E35                     l2394:
  2129  0E35  0873               	movf	___lwdiv@divisor,w
  2130  0E36  0474               	iorwf	___lwdiv@divisor+1,w
  2131  0E37  1903               	btfsc	3,2
  2132  0E38  2E3A               	goto	u2621
  2133  0E39  2E3B               	goto	u2620
  2134  0E3A                     u2621:
  2135  0E3A  2E72               	goto	l2414
  2136  0E3B                     u2620:
  2137  0E3B                     l2396:
  2138  0E3B  01A0               	clrf	___lwdiv@counter
  2139  0E3C  0AA0               	incf	___lwdiv@counter,f
  2140  0E3D  2E49               	goto	l2402
  2141  0E3E                     l2398:
  2142  0E3E  3001               	movlw	1
  2143  0E3F                     u2635:
  2144  0E3F  1003               	clrc
  2145  0E40  0DF3               	rlf	___lwdiv@divisor,f
  2146  0E41  0DF4               	rlf	___lwdiv@divisor+1,f
  2147  0E42  3EFF               	addlw	-1
  2148  0E43  1D03               	skipz
  2149  0E44  2E3F               	goto	u2635
  2150  0E45                     l2400:
  2151  0E45  3001               	movlw	1
  2152  0E46  00F7               	movwf	??___lwdiv
  2153  0E47  0877               	movf	??___lwdiv,w
  2154  0E48  07A0               	addwf	___lwdiv@counter,f
  2155  0E49                     l2402:
  2156  0E49  1FF4               	btfss	___lwdiv@divisor+1,7
  2157  0E4A  2E4C               	goto	u2641
  2158  0E4B  2E4D               	goto	u2640
  2159  0E4C                     u2641:
  2160  0E4C  2E3E               	goto	l2398
  2161  0E4D                     u2640:
  2162  0E4D                     l2404:
  2163  0E4D  3001               	movlw	1
  2164  0E4E                     u2655:
  2165  0E4E  1003               	clrc
  2166  0E4F  0DA1               	rlf	___lwdiv@quotient,f
  2167  0E50  0DA2               	rlf	___lwdiv@quotient+1,f
  2168  0E51  3EFF               	addlw	-1
  2169  0E52  1D03               	skipz
  2170  0E53  2E4E               	goto	u2655
  2171  0E54  0874               	movf	___lwdiv@divisor+1,w
  2172  0E55  0276               	subwf	___lwdiv@dividend+1,w
  2173  0E56  1D03               	skipz
  2174  0E57  2E5A               	goto	u2665
  2175  0E58  0873               	movf	___lwdiv@divisor,w
  2176  0E59  0275               	subwf	___lwdiv@dividend,w
  2177  0E5A                     u2665:
  2178  0E5A  1C03               	skipc
  2179  0E5B  2E5D               	goto	u2661
  2180  0E5C  2E5E               	goto	u2660
  2181  0E5D                     u2661:
  2182  0E5D  2E65               	goto	l2410
  2183  0E5E                     u2660:
  2184  0E5E                     l2406:
  2185  0E5E  0873               	movf	___lwdiv@divisor,w
  2186  0E5F  02F5               	subwf	___lwdiv@dividend,f
  2187  0E60  0874               	movf	___lwdiv@divisor+1,w
  2188  0E61  1C03               	skipc
  2189  0E62  03F6               	decf	___lwdiv@dividend+1,f
  2190  0E63  02F6               	subwf	___lwdiv@dividend+1,f
  2191  0E64                     l2408:
  2192  0E64  1421               	bsf	___lwdiv@quotient,0
  2193  0E65                     l2410:
  2194  0E65  3001               	movlw	1
  2195  0E66                     u2675:
  2196  0E66  1003               	clrc
  2197  0E67  0CF4               	rrf	___lwdiv@divisor+1,f
  2198  0E68  0CF3               	rrf	___lwdiv@divisor,f
  2199  0E69  3EFF               	addlw	-1
  2200  0E6A  1D03               	skipz
  2201  0E6B  2E66               	goto	u2675
  2202  0E6C                     l2412:
  2203  0E6C  3001               	movlw	1
  2204  0E6D  02A0               	subwf	___lwdiv@counter,f
  2205  0E6E  1D03               	btfss	3,2
  2206  0E6F  2E71               	goto	u2681
  2207  0E70  2E72               	goto	u2680
  2208  0E71                     u2681:
  2209  0E71  2E4D               	goto	l2404
  2210  0E72                     u2680:
  2211  0E72                     l2414:
  2212  0E72  0822               	movf	___lwdiv@quotient+1,w
  2213  0E73  00F4               	movwf	?___lwdiv+1
  2214  0E74  0821               	movf	___lwdiv@quotient,w
  2215  0E75  00F3               	movwf	?___lwdiv
  2216  0E76                     l584:
  2217  0E76  0008               	return
  2218  0E77                     __end_of___lwdiv:
  2219                           
  2220                           	psect	text4
  2221  0656                     __ptext4:	
  2222 ;; *************** function ___xxtofl *****************
  2223 ;; Defined at:
  2224 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  sign            1    wreg     unsigned char 
  2227 ;;  val             4    3[COMMON] long 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  sign            1    4[BANK0 ] unsigned char 
  2230 ;;  arg             4    6[BANK0 ] unsigned long 
  2231 ;;  exp             1    5[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  4    3[COMMON] unsigned char 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         4       0       0       0       0
  2242 ;;      Locals:         0       6       0       0       0
  2243 ;;      Temps:          0       4       0       0       0
  2244 ;;      Totals:         4      10       0       0       0
  2245 ;;Total ram usage:       14 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function ___xxtofl
  2257  0656                     ___xxtofl:
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2261                           ;___xxtofl@sign stored from wreg
  2262  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0658  00A4               	movwf	___xxtofl@sign
  2265  0659                     l2520:
  2266  0659  0824               	movf	___xxtofl@sign,w
  2267  065A  1903               	btfsc	3,2
  2268  065B  2E5D               	goto	u2811
  2269  065C  2E5E               	goto	u2810
  2270  065D                     u2811:
  2271  065D  2E72               	goto	l2526
  2272  065E                     u2810:
  2273  065E                     l2522:
  2274  065E  1FF6               	btfss	___xxtofl@val+3,7
  2275  065F  2E61               	goto	u2821
  2276  0660  2E62               	goto	u2820
  2277  0661                     u2821:
  2278  0661  2E72               	goto	l2526
  2279  0662                     u2820:
  2280  0662                     l2524:
  2281  0662  0973               	comf	___xxtofl@val,w
  2282  0663  00A6               	movwf	___xxtofl@arg
  2283  0664  0974               	comf	___xxtofl@val+1,w
  2284  0665  00A7               	movwf	___xxtofl@arg+1
  2285  0666  0975               	comf	___xxtofl@val+2,w
  2286  0667  00A8               	movwf	___xxtofl@arg+2
  2287  0668  0976               	comf	___xxtofl@val+3,w
  2288  0669  00A9               	movwf	___xxtofl@arg+3
  2289  066A  0AA6               	incf	___xxtofl@arg,f
  2290  066B  1903               	skipnz
  2291  066C  0AA7               	incf	___xxtofl@arg+1,f
  2292  066D  1903               	skipnz
  2293  066E  0AA8               	incf	___xxtofl@arg+2,f
  2294  066F  1903               	skipnz
  2295  0670  0AA9               	incf	___xxtofl@arg+3,f
  2296  0671  2E7A               	goto	l745
  2297  0672                     l2526:
  2298  0672  0876               	movf	___xxtofl@val+3,w
  2299  0673  00A9               	movwf	___xxtofl@arg+3
  2300  0674  0875               	movf	___xxtofl@val+2,w
  2301  0675  00A8               	movwf	___xxtofl@arg+2
  2302  0676  0874               	movf	___xxtofl@val+1,w
  2303  0677  00A7               	movwf	___xxtofl@arg+1
  2304  0678  0873               	movf	___xxtofl@val,w
  2305  0679  00A6               	movwf	___xxtofl@arg
  2306  067A                     l745:
  2307  067A  0876               	movf	___xxtofl@val+3,w
  2308  067B  0475               	iorwf	___xxtofl@val+2,w
  2309  067C  0474               	iorwf	___xxtofl@val+1,w
  2310  067D  0473               	iorwf	___xxtofl@val,w
  2311  067E  1D03               	skipz
  2312  067F  2E81               	goto	u2831
  2313  0680  2E82               	goto	u2830
  2314  0681                     u2831:
  2315  0681  2E8B               	goto	l2532
  2316  0682                     u2830:
  2317  0682                     l2528:
  2318  0682  3000               	movlw	0
  2319  0683  00F6               	movwf	?___xxtofl+3
  2320  0684  3000               	movlw	0
  2321  0685  00F5               	movwf	?___xxtofl+2
  2322  0686  3000               	movlw	0
  2323  0687  00F4               	movwf	?___xxtofl+1
  2324  0688  3000               	movlw	0
  2325  0689  00F3               	movwf	?___xxtofl
  2326  068A  2F11               	goto	l747
  2327  068B                     l2532:
  2328  068B  3096               	movlw	150
  2329  068C  00A0               	movwf	??___xxtofl
  2330  068D  0820               	movf	??___xxtofl,w
  2331  068E  00A5               	movwf	___xxtofl@exp
  2332  068F  2E9D               	goto	l2536
  2333  0690                     l2534:
  2334  0690  3001               	movlw	1
  2335  0691  00A0               	movwf	??___xxtofl
  2336  0692  0820               	movf	??___xxtofl,w
  2337  0693  07A5               	addwf	___xxtofl@exp,f
  2338  0694  3001               	movlw	1
  2339  0695                     u2845:
  2340  0695  1003               	clrc
  2341  0696  0CA9               	rrf	___xxtofl@arg+3,f
  2342  0697  0CA8               	rrf	___xxtofl@arg+2,f
  2343  0698  0CA7               	rrf	___xxtofl@arg+1,f
  2344  0699  0CA6               	rrf	___xxtofl@arg,f
  2345  069A  3EFF               	addlw	-1
  2346  069B  1D03               	skipz
  2347  069C  2E95               	goto	u2845
  2348  069D                     l2536:
  2349  069D  30FE               	movlw	254
  2350  069E  0529               	andwf	___xxtofl@arg+3,w
  2351  069F  1D03               	btfss	3,2
  2352  06A0  2EA2               	goto	u2851
  2353  06A1  2EA3               	goto	u2850
  2354  06A2                     u2851:
  2355  06A2  2E90               	goto	l2534
  2356  06A3                     u2850:
  2357  06A3  2EBF               	goto	l751
  2358  06A4                     l2538:
  2359  06A4  3001               	movlw	1
  2360  06A5  00A0               	movwf	??___xxtofl
  2361  06A6  0820               	movf	??___xxtofl,w
  2362  06A7  07A5               	addwf	___xxtofl@exp,f
  2363  06A8                     l2540:
  2364  06A8  3001               	movlw	1
  2365  06A9  07A6               	addwf	___xxtofl@arg,f
  2366  06AA  3000               	movlw	0
  2367  06AB  1803               	skipnc
  2368  06AC  3001               	movlw	1
  2369  06AD  07A7               	addwf	___xxtofl@arg+1,f
  2370  06AE  3000               	movlw	0
  2371  06AF  1803               	skipnc
  2372  06B0  3001               	movlw	1
  2373  06B1  07A8               	addwf	___xxtofl@arg+2,f
  2374  06B2  3000               	movlw	0
  2375  06B3  1803               	skipnc
  2376  06B4  3001               	movlw	1
  2377  06B5  07A9               	addwf	___xxtofl@arg+3,f
  2378  06B6                     l2542:
  2379  06B6  3001               	movlw	1
  2380  06B7                     u2865:
  2381  06B7  1003               	clrc
  2382  06B8  0CA9               	rrf	___xxtofl@arg+3,f
  2383  06B9  0CA8               	rrf	___xxtofl@arg+2,f
  2384  06BA  0CA7               	rrf	___xxtofl@arg+1,f
  2385  06BB  0CA6               	rrf	___xxtofl@arg,f
  2386  06BC  3EFF               	addlw	-1
  2387  06BD  1D03               	skipz
  2388  06BE  2EB7               	goto	u2865
  2389  06BF                     l751:
  2390  06BF  30FF               	movlw	255
  2391  06C0  0529               	andwf	___xxtofl@arg+3,w
  2392  06C1  1D03               	btfss	3,2
  2393  06C2  2EC4               	goto	u2871
  2394  06C3  2EC5               	goto	u2870
  2395  06C4                     u2871:
  2396  06C4  2EA4               	goto	l2538
  2397  06C5                     u2870:
  2398  06C5  2ED1               	goto	l2546
  2399  06C6                     l2544:
  2400  06C6  3001               	movlw	1
  2401  06C7  02A5               	subwf	___xxtofl@exp,f
  2402  06C8  3001               	movlw	1
  2403  06C9  00A0               	movwf	??___xxtofl
  2404  06CA                     u2885:
  2405  06CA  1003               	clrc
  2406  06CB  0DA6               	rlf	___xxtofl@arg,f
  2407  06CC  0DA7               	rlf	___xxtofl@arg+1,f
  2408  06CD  0DA8               	rlf	___xxtofl@arg+2,f
  2409  06CE  0DA9               	rlf	___xxtofl@arg+3,f
  2410  06CF  0BA0               	decfsz	??___xxtofl,f
  2411  06D0  2ECA               	goto	u2885
  2412  06D1                     l2546:
  2413  06D1  1BA8               	btfsc	___xxtofl@arg+2,7
  2414  06D2  2ED4               	goto	u2891
  2415  06D3  2ED5               	goto	u2890
  2416  06D4                     u2891:
  2417  06D4  2EDB               	goto	l758
  2418  06D5                     u2890:
  2419  06D5                     l2548:
  2420  06D5  3002               	movlw	2
  2421  06D6  0225               	subwf	___xxtofl@exp,w
  2422  06D7  1803               	skipnc
  2423  06D8  2EDA               	goto	u2901
  2424  06D9  2EDB               	goto	u2900
  2425  06DA                     u2901:
  2426  06DA  2EC6               	goto	l2544
  2427  06DB                     u2900:
  2428  06DB                     l758:
  2429  06DB  1825               	btfsc	___xxtofl@exp,0
  2430  06DC  2EDE               	goto	u2911
  2431  06DD  2EDF               	goto	u2910
  2432  06DE                     u2911:
  2433  06DE  2EE7               	goto	l759
  2434  06DF                     u2910:
  2435  06DF                     l2550:
  2436  06DF  30FF               	movlw	255
  2437  06E0  05A6               	andwf	___xxtofl@arg,f
  2438  06E1  30FF               	movlw	255
  2439  06E2  05A7               	andwf	___xxtofl@arg+1,f
  2440  06E3  307F               	movlw	127
  2441  06E4  05A8               	andwf	___xxtofl@arg+2,f
  2442  06E5  30FF               	movlw	255
  2443  06E6  05A9               	andwf	___xxtofl@arg+3,f
  2444  06E7                     l759:
  2445  06E7  1003               	clrc
  2446  06E8  0CA5               	rrf	___xxtofl@exp,f
  2447  06E9                     l2552:
  2448  06E9  0825               	movf	___xxtofl@exp,w
  2449  06EA  00A0               	movwf	??___xxtofl
  2450  06EB  01A1               	clrf	??___xxtofl+1
  2451  06EC  01A2               	clrf	??___xxtofl+2
  2452  06ED  01A3               	clrf	??___xxtofl+3
  2453  06EE  3018               	movlw	24
  2454  06EF                     u2925:
  2455  06EF  1003               	clrc
  2456  06F0  0DA0               	rlf	??___xxtofl,f
  2457  06F1  0DA1               	rlf	??___xxtofl+1,f
  2458  06F2  0DA2               	rlf	??___xxtofl+2,f
  2459  06F3  0DA3               	rlf	??___xxtofl+3,f
  2460  06F4                     u2920:
  2461  06F4  3EFF               	addlw	-1
  2462  06F5  1D03               	skipz
  2463  06F6  2EEF               	goto	u2925
  2464  06F7  0820               	movf	??___xxtofl,w
  2465  06F8  04A6               	iorwf	___xxtofl@arg,f
  2466  06F9  0821               	movf	??___xxtofl+1,w
  2467  06FA  04A7               	iorwf	___xxtofl@arg+1,f
  2468  06FB  0822               	movf	??___xxtofl+2,w
  2469  06FC  04A8               	iorwf	___xxtofl@arg+2,f
  2470  06FD  0823               	movf	??___xxtofl+3,w
  2471  06FE  04A9               	iorwf	___xxtofl@arg+3,f
  2472  06FF                     l2554:
  2473  06FF  0824               	movf	___xxtofl@sign,w
  2474  0700  1903               	btfsc	3,2
  2475  0701  2F03               	goto	u2931
  2476  0702  2F04               	goto	u2930
  2477  0703                     u2931:
  2478  0703  2F09               	goto	l2560
  2479  0704                     u2930:
  2480  0704                     l2556:
  2481  0704  1FF6               	btfss	___xxtofl@val+3,7
  2482  0705  2F07               	goto	u2941
  2483  0706  2F08               	goto	u2940
  2484  0707                     u2941:
  2485  0707  2F09               	goto	l2560
  2486  0708                     u2940:
  2487  0708                     l2558:
  2488  0708  17A9               	bsf	___xxtofl@arg+3,7
  2489  0709                     l2560:
  2490  0709  0829               	movf	___xxtofl@arg+3,w
  2491  070A  00F6               	movwf	?___xxtofl+3
  2492  070B  0828               	movf	___xxtofl@arg+2,w
  2493  070C  00F5               	movwf	?___xxtofl+2
  2494  070D  0827               	movf	___xxtofl@arg+1,w
  2495  070E  00F4               	movwf	?___xxtofl+1
  2496  070F  0826               	movf	___xxtofl@arg,w
  2497  0710  00F3               	movwf	?___xxtofl
  2498  0711                     l747:
  2499  0711  0008               	return
  2500  0712                     __end_of___xxtofl:
  2501                           
  2502                           	psect	text5
  2503  0712                     __ptext5:	
  2504 ;; *************** function ___fltol *****************
  2505 ;; Defined at:
  2506 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  f1              4   36[BANK0 ] unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  exp1            1   46[BANK0 ] unsigned char 
  2511 ;;  sign1           1   45[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  4   36[BANK0 ] long 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       4       0       0       0
  2522 ;;      Locals:         0       2       0       0       0
  2523 ;;      Temps:          0       5       0       0       0
  2524 ;;      Totals:         0      11       0       0       0
  2525 ;;Total ram usage:       11 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function ___fltol
  2537  0712                     ___fltol:
  2538  0712                     l1910:	
  2539                           ;incstack = 0
  2540                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2541                           
  2542  0712  1003               	clrc
  2543  0713  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0714  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0715  0D46               	rlf	___fltol@f1+2,w
  2546  0716  0D47               	rlf	___fltol@f1+3,w
  2547  0717  00C8               	movwf	??___fltol
  2548  0718  0848               	movf	??___fltol,w
  2549  0719  00CE               	movwf	___fltol@exp1
  2550  071A  084E               	movf	___fltol@exp1,w
  2551  071B  1D03               	btfss	3,2
  2552  071C  2F1E               	goto	u1751
  2553  071D  2F1F               	goto	u1750
  2554  071E                     u1751:
  2555  071E  2F28               	goto	l1916
  2556  071F                     u1750:
  2557  071F                     l1912:
  2558  071F  3000               	movlw	0
  2559  0720  00C7               	movwf	?___fltol+3
  2560  0721  3000               	movlw	0
  2561  0722  00C6               	movwf	?___fltol+2
  2562  0723  3000               	movlw	0
  2563  0724  00C5               	movwf	?___fltol+1
  2564  0725  3000               	movlw	0
  2565  0726  00C4               	movwf	?___fltol
  2566  0727  2F8D               	goto	l498
  2567  0728                     l1916:
  2568  0728  0844               	movf	___fltol@f1,w
  2569  0729  00C8               	movwf	??___fltol
  2570  072A  0845               	movf	___fltol@f1+1,w
  2571  072B  00C9               	movwf	??___fltol+1
  2572  072C  0846               	movf	___fltol@f1+2,w
  2573  072D  00CA               	movwf	??___fltol+2
  2574  072E  0847               	movf	___fltol@f1+3,w
  2575  072F  00CB               	movwf	??___fltol+3
  2576  0730  301F               	movlw	31
  2577  0731                     u1765:
  2578  0731  1003               	clrc
  2579  0732  0CCB               	rrf	??___fltol+3,f
  2580  0733  0CCA               	rrf	??___fltol+2,f
  2581  0734  0CC9               	rrf	??___fltol+1,f
  2582  0735  0CC8               	rrf	??___fltol,f
  2583  0736                     u1760:
  2584  0736  3EFF               	addlw	-1
  2585  0737  1D03               	skipz
  2586  0738  2F31               	goto	u1765
  2587  0739  0848               	movf	??___fltol,w
  2588  073A  00CC               	movwf	??___fltol+4
  2589  073B  084C               	movf	??___fltol+4,w
  2590  073C  00CD               	movwf	___fltol@sign1
  2591  073D                     l1918:
  2592  073D  17C6               	bsf	___fltol@f1+2,7
  2593  073E                     l1920:
  2594  073E  30FF               	movlw	255
  2595  073F  05C4               	andwf	___fltol@f1,f
  2596  0740  30FF               	movlw	255
  2597  0741  05C5               	andwf	___fltol@f1+1,f
  2598  0742  30FF               	movlw	255
  2599  0743  05C6               	andwf	___fltol@f1+2,f
  2600  0744  3000               	movlw	0
  2601  0745  05C7               	andwf	___fltol@f1+3,f
  2602  0746                     l1922:
  2603  0746  3096               	movlw	150
  2604  0747  02CE               	subwf	___fltol@exp1,f
  2605  0748                     l1924:
  2606  0748  1FCE               	btfss	___fltol@exp1,7
  2607  0749  2F4B               	goto	u1771
  2608  074A  2F4C               	goto	u1770
  2609  074B                     u1771:
  2610  074B  2F66               	goto	l1934
  2611  074C                     u1770:
  2612  074C                     l1926:
  2613  074C  084E               	movf	___fltol@exp1,w
  2614  074D  3A80               	xorlw	128
  2615  074E  3E97               	addlw	151
  2616  074F  1803               	skipnc
  2617  0750  2F52               	goto	u1781
  2618  0751  2F53               	goto	u1780
  2619  0752                     u1781:
  2620  0752  2F54               	goto	l1932
  2621  0753                     u1780:
  2622  0753  2F1F               	goto	l1912
  2623  0754                     l1932:
  2624  0754  3001               	movlw	1
  2625  0755                     u1795:
  2626  0755  1003               	clrc
  2627  0756  0CC7               	rrf	___fltol@f1+3,f
  2628  0757  0CC6               	rrf	___fltol@f1+2,f
  2629  0758  0CC5               	rrf	___fltol@f1+1,f
  2630  0759  0CC4               	rrf	___fltol@f1,f
  2631  075A  3EFF               	addlw	-1
  2632  075B  1D03               	skipz
  2633  075C  2F55               	goto	u1795
  2634  075D  3001               	movlw	1
  2635  075E  00C8               	movwf	??___fltol
  2636  075F  0848               	movf	??___fltol,w
  2637  0760  07CE               	addwf	___fltol@exp1,f
  2638  0761  1D03               	btfss	3,2
  2639  0762  2F64               	goto	u1801
  2640  0763  2F65               	goto	u1800
  2641  0764                     u1801:
  2642  0764  2F54               	goto	l1932
  2643  0765                     u1800:
  2644  0765  2F7D               	goto	l1942
  2645  0766                     l1934:
  2646  0766  3020               	movlw	32
  2647  0767  024E               	subwf	___fltol@exp1,w
  2648  0768  1C03               	skipc
  2649  0769  2F6B               	goto	u1811
  2650  076A  2F6C               	goto	u1810
  2651  076B                     u1811:
  2652  076B  2F78               	goto	l505
  2653  076C                     u1810:
  2654  076C  2F1F               	goto	l1912
  2655  076D                     l1940:
  2656  076D  3001               	movlw	1
  2657  076E  00C8               	movwf	??___fltol
  2658  076F                     u1825:
  2659  076F  1003               	clrc
  2660  0770  0DC4               	rlf	___fltol@f1,f
  2661  0771  0DC5               	rlf	___fltol@f1+1,f
  2662  0772  0DC6               	rlf	___fltol@f1+2,f
  2663  0773  0DC7               	rlf	___fltol@f1+3,f
  2664  0774  0BC8               	decfsz	??___fltol,f
  2665  0775  2F6F               	goto	u1825
  2666  0776  3001               	movlw	1
  2667  0777  02CE               	subwf	___fltol@exp1,f
  2668  0778                     l505:
  2669  0778  084E               	movf	___fltol@exp1,w
  2670  0779  1D03               	btfss	3,2
  2671  077A  2F7C               	goto	u1831
  2672  077B  2F7D               	goto	u1830
  2673  077C                     u1831:
  2674  077C  2F6D               	goto	l1940
  2675  077D                     u1830:
  2676  077D                     l1942:
  2677  077D  084D               	movf	___fltol@sign1,w
  2678  077E  1903               	btfsc	3,2
  2679  077F  2F81               	goto	u1841
  2680  0780  2F82               	goto	u1840
  2681  0781                     u1841:
  2682  0781  2F8D               	goto	l508
  2683  0782                     u1840:
  2684  0782                     l1944:
  2685  0782  09C4               	comf	___fltol@f1,f
  2686  0783  09C5               	comf	___fltol@f1+1,f
  2687  0784  09C6               	comf	___fltol@f1+2,f
  2688  0785  09C7               	comf	___fltol@f1+3,f
  2689  0786  0AC4               	incf	___fltol@f1,f
  2690  0787  1903               	skipnz
  2691  0788  0AC5               	incf	___fltol@f1+1,f
  2692  0789  1903               	skipnz
  2693  078A  0AC6               	incf	___fltol@f1+2,f
  2694  078B  1903               	skipnz
  2695  078C  0AC7               	incf	___fltol@f1+3,f
  2696  078D                     l508:
  2697  078D                     l498:
  2698  078D  0008               	return
  2699  078E                     __end_of___fltol:
  2700                           
  2701                           	psect	text6
  2702  0027                     __ptext6:	
  2703 ;; *************** function ___flmul *****************
  2704 ;; Defined at:
  2705 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  b               4   10[BANK0 ] long 
  2708 ;;  a               4   14[BANK0 ] long 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  prod            4   30[BANK0 ] struct .
  2711 ;;  grs             4   24[BANK0 ] unsigned long 
  2712 ;;  temp            2   34[BANK0 ] struct .
  2713 ;;  bexp            1   29[BANK0 ] unsigned char 
  2714 ;;  aexp            1   28[BANK0 ] unsigned char 
  2715 ;;  sign            1   23[BANK0 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  4   10[BANK0 ] unsigned char 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2725 ;;      Params:         0       8       0       0       0
  2726 ;;      Locals:         0      13       0       0       0
  2727 ;;      Temps:          0       5       0       0       0
  2728 ;;      Totals:         0      26       0       0       0
  2729 ;;Total ram usage:       26 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    2
  2732 ;; This function calls:
  2733 ;;		__Umul8_16
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function ___flmul
  2741  0027                     ___flmul:
  2742  0027                     l1946:	
  2743                           ;incstack = 0
  2744                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2745                           
  2746  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0029  082D               	movf	___flmul@b+3,w
  2749  002A  3980               	andlw	128
  2750  002B  00B2               	movwf	??___flmul
  2751  002C  0832               	movf	??___flmul,w
  2752  002D  00B7               	movwf	___flmul@sign
  2753  002E                     l1948:
  2754  002E  082D               	movf	___flmul@b+3,w
  2755  002F  00B2               	movwf	??___flmul
  2756  0030  0732               	addwf	??___flmul,w
  2757  0031  00B3               	movwf	??___flmul+1
  2758  0032  0833               	movf	??___flmul+1,w
  2759  0033  00BD               	movwf	___flmul@bexp
  2760  0034                     l1950:
  2761  0034  1FAC               	btfss	___flmul@b+2,7
  2762  0035  2837               	goto	u1851
  2763  0036  2838               	goto	u1850
  2764  0037                     u1851:
  2765  0037  2839               	goto	l1954
  2766  0038                     u1850:
  2767  0038                     l1952:
  2768  0038  143D               	bsf	___flmul@bexp,0
  2769  0039                     l1954:
  2770  0039  083D               	movf	___flmul@bexp,w
  2771  003A  1903               	btfsc	3,2
  2772  003B  283D               	goto	u1861
  2773  003C  283E               	goto	u1860
  2774  003D                     u1861:
  2775  003D  284D               	goto	l1962
  2776  003E                     u1860:
  2777  003E                     l1956:
  2778  003E  0A3D               	incf	___flmul@bexp,w
  2779  003F  1D03               	btfss	3,2
  2780  0040  2842               	goto	u1871
  2781  0041  2843               	goto	u1870
  2782  0042                     u1871:
  2783  0042  284B               	goto	l1960
  2784  0043                     u1870:
  2785  0043                     l1958:
  2786  0043  3000               	movlw	0
  2787  0044  00AD               	movwf	___flmul@b+3
  2788  0045  3000               	movlw	0
  2789  0046  00AC               	movwf	___flmul@b+2
  2790  0047  3000               	movlw	0
  2791  0048  00AB               	movwf	___flmul@b+1
  2792  0049  3000               	movlw	0
  2793  004A  00AA               	movwf	___flmul@b
  2794  004B                     l1960:
  2795  004B  17AC               	bsf	___flmul@b+2,7
  2796  004C  2855               	goto	l1964
  2797  004D                     l1962:
  2798  004D  3000               	movlw	0
  2799  004E  00AD               	movwf	___flmul@b+3
  2800  004F  3000               	movlw	0
  2801  0050  00AC               	movwf	___flmul@b+2
  2802  0051  3000               	movlw	0
  2803  0052  00AB               	movwf	___flmul@b+1
  2804  0053  3000               	movlw	0
  2805  0054  00AA               	movwf	___flmul@b
  2806  0055                     l1964:
  2807  0055  0831               	movf	___flmul@a+3,w
  2808  0056  3980               	andlw	128
  2809  0057  00B2               	movwf	??___flmul
  2810  0058  0832               	movf	??___flmul,w
  2811  0059  06B7               	xorwf	___flmul@sign,f
  2812  005A                     l1966:
  2813  005A  0831               	movf	___flmul@a+3,w
  2814  005B  00B2               	movwf	??___flmul
  2815  005C  0732               	addwf	??___flmul,w
  2816  005D  00B3               	movwf	??___flmul+1
  2817  005E  0833               	movf	??___flmul+1,w
  2818  005F  00BC               	movwf	___flmul@aexp
  2819  0060                     l1968:
  2820  0060  1FB0               	btfss	___flmul@a+2,7
  2821  0061  2863               	goto	u1881
  2822  0062  2864               	goto	u1880
  2823  0063                     u1881:
  2824  0063  2865               	goto	l1972
  2825  0064                     u1880:
  2826  0064                     l1970:
  2827  0064  143C               	bsf	___flmul@aexp,0
  2828  0065                     l1972:
  2829  0065  083C               	movf	___flmul@aexp,w
  2830  0066  1903               	btfsc	3,2
  2831  0067  2869               	goto	u1891
  2832  0068  286A               	goto	u1890
  2833  0069                     u1891:
  2834  0069  2879               	goto	l1980
  2835  006A                     u1890:
  2836  006A                     l1974:
  2837  006A  0A3C               	incf	___flmul@aexp,w
  2838  006B  1D03               	btfss	3,2
  2839  006C  286E               	goto	u1901
  2840  006D  286F               	goto	u1900
  2841  006E                     u1901:
  2842  006E  2877               	goto	l1978
  2843  006F                     u1900:
  2844  006F                     l1976:
  2845  006F  3000               	movlw	0
  2846  0070  00B1               	movwf	___flmul@a+3
  2847  0071  3000               	movlw	0
  2848  0072  00B0               	movwf	___flmul@a+2
  2849  0073  3000               	movlw	0
  2850  0074  00AF               	movwf	___flmul@a+1
  2851  0075  3000               	movlw	0
  2852  0076  00AE               	movwf	___flmul@a
  2853  0077                     l1978:
  2854  0077  17B0               	bsf	___flmul@a+2,7
  2855  0078  2881               	goto	l1982
  2856  0079                     l1980:
  2857  0079  3000               	movlw	0
  2858  007A  00B1               	movwf	___flmul@a+3
  2859  007B  3000               	movlw	0
  2860  007C  00B0               	movwf	___flmul@a+2
  2861  007D  3000               	movlw	0
  2862  007E  00AF               	movwf	___flmul@a+1
  2863  007F  3000               	movlw	0
  2864  0080  00AE               	movwf	___flmul@a
  2865  0081                     l1982:
  2866  0081  083C               	movf	___flmul@aexp,w
  2867  0082  1903               	btfsc	3,2
  2868  0083  2885               	goto	u1911
  2869  0084  2886               	goto	u1910
  2870  0085                     u1911:
  2871  0085  288B               	goto	l1986
  2872  0086                     u1910:
  2873  0086                     l1984:
  2874  0086  083D               	movf	___flmul@bexp,w
  2875  0087  1D03               	btfss	3,2
  2876  0088  288A               	goto	u1921
  2877  0089  288B               	goto	u1920
  2878  008A                     u1921:
  2879  008A  2894               	goto	l1990
  2880  008B                     u1920:
  2881  008B                     l1986:
  2882  008B  3000               	movlw	0
  2883  008C  00AD               	movwf	?___flmul+3
  2884  008D  3000               	movlw	0
  2885  008E  00AC               	movwf	?___flmul+2
  2886  008F  3000               	movlw	0
  2887  0090  00AB               	movwf	?___flmul+1
  2888  0091  3000               	movlw	0
  2889  0092  00AA               	movwf	?___flmul
  2890  0093  2B87               	goto	l701
  2891  0094                     l1990:
  2892  0094  082A               	movf	___flmul@b,w
  2893  0095  00B2               	movwf	??___flmul
  2894  0096  0832               	movf	??___flmul,w
  2895  0097  00F3               	movwf	__Umul8_16@multiplicand
  2896  0098  0830               	movf	___flmul@a+2,w
  2897  0099  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  2898  009E  0874               	movf	?__Umul8_16+1,w
  2899  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2900  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2901  00A1  00C3               	movwf	___flmul@temp+1
  2902  00A2  0873               	movf	?__Umul8_16,w
  2903  00A3  00C2               	movwf	___flmul@temp
  2904  00A4                     l1992:
  2905  00A4  0842               	movf	___flmul@temp,w
  2906  00A5  00B2               	movwf	??___flmul
  2907  00A6  01B3               	clrf	??___flmul+1
  2908  00A7  01B4               	clrf	??___flmul+2
  2909  00A8  01B5               	clrf	??___flmul+3
  2910  00A9  0835               	movf	??___flmul+3,w
  2911  00AA  00BB               	movwf	___flmul@grs+3
  2912  00AB  0834               	movf	??___flmul+2,w
  2913  00AC  00BA               	movwf	___flmul@grs+2
  2914  00AD  0833               	movf	??___flmul+1,w
  2915  00AE  00B9               	movwf	___flmul@grs+1
  2916  00AF  0832               	movf	??___flmul,w
  2917  00B0  00B8               	movwf	___flmul@grs
  2918  00B1                     l1994:
  2919  00B1  0843               	movf	___flmul@temp+1,w
  2920  00B2  00B2               	movwf	??___flmul
  2921  00B3  01B3               	clrf	??___flmul+1
  2922  00B4  01B4               	clrf	??___flmul+2
  2923  00B5  01B5               	clrf	??___flmul+3
  2924  00B6  0835               	movf	??___flmul+3,w
  2925  00B7  00C1               	movwf	___flmul@prod+3
  2926  00B8  0834               	movf	??___flmul+2,w
  2927  00B9  00C0               	movwf	___flmul@prod+2
  2928  00BA  0833               	movf	??___flmul+1,w
  2929  00BB  00BF               	movwf	___flmul@prod+1
  2930  00BC  0832               	movf	??___flmul,w
  2931  00BD  00BE               	movwf	___flmul@prod
  2932  00BE  082B               	movf	___flmul@b+1,w
  2933  00BF  00B2               	movwf	??___flmul
  2934  00C0  0832               	movf	??___flmul,w
  2935  00C1  00F3               	movwf	__Umul8_16@multiplicand
  2936  00C2  082F               	movf	___flmul@a+1,w
  2937  00C3  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  2938  00C8  0874               	movf	?__Umul8_16+1,w
  2939  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2940  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2941  00CB  00C3               	movwf	___flmul@temp+1
  2942  00CC  0873               	movf	?__Umul8_16,w
  2943  00CD  00C2               	movwf	___flmul@temp
  2944  00CE                     l1996:
  2945  00CE  0842               	movf	___flmul@temp,w
  2946  00CF  00B2               	movwf	??___flmul
  2947  00D0  01B3               	clrf	??___flmul+1
  2948  00D1  01B4               	clrf	??___flmul+2
  2949  00D2  01B5               	clrf	??___flmul+3
  2950  00D3  0832               	movf	??___flmul,w
  2951  00D4  07B8               	addwf	___flmul@grs,f
  2952  00D5  0833               	movf	??___flmul+1,w
  2953  00D6  1103               	clrz
  2954  00D7  1803               	skipnc
  2955  00D8  3E01               	addlw	1
  2956  00D9  1903               	skipnz
  2957  00DA  28DC               	goto	u1931
  2958  00DB  07B9               	addwf	___flmul@grs+1,f
  2959  00DC                     u1931:
  2960  00DC  0834               	movf	??___flmul+2,w
  2961  00DD  1103               	clrz
  2962  00DE  1803               	skipnc
  2963  00DF  3E01               	addlw	1
  2964  00E0  1903               	skipnz
  2965  00E1  28E3               	goto	u1932
  2966  00E2  07BA               	addwf	___flmul@grs+2,f
  2967  00E3                     u1932:
  2968  00E3  0835               	movf	??___flmul+3,w
  2969  00E4  1103               	clrz
  2970  00E5  1803               	skipnc
  2971  00E6  3E01               	addlw	1
  2972  00E7  1903               	skipnz
  2973  00E8  28EA               	goto	u1933
  2974  00E9  07BB               	addwf	___flmul@grs+3,f
  2975  00EA                     u1933:
  2976  00EA                     l1998:
  2977  00EA  0843               	movf	___flmul@temp+1,w
  2978  00EB  00B2               	movwf	??___flmul
  2979  00EC  01B3               	clrf	??___flmul+1
  2980  00ED  01B4               	clrf	??___flmul+2
  2981  00EE  01B5               	clrf	??___flmul+3
  2982  00EF  0832               	movf	??___flmul,w
  2983  00F0  07BE               	addwf	___flmul@prod,f
  2984  00F1  0833               	movf	??___flmul+1,w
  2985  00F2  1103               	clrz
  2986  00F3  1803               	skipnc
  2987  00F4  3E01               	addlw	1
  2988  00F5  1903               	skipnz
  2989  00F6  28F8               	goto	u1941
  2990  00F7  07BF               	addwf	___flmul@prod+1,f
  2991  00F8                     u1941:
  2992  00F8  0834               	movf	??___flmul+2,w
  2993  00F9  1103               	clrz
  2994  00FA  1803               	skipnc
  2995  00FB  3E01               	addlw	1
  2996  00FC  1903               	skipnz
  2997  00FD  28FF               	goto	u1942
  2998  00FE  07C0               	addwf	___flmul@prod+2,f
  2999  00FF                     u1942:
  3000  00FF  0835               	movf	??___flmul+3,w
  3001  0100  1103               	clrz
  3002  0101  1803               	skipnc
  3003  0102  3E01               	addlw	1
  3004  0103  1903               	skipnz
  3005  0104  2906               	goto	u1943
  3006  0105  07C1               	addwf	___flmul@prod+3,f
  3007  0106                     u1943:
  3008  0106  082C               	movf	___flmul@b+2,w
  3009  0107  00B2               	movwf	??___flmul
  3010  0108  0832               	movf	??___flmul,w
  3011  0109  00F3               	movwf	__Umul8_16@multiplicand
  3012  010A  082E               	movf	___flmul@a,w
  3013  010B  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3014  0110  0874               	movf	?__Umul8_16+1,w
  3015  0111  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0112  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0113  00C3               	movwf	___flmul@temp+1
  3018  0114  0873               	movf	?__Umul8_16,w
  3019  0115  00C2               	movwf	___flmul@temp
  3020  0116                     l2000:
  3021  0116  0842               	movf	___flmul@temp,w
  3022  0117  00B2               	movwf	??___flmul
  3023  0118  01B3               	clrf	??___flmul+1
  3024  0119  01B4               	clrf	??___flmul+2
  3025  011A  01B5               	clrf	??___flmul+3
  3026  011B  0832               	movf	??___flmul,w
  3027  011C  07B8               	addwf	___flmul@grs,f
  3028  011D  0833               	movf	??___flmul+1,w
  3029  011E  1103               	clrz
  3030  011F  1803               	skipnc
  3031  0120  3E01               	addlw	1
  3032  0121  1903               	skipnz
  3033  0122  2924               	goto	u1951
  3034  0123  07B9               	addwf	___flmul@grs+1,f
  3035  0124                     u1951:
  3036  0124  0834               	movf	??___flmul+2,w
  3037  0125  1103               	clrz
  3038  0126  1803               	skipnc
  3039  0127  3E01               	addlw	1
  3040  0128  1903               	skipnz
  3041  0129  292B               	goto	u1952
  3042  012A  07BA               	addwf	___flmul@grs+2,f
  3043  012B                     u1952:
  3044  012B  0835               	movf	??___flmul+3,w
  3045  012C  1103               	clrz
  3046  012D  1803               	skipnc
  3047  012E  3E01               	addlw	1
  3048  012F  1903               	skipnz
  3049  0130  2932               	goto	u1953
  3050  0131  07BB               	addwf	___flmul@grs+3,f
  3051  0132                     u1953:
  3052  0132                     l2002:
  3053  0132  0843               	movf	___flmul@temp+1,w
  3054  0133  00B2               	movwf	??___flmul
  3055  0134  01B3               	clrf	??___flmul+1
  3056  0135  01B4               	clrf	??___flmul+2
  3057  0136  01B5               	clrf	??___flmul+3
  3058  0137  0832               	movf	??___flmul,w
  3059  0138  07BE               	addwf	___flmul@prod,f
  3060  0139  0833               	movf	??___flmul+1,w
  3061  013A  1103               	clrz
  3062  013B  1803               	skipnc
  3063  013C  3E01               	addlw	1
  3064  013D  1903               	skipnz
  3065  013E  2940               	goto	u1961
  3066  013F  07BF               	addwf	___flmul@prod+1,f
  3067  0140                     u1961:
  3068  0140  0834               	movf	??___flmul+2,w
  3069  0141  1103               	clrz
  3070  0142  1803               	skipnc
  3071  0143  3E01               	addlw	1
  3072  0144  1903               	skipnz
  3073  0145  2947               	goto	u1962
  3074  0146  07C0               	addwf	___flmul@prod+2,f
  3075  0147                     u1962:
  3076  0147  0835               	movf	??___flmul+3,w
  3077  0148  1103               	clrz
  3078  0149  1803               	skipnc
  3079  014A  3E01               	addlw	1
  3080  014B  1903               	skipnz
  3081  014C  294E               	goto	u1963
  3082  014D  07C1               	addwf	___flmul@prod+3,f
  3083  014E                     u1963:
  3084  014E                     l2004:
  3085  014E  3008               	movlw	8
  3086  014F  00B2               	movwf	??___flmul
  3087  0150                     u1975:
  3088  0150  1003               	clrc
  3089  0151  0DB8               	rlf	___flmul@grs,f
  3090  0152  0DB9               	rlf	___flmul@grs+1,f
  3091  0153  0DBA               	rlf	___flmul@grs+2,f
  3092  0154  0DBB               	rlf	___flmul@grs+3,f
  3093  0155  0BB2               	decfsz	??___flmul,f
  3094  0156  2950               	goto	u1975
  3095  0157                     l2006:
  3096  0157  082B               	movf	___flmul@b+1,w
  3097  0158  00B2               	movwf	??___flmul
  3098  0159  0832               	movf	??___flmul,w
  3099  015A  00F3               	movwf	__Umul8_16@multiplicand
  3100  015B  082E               	movf	___flmul@a,w
  3101  015C  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3102  0161  0874               	movf	?__Umul8_16+1,w
  3103  0162  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0163  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0164  00C3               	movwf	___flmul@temp+1
  3106  0165  0873               	movf	?__Umul8_16,w
  3107  0166  00C2               	movwf	___flmul@temp
  3108  0167                     l2008:
  3109  0167  0842               	movf	___flmul@temp,w
  3110  0168  00B2               	movwf	??___flmul
  3111  0169  0843               	movf	___flmul@temp+1,w
  3112  016A  00B3               	movwf	??___flmul+1
  3113  016B  01B4               	clrf	??___flmul+2
  3114  016C  01B5               	clrf	??___flmul+3
  3115  016D  0832               	movf	??___flmul,w
  3116  016E  07B8               	addwf	___flmul@grs,f
  3117  016F  0833               	movf	??___flmul+1,w
  3118  0170  1103               	clrz
  3119  0171  1803               	skipnc
  3120  0172  3E01               	addlw	1
  3121  0173  1903               	skipnz
  3122  0174  2976               	goto	u1981
  3123  0175  07B9               	addwf	___flmul@grs+1,f
  3124  0176                     u1981:
  3125  0176  0834               	movf	??___flmul+2,w
  3126  0177  1103               	clrz
  3127  0178  1803               	skipnc
  3128  0179  3E01               	addlw	1
  3129  017A  1903               	skipnz
  3130  017B  297D               	goto	u1982
  3131  017C  07BA               	addwf	___flmul@grs+2,f
  3132  017D                     u1982:
  3133  017D  0835               	movf	??___flmul+3,w
  3134  017E  1103               	clrz
  3135  017F  1803               	skipnc
  3136  0180  3E01               	addlw	1
  3137  0181  1903               	skipnz
  3138  0182  2984               	goto	u1983
  3139  0183  07BB               	addwf	___flmul@grs+3,f
  3140  0184                     u1983:
  3141  0184                     l2010:
  3142  0184  082A               	movf	___flmul@b,w
  3143  0185  00B2               	movwf	??___flmul
  3144  0186  0832               	movf	??___flmul,w
  3145  0187  00F3               	movwf	__Umul8_16@multiplicand
  3146  0188  082F               	movf	___flmul@a+1,w
  3147  0189  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3148  018E  0874               	movf	?__Umul8_16+1,w
  3149  018F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0190  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0191  00C3               	movwf	___flmul@temp+1
  3152  0192  0873               	movf	?__Umul8_16,w
  3153  0193  00C2               	movwf	___flmul@temp
  3154  0194                     l2012:
  3155  0194  0842               	movf	___flmul@temp,w
  3156  0195  00B2               	movwf	??___flmul
  3157  0196  0843               	movf	___flmul@temp+1,w
  3158  0197  00B3               	movwf	??___flmul+1
  3159  0198  01B4               	clrf	??___flmul+2
  3160  0199  01B5               	clrf	??___flmul+3
  3161  019A  0832               	movf	??___flmul,w
  3162  019B  07B8               	addwf	___flmul@grs,f
  3163  019C  0833               	movf	??___flmul+1,w
  3164  019D  1103               	clrz
  3165  019E  1803               	skipnc
  3166  019F  3E01               	addlw	1
  3167  01A0  1903               	skipnz
  3168  01A1  29A3               	goto	u1991
  3169  01A2  07B9               	addwf	___flmul@grs+1,f
  3170  01A3                     u1991:
  3171  01A3  0834               	movf	??___flmul+2,w
  3172  01A4  1103               	clrz
  3173  01A5  1803               	skipnc
  3174  01A6  3E01               	addlw	1
  3175  01A7  1903               	skipnz
  3176  01A8  29AA               	goto	u1992
  3177  01A9  07BA               	addwf	___flmul@grs+2,f
  3178  01AA                     u1992:
  3179  01AA  0835               	movf	??___flmul+3,w
  3180  01AB  1103               	clrz
  3181  01AC  1803               	skipnc
  3182  01AD  3E01               	addlw	1
  3183  01AE  1903               	skipnz
  3184  01AF  29B1               	goto	u1993
  3185  01B0  07BB               	addwf	___flmul@grs+3,f
  3186  01B1                     u1993:
  3187  01B1                     l2014:
  3188  01B1  3008               	movlw	8
  3189  01B2  00B2               	movwf	??___flmul
  3190  01B3                     u2005:
  3191  01B3  1003               	clrc
  3192  01B4  0DB8               	rlf	___flmul@grs,f
  3193  01B5  0DB9               	rlf	___flmul@grs+1,f
  3194  01B6  0DBA               	rlf	___flmul@grs+2,f
  3195  01B7  0DBB               	rlf	___flmul@grs+3,f
  3196  01B8  0BB2               	decfsz	??___flmul,f
  3197  01B9  29B3               	goto	u2005
  3198  01BA  082A               	movf	___flmul@b,w
  3199  01BB  00B2               	movwf	??___flmul
  3200  01BC  0832               	movf	??___flmul,w
  3201  01BD  00F3               	movwf	__Umul8_16@multiplicand
  3202  01BE  082E               	movf	___flmul@a,w
  3203  01BF  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3204  01C4  0874               	movf	?__Umul8_16+1,w
  3205  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3206  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3207  01C7  00C3               	movwf	___flmul@temp+1
  3208  01C8  0873               	movf	?__Umul8_16,w
  3209  01C9  00C2               	movwf	___flmul@temp
  3210  01CA                     l2016:
  3211  01CA  0842               	movf	___flmul@temp,w
  3212  01CB  00B2               	movwf	??___flmul
  3213  01CC  0843               	movf	___flmul@temp+1,w
  3214  01CD  00B3               	movwf	??___flmul+1
  3215  01CE  01B4               	clrf	??___flmul+2
  3216  01CF  01B5               	clrf	??___flmul+3
  3217  01D0  0832               	movf	??___flmul,w
  3218  01D1  07B8               	addwf	___flmul@grs,f
  3219  01D2  0833               	movf	??___flmul+1,w
  3220  01D3  1103               	clrz
  3221  01D4  1803               	skipnc
  3222  01D5  3E01               	addlw	1
  3223  01D6  1903               	skipnz
  3224  01D7  29D9               	goto	u2011
  3225  01D8  07B9               	addwf	___flmul@grs+1,f
  3226  01D9                     u2011:
  3227  01D9  0834               	movf	??___flmul+2,w
  3228  01DA  1103               	clrz
  3229  01DB  1803               	skipnc
  3230  01DC  3E01               	addlw	1
  3231  01DD  1903               	skipnz
  3232  01DE  29E0               	goto	u2012
  3233  01DF  07BA               	addwf	___flmul@grs+2,f
  3234  01E0                     u2012:
  3235  01E0  0835               	movf	??___flmul+3,w
  3236  01E1  1103               	clrz
  3237  01E2  1803               	skipnc
  3238  01E3  3E01               	addlw	1
  3239  01E4  1903               	skipnz
  3240  01E5  29E7               	goto	u2013
  3241  01E6  07BB               	addwf	___flmul@grs+3,f
  3242  01E7                     u2013:
  3243  01E7                     l2018:
  3244  01E7  082B               	movf	___flmul@b+1,w
  3245  01E8  00B2               	movwf	??___flmul
  3246  01E9  0832               	movf	??___flmul,w
  3247  01EA  00F3               	movwf	__Umul8_16@multiplicand
  3248  01EB  0830               	movf	___flmul@a+2,w
  3249  01EC  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3250  01F1  0874               	movf	?__Umul8_16+1,w
  3251  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3252  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3253  01F4  00C3               	movwf	___flmul@temp+1
  3254  01F5  0873               	movf	?__Umul8_16,w
  3255  01F6  00C2               	movwf	___flmul@temp
  3256  01F7  0842               	movf	___flmul@temp,w
  3257  01F8  00B2               	movwf	??___flmul
  3258  01F9  0843               	movf	___flmul@temp+1,w
  3259  01FA  00B3               	movwf	??___flmul+1
  3260  01FB  01B4               	clrf	??___flmul+2
  3261  01FC  01B5               	clrf	??___flmul+3
  3262  01FD  0832               	movf	??___flmul,w
  3263  01FE  07BE               	addwf	___flmul@prod,f
  3264  01FF  0833               	movf	??___flmul+1,w
  3265  0200  1103               	clrz
  3266  0201  1803               	skipnc
  3267  0202  3E01               	addlw	1
  3268  0203  1903               	skipnz
  3269  0204  2A06               	goto	u2021
  3270  0205  07BF               	addwf	___flmul@prod+1,f
  3271  0206                     u2021:
  3272  0206  0834               	movf	??___flmul+2,w
  3273  0207  1103               	clrz
  3274  0208  1803               	skipnc
  3275  0209  3E01               	addlw	1
  3276  020A  1903               	skipnz
  3277  020B  2A0D               	goto	u2022
  3278  020C  07C0               	addwf	___flmul@prod+2,f
  3279  020D                     u2022:
  3280  020D  0835               	movf	??___flmul+3,w
  3281  020E  1103               	clrz
  3282  020F  1803               	skipnc
  3283  0210  3E01               	addlw	1
  3284  0211  1903               	skipnz
  3285  0212  2A14               	goto	u2023
  3286  0213  07C1               	addwf	___flmul@prod+3,f
  3287  0214                     u2023:
  3288  0214                     l2020:
  3289  0214  082C               	movf	___flmul@b+2,w
  3290  0215  00B2               	movwf	??___flmul
  3291  0216  0832               	movf	??___flmul,w
  3292  0217  00F3               	movwf	__Umul8_16@multiplicand
  3293  0218  082F               	movf	___flmul@a+1,w
  3294  0219  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3295  021E  0874               	movf	?__Umul8_16+1,w
  3296  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0221  00C3               	movwf	___flmul@temp+1
  3299  0222  0873               	movf	?__Umul8_16,w
  3300  0223  00C2               	movwf	___flmul@temp
  3301  0224                     l2022:
  3302  0224  0842               	movf	___flmul@temp,w
  3303  0225  00B2               	movwf	??___flmul
  3304  0226  0843               	movf	___flmul@temp+1,w
  3305  0227  00B3               	movwf	??___flmul+1
  3306  0228  01B4               	clrf	??___flmul+2
  3307  0229  01B5               	clrf	??___flmul+3
  3308  022A  0832               	movf	??___flmul,w
  3309  022B  07BE               	addwf	___flmul@prod,f
  3310  022C  0833               	movf	??___flmul+1,w
  3311  022D  1103               	clrz
  3312  022E  1803               	skipnc
  3313  022F  3E01               	addlw	1
  3314  0230  1903               	skipnz
  3315  0231  2A33               	goto	u2031
  3316  0232  07BF               	addwf	___flmul@prod+1,f
  3317  0233                     u2031:
  3318  0233  0834               	movf	??___flmul+2,w
  3319  0234  1103               	clrz
  3320  0235  1803               	skipnc
  3321  0236  3E01               	addlw	1
  3322  0237  1903               	skipnz
  3323  0238  2A3A               	goto	u2032
  3324  0239  07C0               	addwf	___flmul@prod+2,f
  3325  023A                     u2032:
  3326  023A  0835               	movf	??___flmul+3,w
  3327  023B  1103               	clrz
  3328  023C  1803               	skipnc
  3329  023D  3E01               	addlw	1
  3330  023E  1903               	skipnz
  3331  023F  2A41               	goto	u2033
  3332  0240  07C1               	addwf	___flmul@prod+3,f
  3333  0241                     u2033:
  3334  0241  082C               	movf	___flmul@b+2,w
  3335  0242  00B2               	movwf	??___flmul
  3336  0243  0832               	movf	??___flmul,w
  3337  0244  00F3               	movwf	__Umul8_16@multiplicand
  3338  0245  0830               	movf	___flmul@a+2,w
  3339  0246  120A  158A  24D2  120A  118A  	fcall	__Umul8_16
  3340  024B  0874               	movf	?__Umul8_16+1,w
  3341  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3342  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3343  024E  00C3               	movwf	___flmul@temp+1
  3344  024F  0873               	movf	?__Umul8_16,w
  3345  0250  00C2               	movwf	___flmul@temp
  3346  0251                     l2024:
  3347  0251  0842               	movf	___flmul@temp,w
  3348  0252  00B2               	movwf	??___flmul
  3349  0253  0843               	movf	___flmul@temp+1,w
  3350  0254  00B3               	movwf	??___flmul+1
  3351  0255  01B4               	clrf	??___flmul+2
  3352  0256  01B5               	clrf	??___flmul+3
  3353  0257  3008               	movlw	8
  3354  0258                     u2045:
  3355  0258  1003               	clrc
  3356  0259  0DB2               	rlf	??___flmul,f
  3357  025A  0DB3               	rlf	??___flmul+1,f
  3358  025B  0DB4               	rlf	??___flmul+2,f
  3359  025C  0DB5               	rlf	??___flmul+3,f
  3360  025D                     u2040:
  3361  025D  3EFF               	addlw	-1
  3362  025E  1D03               	skipz
  3363  025F  2A58               	goto	u2045
  3364  0260  0832               	movf	??___flmul,w
  3365  0261  07BE               	addwf	___flmul@prod,f
  3366  0262  0833               	movf	??___flmul+1,w
  3367  0263  1103               	clrz
  3368  0264  1803               	skipnc
  3369  0265  3E01               	addlw	1
  3370  0266  1903               	skipnz
  3371  0267  2A69               	goto	u2051
  3372  0268  07BF               	addwf	___flmul@prod+1,f
  3373  0269                     u2051:
  3374  0269  0834               	movf	??___flmul+2,w
  3375  026A  1103               	clrz
  3376  026B  1803               	skipnc
  3377  026C  3E01               	addlw	1
  3378  026D  1903               	skipnz
  3379  026E  2A70               	goto	u2052
  3380  026F  07C0               	addwf	___flmul@prod+2,f
  3381  0270                     u2052:
  3382  0270  0835               	movf	??___flmul+3,w
  3383  0271  1103               	clrz
  3384  0272  1803               	skipnc
  3385  0273  3E01               	addlw	1
  3386  0274  1903               	skipnz
  3387  0275  2A77               	goto	u2053
  3388  0276  07C1               	addwf	___flmul@prod+3,f
  3389  0277                     u2053:
  3390  0277                     l2026:
  3391  0277  0838               	movf	___flmul@grs,w
  3392  0278  00B2               	movwf	??___flmul
  3393  0279  0839               	movf	___flmul@grs+1,w
  3394  027A  00B3               	movwf	??___flmul+1
  3395  027B  083A               	movf	___flmul@grs+2,w
  3396  027C  00B4               	movwf	??___flmul+2
  3397  027D  083B               	movf	___flmul@grs+3,w
  3398  027E  00B5               	movwf	??___flmul+3
  3399  027F  3018               	movlw	24
  3400  0280                     u2065:
  3401  0280  1003               	clrc
  3402  0281  0CB5               	rrf	??___flmul+3,f
  3403  0282  0CB4               	rrf	??___flmul+2,f
  3404  0283  0CB3               	rrf	??___flmul+1,f
  3405  0284  0CB2               	rrf	??___flmul,f
  3406  0285                     u2060:
  3407  0285  3EFF               	addlw	-1
  3408  0286  1D03               	skipz
  3409  0287  2A80               	goto	u2065
  3410  0288  0832               	movf	??___flmul,w
  3411  0289  07BE               	addwf	___flmul@prod,f
  3412  028A  0833               	movf	??___flmul+1,w
  3413  028B  1103               	clrz
  3414  028C  1803               	skipnc
  3415  028D  3E01               	addlw	1
  3416  028E  1903               	skipnz
  3417  028F  2A91               	goto	u2071
  3418  0290  07BF               	addwf	___flmul@prod+1,f
  3419  0291                     u2071:
  3420  0291  0834               	movf	??___flmul+2,w
  3421  0292  1103               	clrz
  3422  0293  1803               	skipnc
  3423  0294  3E01               	addlw	1
  3424  0295  1903               	skipnz
  3425  0296  2A98               	goto	u2072
  3426  0297  07C0               	addwf	___flmul@prod+2,f
  3427  0298                     u2072:
  3428  0298  0835               	movf	??___flmul+3,w
  3429  0299  1103               	clrz
  3430  029A  1803               	skipnc
  3431  029B  3E01               	addlw	1
  3432  029C  1903               	skipnz
  3433  029D  2A9F               	goto	u2073
  3434  029E  07C1               	addwf	___flmul@prod+3,f
  3435  029F                     u2073:
  3436  029F                     l2028:
  3437  029F  3008               	movlw	8
  3438  02A0  00B2               	movwf	??___flmul
  3439  02A1                     u2085:
  3440  02A1  1003               	clrc
  3441  02A2  0DB8               	rlf	___flmul@grs,f
  3442  02A3  0DB9               	rlf	___flmul@grs+1,f
  3443  02A4  0DBA               	rlf	___flmul@grs+2,f
  3444  02A5  0DBB               	rlf	___flmul@grs+3,f
  3445  02A6  0BB2               	decfsz	??___flmul,f
  3446  02A7  2AA1               	goto	u2085
  3447  02A8                     l2030:
  3448  02A8  083D               	movf	___flmul@bexp,w
  3449  02A9  073C               	addwf	___flmul@aexp,w
  3450  02AA  00B2               	movwf	??___flmul
  3451  02AB  01B3               	clrf	??___flmul+1
  3452  02AC  0DB3               	rlf	??___flmul+1,f
  3453  02AD  0832               	movf	??___flmul,w
  3454  02AE  3E82               	addlw	130
  3455  02AF  00C2               	movwf	___flmul@temp
  3456  02B0  0833               	movf	??___flmul+1,w
  3457  02B1  1803               	skipnc
  3458  02B2  3E01               	addlw	1
  3459  02B3  3EFF               	addlw	255
  3460  02B4  00C3               	movwf	___flmul@temp+1
  3461  02B5  2AD3               	goto	l2042
  3462  02B6                     l2032:
  3463  02B6  3001               	movlw	1
  3464  02B7  00B2               	movwf	??___flmul
  3465  02B8                     u2095:
  3466  02B8  1003               	clrc
  3467  02B9  0DBE               	rlf	___flmul@prod,f
  3468  02BA  0DBF               	rlf	___flmul@prod+1,f
  3469  02BB  0DC0               	rlf	___flmul@prod+2,f
  3470  02BC  0DC1               	rlf	___flmul@prod+3,f
  3471  02BD  0BB2               	decfsz	??___flmul,f
  3472  02BE  2AB8               	goto	u2095
  3473  02BF                     l2034:
  3474  02BF  1FBB               	btfss	___flmul@grs+3,7
  3475  02C0  2AC2               	goto	u2101
  3476  02C1  2AC3               	goto	u2100
  3477  02C2                     u2101:
  3478  02C2  2AC4               	goto	l2038
  3479  02C3                     u2100:
  3480  02C3                     l2036:
  3481  02C3  143E               	bsf	___flmul@prod,0
  3482  02C4                     l2038:
  3483  02C4  3001               	movlw	1
  3484  02C5  00B2               	movwf	??___flmul
  3485  02C6                     u2115:
  3486  02C6  1003               	clrc
  3487  02C7  0DB8               	rlf	___flmul@grs,f
  3488  02C8  0DB9               	rlf	___flmul@grs+1,f
  3489  02C9  0DBA               	rlf	___flmul@grs+2,f
  3490  02CA  0DBB               	rlf	___flmul@grs+3,f
  3491  02CB  0BB2               	decfsz	??___flmul,f
  3492  02CC  2AC6               	goto	u2115
  3493  02CD                     l2040:
  3494  02CD  30FF               	movlw	255
  3495  02CE  07C2               	addwf	___flmul@temp,f
  3496  02CF  1803               	skipnc
  3497  02D0  0AC3               	incf	___flmul@temp+1,f
  3498  02D1  30FF               	movlw	255
  3499  02D2  07C3               	addwf	___flmul@temp+1,f
  3500  02D3                     l2042:
  3501  02D3  1FC0               	btfss	___flmul@prod+2,7
  3502  02D4  2AD6               	goto	u2121
  3503  02D5  2AD7               	goto	u2120
  3504  02D6                     u2121:
  3505  02D6  2AB6               	goto	l2032
  3506  02D7                     u2120:
  3507  02D7                     l2044:
  3508  02D7  01BC               	clrf	___flmul@aexp
  3509  02D8                     l2046:
  3510  02D8  1FBB               	btfss	___flmul@grs+3,7
  3511  02D9  2ADB               	goto	u2131
  3512  02DA  2ADC               	goto	u2130
  3513  02DB                     u2131:
  3514  02DB  2AF8               	goto	l2054
  3515  02DC                     u2130:
  3516  02DC                     l2048:
  3517  02DC  30FF               	movlw	255
  3518  02DD  0538               	andwf	___flmul@grs,w
  3519  02DE  00B2               	movwf	??___flmul
  3520  02DF  30FF               	movlw	255
  3521  02E0  0539               	andwf	___flmul@grs+1,w
  3522  02E1  00B3               	movwf	??___flmul+1
  3523  02E2  30FF               	movlw	255
  3524  02E3  053A               	andwf	___flmul@grs+2,w
  3525  02E4  00B4               	movwf	??___flmul+2
  3526  02E5  307F               	movlw	127
  3527  02E6  053B               	andwf	___flmul@grs+3,w
  3528  02E7  00B5               	movwf	??___flmul+3
  3529  02E8  0835               	movf	??___flmul+3,w
  3530  02E9  0434               	iorwf	??___flmul+2,w
  3531  02EA  0433               	iorwf	??___flmul+1,w
  3532  02EB  0432               	iorwf	??___flmul,w
  3533  02EC  1903               	skipnz
  3534  02ED  2AEF               	goto	u2141
  3535  02EE  2AF0               	goto	u2140
  3536  02EF                     u2141:
  3537  02EF  2AF3               	goto	l707
  3538  02F0                     u2140:
  3539  02F0                     l2050:
  3540  02F0  01BC               	clrf	___flmul@aexp
  3541  02F1  0ABC               	incf	___flmul@aexp,f
  3542  02F2  2AF8               	goto	l2054
  3543  02F3                     l707:
  3544  02F3  1C3E               	btfss	___flmul@prod,0
  3545  02F4  2AF6               	goto	u2151
  3546  02F5  2AF7               	goto	u2150
  3547  02F6                     u2151:
  3548  02F6  2AF8               	goto	l2054
  3549  02F7                     u2150:
  3550  02F7  2AF0               	goto	l2050
  3551  02F8                     l2054:
  3552  02F8  083C               	movf	___flmul@aexp,w
  3553  02F9  1903               	btfsc	3,2
  3554  02FA  2AFC               	goto	u2161
  3555  02FB  2AFD               	goto	u2160
  3556  02FC                     u2161:
  3557  02FC  2B2E               	goto	l2064
  3558  02FD                     u2160:
  3559  02FD                     l2056:
  3560  02FD  3001               	movlw	1
  3561  02FE  07BE               	addwf	___flmul@prod,f
  3562  02FF  3000               	movlw	0
  3563  0300  1803               	skipnc
  3564  0301  3001               	movlw	1
  3565  0302  07BF               	addwf	___flmul@prod+1,f
  3566  0303  3000               	movlw	0
  3567  0304  1803               	skipnc
  3568  0305  3001               	movlw	1
  3569  0306  07C0               	addwf	___flmul@prod+2,f
  3570  0307  3000               	movlw	0
  3571  0308  1803               	skipnc
  3572  0309  3001               	movlw	1
  3573  030A  07C1               	addwf	___flmul@prod+3,f
  3574  030B                     l2058:
  3575  030B  1C41               	btfss	___flmul@prod+3,0
  3576  030C  2B0E               	goto	u2171
  3577  030D  2B0F               	goto	u2170
  3578  030E                     u2171:
  3579  030E  2B2E               	goto	l2064
  3580  030F                     u2170:
  3581  030F                     l2060:
  3582  030F  083E               	movf	___flmul@prod,w
  3583  0310  00B2               	movwf	??___flmul
  3584  0311  083F               	movf	___flmul@prod+1,w
  3585  0312  00B3               	movwf	??___flmul+1
  3586  0313  0840               	movf	___flmul@prod+2,w
  3587  0314  00B4               	movwf	??___flmul+2
  3588  0315  0841               	movf	___flmul@prod+3,w
  3589  0316  00B5               	movwf	??___flmul+3
  3590  0317  3001               	movlw	1
  3591  0318  00B6               	movwf	??___flmul+4
  3592  0319                     u2185:
  3593  0319  0D35               	rlf	??___flmul+3,w
  3594  031A  0CB5               	rrf	??___flmul+3,f
  3595  031B  0CB4               	rrf	??___flmul+2,f
  3596  031C  0CB3               	rrf	??___flmul+1,f
  3597  031D  0CB2               	rrf	??___flmul,f
  3598  031E                     u2180:
  3599  031E  0BB6               	decfsz	??___flmul+4,f
  3600  031F  2B19               	goto	u2185
  3601  0320  0835               	movf	??___flmul+3,w
  3602  0321  00C1               	movwf	___flmul@prod+3
  3603  0322  0834               	movf	??___flmul+2,w
  3604  0323  00C0               	movwf	___flmul@prod+2
  3605  0324  0833               	movf	??___flmul+1,w
  3606  0325  00BF               	movwf	___flmul@prod+1
  3607  0326  0832               	movf	??___flmul,w
  3608  0327  00BE               	movwf	___flmul@prod
  3609  0328                     l2062:
  3610  0328  3001               	movlw	1
  3611  0329  07C2               	addwf	___flmul@temp,f
  3612  032A  1803               	skipnc
  3613  032B  0AC3               	incf	___flmul@temp+1,f
  3614  032C  3000               	movlw	0
  3615  032D  07C3               	addwf	___flmul@temp+1,f
  3616  032E                     l2064:
  3617  032E  0843               	movf	___flmul@temp+1,w
  3618  032F  3A80               	xorlw	128
  3619  0330  00FF               	movwf	btemp+1
  3620  0331  3080               	movlw	128
  3621  0332  027F               	subwf	btemp+1,w
  3622  0333  1D03               	skipz
  3623  0334  2B37               	goto	u2195
  3624  0335  30FF               	movlw	255
  3625  0336  0242               	subwf	___flmul@temp,w
  3626  0337                     u2195:
  3627  0337  1C03               	skipc
  3628  0338  2B3A               	goto	u2191
  3629  0339  2B3B               	goto	u2190
  3630  033A                     u2191:
  3631  033A  2B46               	goto	l2068
  3632  033B                     u2190:
  3633  033B                     l2066:
  3634  033B  307F               	movlw	127
  3635  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3636  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3637  033E  00C1               	movwf	___flmul@prod+3
  3638  033F  3080               	movlw	128
  3639  0340  00C0               	movwf	___flmul@prod+2
  3640  0341  3000               	movlw	0
  3641  0342  00BF               	movwf	___flmul@prod+1
  3642  0343  3000               	movlw	0
  3643  0344  00BE               	movwf	___flmul@prod
  3644  0345  2B7B               	goto	l713
  3645  0346                     l2068:
  3646  0346  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0347  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0348  0843               	movf	___flmul@temp+1,w
  3649  0349  3A80               	xorlw	128
  3650  034A  00FF               	movwf	btemp+1
  3651  034B  3080               	movlw	128
  3652  034C  027F               	subwf	btemp+1,w
  3653  034D  1D03               	skipz
  3654  034E  2B51               	goto	u2205
  3655  034F  3001               	movlw	1
  3656  0350  0242               	subwf	___flmul@temp,w
  3657  0351                     u2205:
  3658  0351  1803               	skipnc
  3659  0352  2B54               	goto	u2201
  3660  0353  2B55               	goto	u2200
  3661  0354                     u2201:
  3662  0354  2B61               	goto	l2074
  3663  0355                     u2200:
  3664  0355                     l2070:
  3665  0355  3000               	movlw	0
  3666  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0358  00C1               	movwf	___flmul@prod+3
  3669  0359  3000               	movlw	0
  3670  035A  00C0               	movwf	___flmul@prod+2
  3671  035B  3000               	movlw	0
  3672  035C  00BF               	movwf	___flmul@prod+1
  3673  035D  3000               	movlw	0
  3674  035E  00BE               	movwf	___flmul@prod
  3675  035F                     l2072:
  3676  035F  01B7               	clrf	___flmul@sign
  3677  0360  2B7B               	goto	l713
  3678  0361                     l2074:
  3679  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0363  0842               	movf	___flmul@temp,w
  3682  0364  00B2               	movwf	??___flmul
  3683  0365  0832               	movf	??___flmul,w
  3684  0366  00BD               	movwf	___flmul@bexp
  3685  0367  30FF               	movlw	255
  3686  0368  05BE               	andwf	___flmul@prod,f
  3687  0369  30FF               	movlw	255
  3688  036A  05BF               	andwf	___flmul@prod+1,f
  3689  036B  307F               	movlw	127
  3690  036C  05C0               	andwf	___flmul@prod+2,f
  3691  036D  3000               	movlw	0
  3692  036E  05C1               	andwf	___flmul@prod+3,f
  3693  036F                     l2076:
  3694  036F  1C3D               	btfss	___flmul@bexp,0
  3695  0370  2B72               	goto	u2211
  3696  0371  2B73               	goto	u2210
  3697  0372                     u2211:
  3698  0372  2B74               	goto	l2080
  3699  0373                     u2210:
  3700  0373                     l2078:
  3701  0373  17C0               	bsf	___flmul@prod+2,7
  3702  0374                     l2080:
  3703  0374  083D               	movf	___flmul@bexp,w
  3704  0375  00B2               	movwf	??___flmul
  3705  0376  1003               	clrc
  3706  0377  0C32               	rrf	??___flmul,w
  3707  0378  00B3               	movwf	??___flmul+1
  3708  0379  0833               	movf	??___flmul+1,w
  3709  037A  00C1               	movwf	___flmul@prod+3
  3710  037B                     l713:
  3711  037B  0837               	movf	___flmul@sign,w
  3712  037C  00B2               	movwf	??___flmul
  3713  037D  0832               	movf	??___flmul,w
  3714  037E  04C1               	iorwf	___flmul@prod+3,f
  3715  037F                     l2082:
  3716  037F  0841               	movf	___flmul@prod+3,w
  3717  0380  00AD               	movwf	?___flmul+3
  3718  0381  0840               	movf	___flmul@prod+2,w
  3719  0382  00AC               	movwf	?___flmul+2
  3720  0383  083F               	movf	___flmul@prod+1,w
  3721  0384  00AB               	movwf	?___flmul+1
  3722  0385  083E               	movf	___flmul@prod,w
  3723  0386  00AA               	movwf	?___flmul
  3724  0387                     l701:
  3725  0387  0008               	return
  3726  0388                     __end_of___flmul:
  3727                           
  3728                           	psect	text7
  3729  0CD2                     __ptext7:	
  3730 ;; *************** function __Umul8_16 *****************
  3731 ;; Defined at:
  3732 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  multiplier      1    wreg     unsigned char 
  3735 ;;  multiplicand    1    3[COMMON] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3738 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3739 ;;  product         2    0[BANK0 ] unsigned int 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  2    3[COMMON] unsigned int 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         2       0       0       0       0
  3750 ;;      Locals:         0       5       0       0       0
  3751 ;;      Temps:          2       0       0       0       0
  3752 ;;      Totals:         4       5       0       0       0
  3753 ;;Total ram usage:        9 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		___flmul
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function __Umul8_16
  3765  0CD2                     __Umul8_16:
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3769                           ;__Umul8_16@multiplier stored from wreg
  3770  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0CD4  00A4               	movwf	__Umul8_16@multiplier
  3773  0CD5                     l1710:
  3774  0CD5  01A0               	clrf	__Umul8_16@product
  3775  0CD6  01A1               	clrf	__Umul8_16@product+1
  3776  0CD7                     l1712:
  3777  0CD7  0873               	movf	__Umul8_16@multiplicand,w
  3778  0CD8  00F5               	movwf	??__Umul8_16
  3779  0CD9  01F6               	clrf	??__Umul8_16+1
  3780  0CDA  0875               	movf	??__Umul8_16,w
  3781  0CDB  00A2               	movwf	__Umul8_16@word_mpld
  3782  0CDC  0876               	movf	??__Umul8_16+1,w
  3783  0CDD  00A3               	movwf	__Umul8_16@word_mpld+1
  3784  0CDE                     l1714:
  3785  0CDE  1C24               	btfss	__Umul8_16@multiplier,0
  3786  0CDF  2CE1               	goto	u1541
  3787  0CE0  2CE2               	goto	u1540
  3788  0CE1                     u1541:
  3789  0CE1  2CE8               	goto	l720
  3790  0CE2                     u1540:
  3791  0CE2                     l1716:
  3792  0CE2  0822               	movf	__Umul8_16@word_mpld,w
  3793  0CE3  07A0               	addwf	__Umul8_16@product,f
  3794  0CE4  1803               	skipnc
  3795  0CE5  0AA1               	incf	__Umul8_16@product+1,f
  3796  0CE6  0823               	movf	__Umul8_16@word_mpld+1,w
  3797  0CE7  07A1               	addwf	__Umul8_16@product+1,f
  3798  0CE8                     l720:
  3799  0CE8  3001               	movlw	1
  3800  0CE9                     u1555:
  3801  0CE9  1003               	clrc
  3802  0CEA  0DA2               	rlf	__Umul8_16@word_mpld,f
  3803  0CEB  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3804  0CEC  3EFF               	addlw	-1
  3805  0CED  1D03               	skipz
  3806  0CEE  2CE9               	goto	u1555
  3807  0CEF  1003               	clrc
  3808  0CF0  0CA4               	rrf	__Umul8_16@multiplier,f
  3809  0CF1                     l1718:
  3810  0CF1  0824               	movf	__Umul8_16@multiplier,w
  3811  0CF2  1D03               	btfss	3,2
  3812  0CF3  2CF5               	goto	u1561
  3813  0CF4  2CF6               	goto	u1560
  3814  0CF5                     u1561:
  3815  0CF5  2CDE               	goto	l1714
  3816  0CF6                     u1560:
  3817  0CF6                     l1720:
  3818  0CF6  0821               	movf	__Umul8_16@product+1,w
  3819  0CF7  00F4               	movwf	?__Umul8_16+1
  3820  0CF8  0820               	movf	__Umul8_16@product,w
  3821  0CF9  00F3               	movwf	?__Umul8_16
  3822  0CFA                     l722:
  3823  0CFA  0008               	return
  3824  0CFB                     __end_of__Umul8_16:
  3825                           
  3826                           	psect	text8
  3827  0DA6                     __ptext8:	
  3828 ;; *************** function _USART_CONFIG *****************
  3829 ;; Defined at:
  3830 ;;		line 11 in file "USART.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  frec            2    0[BANK0 ] int 
  3833 ;;  tr              2    2[BANK0 ] int 
  3834 ;;  rc              2    4[BANK0 ] int 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       6       0       0       0
  3847 ;;      Locals:         0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       6       0       0       0
  3850 ;;Total ram usage:        6 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _USART_CONFIG
  3862  0DA6                     _USART_CONFIG:
  3863  0DA6                     l2420:	
  3864                           ;incstack = 0
  3865                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  3866                           
  3867                           
  3868                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  3869  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  3871  0DA8  1798               	bsf	24,7	;volatile
  3872                           
  3873                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  3874  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0DAB  1218               	bcf	24,4	;volatile
  3877                           
  3878                           ;USART.c: 14:     TXSTAbits.TX9 = 0;
  3879  0DAC  1318               	bcf	24,6	;volatile
  3880                           
  3881                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  3882  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0DAF  1318               	bcf	24,6	;volatile
  3885                           
  3886                           ;USART.c: 16:     switch(frec){
  3887  0DB0  2DC3               	goto	l2436
  3888  0DB1                     l2422:
  3889                           
  3890                           ;USART.c: 18:             SPBRG = 25;
  3891  0DB1  3019               	movlw	25
  3892  0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  3894  0DB4  0099               	movwf	25	;volatile
  3895  0DB5                     l2424:
  3896                           
  3897                           ;USART.c: 19:             TXSTAbits.BRGH = 1;
  3898  0DB5  1518               	bsf	24,2	;volatile
  3899  0DB6                     l2426:
  3900                           
  3901                           ;USART.c: 20:             BAUDCTLbits.BRG16 = 0;
  3902  0DB6  1683               	bsf	3,5	;RP0=1, select bank3
  3903  0DB7  1703               	bsf	3,6	;RP1=1, select bank3
  3904  0DB8  1187               	bcf	7,3	;volatile
  3905                           
  3906                           ;USART.c: 21:             break;
  3907  0DB9  2DD0               	goto	l2438
  3908  0DBA                     l2428:
  3909                           
  3910                           ;USART.c: 23:             SPBRG = 12;
  3911  0DBA  300C               	movlw	12
  3912  0DBB  1683               	bsf	3,5	;RP0=1, select bank1
  3913  0DBC  1303               	bcf	3,6	;RP1=0, select bank1
  3914  0DBD  0099               	movwf	25	;volatile
  3915  0DBE                     l2430:
  3916                           
  3917                           ;USART.c: 24:             TXSTAbits.BRGH = 0;
  3918  0DBE  1118               	bcf	24,2	;volatile
  3919  0DBF                     l2432:
  3920                           
  3921                           ;USART.c: 25:             BAUDCTLbits.BRG16 = 0;
  3922  0DBF  1683               	bsf	3,5	;RP0=1, select bank3
  3923  0DC0  1703               	bsf	3,6	;RP1=1, select bank3
  3924  0DC1  1187               	bcf	7,3	;volatile
  3925                           
  3926                           ;USART.c: 26:             break;
  3927  0DC2  2DD0               	goto	l2438
  3928  0DC3                     l2436:
  3929                           
  3930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3931                           ; Switch size 1, requested type "simple"
  3932                           ; Number of cases is 1, Range of values is 0 to 0
  3933                           ; switch strategies available:
  3934                           ; Name         Instructions Cycles
  3935                           ; simple_byte            4     3 (average)
  3936                           ; direct_byte           11     8 (fixed)
  3937                           ; jumptable            260     6 (fixed)
  3938                           ;	Chosen strategy is simple_byte
  3939  0DC3  0821               	movf	USART_CONFIG@frec+1,w
  3940  0DC4  3A00               	xorlw	0	; case 0
  3941  0DC5  1903               	skipnz
  3942  0DC6  2DC8               	goto	l2714
  3943  0DC7  2DD0               	goto	l2438
  3944  0DC8                     l2714:
  3945                           
  3946                           ; Switch size 1, requested type "simple"
  3947                           ; Number of cases is 2, Range of values is 4 to 8
  3948                           ; switch strategies available:
  3949                           ; Name         Instructions Cycles
  3950                           ; simple_byte            7     4 (average)
  3951                           ; direct_byte           26    11 (fixed)
  3952                           ; jumptable            263     9 (fixed)
  3953                           ;	Chosen strategy is simple_byte
  3954  0DC8  0820               	movf	USART_CONFIG@frec,w
  3955  0DC9  3A04               	xorlw	4	; case 4
  3956  0DCA  1903               	skipnz
  3957  0DCB  2DB1               	goto	l2422
  3958  0DCC  3A0C               	xorlw	12	; case 8
  3959  0DCD  1903               	skipnz
  3960  0DCE  2DBA               	goto	l2428
  3961  0DCF  2DD0               	goto	l2438
  3962  0DD0                     l2438:
  3963                           
  3964                           ;USART.c: 28:     if(tr==1){
  3965  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0DD2  0322               	decf	USART_CONFIG@tr,w
  3968  0DD3  0423               	iorwf	USART_CONFIG@tr+1,w
  3969  0DD4  1D03               	btfss	3,2
  3970  0DD5  2DD7               	goto	u2691
  3971  0DD6  2DD8               	goto	u2690
  3972  0DD7                     u2691:
  3973  0DD7  2DDC               	goto	l156
  3974  0DD8                     u2690:
  3975  0DD8                     l2440:
  3976                           
  3977                           ;USART.c: 29:         TXEN = 1;
  3978  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  3979  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  3980  0DDA  1698               	bsf	24,5	;volatile
  3981                           
  3982                           ;USART.c: 30:     }
  3983  0DDB  2DDF               	goto	l2442
  3984  0DDC                     l156:	
  3985                           ;USART.c: 31:     else{
  3986                           
  3987                           
  3988                           ;USART.c: 32:         TXEN = 0;
  3989  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  3990  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  3991  0DDE  1298               	bcf	24,5	;volatile
  3992  0DDF                     l2442:
  3993                           
  3994                           ;USART.c: 34:     if(rc == 1){
  3995  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0DE1  0324               	decf	USART_CONFIG@rc,w
  3998  0DE2  0425               	iorwf	USART_CONFIG@rc+1,w
  3999  0DE3  1D03               	btfss	3,2
  4000  0DE4  2DE6               	goto	u2701
  4001  0DE5  2DE7               	goto	u2700
  4002  0DE6                     u2701:
  4003  0DE6  2DE9               	goto	l158
  4004  0DE7                     u2700:
  4005  0DE7                     l2444:
  4006                           
  4007                           ;USART.c: 35:         RCSTAbits.CREN = 1;
  4008  0DE7  1618               	bsf	24,4	;volatile
  4009                           
  4010                           ;USART.c: 36:     }
  4011  0DE8  2DEA               	goto	l160
  4012  0DE9                     l158:	
  4013                           ;USART.c: 37:     else{
  4014                           
  4015                           
  4016                           ;USART.c: 38:         RCSTAbits.CREN = 0;
  4017  0DE9  1218               	bcf	24,4	;volatile
  4018  0DEA                     l160:
  4019  0DEA  0008               	return
  4020  0DEB                     __end_of_USART_CONFIG:
  4021                           
  4022                           	psect	text9
  4023  0CAA                     __ptext9:	
  4024 ;; *************** function _UART_write *****************
  4025 ;; Defined at:
  4026 ;;		line 51 in file "Lab2.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  word            2    3[COMMON] PTR unsigned char 
  4029 ;;		 -> STR_11(4), STR_10(9), STR_9(8), STR_8(4), 
  4030 ;;		 -> buffer1(10), buffer(10), STR_2(32), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         2       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0
  4045 ;;      Totals:         2       0       0       0       0
  4046 ;;Total ram usage:        2 bytes
  4047 ;; Hardware stack levels used:    2
  4048 ;; Hardware stack levels required when called:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _UART_write
  4058  0CAA                     _UART_write:
  4059  0CAA                     l1724:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _UART_write: [wreg-fsr0h+btemp+1+pclath]
  4062                           
  4063                           
  4064                           ;Lab2.c: 52:     while (*word != 0){
  4065  0CAA  2CC1               	goto	l1730
  4066  0CAB                     l1726:
  4067                           
  4068                           ;Lab2.c: 53:         TXREG = (*word);
  4069  0CAB  0874               	movf	UART_write@word+1,w
  4070  0CAC  00FF               	movwf	btemp+1
  4071  0CAD  0873               	movf	UART_write@word,w
  4072  0CAE  0084               	movwf	4
  4073  0CAF  120A  118A  278E  120A  158A  	fcall	stringtab
  4074  0CB4  0099               	movwf	25	;volatile
  4075  0CB5                     l89:	
  4076                           ;Lab2.c: 54:         while(!TXSTAbits.TRMT);
  4077                           
  4078  0CB5  1683               	bsf	3,5	;RP0=1, select bank1
  4079  0CB6  1303               	bcf	3,6	;RP1=0, select bank1
  4080  0CB7  1C98               	btfss	24,1	;volatile
  4081  0CB8  2CBA               	goto	u1571
  4082  0CB9  2CBB               	goto	u1570
  4083  0CBA                     u1571:
  4084  0CBA  2CB5               	goto	l89
  4085  0CBB                     u1570:
  4086  0CBB                     l1728:
  4087                           
  4088                           ;Lab2.c: 55:         word++;
  4089  0CBB  3001               	movlw	1
  4090  0CBC  07F3               	addwf	UART_write@word,f
  4091  0CBD  1803               	skipnc
  4092  0CBE  0AF4               	incf	UART_write@word+1,f
  4093  0CBF  3000               	movlw	0
  4094  0CC0  07F4               	addwf	UART_write@word+1,f
  4095  0CC1                     l1730:
  4096                           
  4097                           ;Lab2.c: 52:     while (*word != 0){
  4098  0CC1  0874               	movf	UART_write@word+1,w
  4099  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0CC4  00FF               	movwf	btemp+1
  4102  0CC5  0873               	movf	UART_write@word,w
  4103  0CC6  0084               	movwf	4
  4104  0CC7  120A  118A  278E  120A  158A  	fcall	stringtab
  4105  0CCC  3A00               	xorlw	0
  4106  0CCD  1D03               	skipz
  4107  0CCE  2CD0               	goto	u1581
  4108  0CCF  2CD1               	goto	u1580
  4109  0CD0                     u1581:
  4110  0CD0  2CAB               	goto	l1726
  4111  0CD1                     u1580:
  4112  0CD1                     l93:
  4113  0CD1  0008               	return
  4114  0CD2                     __end_of_UART_write:
  4115                           
  4116                           	psect	text10
  4117  0DEB                     __ptext10:	
  4118 ;; *************** function _Lcd_Write_String *****************
  4119 ;; Defined at:
  4120 ;;		line 72 in file "LCDh.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  a               2    5[COMMON] PTR unsigned char 
  4123 ;;		 -> buffer4(10), buffer3(10), buffer2(10), buffer1(10), 
  4124 ;;		 -> buffer(10), STR_1(14), 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  i               2    3[BANK0 ] int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4136 ;;      Params:         2       0       0       0       0
  4137 ;;      Locals:         0       2       0       0       0
  4138 ;;      Temps:          0       3       0       0       0
  4139 ;;      Totals:         2       5       0       0       0
  4140 ;;Total ram usage:        7 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    2
  4143 ;; This function calls:
  4144 ;;		_Lcd_Write_Char
  4145 ;; This function is called by:
  4146 ;;		_main
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _Lcd_Write_String
  4152  0DEB                     _Lcd_Write_String:
  4153  0DEB                     l2450:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4156                           
  4157                           
  4158                           ;LCDh.c: 73:     int i;;LCDh.c: 74:     for (i = 0; a[i] != '\0'; i++)
  4159  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0DED  01A3               	clrf	Lcd_Write_String@i
  4162  0DEE  01A4               	clrf	Lcd_Write_String@i+1
  4163  0DEF  2E14               	goto	l2456
  4164  0DF0                     l2452:
  4165                           
  4166                           ;LCDh.c: 75:         Lcd_Write_Char(a[i]);
  4167  0DF0  0823               	movf	Lcd_Write_String@i,w
  4168  0DF1  0775               	addwf	Lcd_Write_String@a,w
  4169  0DF2  00A1               	movwf	??_Lcd_Write_String+1
  4170  0DF3  0876               	movf	Lcd_Write_String@a+1,w
  4171  0DF4  00A0               	movwf	??_Lcd_Write_String
  4172  0DF5  1803               	skipnc
  4173  0DF6  0AA0               	incf	??_Lcd_Write_String,f
  4174  0DF7  1FA3               	btfss	Lcd_Write_String@i,7
  4175  0DF8  2DFA               	goto	u2710
  4176  0DF9  03A0               	decf	??_Lcd_Write_String,f
  4177  0DFA                     u2710:
  4178  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0DFC  0820               	movf	??_Lcd_Write_String,w
  4181  0DFD  00A2               	movwf	??_Lcd_Write_String+2
  4182  0DFE  0822               	movf	??_Lcd_Write_String+2,w
  4183  0DFF  00FF               	movwf	btemp+1
  4184  0E00  0821               	movf	??_Lcd_Write_String+1,w
  4185  0E01  0084               	movwf	4
  4186  0E02  120A  118A  278E  120A  158A  	fcall	stringtab
  4187  0E07  120A  158A  244B  120A  158A  	fcall	_Lcd_Write_Char
  4188  0E0C                     l2454:
  4189  0E0C  3001               	movlw	1
  4190  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0E0F  07A3               	addwf	Lcd_Write_String@i,f
  4193  0E10  1803               	skipnc
  4194  0E11  0AA4               	incf	Lcd_Write_String@i+1,f
  4195  0E12  3000               	movlw	0
  4196  0E13  07A4               	addwf	Lcd_Write_String@i+1,f
  4197  0E14                     l2456:
  4198  0E14  0823               	movf	Lcd_Write_String@i,w
  4199  0E15  0775               	addwf	Lcd_Write_String@a,w
  4200  0E16  00A1               	movwf	??_Lcd_Write_String+1
  4201  0E17  0876               	movf	Lcd_Write_String@a+1,w
  4202  0E18  00A0               	movwf	??_Lcd_Write_String
  4203  0E19  1803               	skipnc
  4204  0E1A  0AA0               	incf	??_Lcd_Write_String,f
  4205  0E1B  1FA3               	btfss	Lcd_Write_String@i,7
  4206  0E1C  2E1E               	goto	u2720
  4207  0E1D  03A0               	decf	??_Lcd_Write_String,f
  4208  0E1E                     u2720:
  4209  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0E20  0820               	movf	??_Lcd_Write_String,w
  4212  0E21  00A2               	movwf	??_Lcd_Write_String+2
  4213  0E22  0822               	movf	??_Lcd_Write_String+2,w
  4214  0E23  00FF               	movwf	btemp+1
  4215  0E24  0821               	movf	??_Lcd_Write_String+1,w
  4216  0E25  0084               	movwf	4
  4217  0E26  120A  118A  278E  120A  158A  	fcall	stringtab
  4218  0E2B  3A00               	xorlw	0
  4219  0E2C  1D03               	skipz
  4220  0E2D  2E2F               	goto	u2731
  4221  0E2E  2E30               	goto	u2730
  4222  0E2F                     u2731:
  4223  0E2F  2DF0               	goto	l2452
  4224  0E30                     u2730:
  4225  0E30                     l192:
  4226  0E30  0008               	return
  4227  0E31                     __end_of_Lcd_Write_String:
  4228                           
  4229                           	psect	text11
  4230  0C4B                     __ptext11:	
  4231 ;; *************** function _Lcd_Write_Char *****************
  4232 ;; Defined at:
  4233 ;;		line 58 in file "LCDh.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  a               1    wreg     unsigned char 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  a               1    4[COMMON] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4247 ;;      Params:         0       0       0       0       0
  4248 ;;      Locals:         1       0       0       0       0
  4249 ;;      Temps:          1       0       0       0       0
  4250 ;;      Totals:         2       0       0       0       0
  4251 ;;Total ram usage:        2 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_Lcd_Write_String
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           
  4262                           ;psect for function _Lcd_Write_Char
  4263  0C4B                     _Lcd_Write_Char:
  4264                           
  4265                           ;incstack = 0
  4266                           ; Regs used in _Lcd_Write_Char: [wreg]
  4267                           ;Lcd_Write_Char@a stored from wreg
  4268  0C4B  00F4               	movwf	Lcd_Write_Char@a
  4269  0C4C                     l1572:
  4270                           
  4271                           ;LCDh.c: 61:     RC4 = 1;
  4272  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  4273  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  4274  0C4E  1607               	bsf	7,4	;volatile
  4275  0C4F                     l1574:
  4276                           
  4277                           ;LCDh.c: 62:     PORTD = a;
  4278  0C4F  0874               	movf	Lcd_Write_Char@a,w
  4279  0C50  0088               	movwf	8	;volatile
  4280  0C51                     l1576:
  4281                           
  4282                           ;LCDh.c: 63:     RC5 = 1;
  4283  0C51  1687               	bsf	7,5	;volatile
  4284                           
  4285                           ;LCDh.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4286  0C52  300D               	movlw	13
  4287  0C53  00F3               	movwf	??_Lcd_Write_Char
  4288  0C54                     u2967:
  4289  0C54  0BF3               	decfsz	??_Lcd_Write_Char,f
  4290  0C55  2C54               	goto	u2967
  4291  0C56                     l1578:
  4292                           
  4293                           ;LCDh.c: 69:     RC5 = 0;
  4294  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0C58  1287               	bcf	7,5	;volatile
  4297  0C59                     l186:
  4298  0C59  0008               	return
  4299  0C5A                     __end_of_Lcd_Write_Char:
  4300                           
  4301                           	psect	text12
  4302  0C6D                     __ptext12:	
  4303 ;; *************** function _Lcd_Set_Cursor *****************
  4304 ;; Defined at:
  4305 ;;		line 29 in file "LCDh.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  a               1    wreg     unsigned char 
  4308 ;;  b               1    6[COMMON] unsigned char 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;  a               1    7[COMMON] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, pclath, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         1       0       0       0       0
  4321 ;;      Locals:         1       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0
  4323 ;;      Totals:         2       0       0       0       0
  4324 ;;Total ram usage:        2 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    2
  4327 ;; This function calls:
  4328 ;;		_Lcd_Cmd
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           
  4335                           ;psect for function _Lcd_Set_Cursor
  4336  0C6D                     _Lcd_Set_Cursor:
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4340                           ;Lcd_Set_Cursor@a stored from wreg
  4341  0C6D  00F7               	movwf	Lcd_Set_Cursor@a
  4342  0C6E                     l1820:
  4343                           
  4344                           ;LCDh.c: 30:     if (a == 1){
  4345  0C6E  0377               	decf	Lcd_Set_Cursor@a,w
  4346  0C6F  1D03               	btfss	3,2
  4347  0C70  2C72               	goto	u1611
  4348  0C71  2C73               	goto	u1610
  4349  0C72                     u1611:
  4350  0C72  2C7C               	goto	l1824
  4351  0C73                     u1610:
  4352  0C73                     l1822:
  4353                           
  4354                           ;LCDh.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  4355  0C73  0876               	movf	Lcd_Set_Cursor@b,w
  4356  0C74  390F               	andlw	15
  4357  0C75  3880               	iorlw	128
  4358  0C76  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4359                           
  4360                           ;LCDh.c: 32:     }
  4361  0C7B  2C8A               	goto	l180
  4362  0C7C                     l1824:
  4363  0C7C  3002               	movlw	2
  4364  0C7D  0677               	xorwf	Lcd_Set_Cursor@a,w
  4365  0C7E  1D03               	btfss	3,2
  4366  0C7F  2C81               	goto	u1621
  4367  0C80  2C82               	goto	u1620
  4368  0C81                     u1621:
  4369  0C81  2C8A               	goto	l180
  4370  0C82                     u1620:
  4371  0C82                     l1826:
  4372                           
  4373                           ;LCDh.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  4374  0C82  0876               	movf	Lcd_Set_Cursor@b,w
  4375  0C83  390F               	andlw	15
  4376  0C84  38C0               	iorlw	192
  4377  0C85  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4378  0C8A                     l180:
  4379  0C8A  0008               	return
  4380  0C8B                     __end_of_Lcd_Set_Cursor:
  4381                           
  4382                           	psect	text13
  4383  0ED2                     __ptext13:	
  4384 ;; *************** function _Lcd_Init *****************
  4385 ;; Defined at:
  4386 ;;		line 39 in file "LCDh.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;		None
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, pclath, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4400 ;;      Params:         0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0
  4403 ;;      Totals:         2       0       0       0       0
  4404 ;;Total ram usage:        2 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    2
  4407 ;; This function calls:
  4408 ;;		_Lcd_Cmd
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function _Lcd_Init
  4416  0ED2                     _Lcd_Init:
  4417  0ED2                     l1790:	
  4418                           ;incstack = 0
  4419                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4420                           
  4421                           
  4422                           ;LCDh.c: 40:     PORTD = (0x00);
  4423  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4424  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4425  0ED4  0188               	clrf	8	;volatile
  4426  0ED5                     l1792:
  4427                           
  4428                           ;LCDh.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4429  0ED5  301A               	movlw	26
  4430  0ED6  00F7               	movwf	??_Lcd_Init+1
  4431  0ED7  30F8               	movlw	248
  4432  0ED8  00F6               	movwf	??_Lcd_Init
  4433  0ED9                     u2977:
  4434  0ED9  0BF6               	decfsz	??_Lcd_Init,f
  4435  0EDA  2ED9               	goto	u2977
  4436  0EDB  0BF7               	decfsz	??_Lcd_Init+1,f
  4437  0EDC  2ED9               	goto	u2977
  4438  0EDD  0000               	nop
  4439  0EDE                     l1794:
  4440                           
  4441                           ;LCDh.c: 42:     Lcd_Cmd(0x30);
  4442  0EDE  3030               	movlw	48
  4443  0EDF  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4444  0EE4                     l1796:
  4445                           
  4446                           ;LCDh.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4447  0EE4  3007               	movlw	7
  4448  0EE5  00F7               	movwf	??_Lcd_Init+1
  4449  0EE6  307D               	movlw	125
  4450  0EE7  00F6               	movwf	??_Lcd_Init
  4451  0EE8                     u2987:
  4452  0EE8  0BF6               	decfsz	??_Lcd_Init,f
  4453  0EE9  2EE8               	goto	u2987
  4454  0EEA  0BF7               	decfsz	??_Lcd_Init+1,f
  4455  0EEB  2EE8               	goto	u2987
  4456  0EEC                     l1798:
  4457                           
  4458                           ;LCDh.c: 44:     Lcd_Cmd(0x30);
  4459  0EEC  3030               	movlw	48
  4460  0EED  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4461  0EF2                     l1800:
  4462                           
  4463                           ;LCDh.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4464  0EF2  300F               	movlw	15
  4465  0EF3  00F7               	movwf	??_Lcd_Init+1
  4466  0EF4  3047               	movlw	71
  4467  0EF5  00F6               	movwf	??_Lcd_Init
  4468  0EF6                     u2997:
  4469  0EF6  0BF6               	decfsz	??_Lcd_Init,f
  4470  0EF7  2EF6               	goto	u2997
  4471  0EF8  0BF7               	decfsz	??_Lcd_Init+1,f
  4472  0EF9  2EF6               	goto	u2997
  4473  0EFA  2EFB               	nop2
  4474  0EFB                     l1802:
  4475                           
  4476                           ;LCDh.c: 46:     Lcd_Cmd(0x30);
  4477  0EFB  3030               	movlw	48
  4478  0EFC  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4479  0F01                     l1804:
  4480                           
  4481                           ;LCDh.c: 48:     Lcd_Cmd(0x38);
  4482  0F01  3038               	movlw	56
  4483  0F02  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4484  0F07                     l1806:
  4485                           
  4486                           ;LCDh.c: 49:     Lcd_Cmd(0x10);
  4487  0F07  3010               	movlw	16
  4488  0F08  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4489  0F0D                     l1808:
  4490                           
  4491                           ;LCDh.c: 50:     Lcd_Cmd(0x01);
  4492  0F0D  3001               	movlw	1
  4493  0F0E  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4494  0F13                     l1810:
  4495                           
  4496                           ;LCDh.c: 51:     Lcd_Cmd(0x06);
  4497  0F13  3006               	movlw	6
  4498  0F14  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4499  0F19                     l1812:
  4500                           
  4501                           ;LCDh.c: 52:     Lcd_Cmd(0x10);
  4502  0F19  3010               	movlw	16
  4503  0F1A  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4504  0F1F                     l1814:
  4505                           
  4506                           ;LCDh.c: 53:     Lcd_Cmd(0x0C);
  4507  0F1F  300C               	movlw	12
  4508  0F20  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4509  0F25                     l1816:
  4510                           
  4511                           ;LCDh.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4512  0F25  3082               	movlw	130
  4513  0F26  00F7               	movwf	??_Lcd_Init+1
  4514  0F27  30DD               	movlw	221
  4515  0F28  00F6               	movwf	??_Lcd_Init
  4516  0F29                     u3007:
  4517  0F29  0BF6               	decfsz	??_Lcd_Init,f
  4518  0F2A  2F29               	goto	u3007
  4519  0F2B  0BF7               	decfsz	??_Lcd_Init+1,f
  4520  0F2C  2F29               	goto	u3007
  4521  0F2D  2F2E               	nop2
  4522  0F2E                     l183:
  4523  0F2E  0008               	return
  4524  0F2F                     __end_of_Lcd_Init:
  4525                           
  4526                           	psect	text14
  4527  0C3E                     __ptext14:	
  4528 ;; *************** function _Lcd_Clear *****************
  4529 ;; Defined at:
  4530 ;;		line 24 in file "LCDh.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    2
  4551 ;; This function calls:
  4552 ;;		_Lcd_Cmd
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _Lcd_Clear
  4560  0C3E                     _Lcd_Clear:
  4561  0C3E                     l1818:	
  4562                           ;incstack = 0
  4563                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4564                           
  4565                           
  4566                           ;LCDh.c: 25:     Lcd_Cmd(0);
  4567  0C3E  3000               	movlw	0
  4568  0C3F  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4569                           
  4570                           ;LCDh.c: 26:     Lcd_Cmd(1);
  4571  0C44  3001               	movlw	1
  4572  0C45  120A  158A  245A  120A  158A  	fcall	_Lcd_Cmd
  4573  0C4A                     l174:
  4574  0C4A  0008               	return
  4575  0C4B                     __end_of_Lcd_Clear:
  4576                           
  4577                           	psect	text15
  4578  0C5A                     __ptext15:	
  4579 ;; *************** function _Lcd_Cmd *****************
  4580 ;; Defined at:
  4581 ;;		line 16 in file "LCDh.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  a               1    wreg     unsigned char 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  a               1    5[COMMON] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         0       0       0       0       0
  4596 ;;      Locals:         1       0       0       0       0
  4597 ;;      Temps:          2       0       0       0       0
  4598 ;;      Totals:         3       0       0       0       0
  4599 ;;Total ram usage:        3 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    1
  4602 ;; This function calls:
  4603 ;;		Nothing
  4604 ;; This function is called by:
  4605 ;;		_Lcd_Clear
  4606 ;;		_Lcd_Set_Cursor
  4607 ;;		_Lcd_Init
  4608 ;;		_Lcd_Shift_Right
  4609 ;;		_Lcd_Shift_Left
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _Lcd_Cmd
  4615  0C5A                     _Lcd_Cmd:
  4616                           
  4617                           ;incstack = 0
  4618                           ; Regs used in _Lcd_Cmd: [wreg]
  4619                           ;Lcd_Cmd@a stored from wreg
  4620  0C5A  00F5               	movwf	Lcd_Cmd@a
  4621  0C5B                     l1564:
  4622                           
  4623                           ;LCDh.c: 17:     RC4 = 0;
  4624  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0C5D  1207               	bcf	7,4	;volatile
  4627  0C5E                     l1566:
  4628                           
  4629                           ;LCDh.c: 18:     PORTD = a;
  4630  0C5E  0875               	movf	Lcd_Cmd@a,w
  4631  0C5F  0088               	movwf	8	;volatile
  4632  0C60                     l1568:
  4633                           
  4634                           ;LCDh.c: 19:     RC5 = 1;
  4635  0C60  1687               	bsf	7,5	;volatile
  4636                           
  4637                           ;LCDh.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4638  0C61  3007               	movlw	7
  4639  0C62  00F4               	movwf	??_Lcd_Cmd+1
  4640  0C63  307D               	movlw	125
  4641  0C64  00F3               	movwf	??_Lcd_Cmd
  4642  0C65                     u3017:
  4643  0C65  0BF3               	decfsz	??_Lcd_Cmd,f
  4644  0C66  2C65               	goto	u3017
  4645  0C67  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4646  0C68  2C65               	goto	u3017
  4647  0C69                     l1570:
  4648                           
  4649                           ;LCDh.c: 21:     RC5 = 0;
  4650  0C69  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0C6B  1287               	bcf	7,5	;volatile
  4653  0C6C                     l171:
  4654  0C6C  0008               	return
  4655  0C6D                     __end_of_Lcd_Cmd:
  4656                           
  4657                           	psect	text16
  4658  0F2F                     __ptext16:	
  4659 ;; *************** function _Division *****************
  4660 ;; Defined at:
  4661 ;;		line 60 in file "Lab2.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  y               1    wreg     unsigned char 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  y               1   16[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         0       0       0       0       0
  4676 ;;      Locals:         0       3       0       0       0
  4677 ;;      Temps:          0       3       0       0       0
  4678 ;;      Totals:         0       6       0       0       0
  4679 ;;Total ram usage:        6 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		___awdiv
  4684 ;;		___awmod
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function _Division
  4692  0F2F                     _Division:
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  4696                           ;Division@y stored from wreg
  4697  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4698  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4699  0F31  00B0               	movwf	Division@y
  4700  0F32                     l2418:
  4701                           
  4702                           ;Lab2.c: 61:         cen = (y/100);
  4703  0F32  3064               	movlw	100
  4704  0F33  00A2               	movwf	___awdiv@divisor
  4705  0F34  3000               	movlw	0
  4706  0F35  00A3               	movwf	___awdiv@divisor+1
  4707  0F36  0830               	movf	Division@y,w
  4708  0F37  00AB               	movwf	??_Division
  4709  0F38  01AC               	clrf	??_Division+1
  4710  0F39  082B               	movf	??_Division,w
  4711  0F3A  00A4               	movwf	___awdiv@dividend
  4712  0F3B  082C               	movf	??_Division+1,w
  4713  0F3C  00A5               	movwf	___awdiv@dividend+1
  4714  0F3D  120A  158A  2797  120A  158A  	fcall	___awdiv
  4715  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0F44  0822               	movf	?___awdiv,w
  4718  0F45  00AD               	movwf	??_Division+2
  4719  0F46  082D               	movf	??_Division+2,w
  4720  0F47  00D7               	movwf	_cen
  4721                           
  4722                           ;Lab2.c: 62:         dec = ((y%100)/10);
  4723  0F48  300A               	movlw	10
  4724  0F49  00A2               	movwf	___awdiv@divisor
  4725  0F4A  3000               	movlw	0
  4726  0F4B  00A3               	movwf	___awdiv@divisor+1
  4727  0F4C  0830               	movf	Division@y,w
  4728  0F4D  00AB               	movwf	??_Division
  4729  0F4E  01AC               	clrf	??_Division+1
  4730  0F4F  082B               	movf	??_Division,w
  4731  0F50  00F5               	movwf	___awmod@dividend
  4732  0F51  082C               	movf	??_Division+1,w
  4733  0F52  00F6               	movwf	___awmod@dividend+1
  4734  0F53  3064               	movlw	100
  4735  0F54  00F3               	movwf	___awmod@divisor
  4736  0F55  3000               	movlw	0
  4737  0F56  00F4               	movwf	___awmod@divisor+1
  4738  0F57  120A  158A  2677  120A  158A  	fcall	___awmod
  4739  0F5C  0874               	movf	?___awmod+1,w
  4740  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0F5F  00A5               	movwf	___awdiv@dividend+1
  4743  0F60  0873               	movf	?___awmod,w
  4744  0F61  00A4               	movwf	___awdiv@dividend
  4745  0F62  120A  158A  2797  120A  158A  	fcall	___awdiv
  4746  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  4747  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  4748  0F69  0822               	movf	?___awdiv,w
  4749  0F6A  00AD               	movwf	??_Division+2
  4750  0F6B  082D               	movf	??_Division+2,w
  4751  0F6C  00D6               	movwf	_dec
  4752                           
  4753                           ;Lab2.c: 63:         uni = ((y%100)%10);
  4754  0F6D  0830               	movf	Division@y,w
  4755  0F6E  00AB               	movwf	??_Division
  4756  0F6F  01AC               	clrf	??_Division+1
  4757  0F70  082B               	movf	??_Division,w
  4758  0F71  00F5               	movwf	___awmod@dividend
  4759  0F72  082C               	movf	??_Division+1,w
  4760  0F73  00F6               	movwf	___awmod@dividend+1
  4761  0F74  3064               	movlw	100
  4762  0F75  00F3               	movwf	___awmod@divisor
  4763  0F76  3000               	movlw	0
  4764  0F77  00F4               	movwf	___awmod@divisor+1
  4765  0F78  120A  158A  2677  120A  158A  	fcall	___awmod
  4766  0F7D  0874               	movf	?___awmod+1,w
  4767  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0F80  00AF               	movwf	_Division$1124+1
  4770  0F81  0873               	movf	?___awmod,w
  4771  0F82  00AE               	movwf	_Division$1124
  4772                           
  4773                           ;Lab2.c: 63:         uni = ((y%100)%10);
  4774  0F83  300A               	movlw	10
  4775  0F84  00F3               	movwf	___awmod@divisor
  4776  0F85  3000               	movlw	0
  4777  0F86  00F4               	movwf	___awmod@divisor+1
  4778  0F87  082F               	movf	_Division$1124+1,w
  4779  0F88  00F6               	movwf	___awmod@dividend+1
  4780  0F89  082E               	movf	_Division$1124,w
  4781  0F8A  00F5               	movwf	___awmod@dividend
  4782  0F8B  120A  158A  2677  120A  158A  	fcall	___awmod
  4783  0F90  0873               	movf	?___awmod,w
  4784  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4785  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4786  0F93  00AB               	movwf	??_Division
  4787  0F94  082B               	movf	??_Division,w
  4788  0F95  00D5               	movwf	_uni
  4789  0F96                     l96:
  4790  0F96  0008               	return
  4791  0F97                     __end_of_Division:
  4792                           
  4793                           	psect	text17
  4794  0E77                     __ptext17:	
  4795 ;; *************** function ___awmod *****************
  4796 ;; Defined at:
  4797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  divisor         2    3[COMMON] int 
  4800 ;;  dividend        2    5[COMMON] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  sign            1    1[BANK0 ] unsigned char 
  4803 ;;  counter         1    0[BANK0 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2    3[COMMON] int 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         4       0       0       0       0
  4814 ;;      Locals:         0       2       0       0       0
  4815 ;;      Temps:          1       0       0       0       0
  4816 ;;      Totals:         5       2       0       0       0
  4817 ;;Total ram usage:        7 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_Division
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           
  4828                           ;psect for function ___awmod
  4829  0E77                     ___awmod:
  4830  0E77                     l2354:	
  4831                           ;incstack = 0
  4832                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4833                           
  4834  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0E79  01A1               	clrf	___awmod@sign
  4837  0E7A                     l2356:
  4838  0E7A  1FF6               	btfss	___awmod@dividend+1,7
  4839  0E7B  2E7D               	goto	u2531
  4840  0E7C  2E7E               	goto	u2530
  4841  0E7D                     u2531:
  4842  0E7D  2E85               	goto	l2362
  4843  0E7E                     u2530:
  4844  0E7E                     l2358:
  4845  0E7E  09F5               	comf	___awmod@dividend,f
  4846  0E7F  09F6               	comf	___awmod@dividend+1,f
  4847  0E80  0AF5               	incf	___awmod@dividend,f
  4848  0E81  1903               	skipnz
  4849  0E82  0AF6               	incf	___awmod@dividend+1,f
  4850  0E83                     l2360:
  4851  0E83  01A1               	clrf	___awmod@sign
  4852  0E84  0AA1               	incf	___awmod@sign,f
  4853  0E85                     l2362:
  4854  0E85  1FF4               	btfss	___awmod@divisor+1,7
  4855  0E86  2E88               	goto	u2541
  4856  0E87  2E89               	goto	u2540
  4857  0E88                     u2541:
  4858  0E88  2E8E               	goto	l2366
  4859  0E89                     u2540:
  4860  0E89                     l2364:
  4861  0E89  09F3               	comf	___awmod@divisor,f
  4862  0E8A  09F4               	comf	___awmod@divisor+1,f
  4863  0E8B  0AF3               	incf	___awmod@divisor,f
  4864  0E8C  1903               	skipnz
  4865  0E8D  0AF4               	incf	___awmod@divisor+1,f
  4866  0E8E                     l2366:
  4867  0E8E  0873               	movf	___awmod@divisor,w
  4868  0E8F  0474               	iorwf	___awmod@divisor+1,w
  4869  0E90  1903               	btfsc	3,2
  4870  0E91  2E93               	goto	u2551
  4871  0E92  2E94               	goto	u2550
  4872  0E93                     u2551:
  4873  0E93  2EC3               	goto	l2384
  4874  0E94                     u2550:
  4875  0E94                     l2368:
  4876  0E94  01A0               	clrf	___awmod@counter
  4877  0E95  0AA0               	incf	___awmod@counter,f
  4878  0E96  2EA2               	goto	l2374
  4879  0E97                     l2370:
  4880  0E97  3001               	movlw	1
  4881  0E98                     u2565:
  4882  0E98  1003               	clrc
  4883  0E99  0DF3               	rlf	___awmod@divisor,f
  4884  0E9A  0DF4               	rlf	___awmod@divisor+1,f
  4885  0E9B  3EFF               	addlw	-1
  4886  0E9C  1D03               	skipz
  4887  0E9D  2E98               	goto	u2565
  4888  0E9E                     l2372:
  4889  0E9E  3001               	movlw	1
  4890  0E9F  00F7               	movwf	??___awmod
  4891  0EA0  0877               	movf	??___awmod,w
  4892  0EA1  07A0               	addwf	___awmod@counter,f
  4893  0EA2                     l2374:
  4894  0EA2  1FF4               	btfss	___awmod@divisor+1,7
  4895  0EA3  2EA5               	goto	u2571
  4896  0EA4  2EA6               	goto	u2570
  4897  0EA5                     u2571:
  4898  0EA5  2E97               	goto	l2370
  4899  0EA6                     u2570:
  4900  0EA6                     l2376:
  4901  0EA6  0874               	movf	___awmod@divisor+1,w
  4902  0EA7  0276               	subwf	___awmod@dividend+1,w
  4903  0EA8  1D03               	skipz
  4904  0EA9  2EAC               	goto	u2585
  4905  0EAA  0873               	movf	___awmod@divisor,w
  4906  0EAB  0275               	subwf	___awmod@dividend,w
  4907  0EAC                     u2585:
  4908  0EAC  1C03               	skipc
  4909  0EAD  2EAF               	goto	u2581
  4910  0EAE  2EB0               	goto	u2580
  4911  0EAF                     u2581:
  4912  0EAF  2EB6               	goto	l2380
  4913  0EB0                     u2580:
  4914  0EB0                     l2378:
  4915  0EB0  0873               	movf	___awmod@divisor,w
  4916  0EB1  02F5               	subwf	___awmod@dividend,f
  4917  0EB2  0874               	movf	___awmod@divisor+1,w
  4918  0EB3  1C03               	skipc
  4919  0EB4  03F6               	decf	___awmod@dividend+1,f
  4920  0EB5  02F6               	subwf	___awmod@dividend+1,f
  4921  0EB6                     l2380:
  4922  0EB6  3001               	movlw	1
  4923  0EB7                     u2595:
  4924  0EB7  1003               	clrc
  4925  0EB8  0CF4               	rrf	___awmod@divisor+1,f
  4926  0EB9  0CF3               	rrf	___awmod@divisor,f
  4927  0EBA  3EFF               	addlw	-1
  4928  0EBB  1D03               	skipz
  4929  0EBC  2EB7               	goto	u2595
  4930  0EBD                     l2382:
  4931  0EBD  3001               	movlw	1
  4932  0EBE  02A0               	subwf	___awmod@counter,f
  4933  0EBF  1D03               	btfss	3,2
  4934  0EC0  2EC2               	goto	u2601
  4935  0EC1  2EC3               	goto	u2600
  4936  0EC2                     u2601:
  4937  0EC2  2EA6               	goto	l2376
  4938  0EC3                     u2600:
  4939  0EC3                     l2384:
  4940  0EC3  0821               	movf	___awmod@sign,w
  4941  0EC4  1903               	btfsc	3,2
  4942  0EC5  2EC7               	goto	u2611
  4943  0EC6  2EC8               	goto	u2610
  4944  0EC7                     u2611:
  4945  0EC7  2ECD               	goto	l2388
  4946  0EC8                     u2610:
  4947  0EC8                     l2386:
  4948  0EC8  09F5               	comf	___awmod@dividend,f
  4949  0EC9  09F6               	comf	___awmod@dividend+1,f
  4950  0ECA  0AF5               	incf	___awmod@dividend,f
  4951  0ECB  1903               	skipnz
  4952  0ECC  0AF6               	incf	___awmod@dividend+1,f
  4953  0ECD                     l2388:
  4954  0ECD  0876               	movf	___awmod@dividend+1,w
  4955  0ECE  00F4               	movwf	?___awmod+1
  4956  0ECF  0875               	movf	___awmod@dividend,w
  4957  0ED0  00F3               	movwf	?___awmod
  4958  0ED1                     l478:
  4959  0ED1  0008               	return
  4960  0ED2                     __end_of___awmod:
  4961                           
  4962                           	psect	text18
  4963  0F97                     __ptext18:	
  4964 ;; *************** function ___awdiv *****************
  4965 ;; Defined at:
  4966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  divisor         2    2[BANK0 ] int 
  4969 ;;  dividend        2    4[BANK0 ] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  quotient        2    9[BANK0 ] int 
  4972 ;;  sign            1    8[BANK0 ] unsigned char 
  4973 ;;  counter         1    7[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  2    2[BANK0 ] int 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       4       0       0       0
  4984 ;;      Locals:         0       4       0       0       0
  4985 ;;      Temps:          0       1       0       0       0
  4986 ;;      Totals:         0       9       0       0       0
  4987 ;;Total ram usage:        9 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_Division
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           
  4998                           ;psect for function ___awdiv
  4999  0F97                     ___awdiv:
  5000  0F97                     l2310:	
  5001                           ;incstack = 0
  5002                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5003                           
  5004  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  5005  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  5006  0F99  01A8               	clrf	___awdiv@sign
  5007  0F9A                     l2312:
  5008  0F9A  1FA3               	btfss	___awdiv@divisor+1,7
  5009  0F9B  2F9D               	goto	u2431
  5010  0F9C  2F9E               	goto	u2430
  5011  0F9D                     u2431:
  5012  0F9D  2FA5               	goto	l2318
  5013  0F9E                     u2430:
  5014  0F9E                     l2314:
  5015  0F9E  09A2               	comf	___awdiv@divisor,f
  5016  0F9F  09A3               	comf	___awdiv@divisor+1,f
  5017  0FA0  0AA2               	incf	___awdiv@divisor,f
  5018  0FA1  1903               	skipnz
  5019  0FA2  0AA3               	incf	___awdiv@divisor+1,f
  5020  0FA3                     l2316:
  5021  0FA3  01A8               	clrf	___awdiv@sign
  5022  0FA4  0AA8               	incf	___awdiv@sign,f
  5023  0FA5                     l2318:
  5024  0FA5  1FA5               	btfss	___awdiv@dividend+1,7
  5025  0FA6  2FA8               	goto	u2441
  5026  0FA7  2FA9               	goto	u2440
  5027  0FA8                     u2441:
  5028  0FA8  2FB2               	goto	l2324
  5029  0FA9                     u2440:
  5030  0FA9                     l2320:
  5031  0FA9  09A4               	comf	___awdiv@dividend,f
  5032  0FAA  09A5               	comf	___awdiv@dividend+1,f
  5033  0FAB  0AA4               	incf	___awdiv@dividend,f
  5034  0FAC  1903               	skipnz
  5035  0FAD  0AA5               	incf	___awdiv@dividend+1,f
  5036  0FAE                     l2322:
  5037  0FAE  3001               	movlw	1
  5038  0FAF  00A6               	movwf	??___awdiv
  5039  0FB0  0826               	movf	??___awdiv,w
  5040  0FB1  06A8               	xorwf	___awdiv@sign,f
  5041  0FB2                     l2324:
  5042  0FB2  01A9               	clrf	___awdiv@quotient
  5043  0FB3  01AA               	clrf	___awdiv@quotient+1
  5044  0FB4                     l2326:
  5045  0FB4  0822               	movf	___awdiv@divisor,w
  5046  0FB5  0423               	iorwf	___awdiv@divisor+1,w
  5047  0FB6  1903               	btfsc	3,2
  5048  0FB7  2FB9               	goto	u2451
  5049  0FB8  2FBA               	goto	u2450
  5050  0FB9                     u2451:
  5051  0FB9  2FF1               	goto	l2346
  5052  0FBA                     u2450:
  5053  0FBA                     l2328:
  5054  0FBA  01A7               	clrf	___awdiv@counter
  5055  0FBB  0AA7               	incf	___awdiv@counter,f
  5056  0FBC  2FC8               	goto	l2334
  5057  0FBD                     l2330:
  5058  0FBD  3001               	movlw	1
  5059  0FBE                     u2465:
  5060  0FBE  1003               	clrc
  5061  0FBF  0DA2               	rlf	___awdiv@divisor,f
  5062  0FC0  0DA3               	rlf	___awdiv@divisor+1,f
  5063  0FC1  3EFF               	addlw	-1
  5064  0FC2  1D03               	skipz
  5065  0FC3  2FBE               	goto	u2465
  5066  0FC4                     l2332:
  5067  0FC4  3001               	movlw	1
  5068  0FC5  00A6               	movwf	??___awdiv
  5069  0FC6  0826               	movf	??___awdiv,w
  5070  0FC7  07A7               	addwf	___awdiv@counter,f
  5071  0FC8                     l2334:
  5072  0FC8  1FA3               	btfss	___awdiv@divisor+1,7
  5073  0FC9  2FCB               	goto	u2471
  5074  0FCA  2FCC               	goto	u2470
  5075  0FCB                     u2471:
  5076  0FCB  2FBD               	goto	l2330
  5077  0FCC                     u2470:
  5078  0FCC                     l2336:
  5079  0FCC  3001               	movlw	1
  5080  0FCD                     u2485:
  5081  0FCD  1003               	clrc
  5082  0FCE  0DA9               	rlf	___awdiv@quotient,f
  5083  0FCF  0DAA               	rlf	___awdiv@quotient+1,f
  5084  0FD0  3EFF               	addlw	-1
  5085  0FD1  1D03               	skipz
  5086  0FD2  2FCD               	goto	u2485
  5087  0FD3  0823               	movf	___awdiv@divisor+1,w
  5088  0FD4  0225               	subwf	___awdiv@dividend+1,w
  5089  0FD5  1D03               	skipz
  5090  0FD6  2FD9               	goto	u2495
  5091  0FD7  0822               	movf	___awdiv@divisor,w
  5092  0FD8  0224               	subwf	___awdiv@dividend,w
  5093  0FD9                     u2495:
  5094  0FD9  1C03               	skipc
  5095  0FDA  2FDC               	goto	u2491
  5096  0FDB  2FDD               	goto	u2490
  5097  0FDC                     u2491:
  5098  0FDC  2FE4               	goto	l2342
  5099  0FDD                     u2490:
  5100  0FDD                     l2338:
  5101  0FDD  0822               	movf	___awdiv@divisor,w
  5102  0FDE  02A4               	subwf	___awdiv@dividend,f
  5103  0FDF  0823               	movf	___awdiv@divisor+1,w
  5104  0FE0  1C03               	skipc
  5105  0FE1  03A5               	decf	___awdiv@dividend+1,f
  5106  0FE2  02A5               	subwf	___awdiv@dividend+1,f
  5107  0FE3                     l2340:
  5108  0FE3  1429               	bsf	___awdiv@quotient,0
  5109  0FE4                     l2342:
  5110  0FE4  3001               	movlw	1
  5111  0FE5                     u2505:
  5112  0FE5  1003               	clrc
  5113  0FE6  0CA3               	rrf	___awdiv@divisor+1,f
  5114  0FE7  0CA2               	rrf	___awdiv@divisor,f
  5115  0FE8  3EFF               	addlw	-1
  5116  0FE9  1D03               	skipz
  5117  0FEA  2FE5               	goto	u2505
  5118  0FEB                     l2344:
  5119  0FEB  3001               	movlw	1
  5120  0FEC  02A7               	subwf	___awdiv@counter,f
  5121  0FED  1D03               	btfss	3,2
  5122  0FEE  2FF0               	goto	u2511
  5123  0FEF  2FF1               	goto	u2510
  5124  0FF0                     u2511:
  5125  0FF0  2FCC               	goto	l2336
  5126  0FF1                     u2510:
  5127  0FF1                     l2346:
  5128  0FF1  0828               	movf	___awdiv@sign,w
  5129  0FF2  1903               	btfsc	3,2
  5130  0FF3  2FF5               	goto	u2521
  5131  0FF4  2FF6               	goto	u2520
  5132  0FF5                     u2521:
  5133  0FF5  2FFB               	goto	l2350
  5134  0FF6                     u2520:
  5135  0FF6                     l2348:
  5136  0FF6  09A9               	comf	___awdiv@quotient,f
  5137  0FF7  09AA               	comf	___awdiv@quotient+1,f
  5138  0FF8  0AA9               	incf	___awdiv@quotient,f
  5139  0FF9  1903               	skipnz
  5140  0FFA  0AAA               	incf	___awdiv@quotient+1,f
  5141  0FFB                     l2350:
  5142  0FFB  082A               	movf	___awdiv@quotient+1,w
  5143  0FFC  00A3               	movwf	?___awdiv+1
  5144  0FFD  0829               	movf	___awdiv@quotient,w
  5145  0FFE  00A2               	movwf	?___awdiv
  5146  0FFF                     l465:
  5147  0FFF  0008               	return
  5148  1000                     __end_of___awdiv:
  5149                           
  5150                           	psect	text19
  5151  0C8B                     __ptext19:	
  5152 ;; *************** function _ADC_IF *****************
  5153 ;; Defined at:
  5154 ;;		line 36 in file "ADC.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5168 ;;      Params:         0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0
  5170 ;;      Temps:          1       0       0       0       0
  5171 ;;      Totals:         1       0       0       0       0
  5172 ;;Total ram usage:        1 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    1
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_main
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           
  5183                           ;psect for function _ADC_IF
  5184  0C8B                     _ADC_IF:
  5185  0C8B                     l1836:	
  5186                           ;incstack = 0
  5187                           ; Regs used in _ADC_IF: [wreg+status,2+status,0]
  5188                           
  5189                           
  5190                           ;ADC.c: 37:     if (ADCON0bits.GO == 0){
  5191  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0C8D  189F               	btfsc	31,1	;volatile
  5194  0C8E  2C90               	goto	u1661
  5195  0C8F  2C91               	goto	u1660
  5196  0C90                     u1661:
  5197  0C90  2CA9               	goto	l139
  5198  0C91                     u1660:
  5199  0C91                     l1838:
  5200                           
  5201                           ;ADC.c: 38:             if(ADCON0bits.CHS == 0){
  5202  0C91  0C1F               	rrf	31,w	;volatile
  5203  0C92  00F3               	movwf	??_ADC_IF
  5204  0C93  0C73               	rrf	??_ADC_IF,w
  5205  0C94  390F               	andlw	15
  5206  0C95  3A00               	xorlw	0
  5207  0C96  1D03               	skipz
  5208  0C97  2C99               	goto	u1671
  5209  0C98  2C9A               	goto	u1670
  5210  0C99                     u1671:
  5211  0C99  2C9F               	goto	l1842
  5212  0C9A                     u1670:
  5213  0C9A                     l1840:
  5214                           
  5215                           ;ADC.c: 39:                 ADCON0bits.CHS = 1;
  5216  0C9A  081F               	movf	31,w	;volatile
  5217  0C9B  39C3               	andlw	-61
  5218  0C9C  3804               	iorlw	4
  5219  0C9D  009F               	movwf	31	;volatile
  5220                           
  5221                           ;ADC.c: 40:             }
  5222  0C9E  2CA1               	goto	l1844
  5223  0C9F                     l1842:
  5224                           
  5225                           ;ADC.c: 42:                 ADCON0bits.CHS = 0;
  5226  0C9F  30C3               	movlw	-61
  5227  0CA0  059F               	andwf	31,f	;volatile
  5228  0CA1                     l1844:
  5229                           
  5230                           ;ADC.c: 44:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5231  0CA1  3010               	movlw	16
  5232  0CA2  00F3               	movwf	??_ADC_IF
  5233  0CA3                     u3027:
  5234  0CA3  0BF3               	decfsz	??_ADC_IF,f
  5235  0CA4  2CA3               	goto	u3027
  5236  0CA5  0000               	nop
  5237  0CA6                     l1846:
  5238                           
  5239                           ;ADC.c: 45:             ADCON0bits.GO = 1;
  5240  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  5241  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  5242  0CA8  149F               	bsf	31,1	;volatile
  5243  0CA9                     l139:
  5244  0CA9  0008               	return
  5245  0CAA                     __end_of_ADC_IF:
  5246                           
  5247                           	psect	text20
  5248  0CFB                     __ptext20:	
  5249 ;; *************** function _ADC_CONFIG *****************
  5250 ;; Defined at:
  5251 ;;		line 14 in file "ADC.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  frec            2    3[COMMON] int 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5265 ;;      Params:         2       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0
  5268 ;;      Totals:         2       0       0       0       0
  5269 ;;Total ram usage:        2 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    1
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_main
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _ADC_CONFIG
  5281  0CFB                     _ADC_CONFIG:
  5282  0CFB                     l1734:	
  5283                           ;incstack = 0
  5284                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  5285                           
  5286                           
  5287                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  5288  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  5289  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  5290  0CFD  141F               	bsf	31,0	;volatile
  5291  0CFE                     l1736:
  5292                           
  5293                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  5294  0CFE  30C3               	movlw	-61
  5295  0CFF  059F               	andwf	31,f	;volatile
  5296  0D00                     l1738:
  5297                           
  5298                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  5299  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  5300  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  5301  0D02  139F               	bcf	31,7	;volatile
  5302  0D03                     l1740:
  5303                           
  5304                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  5305  0D03  121F               	bcf	31,4	;volatile
  5306  0D04                     l1742:
  5307                           
  5308                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  5309  0D04  129F               	bcf	31,5	;volatile
  5310  0D05                     l1744:
  5311                           
  5312                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  5313  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  5314  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  5315  0D07  109F               	bcf	31,1	;volatile
  5316                           
  5317                           ;ADC.c: 23:     switch(frec){
  5318  0D08  2D16               	goto	l1754
  5319  0D09                     l1746:
  5320                           
  5321                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  5322  0D09  303F               	movlw	-193
  5323  0D0A  059F               	andwf	31,f	;volatile
  5324                           
  5325                           ;ADC.c: 26:             break;
  5326  0D0B  2D26               	goto	l133
  5327  0D0C                     l1748:
  5328                           
  5329                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  5330  0D0C  081F               	movf	31,w	;volatile
  5331  0D0D  393F               	andlw	-193
  5332  0D0E  3840               	iorlw	64
  5333  0D0F  009F               	movwf	31	;volatile
  5334                           
  5335                           ;ADC.c: 29:             break;
  5336  0D10  2D26               	goto	l133
  5337  0D11                     l1750:
  5338                           
  5339                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  5340  0D11  081F               	movf	31,w	;volatile
  5341  0D12  393F               	andlw	-193
  5342  0D13  3880               	iorlw	128
  5343  0D14  009F               	movwf	31	;volatile
  5344                           
  5345                           ;ADC.c: 32:             break;
  5346  0D15  2D26               	goto	l133
  5347  0D16                     l1754:
  5348                           
  5349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5350                           ; Switch size 1, requested type "simple"
  5351                           ; Number of cases is 1, Range of values is 0 to 0
  5352                           ; switch strategies available:
  5353                           ; Name         Instructions Cycles
  5354                           ; simple_byte            4     3 (average)
  5355                           ; direct_byte           11     8 (fixed)
  5356                           ; jumptable            260     6 (fixed)
  5357                           ;	Chosen strategy is simple_byte
  5358  0D16  0874               	movf	ADC_CONFIG@frec+1,w
  5359  0D17  3A00               	xorlw	0	; case 0
  5360  0D18  1903               	skipnz
  5361  0D19  2D1B               	goto	l2716
  5362  0D1A  2D26               	goto	l133
  5363  0D1B                     l2716:
  5364                           
  5365                           ; Switch size 1, requested type "simple"
  5366                           ; Number of cases is 3, Range of values is 1 to 8
  5367                           ; switch strategies available:
  5368                           ; Name         Instructions Cycles
  5369                           ; simple_byte           10     6 (average)
  5370                           ; direct_byte           35    11 (fixed)
  5371                           ; jumptable            263     9 (fixed)
  5372                           ;	Chosen strategy is simple_byte
  5373  0D1B  0873               	movf	ADC_CONFIG@frec,w
  5374  0D1C  3A01               	xorlw	1	; case 1
  5375  0D1D  1903               	skipnz
  5376  0D1E  2D09               	goto	l1746
  5377  0D1F  3A05               	xorlw	5	; case 4
  5378  0D20  1903               	skipnz
  5379  0D21  2D0C               	goto	l1748
  5380  0D22  3A0C               	xorlw	12	; case 8
  5381  0D23  1903               	skipnz
  5382  0D24  2D11               	goto	l1750
  5383  0D25  2D26               	goto	l133
  5384  0D26                     l133:
  5385  0D26  0008               	return
  5386  0D27                     __end_of_ADC_CONFIG:
  5387                           
  5388                           	psect	text21
  5389  0D63                     __ptext21:	
  5390 ;; *************** function _isr *****************
  5391 ;; Defined at:
  5392 ;;		line 66 in file "Lab2.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5406 ;;      Params:         0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0
  5408 ;;      Temps:          3       0       0       0       0
  5409 ;;      Totals:         3       0       0       0       0
  5410 ;;Total ram usage:        3 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		Interrupt level 1
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           
  5420                           ;psect for function _isr
  5421  0D63                     _isr:
  5422  0D63                     i1l2130:
  5423                           
  5424                           ;Lab2.c: 67:     if(ADIF){
  5425  0D63  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0D64  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0D65  1F0C               	btfss	12,6	;volatile
  5428  0D66  2D68               	goto	u236_21
  5429  0D67  2D69               	goto	u236_20
  5430  0D68                     u236_21:
  5431  0D68  2D7C               	goto	i1l2140
  5432  0D69                     u236_20:
  5433  0D69                     i1l2132:
  5434                           
  5435                           ;Lab2.c: 68:         if (ADCON0bits.CHS == 0){
  5436  0D69  0C1F               	rrf	31,w	;volatile
  5437  0D6A  00F0               	movwf	??_isr
  5438  0D6B  0C70               	rrf	??_isr,w
  5439  0D6C  390F               	andlw	15
  5440  0D6D  3A00               	xorlw	0
  5441  0D6E  1D03               	skipz
  5442  0D6F  2D71               	goto	u237_21
  5443  0D70  2D72               	goto	u237_20
  5444  0D71                     u237_21:
  5445  0D71  2D77               	goto	i1l2136
  5446  0D72                     u237_20:
  5447  0D72                     i1l2134:
  5448                           
  5449                           ;Lab2.c: 69:             pot1 = ADRESH;
  5450  0D72  081E               	movf	30,w	;volatile
  5451  0D73  00F0               	movwf	??_isr
  5452  0D74  0870               	movf	??_isr,w
  5453  0D75  00DA               	movwf	_pot1
  5454                           
  5455                           ;Lab2.c: 70:         }
  5456  0D76  2D7B               	goto	i1l2138
  5457  0D77                     i1l2136:
  5458                           
  5459                           ;Lab2.c: 72:             pot2 = ADRESH;
  5460  0D77  081E               	movf	30,w	;volatile
  5461  0D78  00F0               	movwf	??_isr
  5462  0D79  0870               	movf	??_isr,w
  5463  0D7A  00D9               	movwf	_pot2
  5464  0D7B                     i1l2138:
  5465                           
  5466                           ;Lab2.c: 75:         ADIF = 0;
  5467  0D7B  130C               	bcf	12,6	;volatile
  5468  0D7C                     i1l2140:
  5469                           
  5470                           ;Lab2.c: 77:     if (RCIF){
  5471  0D7C  1E8C               	btfss	12,5	;volatile
  5472  0D7D  2D7F               	goto	u238_21
  5473  0D7E  2D80               	goto	u238_20
  5474  0D7F                     u238_21:
  5475  0D7F  2D9F               	goto	i1l110
  5476  0D80                     u238_20:
  5477  0D80                     i1l2142:
  5478                           
  5479                           ;Lab2.c: 78:         if (RCREG == '+'){
  5480  0D80  302B               	movlw	43
  5481  0D81  061A               	xorwf	26,w	;volatile
  5482  0D82  1D03               	btfss	3,2
  5483  0D83  2D85               	goto	u239_21
  5484  0D84  2D86               	goto	u239_20
  5485  0D85                     u239_21:
  5486  0D85  2D8B               	goto	i1l2146
  5487  0D86                     u239_20:
  5488  0D86                     i1l2144:
  5489                           
  5490                           ;Lab2.c: 79:             con++;
  5491  0D86  3001               	movlw	1
  5492  0D87  00F0               	movwf	??_isr
  5493  0D88  0870               	movf	??_isr,w
  5494  0D89  07D8               	addwf	_con,f
  5495                           
  5496                           ;Lab2.c: 80:         }
  5497  0D8A  2D9E               	goto	i1l2154
  5498  0D8B                     i1l2146:
  5499  0D8B  302D               	movlw	45
  5500  0D8C  061A               	xorwf	26,w	;volatile
  5501  0D8D  1D03               	btfss	3,2
  5502  0D8E  2D90               	goto	u240_21
  5503  0D8F  2D91               	goto	u240_20
  5504  0D90                     u240_21:
  5505  0D90  2D94               	goto	i1l2150
  5506  0D91                     u240_20:
  5507  0D91                     i1l2148:
  5508                           
  5509                           ;Lab2.c: 82:             con--;
  5510  0D91  3001               	movlw	1
  5511  0D92  02D8               	subwf	_con,f
  5512                           
  5513                           ;Lab2.c: 83:         }
  5514  0D93  2D9E               	goto	i1l2154
  5515  0D94                     i1l2150:
  5516  0D94  302A               	movlw	42
  5517  0D95  061A               	xorwf	26,w	;volatile
  5518  0D96  1D03               	btfss	3,2
  5519  0D97  2D99               	goto	u241_21
  5520  0D98  2D9A               	goto	u241_20
  5521  0D99                     u241_21:
  5522  0D99  2D9E               	goto	i1l2154
  5523  0D9A                     u241_20:
  5524  0D9A                     i1l2152:
  5525                           
  5526                           ;Lab2.c: 85:             x = 1;
  5527  0D9A  3001               	movlw	1
  5528  0D9B  00CF               	movwf	_x
  5529  0D9C  3000               	movlw	0
  5530  0D9D  00D0               	movwf	_x+1
  5531  0D9E                     i1l2154:
  5532                           
  5533                           ;Lab2.c: 87:         RCIF = 0;
  5534  0D9E  128C               	bcf	12,5	;volatile
  5535  0D9F                     i1l110:
  5536  0D9F  0872               	movf	??_isr+2,w
  5537  0DA0  008A               	movwf	10
  5538  0DA1  0E71               	swapf	??_isr+1,w
  5539  0DA2  0083               	movwf	3
  5540  0DA3  0EFE               	swapf	btemp,f
  5541  0DA4  0E7E               	swapf	btemp,w
  5542  0DA5  0009               	retfie
  5543  0DA6                     __end_of_isr:
  5544  007E                     btemp	set	126	;btemp
  5545  007E                     wtemp0	set	126
  5546                           
  5547                           	psect	intentry
  5548  0004                     __pintentry:	
  5549                           ;incstack = 0
  5550                           ; Regs used in _isr: [wreg+status,2+status,0]
  5551                           
  5552  0004                     interrupt_function:
  5553  007E                     saved_w	set	btemp
  5554  0004  00FE               	movwf	btemp
  5555  0005  0E03               	swapf	3,w
  5556  0006  00F1               	movwf	??_isr+1
  5557  0007  080A               	movf	10,w
  5558  0008  00F2               	movwf	??_isr+2
  5559  0009  120A  158A  2D63   	ljmp	_isr
  5560                           
  5561                           	psect	config
  5562                           
  5563                           ;Config register CONFIG1 @ 0x2007
  5564                           ;	Oscillator Selection bits
  5565                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5566                           ;	Watchdog Timer Enable bit
  5567                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5568                           ;	Power-up Timer Enable bit
  5569                           ;	PWRTE = ON, PWRT enabled
  5570                           ;	RE3/MCLR pin function select bit
  5571                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5572                           ;	Code Protection bit
  5573                           ;	CP = OFF, Program memory code protection is disabled
  5574                           ;	Data Code Protection bit
  5575                           ;	CPD = OFF, Data memory code protection is disabled
  5576                           ;	Brown Out Reset Selection bits
  5577                           ;	BOREN = OFF, BOR disabled
  5578                           ;	Internal External Switchover bit
  5579                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5580                           ;	Fail-Safe Clock Monitor Enabled bit
  5581                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5582                           ;	Low Voltage Programming Enable bit
  5583                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  5584                           ;	In-Circuit Debugger Mode bit
  5585                           ;	DEBUG = 0x1, unprogrammed default
  5586  2007                     	org	8199
  5587  2007  30C4               	dw	12484
  5588                           
  5589                           ;Config register CONFIG2 @ 0x2008
  5590                           ;	Brown-out Reset Selection bit
  5591                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5592                           ;	Flash Program Memory Self Write Enable bits
  5593                           ;	WRT = OFF, Write protection off
  5594  2008                     	org	8200
  5595  2008  3FFF               	dw	16383

Data Sizes:
    Strings     84
    Constant    10
    Data        0
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     47      79
    BANK1            80      4      34
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> buffer4(BANK1[10]), buffer3(BANK1[10]), buffer2(BANK1[10]), buffer1(BANK0[10]), 
		 -> buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 14
		 -> buffer4(BANK1[10]), buffer3(BANK1[10]), buffer2(BANK1[10]), buffer1(BANK0[10]), 
		 -> buffer(BANK0[10]), STR_1(CODE[14]), 

    UART_write@word	PTR unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[4]), STR_10(CODE[9]), STR_9(CODE[8]), STR_8(CODE[4]), 
		 -> buffer1(BANK0[10]), buffer(BANK0[10]), STR_2(CODE[32]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Division->___awmod
    ___awdiv->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9605
                                              0 BANK1      4     4      0
                         _ADC_CONFIG
                             _ADC_IF
                           _Division
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _UART_write
                       _USART_CONFIG
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2058
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_CONFIG                                         6     0      6     363
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     0      2     577
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     692
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     262
                                              6 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    1905
                                             11 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_IF
   _Division
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_write
   _USART_CONFIG
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      22       7       42.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 10:27:37 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0073                          _x 004F  
                        pc 0002                         l93 0CD1                         l96 0F96  
                       l89 0CB5               ___awdiv@sign 0028                         _rc 0078  
                       _tr 0079                         fsr 0004        __Umul8_16@word_mpld 0022  
                      l133 0D26                        l160 0DEA                        l139 0CA9  
                      l171 0C6C                        l180 0C8A                        l156 0DDC  
                      l308 0655                        l174 0C4A                        l158 0DE9  
                      l183 0F2E                        l192 0E30                        l505 0778  
                      l186 0C59                        l508 078D                        l701 0387  
                      l720 0CE8                        l465 0FFF                        l713 037B  
                      l722 0CFA                        l707 02F3                        l478 0ED1  
                      l751 06BF                        l584 0E76                        l745 067A  
                      l498 078D                        l594 0D62                        l747 0711  
                      l758 06DB                        l759 06E7                        _RC4 003C  
                      _RC5 003D                        _dec 0056                        _cen 0057  
                      _con 0058                        _isr 0D63                        fsr0 0004  
                      _uni 0055                        indf 0000               ___awmod@sign 0021  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 004E  
                     l2000 0116                       l2010 0184                       l2002 0132  
                     l2020 0214                       l2012 0194                       l2004 014E  
                     l2030 02A8                       l2022 0224                       l2014 01B1  
                     l2006 0157                       l2040 02CD                       l2032 02B6  
                     l2024 0251                       l2016 01CA                       l2008 0167  
                     l2050 02F0                       l2034 02BF                       l2042 02D3  
                     l2026 0277                       l2018 01E7                       l2060 030F  
                     l2044 02D7                       l2036 02C3                       l2028 029F  
                     l2310 0F97                       l2070 0355                       l2062 0328  
                     l2054 02F8                       l2046 02D8                       l2038 02C4  
                     l2320 0FA9                       l2312 0F9A                       l2080 0374  
                     l2072 035F                       l2056 02FD                       l2064 032E  
                     l2048 02DC                       l2400 0E45                       l2330 0FBD  
                     l2322 0FAE                       l2314 0F9E                       l2082 037F  
                     l2074 0361                       l2066 033B                       l2058 030B  
                     l2410 0E65                       l2402 0E49                       l2340 0FE3  
                     l2332 0FC4                       l2324 0FB2                       l2316 0FA3  
                     l2420 0DA6                       l2076 036F                       l2068 0346  
                     l2412 0E6C                       l2404 0E4D                       l1700 0D4B  
                     l2500 05F6                       l2350 0FFB                       l2342 0FE4  
                     l2334 0FC8                       l2326 0FB4                       l2318 0FA5  
                     l2430 0DBE                       l2422 0DB1                       l1710 0CD5  
                     l2078 0373                       l2406 0E5E                       l2414 0E72  
                     l1702 0D51                       l2502 05FB                       l2510 063F  
                     l2344 0FEB                       l2336 0FCC                       l2328 0FBA  
                     l2360 0E83                       l1800 0EF2                       l2440 0DD8  
                     l2432 0DBF                       l2424 0DB5                       l1720 0CF6  
                     l1712 0CD7                       l2520 0659                       l2408 0E64  
                     l1704 0D58                       l2504 062B                       l2512 0651  
                     l2600 03CD                       l2338 0FDD                       l2346 0FF1  
                     l2370 0E97                       l2362 0E85                       l2354 0E77  
                     l2418 0F32                       l1570 0C69                       l1810 0F13  
                     l1802 0EFB                       l2450 0DEB                       l1730 0CC1  
                     l2442 0DDF                       l2426 0DB6                       l1714 0CDE  
                     l2522 065E                       l1706 0D5E                       l2506 0632  
                     l2610 03F0                       l2602 03D5                       l1740 0D03  
                     l2348 0FF6                       l2380 0EB6                       l2372 0E9E  
                     l2364 0E89                       l2356 0E7A                       l1564 0C5B  
                     l1812 0F19                       l1804 0F01                       l1820 0C6E  
                     l1572 0C4C                       l2452 0DF0                       l1724 0CAA  
                     l2444 0DE7                       l2428 0DBA                       l2436 0DC3  
                     l1716 0CE2                       l2540 06A8                       l2532 068B  
                     l2524 0662                       l2508 0636                       l2460 0574  
                     l2620 049C                       l2612 0431                       l2604 03DE  
                     l1750 0D11                       l1742 0D04                       l1734 0CFB  
                     l2382 0EBD                       l2374 0EA2                       l2366 0E8E  
                     l2358 0E7E                       l1566 0C5E                       l1814 0F1F  
                     l1806 0F07                       l1822 0C73                       l1574 0C4F  
                     l2454 0E0C                       l1726 0CAB                       l2438 0DD0  
                     l1718 0CF1                       l1910 0712                       l2550 06DF  
                     l2542 06B6                       l2534 0690                       l2526 0672  
                     l2470 0587                       l2462 057A                       l2630 0504  
                     l2622 04B9                       l2614 0472                       l2606 03E7  
                     l1744 0D05                       l1736 0CFE                       l1840 0C9A  
                     l2376 0EA6                       l2368 0E94                       l2384 0EC3  
                     l1568 0C60                       l1816 0F25                       l1808 0F0D  
                     l1824 0C7C                       l1576 0C51                       l2456 0E14  
                     l1728 0CBB                       l1920 073E                       l1912 071F  
                     l2560 0709                       l2552 06E9                       l2544 06C6  
                     l2536 069D                       l2528 0682                       l2392 0E31  
                     l2480 05B8                       l2472 05A4                       l2712 0599  
                     l2464 0581                       l2640 0532                       l2632 050D  
                     l2624 04D6                       l2616 0478                       l2608 03EC  
                     l1746 0D09                       l1754 0D16                       l1738 0D00  
                     l1842 0C9F                       l2386 0EC8                       l2378 0EB0  
                     l1818 0C3E                       l1826 0C82                       l1578 0C56  
                     l2714 0DC8                       l1922 0746                       l2554 06FF  
                     l2546 06D1                       l2538 06A4                       l2394 0E35  
                     l1690 0D2F                       l2482 05BD                       l2474 05AC  
                     l2466 0586                       l2458 056F                       l2650 055F  
                     l2642 053B                       l2634 0516                       l2626 04F3  
                     l2618 048A                       l2570 0392                       l2716 0D1B  
                     l1748 0D0C                       l1844 0CA1                       l1836 0C8B  
                     l2388 0ECD                       l1940 076D                       l1932 0754  
                     l1924 0748                       l1916 0728                       l2556 0704  
                     l2548 06D5                       l2396 0E3B                       l1692 0D32  
                     l2492 05DB                       l2476 05B0                       l2644 0544  
                     l2636 051F                       l2628 04FB                       l2580 039B  
                     l2572 0394                       l2564 0388                       l1846 0CA6  
                     l1838 0C91                       l1790 0ED2                       l1950 0034  
                     l1942 077D                       l1926 074C                       l1934 0766  
                     l1918 073D                       l2558 0708                       l2398 0E3E  
                     l1694 0D39                       l2494 05E5                       l2478 05B4  
                     l2646 054D                       l2638 0530                       l2590 03BC  
                     l2582 03A4                       l2574 0395                       l2566 038C  
                     l1792 0ED5                       l1960 004B                       l1952 0038  
                     l1944 0782                       l1696 0D3D                       l1688 0D27  
                     l2496 05EB                       l2488 05BF                       l2648 0556  
                     l2592 03BF                       l2584 03B7                       l2576 0399  
                     l2568 038D                       l1794 0EDE                       l1970 0064  
                     l1962 004D                       l1954 0039                       l1946 0027  
                     l1698 0D41                       l2498 05F2                       l2594 03C4  
                     l2586 03B8                       l2578 039A                       l1796 0EE4  
                     l1980 0079                       l1972 0065                       l1964 0055  
                     l1956 003E                       l1948 002E                       l2596 03C7  
                     l2588 03BB                       l1798 0EEC                       l1990 0094  
                     l1982 0081                       l1974 006A                       l1966 005A  
                     l1958 0043                       l2598 03C8                       l1992 00A4  
                     l1984 0086                       l1976 006F                       l1968 0060  
                     l1994 00B1                       l1986 008B                       l1978 0077  
                     l1996 00CE                       l1998 00EA                       _ADIF 0066  
                     ?_isr 0070                       STR_1 07C8                       STR_2 07A8  
                     STR_3 07E7                       STR_4 07ED                       STR_5 07F3  
                     STR_6 07F5                       STR_7 07F5                       STR_8 07F8  
                     STR_9 07DF                       u2011 01D9                       u2100 02C3  
                     u2012 01E0                       u2101 02C2                       u2021 0206  
                     u2013 01E7                       u2005 01B3                       u2022 020D  
                     u2031 0233                       u2023 0214                       u2200 0355  
                     u2120 02D7                       u2040 025D                       u2032 023A  
                     u2201 0354                       u2121 02D6                       u2033 0241  
                     u2210 0373                       u2130 02DC                       u2211 0372  
                     u2131 02DB                       u2115 02C6                       u2051 0269  
                     u2140 02F0                       u2060 0285                       u2052 0270  
                     u1500 0D41                       u2205 0351                       u2141 02EF  
                     u2053 0277                       u2045 0258                       u1501 0D40  
                     u2150 02F7                       u1510 0D4B                       u3007 0F29  
                     u2151 02F6                       u2071 0291                       u1511 0D4A  
                     u2160 02FD                       u2072 0298                       u3017 0C65  
                     u2161 02FC                       u2073 029F                       u2065 0280  
                     u1610 0C73                       u2170 030F                       u1530 0D5E  
                     u3027 0CA3                       u1611 0C72                       u2171 030E  
                     u1531 0D5D                       u1515 0D47                       u1620 0C82  
                     u1540 0CE2                       u2180 031E                       u1621 0C81  
                     u1541 0CE1                       u2085 02A1                       u1525 0D52  
                     u2510 0FF1                       u2430 0F9E                       u2190 033B  
                     u2511 0FF0                       u2431 0F9D                       u2191 033A  
                     u2095 02B8                       u2520 0FF6                       u2440 0FA9  
                     u2600 0EC3                       u1560 0CF6                       u1800 0765  
                     u1480 0D2F                       u2521 0FF5                       u2505 0FE5  
                     u2441 0FA8                       u2601 0EC2                       u1561 0CF5  
                     u2185 0319                       u1801 0764                       u1481 0D2E  
                     u2450 0FBA                       u2610 0EC8                       u2530 0E7E  
                     u1570 0CBB                       u1810 076C                       u2451 0FB9  
                     u2611 0EC7                       u2531 0E7D                       u1571 0CBA  
                     u1555 0CE9                       u2195 0337                       u1811 076B  
                     u1660 0C91                       u2540 0E89                       u1580 0CD1  
                     u2700 0DE7                       u1900 006F                       u2620 0E3B  
                     u1661 0C90                       u2541 0E88                       u1581 0CD0  
                     u2701 0DE6                       u1901 006E                       u2621 0E3A  
                     u1670 0C9A                       u2470 0FCC                       u2550 0E94  
                     u2710 0DFA                       u1910 0086                       u1830 077D  
                     u1750 071F                       u1671 0C99                       u2471 0FCB  
                     u2551 0E93                       u1911 0085                       u1831 077C  
                     u1751 071E                       u1495 0D33                       u2720 0E1E  
                     u1920 008B                       u1840 0782                       u1760 0736  
                     u2640 0E4D                       u2800 0651                       u2465 0FBE  
                     u1921 008A                       u1841 0781                       u1825 076F  
                     u2641 0E4C                       u2801 0650                       u2490 0FDD  
                     u2570 0EA6                       u2730 0E30                       u1850 0038  
                     u1770 074C                       u2810 065E                       u2491 0FDC  
                     u2571 0EA5                       u2731 0E2F                       u1931 00DC  
                     u1851 0037                       u1771 074B                       u2811 065D  
                     u2635 0E3F                       u2580 0EB0                       u1932 00E3  
                     u1860 003E                       u1780 0753                       u2900 06DB  
                     u2820 0662                       u2660 0E5E                       u2740 057A  
                     u2485 0FCD                       u2581 0EAF                       u2565 0E98  
                     u1941 00F8                       u1933 00EA                       u1861 003D  
                     u1781 0752                       u1765 0731                       u2901 06DA  
                     u2821 0661                       u2661 0E5D                       u2741 0579  
                     u1942 00FF                       u1870 0043                       u2910 06DF  
                     u2830 0682                       u2750 05B4                       u2495 0FD9  
                     u1951 0124                       u1943 0106                       u1871 0042  
                     u2911 06DE                       u2831 0681                       u2655 0E4E  
                     u2751 05B3                       u1952 012B                       u1880 0064  
                     u2920 06F4                       u2680 0E72                       u2760 05DA  
                     u2585 0EAC                       u1961 0140                       u1953 0132  
                     u1881 0063                       u2681 0E71                       u2665 0E5A  
                     u2761 05D9                       u2690 0DD8                       u1962 0147  
                     u1890 006A                       u2930 0704                       u2850 06A3  
                     u2770 05E5                       u2595 0EB7                       u2691 0DD7  
                     u1963 014E                       u1891 0069                       u1795 0755  
                     u2931 0703                       u2851 06A2                       u2675 0E66  
                     u2771 05E4                       u2940 0708                       u2780 05EB  
                     u1981 0176                       u2941 0707                       u2925 06EF  
                     u2845 0695                       u2781 05EA                       u2765 05D6  
                     u1982 017D                       u2870 06C5                       u2790 063F  
                     u2950 0530                       u1991 01A3                       u1983 0184  
                     u1975 0150                       u2871 06C4                       u2791 063E  
                     u2951 052F                       u1992 01AA                       u1993 01B1  
                     u2865 06B7                       u2890 06D5                       u2891 06D4  
                     _RCIF 0065                       u2885 06CA                       u2967 0C54  
                     u2977 0ED9                       u2987 0EE8                       u2997 0EF6  
                     _TXEN 04C5          ?_Lcd_Write_String 0075                       _frec 007A  
                     _main 0388                       _pot1 005A                       _pot2 0059  
                     _vol1 0053                       _vol2 0051                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0C6D  
                    ??_isr 0070              ___fltol@sign1 004D                      ?_main 0070  
          __end_of___awdiv 1000                      STR_10 07D6                      STR_11 07F8  
          __end_of___awmod 0ED2            __end_of___flmul 0388            __end_of___fltol 078E  
                    _ANSEL 0188            ___awdiv@divisor 0022            __end_of___lwdiv 0E77  
                    i1l110 0D9F            __end_of___lwmod 0D63            ___awdiv@counter 0027  
                    _RCREG 001A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 001E                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TXREG 0019           USART_CONFIG@frec 0020            __end_of_dpowers 07A8  
              ?_UART_write 0073                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0656           __end_of_Lcd_Init 0F2F  
          __initialization 000F           __end_of_Division 0F97               __end_of_main 056C  
                   ??_main 00BE         __size_of_Lcd_Clear 000D               ??_ADC_CONFIG 0075  
                   _ADC_IF 0C8B                     _ADRESH 001E           ___awdiv@dividend 0024  
                   _ANSELH 0189                     i1l2130 0D63                     i1l2132 0D69  
                   i1l2140 0D7C                     i1l2150 0D94                     i1l2142 0D80  
                   i1l2134 0D72                     i1l2152 0D9A                     i1l2144 0D86  
                   i1l2136 0D77                     i1l2154 0D9E                     i1l2146 0D8B  
                   i1l2138 0D7B                     i1l2148 0D91                     u240_20 0D91  
                   u240_21 0D90                     u241_20 0D9A                     u241_21 0D99  
                   u236_20 0D69                     u236_21 0D68                     u237_20 0D72  
                   u237_21 0D71                     u238_20 0D80                     u238_21 0D7F  
                   u239_20 0D86                     u239_21 0D85                  ??_Lcd_Cmd 0073  
  __size_of_Lcd_Write_Char 000F           __end_of___xxtofl 0712         __end_of_ADC_CONFIG 0D27  
                ??___awdiv 0026                  ??___awmod 0077                  ??___flmul 0032  
                ??___fltol 0048                  ??___lwdiv 0077                  ??___lwmod 0027  
                   _buffer 0065        __size_of_UART_write 0028           ___awdiv@quotient 0029  
          ___awmod@divisor 0073            ___awmod@counter 0020         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 002C            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0076               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073    __end_of__initialization 0023          __end_of_Lcd_Clear 0C4B  
               ___fltol@f1 0044             __pcstackCOMMON 0070             USART_CONFIG@rc 0024  
           USART_CONFIG@tr 0022             _Lcd_Set_Cursor 0C6D                  ?_Lcd_Init 0070  
                  ?_ADC_IF 0070                  ?_Division 0070                 __pbssBANK0 004F  
               __pbssBANK1 00A0          __end_of__Umul8_16 0CFB                 __pmaintext 0388  
               __pintentry 0004  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0C8B  
                ?___xxtofl 0073                 ??_Lcd_Init 0076               ??_UART_write 0075  
          __size_of_ADC_IF 001F                 ??_Division 002B                 __stringtab 078E  
           _Lcd_Write_Char 0C4B                    _Lcd_Cmd 0C5A                    ___awdiv 0F97  
                  ___awmod 0E77                    ___flmul 0027                    ___fltol 0712  
                  ___lwdiv 0E31                    ___lwmod 0D27            ?_Lcd_Set_Cursor 0076  
       __end_of_UART_write 0CD2                    __ptext1 056C                    __ptext2 0D27  
                  __ptext3 0E31                    __ptext4 0656                    __ptext5 0712  
                  __ptext6 0027                    __ptext7 0CD2                    __ptext8 0DA6  
                  __ptext9 0CAA                    _buffer1 005B                    _buffer2 00B4  
                  _buffer3 00AA                    _buffer4 00A0                    _dpowers 079E  
             __size_of_isr 0043                 ??___xxtofl 0020           ___awmod@dividend 0075  
                  _sprintf 056C                    clrloop0 0C37     __end_of_Lcd_Write_Char 0C5A  
     end_of_initialization 0023                  _RCSTAbits 0018                  Division@y 0030  
            ___xxtofl@sign 0024              ?_USART_CONFIG 0020            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0023             __end_of_ADC_IF 0CAA  
              ___flmul@grs 0038                  _TXSTAbits 0098                  _Lcd_Clear 0C3E  
         _Lcd_Write_String 0DEB                _BAUDCTLbits 0187             ??_USART_CONFIG 0073  
      start_initialization 000F                __end_of_isr 0DA6                   ??_ADC_IF 0073  
        __size_of_Lcd_Init 005D          __size_of_Division 0068                 ?_Lcd_Clear 0070  
                __Umul8_16 0CD2            Lcd_Write_Char@a 0074                  ___flmul@a 002E  
                ___flmul@b 002A                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00BE          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 0030                sprintf@prec 0031  
         ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0022  
                 ?___awmod 0073                   ?___flmul 002A                   ?___fltol 0044  
               ?__Umul8_16 0073                   ?___lwdiv 0073                   ?___lwmod 0023  
                __pstrings 078E           ___lwdiv@quotient 0021                   ?_sprintf 0029  
        interrupt_function 0004                  clear_ram0 0C36                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075       __end_of_USART_CONFIG 0DEB                ??_Lcd_Clear 0076  
               _ADCON0bits 001F                __stringbase 079D                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0073             UART_write@word 0073                 _ADC_CONFIG 0CFB  
                 _Lcd_Init 0ED2                   _Division 0F2F   __end_of_Lcd_Write_String 0E31  
         __size_of_Lcd_Cmd 0013                ??__Umul8_16 0075           __size_of___awdiv 0069  
         __size_of___awmod 005B           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lwdiv 0046           __size_of___lwmod 003C              _Division$1124 002E  
       __end_of__stringtab 079E                 sprintf@val 0032                   ___xxtofl 0656  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 0DEB  
                 __ptext11 0C4B                   __ptext20 0CFB                   __ptext12 0C6D  
                 __ptext21 0D63                   __ptext13 0ED2                   __ptext14 0C3E  
                 __ptext15 0C5A                   __ptext16 0F2F                   __ptext17 0E77  
                 __ptext18 0F97                   __ptext19 0C8B           __size_of_sprintf 00EA  
            __size_of_main 01E4                 _INTCONbits 000B                ?_ADC_CONFIG 0073  
                 intlevel1 0000                  sprintf@ap 002F                  sprintf@sp 0034  
    __size_of_USART_CONFIG 0045           ___lwmod@dividend 0025                  stringcode 0798  
               _OSCCONbits 008F     __Umul8_16@multiplicand 0073                   sprintf@c 0035  
                 sprintf@f 0029            ___lwmod@divisor 0023            ___lwmod@counter 0028  
                 stringdir 0798                   stringtab 078E               _USART_CONFIG 0DA6  
               _UART_write 0CAA       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
