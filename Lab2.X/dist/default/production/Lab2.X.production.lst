

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 16:05:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  07BE                     __pstrings:
   464  07BE                     stringtab:
   465  07BE                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468  07BE  1BFF               	btfsc	btemp+1,7
   469  07BF  2FC8               	ljmp	stringcode
   470  07C0  1383               	bcf	3,7
   471  07C1  187F               	btfsc	btemp+1,0
   472  07C2  1783               	bsf	3,7
   473  07C3  0800               	movf	0,w
   474  07C4  0A84               	incf	4,f
   475  07C5  1903               	skipnz
   476  07C6  0AFF               	incf	btemp+1,f
   477  07C7  0008               	return
   478  07C8                     stringcode:
   479  07C8                     stringdir:
   480  07C8  3007               	movlw	high stringdir
   481  07C9  008A               	movwf	10
   482  07CA  0804               	movf	4,w
   483  07CB  0A84               	incf	4,f
   484  07CC  0782               	addwf	2,f
   485  07CD                     __stringbase:
   486  07CD  3400               	retlw	0
   487  07CE                     __end_of__stringtab:
   488  07CE                     _dpowers:
   489  07CE  3401               	retlw	1
   490  07CF  3400               	retlw	0
   491  07D0  340A               	retlw	10
   492  07D1  3400               	retlw	0
   493  07D2  3464               	retlw	100
   494  07D3  3400               	retlw	0
   495  07D4  34E8               	retlw	232
   496  07D5  3403               	retlw	3
   497  07D6  3410               	retlw	16
   498  07D7  3427               	retlw	39
   499  07D8                     __end_of_dpowers:
   500  0008                     _PORTD	set	8
   501  0018                     _RCSTAbits	set	24
   502  0006                     _PORTB	set	6
   503  000B                     _INTCONbits	set	11
   504  001A                     _RCREG	set	26
   505  001E                     _ADRESH	set	30
   506  001F                     _ADCON0bits	set	31
   507  0019                     _TXREG	set	25
   508  003D                     _RC5	set	61
   509  003C                     _RC4	set	60
   510  0065                     _RCIF	set	101
   511  0066                     _ADIF	set	102
   512  0099                     _SPBRG	set	153
   513  009F                     _ADCON1bits	set	159
   514  008C                     _PIE1bits	set	140
   515  008F                     _OSCCONbits	set	143
   516  0088                     _TRISD	set	136
   517  0087                     _TRISC	set	135
   518  0086                     _TRISB	set	134
   519  0085                     _TRISA	set	133
   520  0098                     _TXSTAbits	set	152
   521  04C5                     _TXEN	set	1221
   522  0187                     _BAUDCTLbits	set	391
   523  0189                     _ANSELH	set	393
   524  0188                     _ANSEL	set	392
   525  07D8                     STR_11:
   526  07D8  3453               	retlw	83	;'S'
   527  07D9  3431               	retlw	49	;'1'
   528  07DA  343A               	retlw	58	;':'
   529  07DB  3420               	retlw	32	;' '
   530  07DC  3420               	retlw	32	;' '
   531  07DD  3453               	retlw	83	;'S'
   532  07DE  3432               	retlw	50	;'2'
   533  07DF  343A               	retlw	58	;':'
   534  07E0  3420               	retlw	32	;' '
   535  07E1  3420               	retlw	32	;' '
   536  07E2  3453               	retlw	83	;'S'
   537  07E3  3433               	retlw	51	;'3'
   538  07E4  343A               	retlw	58	;':'
   539  07E5  3400               	retlw	0
   540  07E6                     STR_12:
   541  07E6  3425               	retlw	37	;'%'
   542  07E7  3464               	retlw	100	;'d'
   543  07E8  3456               	retlw	86	;'V'
   544  07E9  3420               	retlw	32	;' '
   545  07EA  3400               	retlw	0
   546  07EB                     STR_1:
   547  07EB  3430               	retlw	48	;'0'
   548  07EC  3400               	retlw	0
   549  07ED                     STR_2:
   550  07ED  3431               	retlw	49	;'1'
   551  07EE  3400               	retlw	0
   552  07EF                     STR_3:
   553  07EF  3432               	retlw	50	;'2'
   554  07F0  3400               	retlw	0
   555  07F1                     STR_4:
   556  07F1  3433               	retlw	51	;'3'
   557  07F2  3400               	retlw	0
   558  07F3                     STR_5:
   559  07F3  3434               	retlw	52	;'4'
   560  07F4  3400               	retlw	0
   561  07F5                     STR_6:
   562  07F5  3435               	retlw	53	;'5'
   563  07F6  3400               	retlw	0
   564  07F7                     STR_7:
   565  07F7  3436               	retlw	54	;'6'
   566  07F8  3400               	retlw	0
   567  07F9                     STR_8:
   568  07F9  3437               	retlw	55	;'7'
   569  07FA  3400               	retlw	0
   570  07FB                     STR_9:
   571  07FB  3438               	retlw	56	;'8'
   572  07FC  3400               	retlw	0
   573  07FD                     STR_10:
   574  07FD  3439               	retlw	57	;'9'
   575  07FE  3400               	retlw	0
   576  07E6                     
   577                           	psect	cinit
   578  000F                     start_initialization:	
   579                           ; #config settings
   580                           
   581  000F                     __initialization:
   582                           
   583                           ; Clear objects allocated to COMMON
   584  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   585  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   586  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   587                           
   588                           ; Clear objects allocated to BANK0
   589  0012  1383               	bcf	3,7	;select IRP bank0
   590  0013  3054               	movlw	low __pbssBANK0
   591  0014  0084               	movwf	4
   592  0015  3070               	movlw	low (__pbssBANK0+28)
   593  0016  120A  158A  253A  120A  118A  	fcall	clear_ram0
   594                           
   595                           ; Clear objects allocated to BANK1
   596  001B  30A0               	movlw	low __pbssBANK1
   597  001C  0084               	movwf	4
   598  001D  30B4               	movlw	low (__pbssBANK1+20)
   599  001E  120A  158A  253A  120A  118A  	fcall	clear_ram0
   600  0023                     end_of_initialization:	
   601                           ;End of C runtime variable initialization code
   602                           
   603  0023                     __end_of__initialization:
   604  0023  0183               	clrf	3
   605  0024  120A  118A  2B88   	ljmp	_main	;jump to C main() function
   606                           
   607                           	psect	bssCOMMON
   608  0078                     __pbssCOMMON:
   609  0078                     _rc:
   610  0078                     	ds	1
   611  0079                     _tr:
   612  0079                     	ds	1
   613  007A                     _frec:
   614  007A                     	ds	1
   615                           
   616                           	psect	bssBANK0
   617  0054                     __pbssBANK0:
   618  0054                     _uni:
   619  0054                     	ds	1
   620  0055                     _dec:
   621  0055                     	ds	1
   622  0056                     _cen:
   623  0056                     	ds	1
   624  0057                     _vol2:
   625  0057                     	ds	1
   626  0058                     _vol1:
   627  0058                     	ds	1
   628  0059                     _con:
   629  0059                     	ds	1
   630  005A                     _pot2:
   631  005A                     	ds	1
   632  005B                     _pot1:
   633  005B                     	ds	1
   634  005C                     _buffer:
   635  005C                     	ds	20
   636                           
   637                           	psect	bssBANK1
   638  00A0                     __pbssBANK1:
   639  00A0                     _buffer1:
   640  00A0                     	ds	20
   641                           
   642                           	psect	clrtext
   643  0D3A                     clear_ram0:	
   644                           ;	Called with FSR containing the base address, and
   645                           ;	W with the last address+1
   646                           
   647  0D3A  0064               	clrwdt	;clear the watchdog before getting into this loop
   648  0D3B                     clrloop0:
   649  0D3B  0180               	clrf	0	;clear RAM location pointed to by FSR
   650  0D3C  0A84               	incf	4,f	;increment pointer
   651  0D3D  0604               	xorwf	4,w	;XOR with final address
   652  0D3E  1903               	btfsc	3,2	;have we reached the end yet?
   653  0D3F  3400               	retlw	0	;all done for this memory range, return
   654  0D40  0604               	xorwf	4,w	;XOR again to restore value
   655  0D41  2D3B               	goto	clrloop0	;do the next byte
   656                           
   657                           	psect	cstackBANK1
   658  00B4                     __pcstackBANK1:
   659  00B4                     _main$1125:
   660                           
   661                           ; 2 bytes @ 0x0
   662  00B4                     	ds	2
   663                           
   664                           	psect	cstackCOMMON
   665  0070                     __pcstackCOMMON:
   666  0070                     ?_Lcd_Init:
   667  0070                     ?_Lcd_Clear:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_ADC_IF:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Lcd_Write_Char:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_isr:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_isr:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_main:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_Lcd_Cmd:	
   686                           ; 1 bytes @ 0x0
   687                           
   688                           
   689                           ; 1 bytes @ 0x0
   690  0070                     	ds	3
   691  0073                     ?_ADC_CONFIG:
   692  0073                     ??_USART_CONFIG:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     ??_ADC_IF:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     ??_Lcd_Write_Char:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ??_Lcd_Cmd:	
   702                           ; 1 bytes @ 0x3
   703                           
   704  0073                     ?__Umul8_16:	
   705                           ; 1 bytes @ 0x3
   706                           
   707  0073                     ?___awmod:	
   708                           ; 2 bytes @ 0x3
   709                           
   710  0073                     ?___lwdiv:	
   711                           ; 2 bytes @ 0x3
   712                           
   713  0073                     ?___xxtofl:	
   714                           ; 2 bytes @ 0x3
   715                           
   716  0073                     __Umul8_16@multiplicand:	
   717                           ; 4 bytes @ 0x3
   718                           
   719  0073                     ADC_CONFIG@frec:	
   720                           ; 1 bytes @ 0x3
   721                           
   722  0073                     ___awmod@divisor:	
   723                           ; 2 bytes @ 0x3
   724                           
   725  0073                     ___lwdiv@divisor:	
   726                           ; 2 bytes @ 0x3
   727                           
   728  0073                     ___xxtofl@val:	
   729                           ; 2 bytes @ 0x3
   730                           
   731                           
   732                           ; 4 bytes @ 0x3
   733  0073                     	ds	1
   734  0074                     Lcd_Write_Char@a:
   735                           
   736                           ; 1 bytes @ 0x4
   737  0074                     	ds	1
   738  0075                     ??_ADC_CONFIG:
   739  0075                     ?_Lcd_Write_String:	
   740                           ; 1 bytes @ 0x5
   741                           
   742  0075                     ??__Umul8_16:	
   743                           ; 1 bytes @ 0x5
   744                           
   745  0075                     Lcd_Cmd@a:	
   746                           ; 1 bytes @ 0x5
   747                           
   748  0075                     Lcd_Write_String@a:	
   749                           ; 1 bytes @ 0x5
   750                           
   751  0075                     ___awmod@dividend:	
   752                           ; 2 bytes @ 0x5
   753                           
   754  0075                     ___lwdiv@dividend:	
   755                           ; 2 bytes @ 0x5
   756                           
   757                           
   758                           ; 2 bytes @ 0x5
   759  0075                     	ds	1
   760  0076                     ??_Lcd_Init:
   761  0076                     ??_Lcd_Clear:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0076                     ?_Lcd_Set_Cursor:	
   765                           ; 1 bytes @ 0x6
   766                           
   767  0076                     Lcd_Set_Cursor@b:	
   768                           ; 1 bytes @ 0x6
   769                           
   770                           
   771                           ; 1 bytes @ 0x6
   772  0076                     	ds	1
   773  0077                     ??_Lcd_Set_Cursor:
   774  0077                     ??___awmod:	
   775                           ; 1 bytes @ 0x7
   776                           
   777  0077                     ??___lwdiv:	
   778                           ; 1 bytes @ 0x7
   779                           
   780  0077                     Lcd_Set_Cursor@a:	
   781                           ; 1 bytes @ 0x7
   782                           
   783                           
   784                           ; 1 bytes @ 0x7
   785  0077                     	ds	1
   786                           
   787                           	psect	cstackBANK0
   788  0020                     __pcstackBANK0:
   789  0020                     ?_USART_CONFIG:
   790  0020                     ??_Lcd_Write_String:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0020                     ??___xxtofl:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0020                     ___awmod@counter:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0020                     ___lwdiv@counter:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0020                     USART_CONFIG@frec:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0020                     __Umul8_16@product:	
   806                           ; 2 bytes @ 0x0
   807                           
   808                           
   809                           ; 2 bytes @ 0x0
   810  0020                     	ds	1
   811  0021                     ___awmod@sign:
   812  0021                     ___lwdiv@quotient:	
   813                           ; 1 bytes @ 0x1
   814                           
   815                           
   816                           ; 2 bytes @ 0x1
   817  0021                     	ds	1
   818  0022                     ?___awdiv:
   819  0022                     USART_CONFIG@tr:	
   820                           ; 2 bytes @ 0x2
   821                           
   822  0022                     ___awdiv@divisor:	
   823                           ; 2 bytes @ 0x2
   824                           
   825  0022                     __Umul8_16@word_mpld:	
   826                           ; 2 bytes @ 0x2
   827                           
   828                           
   829                           ; 2 bytes @ 0x2
   830  0022                     	ds	1
   831  0023                     ?___lwmod:
   832  0023                     Lcd_Write_String@i:	
   833                           ; 2 bytes @ 0x3
   834                           
   835  0023                     ___lwmod@divisor:	
   836                           ; 2 bytes @ 0x3
   837                           
   838                           
   839                           ; 2 bytes @ 0x3
   840  0023                     	ds	1
   841  0024                     __Umul8_16@multiplier:
   842  0024                     ___xxtofl@sign:	
   843                           ; 1 bytes @ 0x4
   844                           
   845  0024                     USART_CONFIG@rc:	
   846                           ; 1 bytes @ 0x4
   847                           
   848  0024                     ___awdiv@dividend:	
   849                           ; 2 bytes @ 0x4
   850                           
   851                           
   852                           ; 2 bytes @ 0x4
   853  0024                     	ds	1
   854  0025                     ___xxtofl@exp:
   855  0025                     ___lwmod@dividend:	
   856                           ; 1 bytes @ 0x5
   857                           
   858                           
   859                           ; 2 bytes @ 0x5
   860  0025                     	ds	1
   861  0026                     ??___awdiv:
   862  0026                     ___xxtofl@arg:	
   863                           ; 1 bytes @ 0x6
   864                           
   865                           
   866                           ; 4 bytes @ 0x6
   867  0026                     	ds	1
   868  0027                     ??___lwmod:
   869  0027                     ___awdiv@counter:	
   870                           ; 1 bytes @ 0x7
   871                           
   872                           
   873                           ; 1 bytes @ 0x7
   874  0027                     	ds	1
   875  0028                     ___awdiv@sign:
   876  0028                     ___lwmod@counter:	
   877                           ; 1 bytes @ 0x8
   878                           
   879                           
   880                           ; 1 bytes @ 0x8
   881  0028                     	ds	1
   882  0029                     ?_sprintf:
   883  0029                     sprintf@f:	
   884                           ; 2 bytes @ 0x9
   885                           
   886  0029                     ___awdiv@quotient:	
   887                           ; 1 bytes @ 0x9
   888                           
   889                           
   890                           ; 2 bytes @ 0x9
   891  0029                     	ds	1
   892  002A                     ?___flmul:
   893  002A                     ___flmul@b:	
   894                           ; 4 bytes @ 0xA
   895                           
   896                           
   897                           ; 4 bytes @ 0xA
   898  002A                     	ds	2
   899  002C                     ??_sprintf:
   900                           
   901                           ; 1 bytes @ 0xC
   902  002C                     	ds	2
   903  002E                     ___flmul@a:
   904                           
   905                           ; 4 bytes @ 0xE
   906  002E                     	ds	1
   907  002F                     sprintf@ap:
   908                           
   909                           ; 1 bytes @ 0xF
   910  002F                     	ds	1
   911  0030                     sprintf@flag:
   912                           
   913                           ; 1 bytes @ 0x10
   914  0030                     	ds	1
   915  0031                     sprintf@prec:
   916                           
   917                           ; 1 bytes @ 0x11
   918  0031                     	ds	1
   919  0032                     ??___flmul:
   920  0032                     sprintf@val:	
   921                           ; 1 bytes @ 0x12
   922                           
   923                           
   924                           ; 2 bytes @ 0x12
   925  0032                     	ds	2
   926  0034                     sprintf@sp:
   927                           
   928                           ; 1 bytes @ 0x14
   929  0034                     	ds	1
   930  0035                     sprintf@c:
   931                           
   932                           ; 1 bytes @ 0x15
   933  0035                     	ds	2
   934  0037                     ___flmul@sign:
   935                           
   936                           ; 1 bytes @ 0x17
   937  0037                     	ds	1
   938  0038                     ___flmul@aexp:
   939                           
   940                           ; 1 bytes @ 0x18
   941  0038                     	ds	1
   942  0039                     ___flmul@grs:
   943                           
   944                           ; 4 bytes @ 0x19
   945  0039                     	ds	4
   946  003D                     ___flmul@bexp:
   947                           
   948                           ; 1 bytes @ 0x1D
   949  003D                     	ds	1
   950  003E                     ___flmul@prod:
   951                           
   952                           ; 4 bytes @ 0x1E
   953  003E                     	ds	4
   954  0042                     ___flmul@temp:
   955                           
   956                           ; 2 bytes @ 0x22
   957  0042                     	ds	2
   958  0044                     ?___fltol:
   959  0044                     ___fltol@f1:	
   960                           ; 4 bytes @ 0x24
   961                           
   962                           
   963                           ; 4 bytes @ 0x24
   964  0044                     	ds	4
   965  0048                     ??___fltol:
   966                           
   967                           ; 1 bytes @ 0x28
   968  0048                     	ds	5
   969  004D                     ___fltol@sign1:
   970                           
   971                           ; 1 bytes @ 0x2D
   972  004D                     	ds	1
   973  004E                     ___fltol@exp1:
   974                           
   975                           ; 1 bytes @ 0x2E
   976  004E                     	ds	1
   977  004F                     ??_main:
   978                           
   979                           ; 1 bytes @ 0x2F
   980  004F                     	ds	5
   981                           
   982                           	psect	maintext
   983  0388                     __pmaintext:	
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 111 in file "Lab2.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : B00/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         0       0       2       0       0
  1005 ;;      Temps:          0       5       0       0       0
  1006 ;;      Totals:         0       5       2       0       0
  1007 ;;Total ram usage:        7 bytes
  1008 ;; Hardware stack levels required when called:    3
  1009 ;; This function calls:
  1010 ;;		_ADC_CONFIG
  1011 ;;		_ADC_IF
  1012 ;;		_Lcd_Clear
  1013 ;;		_Lcd_Init
  1014 ;;		_Lcd_Set_Cursor
  1015 ;;		_Lcd_Write_Char
  1016 ;;		_Lcd_Write_String
  1017 ;;		_USART_CONFIG
  1018 ;;		___awdiv
  1019 ;;		___awmod
  1020 ;;		___flmul
  1021 ;;		___fltol
  1022 ;;		___xxtofl
  1023 ;;		_sprintf
  1024 ;; This function is called by:
  1025 ;;		Startup code after reset
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _main
  1031  0388                     _main:
  1032  0388                     l2831:	
  1033                           ;incstack = 0
  1034                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1035                           
  1036                           
  1037                           ;Lab2.c: 112:     ANSEL = 0x03;
  1038  0388  3003               	movlw	3
  1039  0389  1683               	bsf	3,5	;RP0=1, select bank3
  1040  038A  1703               	bsf	3,6	;RP1=1, select bank3
  1041  038B  0088               	movwf	8	;volatile
  1042  038C                     l2833:
  1043                           
  1044                           ;Lab2.c: 113:     ANSELH = 0x00;
  1045  038C  0189               	clrf	9	;volatile
  1046  038D                     l2835:
  1047                           
  1048                           ;Lab2.c: 115:     TRISA = 0x03;
  1049  038D  3003               	movlw	3
  1050  038E  1683               	bsf	3,5	;RP0=1, select bank1
  1051  038F  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0390  0085               	movwf	5	;volatile
  1053                           
  1054                           ;Lab2.c: 116:     TRISB = 0x00;
  1055  0391  0186               	clrf	6	;volatile
  1056  0392                     l2837:
  1057                           
  1058                           ;Lab2.c: 117:     TRISC = 0x80;
  1059  0392  3080               	movlw	128
  1060  0393  0087               	movwf	7	;volatile
  1061  0394                     l2839:
  1062                           
  1063                           ;Lab2.c: 118:     TRISD = 0x00;
  1064  0394  0188               	clrf	8	;volatile
  1065  0395                     l2841:
  1066                           
  1067                           ;Lab2.c: 120:     OSCCONbits.IRCF = 0B110;
  1068  0395  080F               	movf	15,w	;volatile
  1069  0396  398F               	andlw	-113
  1070  0397  3860               	iorlw	96
  1071  0398  008F               	movwf	15	;volatile
  1072  0399                     l2843:
  1073                           
  1074                           ;Lab2.c: 121:     OSCCONbits.OSTS = 0;
  1075  0399  118F               	bcf	15,3	;volatile
  1076  039A                     l2845:
  1077                           
  1078                           ;Lab2.c: 122:     OSCCONbits.SCS = 1;
  1079  039A  140F               	bsf	15,0	;volatile
  1080  039B                     l2847:
  1081                           
  1082                           ;Lab2.c: 124:     ADC_CONFIG(4);
  1083  039B  3004               	movlw	4
  1084  039C  00F3               	movwf	ADC_CONFIG@frec
  1085  039D  3000               	movlw	0
  1086  039E  00F4               	movwf	ADC_CONFIG@frec+1
  1087  039F  120A  158A  25D7  120A  118A  	fcall	_ADC_CONFIG
  1088  03A4                     l2849:
  1089                           
  1090                           ;Lab2.c: 125:     USART_CONFIG(4, 1, 1);
  1091  03A4  3004               	movlw	4
  1092  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1093  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1094  03A7  00A0               	movwf	USART_CONFIG@frec
  1095  03A8  3000               	movlw	0
  1096  03A9  00A1               	movwf	USART_CONFIG@frec+1
  1097  03AA  3001               	movlw	1
  1098  03AB  00A2               	movwf	USART_CONFIG@tr
  1099  03AC  3000               	movlw	0
  1100  03AD  00A3               	movwf	USART_CONFIG@tr+1
  1101  03AE  3001               	movlw	1
  1102  03AF  00A4               	movwf	USART_CONFIG@rc
  1103  03B0  3000               	movlw	0
  1104  03B1  00A5               	movwf	USART_CONFIG@rc+1
  1105  03B2  120A  158A  2677  120A  118A  	fcall	_USART_CONFIG
  1106  03B7                     l2851:
  1107                           
  1108                           ;Lab2.c: 127:     INTCONbits.PEIE = 1;
  1109  03B7  170B               	bsf	11,6	;volatile
  1110  03B8                     l2853:
  1111                           
  1112                           ;Lab2.c: 128:     PIE1bits.ADIE = 1;
  1113  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  1114  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  1115  03BA  170C               	bsf	12,6	;volatile
  1116  03BB                     l2855:
  1117                           
  1118                           ;Lab2.c: 130:     PIE1bits.RCIE = 1;
  1119  03BB  168C               	bsf	12,5	;volatile
  1120  03BC                     l2857:
  1121                           
  1122                           ;Lab2.c: 131:     ADCON0bits.GO = 1;
  1123  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1124  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1125  03BE  149F               	bsf	31,1	;volatile
  1126  03BF                     l2859:
  1127                           
  1128                           ;Lab2.c: 132:     Lcd_Init();
  1129  03BF  120A  158A  27A3  120A  118A  	fcall	_Lcd_Init
  1130  03C4                     l2861:
  1131                           
  1132                           ;Lab2.c: 133:     RCIF = 0;
  1133  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1134  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1135  03C6  128C               	bcf	12,5	;volatile
  1136  03C7                     l2863:
  1137                           
  1138                           ;Lab2.c: 135:     INTCONbits.GIE = 1;
  1139  03C7  178B               	bsf	11,7	;volatile
  1140  03C8                     l2865:
  1141                           
  1142                           ;Lab2.c: 136:     Lcd_Clear();
  1143  03C8  120A  158A  2542  120A  118A  	fcall	_Lcd_Clear
  1144  03CD                     l2867:
  1145                           
  1146                           ;Lab2.c: 137:     Lcd_Set_Cursor(1,1);
  1147  03CD  01F6               	clrf	Lcd_Set_Cursor@b
  1148  03CE  0AF6               	incf	Lcd_Set_Cursor@b,f
  1149  03CF  3001               	movlw	1
  1150  03D0  120A  158A  2571  120A  118A  	fcall	_Lcd_Set_Cursor
  1151  03D5                     l2869:
  1152                           
  1153                           ;Lab2.c: 138:     Lcd_Write_String("S1:  S2:  S3:");
  1154  03D5  300B               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1155  03D6  00F5               	movwf	Lcd_Write_String@a
  1156  03D7  3080               	movlw	128
  1157  03D8  00F6               	movwf	Lcd_Write_String@a+1
  1158  03D9  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String
  1159  03DE                     l2871:
  1160                           
  1161                           ;Lab2.c: 141:         ADC_IF();
  1162  03DE  120A  158A  258F  120A  118A  	fcall	_ADC_IF
  1163  03E3                     l2873:
  1164                           
  1165                           ;Lab2.c: 142:         PORTB = con;
  1166  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1167  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1168  03E5  0859               	movf	_con,w
  1169  03E6  0086               	movwf	6	;volatile
  1170  03E7                     l2875:
  1171                           
  1172                           ;Lab2.c: 143:         vol1 = (pot1*0.01961);
  1173  03E7  085B               	movf	_pot1,w
  1174  03E8  00CF               	movwf	??_main
  1175  03E9  01D0               	clrf	??_main+1
  1176  03EA  01D1               	clrf	??_main+2
  1177  03EB  01D2               	clrf	??_main+3
  1178  03EC  0852               	movf	??_main+3,w
  1179  03ED  00F6               	movwf	___xxtofl@val+3
  1180  03EE  0851               	movf	??_main+2,w
  1181  03EF  00F5               	movwf	___xxtofl@val+2
  1182  03F0  0850               	movf	??_main+1,w
  1183  03F1  00F4               	movwf	___xxtofl@val+1
  1184  03F2  084F               	movf	??_main,w
  1185  03F3  00F3               	movwf	___xxtofl@val
  1186  03F4  3001               	movlw	1
  1187  03F5  120A  118A  261D  120A  118A  	fcall	___xxtofl
  1188  03FA  0876               	movf	?___xxtofl+3,w
  1189  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1190  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1191  03FD  00B1               	movwf	___flmul@a+3
  1192  03FE  0875               	movf	?___xxtofl+2,w
  1193  03FF  00B0               	movwf	___flmul@a+2
  1194  0400  0874               	movf	?___xxtofl+1,w
  1195  0401  00AF               	movwf	___flmul@a+1
  1196  0402  0873               	movf	?___xxtofl,w
  1197  0403  00AE               	movwf	___flmul@a
  1198  0404  303C               	movlw	60
  1199  0405  00AD               	movwf	___flmul@b+3
  1200  0406  30A0               	movlw	160
  1201  0407  00AC               	movwf	___flmul@b+2
  1202  0408  30A5               	movlw	165
  1203  0409  00AB               	movwf	___flmul@b+1
  1204  040A  3027               	movlw	39
  1205  040B  00AA               	movwf	___flmul@b
  1206  040C  120A  118A  2027  120A  118A  	fcall	___flmul
  1207  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0413  082D               	movf	?___flmul+3,w
  1210  0414  00C7               	movwf	___fltol@f1+3
  1211  0415  082C               	movf	?___flmul+2,w
  1212  0416  00C6               	movwf	___fltol@f1+2
  1213  0417  082B               	movf	?___flmul+1,w
  1214  0418  00C5               	movwf	___fltol@f1+1
  1215  0419  082A               	movf	?___flmul,w
  1216  041A  00C4               	movwf	___fltol@f1
  1217  041B  120A  118A  26D9  120A  118A  	fcall	___fltol
  1218  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0422  0844               	movf	?___fltol,w
  1221  0423  00D3               	movwf	??_main+4
  1222  0424  0853               	movf	??_main+4,w
  1223  0425  00D8               	movwf	_vol1
  1224  0426                     l2877:
  1225                           
  1226                           ;Lab2.c: 144:         vol2 = (pot2*0.01961);
  1227  0426  085A               	movf	_pot2,w
  1228  0427  00CF               	movwf	??_main
  1229  0428  01D0               	clrf	??_main+1
  1230  0429  01D1               	clrf	??_main+2
  1231  042A  01D2               	clrf	??_main+3
  1232  042B  0852               	movf	??_main+3,w
  1233  042C  00F6               	movwf	___xxtofl@val+3
  1234  042D  0851               	movf	??_main+2,w
  1235  042E  00F5               	movwf	___xxtofl@val+2
  1236  042F  0850               	movf	??_main+1,w
  1237  0430  00F4               	movwf	___xxtofl@val+1
  1238  0431  084F               	movf	??_main,w
  1239  0432  00F3               	movwf	___xxtofl@val
  1240  0433  3001               	movlw	1
  1241  0434  120A  118A  261D  120A  118A  	fcall	___xxtofl
  1242  0439  0876               	movf	?___xxtofl+3,w
  1243  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1244  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1245  043C  00B1               	movwf	___flmul@a+3
  1246  043D  0875               	movf	?___xxtofl+2,w
  1247  043E  00B0               	movwf	___flmul@a+2
  1248  043F  0874               	movf	?___xxtofl+1,w
  1249  0440  00AF               	movwf	___flmul@a+1
  1250  0441  0873               	movf	?___xxtofl,w
  1251  0442  00AE               	movwf	___flmul@a
  1252  0443  303C               	movlw	60
  1253  0444  00AD               	movwf	___flmul@b+3
  1254  0445  30A0               	movlw	160
  1255  0446  00AC               	movwf	___flmul@b+2
  1256  0447  30A5               	movlw	165
  1257  0448  00AB               	movwf	___flmul@b+1
  1258  0449  3027               	movlw	39
  1259  044A  00AA               	movwf	___flmul@b
  1260  044B  120A  118A  2027  120A  118A  	fcall	___flmul
  1261  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0452  082D               	movf	?___flmul+3,w
  1264  0453  00C7               	movwf	___fltol@f1+3
  1265  0454  082C               	movf	?___flmul+2,w
  1266  0455  00C6               	movwf	___fltol@f1+2
  1267  0456  082B               	movf	?___flmul+1,w
  1268  0457  00C5               	movwf	___fltol@f1+1
  1269  0458  082A               	movf	?___flmul,w
  1270  0459  00C4               	movwf	___fltol@f1
  1271  045A  120A  118A  26D9  120A  118A  	fcall	___fltol
  1272  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0461  0844               	movf	?___fltol,w
  1275  0462  00D3               	movwf	??_main+4
  1276  0463  0853               	movf	??_main+4,w
  1277  0464  00D7               	movwf	_vol2
  1278  0465                     l2879:
  1279                           
  1280                           ;Lab2.c: 145:         sprintf(buffer, "%dV ", vol1);
  1281  0465  3019               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1282  0466  00CF               	movwf	??_main
  1283  0467  084F               	movf	??_main,w
  1284  0468  00A9               	movwf	sprintf@f
  1285  0469  0858               	movf	_vol1,w
  1286  046A  00D0               	movwf	??_main+1
  1287  046B  01D1               	clrf	??_main+2
  1288  046C  0850               	movf	??_main+1,w
  1289  046D  00AA               	movwf	?_sprintf+1
  1290  046E  0851               	movf	??_main+2,w
  1291  046F  00AB               	movwf	?_sprintf+2
  1292  0470  305C               	movlw	(low (_buffer| 0))& (0+255)
  1293  0471  120A  118A  2533  120A  118A  	fcall	_sprintf
  1294  0476                     l2881:
  1295                           
  1296                           ;Lab2.c: 146:         sprintf(buffer1, "%dV ", vol2);
  1297  0476  3019               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1298  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1300  0479  00CF               	movwf	??_main
  1301  047A  084F               	movf	??_main,w
  1302  047B  00A9               	movwf	sprintf@f
  1303  047C  0857               	movf	_vol2,w
  1304  047D  00D0               	movwf	??_main+1
  1305  047E  01D1               	clrf	??_main+2
  1306  047F  0850               	movf	??_main+1,w
  1307  0480  00AA               	movwf	?_sprintf+1
  1308  0481  0851               	movf	??_main+2,w
  1309  0482  00AB               	movwf	?_sprintf+2
  1310  0483  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  1311  0484  120A  118A  2533  120A  118A  	fcall	_sprintf
  1312  0489                     l2883:
  1313                           
  1314                           ;Lab2.c: 148:         cen = (con/100);
  1315  0489  3064               	movlw	100
  1316  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1317  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1318  048C  00A2               	movwf	___awdiv@divisor
  1319  048D  3000               	movlw	0
  1320  048E  00A3               	movwf	___awdiv@divisor+1
  1321  048F  0859               	movf	_con,w
  1322  0490  00CF               	movwf	??_main
  1323  0491  01D0               	clrf	??_main+1
  1324  0492  084F               	movf	??_main,w
  1325  0493  00A4               	movwf	___awdiv@dividend
  1326  0494  0850               	movf	??_main+1,w
  1327  0495  00A5               	movwf	___awdiv@dividend+1
  1328  0496  120A  118A  2755  120A  118A  	fcall	___awdiv
  1329  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  049D  0822               	movf	?___awdiv,w
  1332  049E  00D1               	movwf	??_main+2
  1333  049F  0851               	movf	??_main+2,w
  1334  04A0  00D6               	movwf	_cen
  1335  04A1                     l2885:
  1336                           
  1337                           ;Lab2.c: 149:         dec = ((con%100)/10);
  1338  04A1  300A               	movlw	10
  1339  04A2  00A2               	movwf	___awdiv@divisor
  1340  04A3  3000               	movlw	0
  1341  04A4  00A3               	movwf	___awdiv@divisor+1
  1342  04A5  0859               	movf	_con,w
  1343  04A6  00CF               	movwf	??_main
  1344  04A7  01D0               	clrf	??_main+1
  1345  04A8  084F               	movf	??_main,w
  1346  04A9  00F5               	movwf	___awmod@dividend
  1347  04AA  0850               	movf	??_main+1,w
  1348  04AB  00F6               	movwf	___awmod@dividend+1
  1349  04AC  3064               	movlw	100
  1350  04AD  00F3               	movwf	___awmod@divisor
  1351  04AE  3000               	movlw	0
  1352  04AF  00F4               	movwf	___awmod@divisor+1
  1353  04B0  120A  158A  2748  120A  118A  	fcall	___awmod
  1354  04B5  0874               	movf	?___awmod+1,w
  1355  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1356  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1357  04B8  00A5               	movwf	___awdiv@dividend+1
  1358  04B9  0873               	movf	?___awmod,w
  1359  04BA  00A4               	movwf	___awdiv@dividend
  1360  04BB  120A  118A  2755  120A  118A  	fcall	___awdiv
  1361  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1362  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1363  04C2  0822               	movf	?___awdiv,w
  1364  04C3  00D1               	movwf	??_main+2
  1365  04C4  0851               	movf	??_main+2,w
  1366  04C5  00D5               	movwf	_dec
  1367  04C6                     l2887:
  1368                           
  1369                           ;Lab2.c: 150:         uni = ((con%100)%10);
  1370  04C6  0859               	movf	_con,w
  1371  04C7  00CF               	movwf	??_main
  1372  04C8  01D0               	clrf	??_main+1
  1373  04C9  084F               	movf	??_main,w
  1374  04CA  00F5               	movwf	___awmod@dividend
  1375  04CB  0850               	movf	??_main+1,w
  1376  04CC  00F6               	movwf	___awmod@dividend+1
  1377  04CD  3064               	movlw	100
  1378  04CE  00F3               	movwf	___awmod@divisor
  1379  04CF  3000               	movlw	0
  1380  04D0  00F4               	movwf	___awmod@divisor+1
  1381  04D1  120A  158A  2748  120A  118A  	fcall	___awmod
  1382  04D6  0874               	movf	?___awmod+1,w
  1383  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  1384  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  1385  04D9  00B5               	movwf	(_main$1125+1)^(0+128)
  1386  04DA  0873               	movf	?___awmod,w
  1387  04DB  00B4               	movwf	_main$1125^(0+128)
  1388  04DC                     l2889:
  1389                           
  1390                           ;Lab2.c: 150:         uni = ((con%100)%10);
  1391  04DC  300A               	movlw	10
  1392  04DD  00F3               	movwf	___awmod@divisor
  1393  04DE  3000               	movlw	0
  1394  04DF  00F4               	movwf	___awmod@divisor+1
  1395  04E0  0835               	movf	(_main$1125+1)^(0+128),w
  1396  04E1  00F6               	movwf	___awmod@dividend+1
  1397  04E2  0834               	movf	_main$1125^(0+128),w
  1398  04E3  00F5               	movwf	___awmod@dividend
  1399  04E4  120A  158A  2748  120A  118A  	fcall	___awmod
  1400  04E9  0873               	movf	?___awmod,w
  1401  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  1402  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  1403  04EC  00CF               	movwf	??_main
  1404  04ED  084F               	movf	??_main,w
  1405  04EE  00D4               	movwf	_uni
  1406  04EF                     l2891:
  1407                           
  1408                           ;Lab2.c: 152:         Lcd_Set_Cursor(2,2);
  1409  04EF  3002               	movlw	2
  1410  04F0  00CF               	movwf	??_main
  1411  04F1  084F               	movf	??_main,w
  1412  04F2  00F6               	movwf	Lcd_Set_Cursor@b
  1413  04F3  3002               	movlw	2
  1414  04F4  120A  158A  2571  120A  118A  	fcall	_Lcd_Set_Cursor
  1415  04F9                     l2893:
  1416                           
  1417                           ;Lab2.c: 153:         Lcd_Write_String(buffer);
  1418  04F9  305C               	movlw	(low (_buffer| 0))& (0+255)
  1419  04FA  00F5               	movwf	Lcd_Write_String@a
  1420  04FB  3000               	movlw	0
  1421  04FC  00F6               	movwf	Lcd_Write_String@a+1
  1422  04FD  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String
  1423  0502                     l2895:
  1424                           
  1425                           ;Lab2.c: 154:         Lcd_Write_String(buffer1);
  1426  0502  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  1427  0503  00F5               	movwf	Lcd_Write_String@a
  1428  0504  3000               	movlw	0
  1429  0505  00F6               	movwf	Lcd_Write_String@a+1
  1430  0506  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String
  1431  050B                     l2897:
  1432                           
  1433                           ;Lab2.c: 155:         Lcd_Set_Cursor(2,11);
  1434  050B  300B               	movlw	11
  1435  050C  1283               	bcf	3,5	;RP0=0, select bank0
  1436  050D  1303               	bcf	3,6	;RP1=0, select bank0
  1437  050E  00CF               	movwf	??_main
  1438  050F  084F               	movf	??_main,w
  1439  0510  00F6               	movwf	Lcd_Set_Cursor@b
  1440  0511  3002               	movlw	2
  1441  0512  120A  158A  2571  120A  118A  	fcall	_Lcd_Set_Cursor
  1442  0517                     l2899:
  1443                           
  1444                           ;Lab2.c: 156:         Lcd_Write_Char(cen);
  1445  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0519  0856               	movf	_cen,w
  1448  051A  120A  158A  254F  120A  118A  	fcall	_Lcd_Write_Char
  1449  051F                     l2901:
  1450                           
  1451                           ;Lab2.c: 157:         Lcd_Write_Char(dec);
  1452  051F  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0520  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0521  0855               	movf	_dec,w
  1455  0522  120A  158A  254F  120A  118A  	fcall	_Lcd_Write_Char
  1456  0527                     l2903:
  1457                           
  1458                           ;Lab2.c: 158:         Lcd_Write_Char(uni);
  1459  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0529  0854               	movf	_uni,w
  1462  052A  120A  158A  254F  120A  118A  	fcall	_Lcd_Write_Char
  1463  052F  2BDE               	goto	l2871
  1464  0530  120A  118A  280C   	ljmp	start
  1465  0533                     __end_of_main:
  1466                           
  1467                           	psect	text1
  1468  0533                     __ptext1:	
  1469 ;; *************** function _sprintf *****************
  1470 ;; Defined at:
  1471 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  sp              1    wreg     PTR unsigned char 
  1474 ;;		 -> buffer1(20), buffer(20), 
  1475 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1476 ;;		 -> STR_13(5), STR_12(5), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1479 ;;		 -> buffer1(20), buffer(20), 
  1480 ;;  tmpval          4    0        struct .
  1481 ;;  val             2   18[BANK0 ] unsigned int 
  1482 ;;  cp              2    0        PTR const unsigned char 
  1483 ;;  len             2    0        unsigned int 
  1484 ;;  c               1   21[BANK0 ] unsigned char 
  1485 ;;  prec            1   17[BANK0 ] char 
  1486 ;;  flag            1   16[BANK0 ] unsigned char 
  1487 ;;  ap              1   15[BANK0 ] PTR void [1]
  1488 ;;		 -> ?_sprintf(2), 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2    9[BANK0 ] int 
  1491 ;; Registers used:
  1492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       3       0       0       0
  1499 ;;      Locals:         0       7       0       0       0
  1500 ;;      Temps:          0       3       0       0       0
  1501 ;;      Totals:         0      13       0       0       0
  1502 ;;Total ram usage:       13 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    2
  1505 ;; This function calls:
  1506 ;;		___lwdiv
  1507 ;;		___lwmod
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           
  1514                           ;psect for function _sprintf
  1515  0533                     _sprintf:
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1519                           ;sprintf@sp stored from wreg
  1520  0533  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0534  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0535  00B4               	movwf	sprintf@sp
  1523  0536                     l2467:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1526  0536  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1527  0537  00AC               	movwf	??_sprintf
  1528  0538  082C               	movf	??_sprintf,w
  1529  0539  00AF               	movwf	sprintf@ap
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1532  053A  2E06               	goto	l2519
  1533  053B                     l2469:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1536  053B  3025               	movlw	37
  1537  053C  0635               	xorwf	sprintf@c,w
  1538  053D  1903               	btfsc	3,2
  1539  053E  2D40               	goto	u2621
  1540  053F  2D41               	goto	u2620
  1541  0540                     u2621:
  1542  0540  2D4D               	goto	l2475
  1543  0541                     u2620:
  1544  0541                     l2471:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1547  0541  0835               	movf	sprintf@c,w
  1548  0542  00AC               	movwf	??_sprintf
  1549  0543  0834               	movf	sprintf@sp,w
  1550  0544  0084               	movwf	4
  1551  0545  082C               	movf	??_sprintf,w
  1552  0546  1383               	bcf	3,7	;select IRP bank0
  1553  0547  0080               	movwf	0
  1554  0548                     l2473:
  1555  0548  3001               	movlw	1
  1556  0549  00AC               	movwf	??_sprintf
  1557  054A  082C               	movf	??_sprintf,w
  1558  054B  07B4               	addwf	sprintf@sp,f
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1561  054C  2E06               	goto	l2519
  1562  054D                     l2475:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1565  054D  01B0               	clrf	sprintf@flag
  1566  054E                     l2479:	
  1567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1568                           
  1569  054E  3001               	movlw	1
  1570  054F  07A9               	addwf	sprintf@f,f
  1571  0550  30FF               	movlw	-1
  1572  0551  0729               	addwf	sprintf@f,w
  1573  0552  0084               	movwf	4
  1574  0553  120A  118A  27C8  120A  118A  	fcall	stringdir
  1575  0558  00B5               	movwf	sprintf@c
  1576  0559  00AC               	movwf	??_sprintf
  1577  055A  01AD               	clrf	??_sprintf+1
  1578                           
  1579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 1, Range of values is 0 to 0
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            4     3 (average)
  1585                           ; direct_byte           11     8 (fixed)
  1586                           ; jumptable            260     6 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588  055B  082D               	movf	??_sprintf+1,w
  1589  055C  3A00               	xorlw	0	; case 0
  1590  055D  1903               	skipnz
  1591  055E  2D60               	goto	l2969
  1592  055F  2E06               	goto	l2519
  1593  0560                     l2969:
  1594                           
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 3, Range of values is 0 to 105
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte           10     6 (average)
  1600                           ; jumptable            260     6 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  0560  082C               	movf	??_sprintf,w
  1603  0561  3A00               	xorlw	0	; case 0
  1604  0562  1903               	skipnz
  1605  0563  2E18               	goto	l2521
  1606  0564  3A64               	xorlw	100	; case 100
  1607  0565  1903               	skipnz
  1608  0566  2D6B               	goto	l2481
  1609  0567  3A0D               	xorlw	13	; case 105
  1610  0568  1903               	skipnz
  1611  0569  2D6B               	goto	l2481
  1612  056A  2E06               	goto	l2519
  1613  056B                     l2481:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1616  056B  082F               	movf	sprintf@ap,w
  1617  056C  0084               	movwf	4
  1618  056D  1383               	bcf	3,7	;select IRP bank0
  1619  056E  0800               	movf	0,w
  1620  056F  00B2               	movwf	sprintf@val
  1621  0570  0A84               	incf	4,f
  1622  0571  0800               	movf	0,w
  1623  0572  00B3               	movwf	sprintf@val+1
  1624  0573                     l2483:
  1625  0573  3002               	movlw	2
  1626  0574  00AC               	movwf	??_sprintf
  1627  0575  082C               	movf	??_sprintf,w
  1628  0576  07AF               	addwf	sprintf@ap,f
  1629  0577                     l2485:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1632  0577  1FB3               	btfss	sprintf@val+1,7
  1633  0578  2D7A               	goto	u2631
  1634  0579  2D7B               	goto	u2630
  1635  057A                     u2631:
  1636  057A  2D84               	goto	l2491
  1637  057B                     u2630:
  1638  057B                     l2487:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1641  057B  3003               	movlw	3
  1642  057C  00AC               	movwf	??_sprintf
  1643  057D  082C               	movf	??_sprintf,w
  1644  057E  04B0               	iorwf	sprintf@flag,f
  1645  057F                     l2489:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1648  057F  09B2               	comf	sprintf@val,f
  1649  0580  09B3               	comf	sprintf@val+1,f
  1650  0581  0AB2               	incf	sprintf@val,f
  1651  0582  1903               	skipnz
  1652  0583  0AB3               	incf	sprintf@val+1,f
  1653  0584                     l2491:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1656  0584  01B5               	clrf	sprintf@c
  1657  0585  0AB5               	incf	sprintf@c,f
  1658  0586                     l2497:
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1661  0586  0835               	movf	sprintf@c,w
  1662  0587  00AC               	movwf	??_sprintf
  1663  0588  072C               	addwf	??_sprintf,w
  1664  0589  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1665  058A  0084               	movwf	4
  1666  058B  120A  118A  27C8  120A  118A  	fcall	stringdir
  1667  0590  00AD               	movwf	??_sprintf+1
  1668  0591  120A  118A  27C8  120A  118A  	fcall	stringdir
  1669  0596  00AE               	movwf	??_sprintf+2
  1670  0597  082E               	movf	??_sprintf+2,w
  1671  0598  0233               	subwf	sprintf@val+1,w
  1672  0599  1D03               	skipz
  1673  059A  2D9D               	goto	u2645
  1674  059B  082D               	movf	??_sprintf+1,w
  1675  059C  0232               	subwf	sprintf@val,w
  1676  059D                     u2645:
  1677  059D  1803               	skipnc
  1678  059E  2DA0               	goto	u2641
  1679  059F  2DA1               	goto	u2640
  1680  05A0                     u2641:
  1681  05A0  2DA2               	goto	l2501
  1682  05A1                     u2640:
  1683  05A1  2DAC               	goto	l2503
  1684  05A2                     l2501:
  1685  05A2  3001               	movlw	1
  1686  05A3  00AC               	movwf	??_sprintf
  1687  05A4  082C               	movf	??_sprintf,w
  1688  05A5  07B5               	addwf	sprintf@c,f
  1689  05A6  3005               	movlw	5
  1690  05A7  0635               	xorwf	sprintf@c,w
  1691  05A8  1D03               	btfss	3,2
  1692  05A9  2DAB               	goto	u2651
  1693  05AA  2DAC               	goto	u2650
  1694  05AB                     u2651:
  1695  05AB  2D86               	goto	l2497
  1696  05AC                     u2650:
  1697  05AC                     l2503:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1700  05AC  0830               	movf	sprintf@flag,w
  1701  05AD  3903               	andlw	3
  1702  05AE  1903               	btfsc	3,2
  1703  05AF  2DB1               	goto	u2661
  1704  05B0  2DB2               	goto	u2660
  1705  05B1                     u2661:
  1706  05B1  2DBD               	goto	l2509
  1707  05B2                     u2660:
  1708  05B2                     l2505:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1711  05B2  302D               	movlw	45
  1712  05B3  00AC               	movwf	??_sprintf
  1713  05B4  0834               	movf	sprintf@sp,w
  1714  05B5  0084               	movwf	4
  1715  05B6  082C               	movf	??_sprintf,w
  1716  05B7  1383               	bcf	3,7	;select IRP bank0
  1717  05B8  0080               	movwf	0
  1718  05B9                     l2507:
  1719  05B9  3001               	movlw	1
  1720  05BA  00AC               	movwf	??_sprintf
  1721  05BB  082C               	movf	??_sprintf,w
  1722  05BC  07B4               	addwf	sprintf@sp,f
  1723  05BD                     l2509:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1726  05BD  0835               	movf	sprintf@c,w
  1727  05BE  00AC               	movwf	??_sprintf
  1728  05BF  082C               	movf	??_sprintf,w
  1729  05C0  00B1               	movwf	sprintf@prec
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1732  05C1  2DFD               	goto	l2517
  1733  05C2                     l2511:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1736  05C2  300A               	movlw	10
  1737  05C3  00A3               	movwf	___lwmod@divisor
  1738  05C4  3000               	movlw	0
  1739  05C5  00A4               	movwf	___lwmod@divisor+1
  1740  05C6  0831               	movf	sprintf@prec,w
  1741  05C7  00AC               	movwf	??_sprintf
  1742  05C8  072C               	addwf	??_sprintf,w
  1743  05C9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1744  05CA  0084               	movwf	4
  1745  05CB  120A  118A  27C8  120A  118A  	fcall	stringdir
  1746  05D0  00F3               	movwf	___lwdiv@divisor
  1747  05D1  120A  118A  27C8  120A  118A  	fcall	stringdir
  1748  05D6  00F4               	movwf	___lwdiv@divisor+1
  1749  05D7  0833               	movf	sprintf@val+1,w
  1750  05D8  00F6               	movwf	___lwdiv@dividend+1
  1751  05D9  0832               	movf	sprintf@val,w
  1752  05DA  00F5               	movwf	___lwdiv@dividend
  1753  05DB  120A  158A  2702  120A  118A  	fcall	___lwdiv
  1754  05E0  0874               	movf	?___lwdiv+1,w
  1755  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1756  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1757  05E3  00A6               	movwf	___lwmod@dividend+1
  1758  05E4  0873               	movf	?___lwdiv,w
  1759  05E5  00A5               	movwf	___lwmod@dividend
  1760  05E6  120A  158A  263B  120A  118A  	fcall	___lwmod
  1761  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1762  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1763  05ED  0823               	movf	?___lwmod,w
  1764  05EE  3E30               	addlw	48
  1765  05EF  00AD               	movwf	??_sprintf+1
  1766  05F0  082D               	movf	??_sprintf+1,w
  1767  05F1  00B5               	movwf	sprintf@c
  1768  05F2                     l2513:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1771  05F2  0835               	movf	sprintf@c,w
  1772  05F3  00AC               	movwf	??_sprintf
  1773  05F4  0834               	movf	sprintf@sp,w
  1774  05F5  0084               	movwf	4
  1775  05F6  082C               	movf	??_sprintf,w
  1776  05F7  1383               	bcf	3,7	;select IRP bank0
  1777  05F8  0080               	movwf	0
  1778  05F9                     l2515:
  1779  05F9  3001               	movlw	1
  1780  05FA  00AC               	movwf	??_sprintf
  1781  05FB  082C               	movf	??_sprintf,w
  1782  05FC  07B4               	addwf	sprintf@sp,f
  1783  05FD                     l2517:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1786  05FD  30FF               	movlw	255
  1787  05FE  00AC               	movwf	??_sprintf
  1788  05FF  082C               	movf	??_sprintf,w
  1789  0600  07B1               	addwf	sprintf@prec,f
  1790  0601  0A31               	incf	sprintf@prec,w
  1791  0602  1D03               	btfss	3,2
  1792  0603  2E05               	goto	u2671
  1793  0604  2E06               	goto	u2670
  1794  0605                     u2671:
  1795  0605  2DC2               	goto	l2511
  1796  0606                     u2670:
  1797  0606                     l2519:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1800  0606  3001               	movlw	1
  1801  0607  07A9               	addwf	sprintf@f,f
  1802  0608  30FF               	movlw	-1
  1803  0609  0729               	addwf	sprintf@f,w
  1804  060A  0084               	movwf	4
  1805  060B  120A  118A  27C8  120A  118A  	fcall	stringdir
  1806  0610  00AC               	movwf	??_sprintf
  1807  0611  082C               	movf	??_sprintf,w
  1808  0612  00B5               	movwf	sprintf@c
  1809  0613  0835               	movf	sprintf@c,w
  1810  0614  1D03               	btfss	3,2
  1811  0615  2E17               	goto	u2681
  1812  0616  2E18               	goto	u2680
  1813  0617                     u2681:
  1814  0617  2D3B               	goto	l2469
  1815  0618                     u2680:
  1816  0618                     l2521:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1819  0618  0834               	movf	sprintf@sp,w
  1820  0619  0084               	movwf	4
  1821  061A  1383               	bcf	3,7	;select IRP bank0
  1822  061B  0180               	clrf	0
  1823  061C                     l311:
  1824  061C  0008               	return
  1825  061D                     __end_of_sprintf:
  1826                           
  1827                           	psect	text2
  1828  0E3B                     __ptext2:	
  1829 ;; *************** function ___lwmod *****************
  1830 ;; Defined at:
  1831 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  divisor         2    3[BANK0 ] unsigned int 
  1834 ;;  dividend        2    5[BANK0 ] unsigned int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  counter         1    8[BANK0 ] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2    3[BANK0 ] unsigned int 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       4       0       0       0
  1847 ;;      Locals:         0       1       0       0       0
  1848 ;;      Temps:          0       1       0       0       0
  1849 ;;      Totals:         0       6       0       0       0
  1850 ;;Total ram usage:        6 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_sprintf
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function ___lwmod
  1862  0E3B                     ___lwmod:
  1863  0E3B                     l2317:	
  1864                           ;incstack = 0
  1865                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1866                           
  1867  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0E3D  0823               	movf	___lwmod@divisor,w
  1870  0E3E  0424               	iorwf	___lwmod@divisor+1,w
  1871  0E3F  1903               	btfsc	3,2
  1872  0E40  2E42               	goto	u2441
  1873  0E41  2E43               	goto	u2440
  1874  0E42                     u2441:
  1875  0E42  2E72               	goto	l2335
  1876  0E43                     u2440:
  1877  0E43                     l2319:
  1878  0E43  01A8               	clrf	___lwmod@counter
  1879  0E44  0AA8               	incf	___lwmod@counter,f
  1880  0E45  2E51               	goto	l2325
  1881  0E46                     l2321:
  1882  0E46  3001               	movlw	1
  1883  0E47                     u2455:
  1884  0E47  1003               	clrc
  1885  0E48  0DA3               	rlf	___lwmod@divisor,f
  1886  0E49  0DA4               	rlf	___lwmod@divisor+1,f
  1887  0E4A  3EFF               	addlw	-1
  1888  0E4B  1D03               	skipz
  1889  0E4C  2E47               	goto	u2455
  1890  0E4D                     l2323:
  1891  0E4D  3001               	movlw	1
  1892  0E4E  00A7               	movwf	??___lwmod
  1893  0E4F  0827               	movf	??___lwmod,w
  1894  0E50  07A8               	addwf	___lwmod@counter,f
  1895  0E51                     l2325:
  1896  0E51  1FA4               	btfss	___lwmod@divisor+1,7
  1897  0E52  2E54               	goto	u2461
  1898  0E53  2E55               	goto	u2460
  1899  0E54                     u2461:
  1900  0E54  2E46               	goto	l2321
  1901  0E55                     u2460:
  1902  0E55                     l2327:
  1903  0E55  0824               	movf	___lwmod@divisor+1,w
  1904  0E56  0226               	subwf	___lwmod@dividend+1,w
  1905  0E57  1D03               	skipz
  1906  0E58  2E5B               	goto	u2475
  1907  0E59  0823               	movf	___lwmod@divisor,w
  1908  0E5A  0225               	subwf	___lwmod@dividend,w
  1909  0E5B                     u2475:
  1910  0E5B  1C03               	skipc
  1911  0E5C  2E5E               	goto	u2471
  1912  0E5D  2E5F               	goto	u2470
  1913  0E5E                     u2471:
  1914  0E5E  2E65               	goto	l2331
  1915  0E5F                     u2470:
  1916  0E5F                     l2329:
  1917  0E5F  0823               	movf	___lwmod@divisor,w
  1918  0E60  02A5               	subwf	___lwmod@dividend,f
  1919  0E61  0824               	movf	___lwmod@divisor+1,w
  1920  0E62  1C03               	skipc
  1921  0E63  03A6               	decf	___lwmod@dividend+1,f
  1922  0E64  02A6               	subwf	___lwmod@dividend+1,f
  1923  0E65                     l2331:
  1924  0E65  3001               	movlw	1
  1925  0E66                     u2485:
  1926  0E66  1003               	clrc
  1927  0E67  0CA4               	rrf	___lwmod@divisor+1,f
  1928  0E68  0CA3               	rrf	___lwmod@divisor,f
  1929  0E69  3EFF               	addlw	-1
  1930  0E6A  1D03               	skipz
  1931  0E6B  2E66               	goto	u2485
  1932  0E6C                     l2333:
  1933  0E6C  3001               	movlw	1
  1934  0E6D  02A8               	subwf	___lwmod@counter,f
  1935  0E6E  1D03               	btfss	3,2
  1936  0E6F  2E71               	goto	u2491
  1937  0E70  2E72               	goto	u2490
  1938  0E71                     u2491:
  1939  0E71  2E55               	goto	l2327
  1940  0E72                     u2490:
  1941  0E72                     l2335:
  1942  0E72  0826               	movf	___lwmod@dividend+1,w
  1943  0E73  00A4               	movwf	?___lwmod+1
  1944  0E74  0825               	movf	___lwmod@dividend,w
  1945  0E75  00A3               	movwf	?___lwmod
  1946  0E76                     l597:
  1947  0E76  0008               	return
  1948  0E77                     __end_of___lwmod:
  1949                           
  1950                           	psect	text3
  1951  0F02                     __ptext3:	
  1952 ;; *************** function ___lwdiv *****************
  1953 ;; Defined at:
  1954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  divisor         2    3[COMMON] unsigned int 
  1957 ;;  dividend        2    5[COMMON] unsigned int 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  quotient        2    1[BANK0 ] unsigned int 
  1960 ;;  counter         1    0[BANK0 ] unsigned char 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2    3[COMMON] unsigned int 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2, status,0
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         4       0       0       0       0
  1971 ;;      Locals:         0       3       0       0       0
  1972 ;;      Temps:          1       0       0       0       0
  1973 ;;      Totals:         5       3       0       0       0
  1974 ;;Total ram usage:        8 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_sprintf
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function ___lwdiv
  1986  0F02                     ___lwdiv:
  1987  0F02                     l2291:	
  1988                           ;incstack = 0
  1989                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1990                           
  1991  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0F04  01A1               	clrf	___lwdiv@quotient
  1994  0F05  01A2               	clrf	___lwdiv@quotient+1
  1995  0F06                     l2293:
  1996  0F06  0873               	movf	___lwdiv@divisor,w
  1997  0F07  0474               	iorwf	___lwdiv@divisor+1,w
  1998  0F08  1903               	btfsc	3,2
  1999  0F09  2F0B               	goto	u2371
  2000  0F0A  2F0C               	goto	u2370
  2001  0F0B                     u2371:
  2002  0F0B  2F43               	goto	l2313
  2003  0F0C                     u2370:
  2004  0F0C                     l2295:
  2005  0F0C  01A0               	clrf	___lwdiv@counter
  2006  0F0D  0AA0               	incf	___lwdiv@counter,f
  2007  0F0E  2F1A               	goto	l2301
  2008  0F0F                     l2297:
  2009  0F0F  3001               	movlw	1
  2010  0F10                     u2385:
  2011  0F10  1003               	clrc
  2012  0F11  0DF3               	rlf	___lwdiv@divisor,f
  2013  0F12  0DF4               	rlf	___lwdiv@divisor+1,f
  2014  0F13  3EFF               	addlw	-1
  2015  0F14  1D03               	skipz
  2016  0F15  2F10               	goto	u2385
  2017  0F16                     l2299:
  2018  0F16  3001               	movlw	1
  2019  0F17  00F7               	movwf	??___lwdiv
  2020  0F18  0877               	movf	??___lwdiv,w
  2021  0F19  07A0               	addwf	___lwdiv@counter,f
  2022  0F1A                     l2301:
  2023  0F1A  1FF4               	btfss	___lwdiv@divisor+1,7
  2024  0F1B  2F1D               	goto	u2391
  2025  0F1C  2F1E               	goto	u2390
  2026  0F1D                     u2391:
  2027  0F1D  2F0F               	goto	l2297
  2028  0F1E                     u2390:
  2029  0F1E                     l2303:
  2030  0F1E  3001               	movlw	1
  2031  0F1F                     u2405:
  2032  0F1F  1003               	clrc
  2033  0F20  0DA1               	rlf	___lwdiv@quotient,f
  2034  0F21  0DA2               	rlf	___lwdiv@quotient+1,f
  2035  0F22  3EFF               	addlw	-1
  2036  0F23  1D03               	skipz
  2037  0F24  2F1F               	goto	u2405
  2038  0F25  0874               	movf	___lwdiv@divisor+1,w
  2039  0F26  0276               	subwf	___lwdiv@dividend+1,w
  2040  0F27  1D03               	skipz
  2041  0F28  2F2B               	goto	u2415
  2042  0F29  0873               	movf	___lwdiv@divisor,w
  2043  0F2A  0275               	subwf	___lwdiv@dividend,w
  2044  0F2B                     u2415:
  2045  0F2B  1C03               	skipc
  2046  0F2C  2F2E               	goto	u2411
  2047  0F2D  2F2F               	goto	u2410
  2048  0F2E                     u2411:
  2049  0F2E  2F36               	goto	l2309
  2050  0F2F                     u2410:
  2051  0F2F                     l2305:
  2052  0F2F  0873               	movf	___lwdiv@divisor,w
  2053  0F30  02F5               	subwf	___lwdiv@dividend,f
  2054  0F31  0874               	movf	___lwdiv@divisor+1,w
  2055  0F32  1C03               	skipc
  2056  0F33  03F6               	decf	___lwdiv@dividend+1,f
  2057  0F34  02F6               	subwf	___lwdiv@dividend+1,f
  2058  0F35                     l2307:
  2059  0F35  1421               	bsf	___lwdiv@quotient,0
  2060  0F36                     l2309:
  2061  0F36  3001               	movlw	1
  2062  0F37                     u2425:
  2063  0F37  1003               	clrc
  2064  0F38  0CF4               	rrf	___lwdiv@divisor+1,f
  2065  0F39  0CF3               	rrf	___lwdiv@divisor,f
  2066  0F3A  3EFF               	addlw	-1
  2067  0F3B  1D03               	skipz
  2068  0F3C  2F37               	goto	u2425
  2069  0F3D                     l2311:
  2070  0F3D  3001               	movlw	1
  2071  0F3E  02A0               	subwf	___lwdiv@counter,f
  2072  0F3F  1D03               	btfss	3,2
  2073  0F40  2F42               	goto	u2431
  2074  0F41  2F43               	goto	u2430
  2075  0F42                     u2431:
  2076  0F42  2F1E               	goto	l2303
  2077  0F43                     u2430:
  2078  0F43                     l2313:
  2079  0F43  0822               	movf	___lwdiv@quotient+1,w
  2080  0F44  00F4               	movwf	?___lwdiv+1
  2081  0F45  0821               	movf	___lwdiv@quotient,w
  2082  0F46  00F3               	movwf	?___lwdiv
  2083  0F47                     l587:
  2084  0F47  0008               	return
  2085  0F48                     __end_of___lwdiv:
  2086                           
  2087                           	psect	text4
  2088  061D                     __ptext4:	
  2089 ;; *************** function ___xxtofl *****************
  2090 ;; Defined at:
  2091 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  sign            1    wreg     unsigned char 
  2094 ;;  val             4    3[COMMON] long 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  sign            1    4[BANK0 ] unsigned char 
  2097 ;;  arg             4    6[BANK0 ] unsigned long 
  2098 ;;  exp             1    5[BANK0 ] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  4    3[COMMON] unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         4       0       0       0       0
  2109 ;;      Locals:         0       6       0       0       0
  2110 ;;      Temps:          0       4       0       0       0
  2111 ;;      Totals:         4      10       0       0       0
  2112 ;;Total ram usage:       14 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           
  2123                           ;psect for function ___xxtofl
  2124  061D                     ___xxtofl:
  2125                           
  2126                           ;incstack = 0
  2127                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2128                           ;___xxtofl@sign stored from wreg
  2129  061D  1283               	bcf	3,5	;RP0=0, select bank0
  2130  061E  1303               	bcf	3,6	;RP1=0, select bank0
  2131  061F  00A4               	movwf	___xxtofl@sign
  2132  0620                     l2787:
  2133  0620  0824               	movf	___xxtofl@sign,w
  2134  0621  1903               	btfsc	3,2
  2135  0622  2E24               	goto	u3351
  2136  0623  2E25               	goto	u3350
  2137  0624                     u3351:
  2138  0624  2E39               	goto	l2793
  2139  0625                     u3350:
  2140  0625                     l2789:
  2141  0625  1FF6               	btfss	___xxtofl@val+3,7
  2142  0626  2E28               	goto	u3361
  2143  0627  2E29               	goto	u3360
  2144  0628                     u3361:
  2145  0628  2E39               	goto	l2793
  2146  0629                     u3360:
  2147  0629                     l2791:
  2148  0629  0973               	comf	___xxtofl@val,w
  2149  062A  00A6               	movwf	___xxtofl@arg
  2150  062B  0974               	comf	___xxtofl@val+1,w
  2151  062C  00A7               	movwf	___xxtofl@arg+1
  2152  062D  0975               	comf	___xxtofl@val+2,w
  2153  062E  00A8               	movwf	___xxtofl@arg+2
  2154  062F  0976               	comf	___xxtofl@val+3,w
  2155  0630  00A9               	movwf	___xxtofl@arg+3
  2156  0631  0AA6               	incf	___xxtofl@arg,f
  2157  0632  1903               	skipnz
  2158  0633  0AA7               	incf	___xxtofl@arg+1,f
  2159  0634  1903               	skipnz
  2160  0635  0AA8               	incf	___xxtofl@arg+2,f
  2161  0636  1903               	skipnz
  2162  0637  0AA9               	incf	___xxtofl@arg+3,f
  2163  0638  2E41               	goto	l748
  2164  0639                     l2793:
  2165  0639  0876               	movf	___xxtofl@val+3,w
  2166  063A  00A9               	movwf	___xxtofl@arg+3
  2167  063B  0875               	movf	___xxtofl@val+2,w
  2168  063C  00A8               	movwf	___xxtofl@arg+2
  2169  063D  0874               	movf	___xxtofl@val+1,w
  2170  063E  00A7               	movwf	___xxtofl@arg+1
  2171  063F  0873               	movf	___xxtofl@val,w
  2172  0640  00A6               	movwf	___xxtofl@arg
  2173  0641                     l748:
  2174  0641  0876               	movf	___xxtofl@val+3,w
  2175  0642  0475               	iorwf	___xxtofl@val+2,w
  2176  0643  0474               	iorwf	___xxtofl@val+1,w
  2177  0644  0473               	iorwf	___xxtofl@val,w
  2178  0645  1D03               	skipz
  2179  0646  2E48               	goto	u3371
  2180  0647  2E49               	goto	u3370
  2181  0648                     u3371:
  2182  0648  2E52               	goto	l2799
  2183  0649                     u3370:
  2184  0649                     l2795:
  2185  0649  3000               	movlw	0
  2186  064A  00F6               	movwf	?___xxtofl+3
  2187  064B  3000               	movlw	0
  2188  064C  00F5               	movwf	?___xxtofl+2
  2189  064D  3000               	movlw	0
  2190  064E  00F4               	movwf	?___xxtofl+1
  2191  064F  3000               	movlw	0
  2192  0650  00F3               	movwf	?___xxtofl
  2193  0651  2ED8               	goto	l750
  2194  0652                     l2799:
  2195  0652  3096               	movlw	150
  2196  0653  00A0               	movwf	??___xxtofl
  2197  0654  0820               	movf	??___xxtofl,w
  2198  0655  00A5               	movwf	___xxtofl@exp
  2199  0656  2E64               	goto	l2803
  2200  0657                     l2801:
  2201  0657  3001               	movlw	1
  2202  0658  00A0               	movwf	??___xxtofl
  2203  0659  0820               	movf	??___xxtofl,w
  2204  065A  07A5               	addwf	___xxtofl@exp,f
  2205  065B  3001               	movlw	1
  2206  065C                     u3385:
  2207  065C  1003               	clrc
  2208  065D  0CA9               	rrf	___xxtofl@arg+3,f
  2209  065E  0CA8               	rrf	___xxtofl@arg+2,f
  2210  065F  0CA7               	rrf	___xxtofl@arg+1,f
  2211  0660  0CA6               	rrf	___xxtofl@arg,f
  2212  0661  3EFF               	addlw	-1
  2213  0662  1D03               	skipz
  2214  0663  2E5C               	goto	u3385
  2215  0664                     l2803:
  2216  0664  30FE               	movlw	254
  2217  0665  0529               	andwf	___xxtofl@arg+3,w
  2218  0666  1D03               	btfss	3,2
  2219  0667  2E69               	goto	u3391
  2220  0668  2E6A               	goto	u3390
  2221  0669                     u3391:
  2222  0669  2E57               	goto	l2801
  2223  066A                     u3390:
  2224  066A  2E86               	goto	l754
  2225  066B                     l2805:
  2226  066B  3001               	movlw	1
  2227  066C  00A0               	movwf	??___xxtofl
  2228  066D  0820               	movf	??___xxtofl,w
  2229  066E  07A5               	addwf	___xxtofl@exp,f
  2230  066F                     l2807:
  2231  066F  3001               	movlw	1
  2232  0670  07A6               	addwf	___xxtofl@arg,f
  2233  0671  3000               	movlw	0
  2234  0672  1803               	skipnc
  2235  0673  3001               	movlw	1
  2236  0674  07A7               	addwf	___xxtofl@arg+1,f
  2237  0675  3000               	movlw	0
  2238  0676  1803               	skipnc
  2239  0677  3001               	movlw	1
  2240  0678  07A8               	addwf	___xxtofl@arg+2,f
  2241  0679  3000               	movlw	0
  2242  067A  1803               	skipnc
  2243  067B  3001               	movlw	1
  2244  067C  07A9               	addwf	___xxtofl@arg+3,f
  2245  067D                     l2809:
  2246  067D  3001               	movlw	1
  2247  067E                     u3405:
  2248  067E  1003               	clrc
  2249  067F  0CA9               	rrf	___xxtofl@arg+3,f
  2250  0680  0CA8               	rrf	___xxtofl@arg+2,f
  2251  0681  0CA7               	rrf	___xxtofl@arg+1,f
  2252  0682  0CA6               	rrf	___xxtofl@arg,f
  2253  0683  3EFF               	addlw	-1
  2254  0684  1D03               	skipz
  2255  0685  2E7E               	goto	u3405
  2256  0686                     l754:
  2257  0686  30FF               	movlw	255
  2258  0687  0529               	andwf	___xxtofl@arg+3,w
  2259  0688  1D03               	btfss	3,2
  2260  0689  2E8B               	goto	u3411
  2261  068A  2E8C               	goto	u3410
  2262  068B                     u3411:
  2263  068B  2E6B               	goto	l2805
  2264  068C                     u3410:
  2265  068C  2E98               	goto	l2813
  2266  068D                     l2811:
  2267  068D  3001               	movlw	1
  2268  068E  02A5               	subwf	___xxtofl@exp,f
  2269  068F  3001               	movlw	1
  2270  0690  00A0               	movwf	??___xxtofl
  2271  0691                     u3425:
  2272  0691  1003               	clrc
  2273  0692  0DA6               	rlf	___xxtofl@arg,f
  2274  0693  0DA7               	rlf	___xxtofl@arg+1,f
  2275  0694  0DA8               	rlf	___xxtofl@arg+2,f
  2276  0695  0DA9               	rlf	___xxtofl@arg+3,f
  2277  0696  0BA0               	decfsz	??___xxtofl,f
  2278  0697  2E91               	goto	u3425
  2279  0698                     l2813:
  2280  0698  1BA8               	btfsc	___xxtofl@arg+2,7
  2281  0699  2E9B               	goto	u3431
  2282  069A  2E9C               	goto	u3430
  2283  069B                     u3431:
  2284  069B  2EA2               	goto	l761
  2285  069C                     u3430:
  2286  069C                     l2815:
  2287  069C  3002               	movlw	2
  2288  069D  0225               	subwf	___xxtofl@exp,w
  2289  069E  1803               	skipnc
  2290  069F  2EA1               	goto	u3441
  2291  06A0  2EA2               	goto	u3440
  2292  06A1                     u3441:
  2293  06A1  2E8D               	goto	l2811
  2294  06A2                     u3440:
  2295  06A2                     l761:
  2296  06A2  1825               	btfsc	___xxtofl@exp,0
  2297  06A3  2EA5               	goto	u3451
  2298  06A4  2EA6               	goto	u3450
  2299  06A5                     u3451:
  2300  06A5  2EAE               	goto	l762
  2301  06A6                     u3450:
  2302  06A6                     l2817:
  2303  06A6  30FF               	movlw	255
  2304  06A7  05A6               	andwf	___xxtofl@arg,f
  2305  06A8  30FF               	movlw	255
  2306  06A9  05A7               	andwf	___xxtofl@arg+1,f
  2307  06AA  307F               	movlw	127
  2308  06AB  05A8               	andwf	___xxtofl@arg+2,f
  2309  06AC  30FF               	movlw	255
  2310  06AD  05A9               	andwf	___xxtofl@arg+3,f
  2311  06AE                     l762:
  2312  06AE  1003               	clrc
  2313  06AF  0CA5               	rrf	___xxtofl@exp,f
  2314  06B0                     l2819:
  2315  06B0  0825               	movf	___xxtofl@exp,w
  2316  06B1  00A0               	movwf	??___xxtofl
  2317  06B2  01A1               	clrf	??___xxtofl+1
  2318  06B3  01A2               	clrf	??___xxtofl+2
  2319  06B4  01A3               	clrf	??___xxtofl+3
  2320  06B5  3018               	movlw	24
  2321  06B6                     u3465:
  2322  06B6  1003               	clrc
  2323  06B7  0DA0               	rlf	??___xxtofl,f
  2324  06B8  0DA1               	rlf	??___xxtofl+1,f
  2325  06B9  0DA2               	rlf	??___xxtofl+2,f
  2326  06BA  0DA3               	rlf	??___xxtofl+3,f
  2327  06BB                     u3460:
  2328  06BB  3EFF               	addlw	-1
  2329  06BC  1D03               	skipz
  2330  06BD  2EB6               	goto	u3465
  2331  06BE  0820               	movf	??___xxtofl,w
  2332  06BF  04A6               	iorwf	___xxtofl@arg,f
  2333  06C0  0821               	movf	??___xxtofl+1,w
  2334  06C1  04A7               	iorwf	___xxtofl@arg+1,f
  2335  06C2  0822               	movf	??___xxtofl+2,w
  2336  06C3  04A8               	iorwf	___xxtofl@arg+2,f
  2337  06C4  0823               	movf	??___xxtofl+3,w
  2338  06C5  04A9               	iorwf	___xxtofl@arg+3,f
  2339  06C6                     l2821:
  2340  06C6  0824               	movf	___xxtofl@sign,w
  2341  06C7  1903               	btfsc	3,2
  2342  06C8  2ECA               	goto	u3471
  2343  06C9  2ECB               	goto	u3470
  2344  06CA                     u3471:
  2345  06CA  2ED0               	goto	l2827
  2346  06CB                     u3470:
  2347  06CB                     l2823:
  2348  06CB  1FF6               	btfss	___xxtofl@val+3,7
  2349  06CC  2ECE               	goto	u3481
  2350  06CD  2ECF               	goto	u3480
  2351  06CE                     u3481:
  2352  06CE  2ED0               	goto	l2827
  2353  06CF                     u3480:
  2354  06CF                     l2825:
  2355  06CF  17A9               	bsf	___xxtofl@arg+3,7
  2356  06D0                     l2827:
  2357  06D0  0829               	movf	___xxtofl@arg+3,w
  2358  06D1  00F6               	movwf	?___xxtofl+3
  2359  06D2  0828               	movf	___xxtofl@arg+2,w
  2360  06D3  00F5               	movwf	?___xxtofl+2
  2361  06D4  0827               	movf	___xxtofl@arg+1,w
  2362  06D5  00F4               	movwf	?___xxtofl+1
  2363  06D6  0826               	movf	___xxtofl@arg,w
  2364  06D7  00F3               	movwf	?___xxtofl
  2365  06D8                     l750:
  2366  06D8  0008               	return
  2367  06D9                     __end_of___xxtofl:
  2368                           
  2369                           	psect	text5
  2370  06D9                     __ptext5:	
  2371 ;; *************** function ___fltol *****************
  2372 ;; Defined at:
  2373 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  f1              4   36[BANK0 ] unsigned char 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  exp1            1   46[BANK0 ] unsigned char 
  2378 ;;  sign1           1   45[BANK0 ] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  4   36[BANK0 ] long 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       4       0       0       0
  2389 ;;      Locals:         0       2       0       0       0
  2390 ;;      Temps:          0       5       0       0       0
  2391 ;;      Totals:         0      11       0       0       0
  2392 ;;Total ram usage:       11 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_main
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402                           
  2403                           ;psect for function ___fltol
  2404  06D9                     ___fltol:
  2405  06D9                     l2611:	
  2406                           ;incstack = 0
  2407                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2408                           
  2409  06D9  1003               	clrc
  2410  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2411  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2412  06DC  0D46               	rlf	___fltol@f1+2,w
  2413  06DD  0D47               	rlf	___fltol@f1+3,w
  2414  06DE  00C8               	movwf	??___fltol
  2415  06DF  0848               	movf	??___fltol,w
  2416  06E0  00CE               	movwf	___fltol@exp1
  2417  06E1  084E               	movf	___fltol@exp1,w
  2418  06E2  1D03               	btfss	3,2
  2419  06E3  2EE5               	goto	u2881
  2420  06E4  2EE6               	goto	u2880
  2421  06E5                     u2881:
  2422  06E5  2EEF               	goto	l2617
  2423  06E6                     u2880:
  2424  06E6                     l2613:
  2425  06E6  3000               	movlw	0
  2426  06E7  00C7               	movwf	?___fltol+3
  2427  06E8  3000               	movlw	0
  2428  06E9  00C6               	movwf	?___fltol+2
  2429  06EA  3000               	movlw	0
  2430  06EB  00C5               	movwf	?___fltol+1
  2431  06EC  3000               	movlw	0
  2432  06ED  00C4               	movwf	?___fltol
  2433  06EE  2F54               	goto	l501
  2434  06EF                     l2617:
  2435  06EF  0844               	movf	___fltol@f1,w
  2436  06F0  00C8               	movwf	??___fltol
  2437  06F1  0845               	movf	___fltol@f1+1,w
  2438  06F2  00C9               	movwf	??___fltol+1
  2439  06F3  0846               	movf	___fltol@f1+2,w
  2440  06F4  00CA               	movwf	??___fltol+2
  2441  06F5  0847               	movf	___fltol@f1+3,w
  2442  06F6  00CB               	movwf	??___fltol+3
  2443  06F7  301F               	movlw	31
  2444  06F8                     u2895:
  2445  06F8  1003               	clrc
  2446  06F9  0CCB               	rrf	??___fltol+3,f
  2447  06FA  0CCA               	rrf	??___fltol+2,f
  2448  06FB  0CC9               	rrf	??___fltol+1,f
  2449  06FC  0CC8               	rrf	??___fltol,f
  2450  06FD                     u2890:
  2451  06FD  3EFF               	addlw	-1
  2452  06FE  1D03               	skipz
  2453  06FF  2EF8               	goto	u2895
  2454  0700  0848               	movf	??___fltol,w
  2455  0701  00CC               	movwf	??___fltol+4
  2456  0702  084C               	movf	??___fltol+4,w
  2457  0703  00CD               	movwf	___fltol@sign1
  2458  0704                     l2619:
  2459  0704  17C6               	bsf	___fltol@f1+2,7
  2460  0705                     l2621:
  2461  0705  30FF               	movlw	255
  2462  0706  05C4               	andwf	___fltol@f1,f
  2463  0707  30FF               	movlw	255
  2464  0708  05C5               	andwf	___fltol@f1+1,f
  2465  0709  30FF               	movlw	255
  2466  070A  05C6               	andwf	___fltol@f1+2,f
  2467  070B  3000               	movlw	0
  2468  070C  05C7               	andwf	___fltol@f1+3,f
  2469  070D                     l2623:
  2470  070D  3096               	movlw	150
  2471  070E  02CE               	subwf	___fltol@exp1,f
  2472  070F                     l2625:
  2473  070F  1FCE               	btfss	___fltol@exp1,7
  2474  0710  2F12               	goto	u2901
  2475  0711  2F13               	goto	u2900
  2476  0712                     u2901:
  2477  0712  2F2D               	goto	l2635
  2478  0713                     u2900:
  2479  0713                     l2627:
  2480  0713  084E               	movf	___fltol@exp1,w
  2481  0714  3A80               	xorlw	128
  2482  0715  3E97               	addlw	151
  2483  0716  1803               	skipnc
  2484  0717  2F19               	goto	u2911
  2485  0718  2F1A               	goto	u2910
  2486  0719                     u2911:
  2487  0719  2F1B               	goto	l2633
  2488  071A                     u2910:
  2489  071A  2EE6               	goto	l2613
  2490  071B                     l2633:
  2491  071B  3001               	movlw	1
  2492  071C                     u2925:
  2493  071C  1003               	clrc
  2494  071D  0CC7               	rrf	___fltol@f1+3,f
  2495  071E  0CC6               	rrf	___fltol@f1+2,f
  2496  071F  0CC5               	rrf	___fltol@f1+1,f
  2497  0720  0CC4               	rrf	___fltol@f1,f
  2498  0721  3EFF               	addlw	-1
  2499  0722  1D03               	skipz
  2500  0723  2F1C               	goto	u2925
  2501  0724  3001               	movlw	1
  2502  0725  00C8               	movwf	??___fltol
  2503  0726  0848               	movf	??___fltol,w
  2504  0727  07CE               	addwf	___fltol@exp1,f
  2505  0728  1D03               	btfss	3,2
  2506  0729  2F2B               	goto	u2931
  2507  072A  2F2C               	goto	u2930
  2508  072B                     u2931:
  2509  072B  2F1B               	goto	l2633
  2510  072C                     u2930:
  2511  072C  2F44               	goto	l2643
  2512  072D                     l2635:
  2513  072D  3020               	movlw	32
  2514  072E  024E               	subwf	___fltol@exp1,w
  2515  072F  1C03               	skipc
  2516  0730  2F32               	goto	u2941
  2517  0731  2F33               	goto	u2940
  2518  0732                     u2941:
  2519  0732  2F3F               	goto	l508
  2520  0733                     u2940:
  2521  0733  2EE6               	goto	l2613
  2522  0734                     l2641:
  2523  0734  3001               	movlw	1
  2524  0735  00C8               	movwf	??___fltol
  2525  0736                     u2955:
  2526  0736  1003               	clrc
  2527  0737  0DC4               	rlf	___fltol@f1,f
  2528  0738  0DC5               	rlf	___fltol@f1+1,f
  2529  0739  0DC6               	rlf	___fltol@f1+2,f
  2530  073A  0DC7               	rlf	___fltol@f1+3,f
  2531  073B  0BC8               	decfsz	??___fltol,f
  2532  073C  2F36               	goto	u2955
  2533  073D  3001               	movlw	1
  2534  073E  02CE               	subwf	___fltol@exp1,f
  2535  073F                     l508:
  2536  073F  084E               	movf	___fltol@exp1,w
  2537  0740  1D03               	btfss	3,2
  2538  0741  2F43               	goto	u2961
  2539  0742  2F44               	goto	u2960
  2540  0743                     u2961:
  2541  0743  2F34               	goto	l2641
  2542  0744                     u2960:
  2543  0744                     l2643:
  2544  0744  084D               	movf	___fltol@sign1,w
  2545  0745  1903               	btfsc	3,2
  2546  0746  2F48               	goto	u2971
  2547  0747  2F49               	goto	u2970
  2548  0748                     u2971:
  2549  0748  2F54               	goto	l511
  2550  0749                     u2970:
  2551  0749                     l2645:
  2552  0749  09C4               	comf	___fltol@f1,f
  2553  074A  09C5               	comf	___fltol@f1+1,f
  2554  074B  09C6               	comf	___fltol@f1+2,f
  2555  074C  09C7               	comf	___fltol@f1+3,f
  2556  074D  0AC4               	incf	___fltol@f1,f
  2557  074E  1903               	skipnz
  2558  074F  0AC5               	incf	___fltol@f1+1,f
  2559  0750  1903               	skipnz
  2560  0751  0AC6               	incf	___fltol@f1+2,f
  2561  0752  1903               	skipnz
  2562  0753  0AC7               	incf	___fltol@f1+3,f
  2563  0754                     l511:
  2564  0754                     l501:
  2565  0754  0008               	return
  2566  0755                     __end_of___fltol:
  2567                           
  2568                           	psect	text6
  2569  0027                     __ptext6:	
  2570 ;; *************** function ___flmul *****************
  2571 ;; Defined at:
  2572 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  b               4   10[BANK0 ] long 
  2575 ;;  a               4   14[BANK0 ] long 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  prod            4   30[BANK0 ] struct .
  2578 ;;  grs             4   25[BANK0 ] unsigned long 
  2579 ;;  temp            2   34[BANK0 ] struct .
  2580 ;;  bexp            1   29[BANK0 ] unsigned char 
  2581 ;;  aexp            1   24[BANK0 ] unsigned char 
  2582 ;;  sign            1   23[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  4   10[BANK0 ] unsigned char 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         0       8       0       0       0
  2593 ;;      Locals:         0      13       0       0       0
  2594 ;;      Temps:          0       5       0       0       0
  2595 ;;      Totals:         0      26       0       0       0
  2596 ;;Total ram usage:       26 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    2
  2599 ;; This function calls:
  2600 ;;		__Umul8_16
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function ___flmul
  2608  0027                     ___flmul:
  2609  0027                     l2647:	
  2610                           ;incstack = 0
  2611                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2612                           
  2613  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0029  082D               	movf	___flmul@b+3,w
  2616  002A  3980               	andlw	128
  2617  002B  00B2               	movwf	??___flmul
  2618  002C  0832               	movf	??___flmul,w
  2619  002D  00B7               	movwf	___flmul@sign
  2620  002E                     l2649:
  2621  002E  082D               	movf	___flmul@b+3,w
  2622  002F  00B2               	movwf	??___flmul
  2623  0030  0732               	addwf	??___flmul,w
  2624  0031  00B3               	movwf	??___flmul+1
  2625  0032  0833               	movf	??___flmul+1,w
  2626  0033  00BD               	movwf	___flmul@bexp
  2627  0034                     l2651:
  2628  0034  1FAC               	btfss	___flmul@b+2,7
  2629  0035  2837               	goto	u2981
  2630  0036  2838               	goto	u2980
  2631  0037                     u2981:
  2632  0037  2839               	goto	l2655
  2633  0038                     u2980:
  2634  0038                     l2653:
  2635  0038  143D               	bsf	___flmul@bexp,0
  2636  0039                     l2655:
  2637  0039  083D               	movf	___flmul@bexp,w
  2638  003A  1903               	btfsc	3,2
  2639  003B  283D               	goto	u2991
  2640  003C  283E               	goto	u2990
  2641  003D                     u2991:
  2642  003D  284D               	goto	l2663
  2643  003E                     u2990:
  2644  003E                     l2657:
  2645  003E  0A3D               	incf	___flmul@bexp,w
  2646  003F  1D03               	btfss	3,2
  2647  0040  2842               	goto	u3001
  2648  0041  2843               	goto	u3000
  2649  0042                     u3001:
  2650  0042  284B               	goto	l2661
  2651  0043                     u3000:
  2652  0043                     l2659:
  2653  0043  3000               	movlw	0
  2654  0044  00AD               	movwf	___flmul@b+3
  2655  0045  3000               	movlw	0
  2656  0046  00AC               	movwf	___flmul@b+2
  2657  0047  3000               	movlw	0
  2658  0048  00AB               	movwf	___flmul@b+1
  2659  0049  3000               	movlw	0
  2660  004A  00AA               	movwf	___flmul@b
  2661  004B                     l2661:
  2662  004B  17AC               	bsf	___flmul@b+2,7
  2663  004C  2855               	goto	l2665
  2664  004D                     l2663:
  2665  004D  3000               	movlw	0
  2666  004E  00AD               	movwf	___flmul@b+3
  2667  004F  3000               	movlw	0
  2668  0050  00AC               	movwf	___flmul@b+2
  2669  0051  3000               	movlw	0
  2670  0052  00AB               	movwf	___flmul@b+1
  2671  0053  3000               	movlw	0
  2672  0054  00AA               	movwf	___flmul@b
  2673  0055                     l2665:
  2674  0055  0831               	movf	___flmul@a+3,w
  2675  0056  3980               	andlw	128
  2676  0057  00B2               	movwf	??___flmul
  2677  0058  0832               	movf	??___flmul,w
  2678  0059  06B7               	xorwf	___flmul@sign,f
  2679  005A                     l2667:
  2680  005A  0831               	movf	___flmul@a+3,w
  2681  005B  00B2               	movwf	??___flmul
  2682  005C  0732               	addwf	??___flmul,w
  2683  005D  00B3               	movwf	??___flmul+1
  2684  005E  0833               	movf	??___flmul+1,w
  2685  005F  00B8               	movwf	___flmul@aexp
  2686  0060                     l2669:
  2687  0060  1FB0               	btfss	___flmul@a+2,7
  2688  0061  2863               	goto	u3011
  2689  0062  2864               	goto	u3010
  2690  0063                     u3011:
  2691  0063  2865               	goto	l2673
  2692  0064                     u3010:
  2693  0064                     l2671:
  2694  0064  1438               	bsf	___flmul@aexp,0
  2695  0065                     l2673:
  2696  0065  0838               	movf	___flmul@aexp,w
  2697  0066  1903               	btfsc	3,2
  2698  0067  2869               	goto	u3021
  2699  0068  286A               	goto	u3020
  2700  0069                     u3021:
  2701  0069  2879               	goto	l2681
  2702  006A                     u3020:
  2703  006A                     l2675:
  2704  006A  0A38               	incf	___flmul@aexp,w
  2705  006B  1D03               	btfss	3,2
  2706  006C  286E               	goto	u3031
  2707  006D  286F               	goto	u3030
  2708  006E                     u3031:
  2709  006E  2877               	goto	l2679
  2710  006F                     u3030:
  2711  006F                     l2677:
  2712  006F  3000               	movlw	0
  2713  0070  00B1               	movwf	___flmul@a+3
  2714  0071  3000               	movlw	0
  2715  0072  00B0               	movwf	___flmul@a+2
  2716  0073  3000               	movlw	0
  2717  0074  00AF               	movwf	___flmul@a+1
  2718  0075  3000               	movlw	0
  2719  0076  00AE               	movwf	___flmul@a
  2720  0077                     l2679:
  2721  0077  17B0               	bsf	___flmul@a+2,7
  2722  0078  2881               	goto	l2683
  2723  0079                     l2681:
  2724  0079  3000               	movlw	0
  2725  007A  00B1               	movwf	___flmul@a+3
  2726  007B  3000               	movlw	0
  2727  007C  00B0               	movwf	___flmul@a+2
  2728  007D  3000               	movlw	0
  2729  007E  00AF               	movwf	___flmul@a+1
  2730  007F  3000               	movlw	0
  2731  0080  00AE               	movwf	___flmul@a
  2732  0081                     l2683:
  2733  0081  0838               	movf	___flmul@aexp,w
  2734  0082  1903               	btfsc	3,2
  2735  0083  2885               	goto	u3041
  2736  0084  2886               	goto	u3040
  2737  0085                     u3041:
  2738  0085  288B               	goto	l2687
  2739  0086                     u3040:
  2740  0086                     l2685:
  2741  0086  083D               	movf	___flmul@bexp,w
  2742  0087  1D03               	btfss	3,2
  2743  0088  288A               	goto	u3051
  2744  0089  288B               	goto	u3050
  2745  008A                     u3051:
  2746  008A  2894               	goto	l2691
  2747  008B                     u3050:
  2748  008B                     l2687:
  2749  008B  3000               	movlw	0
  2750  008C  00AD               	movwf	?___flmul+3
  2751  008D  3000               	movlw	0
  2752  008E  00AC               	movwf	?___flmul+2
  2753  008F  3000               	movlw	0
  2754  0090  00AB               	movwf	?___flmul+1
  2755  0091  3000               	movlw	0
  2756  0092  00AA               	movwf	?___flmul
  2757  0093  2B87               	goto	l704
  2758  0094                     l2691:
  2759  0094  082A               	movf	___flmul@b,w
  2760  0095  00B2               	movwf	??___flmul
  2761  0096  0832               	movf	??___flmul,w
  2762  0097  00F3               	movwf	__Umul8_16@multiplicand
  2763  0098  0830               	movf	___flmul@a+2,w
  2764  0099  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  2765  009E  0874               	movf	?__Umul8_16+1,w
  2766  009F  1283               	bcf	3,5	;RP0=0, select bank0
  2767  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  2768  00A1  00C3               	movwf	___flmul@temp+1
  2769  00A2  0873               	movf	?__Umul8_16,w
  2770  00A3  00C2               	movwf	___flmul@temp
  2771  00A4                     l2693:
  2772  00A4  0842               	movf	___flmul@temp,w
  2773  00A5  00B2               	movwf	??___flmul
  2774  00A6  01B3               	clrf	??___flmul+1
  2775  00A7  01B4               	clrf	??___flmul+2
  2776  00A8  01B5               	clrf	??___flmul+3
  2777  00A9  0835               	movf	??___flmul+3,w
  2778  00AA  00BC               	movwf	___flmul@grs+3
  2779  00AB  0834               	movf	??___flmul+2,w
  2780  00AC  00BB               	movwf	___flmul@grs+2
  2781  00AD  0833               	movf	??___flmul+1,w
  2782  00AE  00BA               	movwf	___flmul@grs+1
  2783  00AF  0832               	movf	??___flmul,w
  2784  00B0  00B9               	movwf	___flmul@grs
  2785  00B1                     l2695:
  2786  00B1  0843               	movf	___flmul@temp+1,w
  2787  00B2  00B2               	movwf	??___flmul
  2788  00B3  01B3               	clrf	??___flmul+1
  2789  00B4  01B4               	clrf	??___flmul+2
  2790  00B5  01B5               	clrf	??___flmul+3
  2791  00B6  0835               	movf	??___flmul+3,w
  2792  00B7  00C1               	movwf	___flmul@prod+3
  2793  00B8  0834               	movf	??___flmul+2,w
  2794  00B9  00C0               	movwf	___flmul@prod+2
  2795  00BA  0833               	movf	??___flmul+1,w
  2796  00BB  00BF               	movwf	___flmul@prod+1
  2797  00BC  0832               	movf	??___flmul,w
  2798  00BD  00BE               	movwf	___flmul@prod
  2799  00BE  082B               	movf	___flmul@b+1,w
  2800  00BF  00B2               	movwf	??___flmul
  2801  00C0  0832               	movf	??___flmul,w
  2802  00C1  00F3               	movwf	__Umul8_16@multiplicand
  2803  00C2  082F               	movf	___flmul@a+1,w
  2804  00C3  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  2805  00C8  0874               	movf	?__Umul8_16+1,w
  2806  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2807  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  2808  00CB  00C3               	movwf	___flmul@temp+1
  2809  00CC  0873               	movf	?__Umul8_16,w
  2810  00CD  00C2               	movwf	___flmul@temp
  2811  00CE                     l2697:
  2812  00CE  0842               	movf	___flmul@temp,w
  2813  00CF  00B2               	movwf	??___flmul
  2814  00D0  01B3               	clrf	??___flmul+1
  2815  00D1  01B4               	clrf	??___flmul+2
  2816  00D2  01B5               	clrf	??___flmul+3
  2817  00D3  0832               	movf	??___flmul,w
  2818  00D4  07B9               	addwf	___flmul@grs,f
  2819  00D5  0833               	movf	??___flmul+1,w
  2820  00D6  1103               	clrz
  2821  00D7  1803               	skipnc
  2822  00D8  3E01               	addlw	1
  2823  00D9  1903               	skipnz
  2824  00DA  28DC               	goto	u3061
  2825  00DB  07BA               	addwf	___flmul@grs+1,f
  2826  00DC                     u3061:
  2827  00DC  0834               	movf	??___flmul+2,w
  2828  00DD  1103               	clrz
  2829  00DE  1803               	skipnc
  2830  00DF  3E01               	addlw	1
  2831  00E0  1903               	skipnz
  2832  00E1  28E3               	goto	u3062
  2833  00E2  07BB               	addwf	___flmul@grs+2,f
  2834  00E3                     u3062:
  2835  00E3  0835               	movf	??___flmul+3,w
  2836  00E4  1103               	clrz
  2837  00E5  1803               	skipnc
  2838  00E6  3E01               	addlw	1
  2839  00E7  1903               	skipnz
  2840  00E8  28EA               	goto	u3063
  2841  00E9  07BC               	addwf	___flmul@grs+3,f
  2842  00EA                     u3063:
  2843  00EA                     l2699:
  2844  00EA  0843               	movf	___flmul@temp+1,w
  2845  00EB  00B2               	movwf	??___flmul
  2846  00EC  01B3               	clrf	??___flmul+1
  2847  00ED  01B4               	clrf	??___flmul+2
  2848  00EE  01B5               	clrf	??___flmul+3
  2849  00EF  0832               	movf	??___flmul,w
  2850  00F0  07BE               	addwf	___flmul@prod,f
  2851  00F1  0833               	movf	??___flmul+1,w
  2852  00F2  1103               	clrz
  2853  00F3  1803               	skipnc
  2854  00F4  3E01               	addlw	1
  2855  00F5  1903               	skipnz
  2856  00F6  28F8               	goto	u3071
  2857  00F7  07BF               	addwf	___flmul@prod+1,f
  2858  00F8                     u3071:
  2859  00F8  0834               	movf	??___flmul+2,w
  2860  00F9  1103               	clrz
  2861  00FA  1803               	skipnc
  2862  00FB  3E01               	addlw	1
  2863  00FC  1903               	skipnz
  2864  00FD  28FF               	goto	u3072
  2865  00FE  07C0               	addwf	___flmul@prod+2,f
  2866  00FF                     u3072:
  2867  00FF  0835               	movf	??___flmul+3,w
  2868  0100  1103               	clrz
  2869  0101  1803               	skipnc
  2870  0102  3E01               	addlw	1
  2871  0103  1903               	skipnz
  2872  0104  2906               	goto	u3073
  2873  0105  07C1               	addwf	___flmul@prod+3,f
  2874  0106                     u3073:
  2875  0106  082C               	movf	___flmul@b+2,w
  2876  0107  00B2               	movwf	??___flmul
  2877  0108  0832               	movf	??___flmul,w
  2878  0109  00F3               	movwf	__Umul8_16@multiplicand
  2879  010A  082E               	movf	___flmul@a,w
  2880  010B  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  2881  0110  0874               	movf	?__Umul8_16+1,w
  2882  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0113  00C3               	movwf	___flmul@temp+1
  2885  0114  0873               	movf	?__Umul8_16,w
  2886  0115  00C2               	movwf	___flmul@temp
  2887  0116                     l2701:
  2888  0116  0842               	movf	___flmul@temp,w
  2889  0117  00B2               	movwf	??___flmul
  2890  0118  01B3               	clrf	??___flmul+1
  2891  0119  01B4               	clrf	??___flmul+2
  2892  011A  01B5               	clrf	??___flmul+3
  2893  011B  0832               	movf	??___flmul,w
  2894  011C  07B9               	addwf	___flmul@grs,f
  2895  011D  0833               	movf	??___flmul+1,w
  2896  011E  1103               	clrz
  2897  011F  1803               	skipnc
  2898  0120  3E01               	addlw	1
  2899  0121  1903               	skipnz
  2900  0122  2924               	goto	u3081
  2901  0123  07BA               	addwf	___flmul@grs+1,f
  2902  0124                     u3081:
  2903  0124  0834               	movf	??___flmul+2,w
  2904  0125  1103               	clrz
  2905  0126  1803               	skipnc
  2906  0127  3E01               	addlw	1
  2907  0128  1903               	skipnz
  2908  0129  292B               	goto	u3082
  2909  012A  07BB               	addwf	___flmul@grs+2,f
  2910  012B                     u3082:
  2911  012B  0835               	movf	??___flmul+3,w
  2912  012C  1103               	clrz
  2913  012D  1803               	skipnc
  2914  012E  3E01               	addlw	1
  2915  012F  1903               	skipnz
  2916  0130  2932               	goto	u3083
  2917  0131  07BC               	addwf	___flmul@grs+3,f
  2918  0132                     u3083:
  2919  0132                     l2703:
  2920  0132  0843               	movf	___flmul@temp+1,w
  2921  0133  00B2               	movwf	??___flmul
  2922  0134  01B3               	clrf	??___flmul+1
  2923  0135  01B4               	clrf	??___flmul+2
  2924  0136  01B5               	clrf	??___flmul+3
  2925  0137  0832               	movf	??___flmul,w
  2926  0138  07BE               	addwf	___flmul@prod,f
  2927  0139  0833               	movf	??___flmul+1,w
  2928  013A  1103               	clrz
  2929  013B  1803               	skipnc
  2930  013C  3E01               	addlw	1
  2931  013D  1903               	skipnz
  2932  013E  2940               	goto	u3091
  2933  013F  07BF               	addwf	___flmul@prod+1,f
  2934  0140                     u3091:
  2935  0140  0834               	movf	??___flmul+2,w
  2936  0141  1103               	clrz
  2937  0142  1803               	skipnc
  2938  0143  3E01               	addlw	1
  2939  0144  1903               	skipnz
  2940  0145  2947               	goto	u3092
  2941  0146  07C0               	addwf	___flmul@prod+2,f
  2942  0147                     u3092:
  2943  0147  0835               	movf	??___flmul+3,w
  2944  0148  1103               	clrz
  2945  0149  1803               	skipnc
  2946  014A  3E01               	addlw	1
  2947  014B  1903               	skipnz
  2948  014C  294E               	goto	u3093
  2949  014D  07C1               	addwf	___flmul@prod+3,f
  2950  014E                     u3093:
  2951  014E                     l2705:
  2952  014E  3008               	movlw	8
  2953  014F  00B2               	movwf	??___flmul
  2954  0150                     u3105:
  2955  0150  1003               	clrc
  2956  0151  0DB9               	rlf	___flmul@grs,f
  2957  0152  0DBA               	rlf	___flmul@grs+1,f
  2958  0153  0DBB               	rlf	___flmul@grs+2,f
  2959  0154  0DBC               	rlf	___flmul@grs+3,f
  2960  0155  0BB2               	decfsz	??___flmul,f
  2961  0156  2950               	goto	u3105
  2962  0157                     l2707:
  2963  0157  082B               	movf	___flmul@b+1,w
  2964  0158  00B2               	movwf	??___flmul
  2965  0159  0832               	movf	??___flmul,w
  2966  015A  00F3               	movwf	__Umul8_16@multiplicand
  2967  015B  082E               	movf	___flmul@a,w
  2968  015C  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  2969  0161  0874               	movf	?__Umul8_16+1,w
  2970  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2971  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2972  0164  00C3               	movwf	___flmul@temp+1
  2973  0165  0873               	movf	?__Umul8_16,w
  2974  0166  00C2               	movwf	___flmul@temp
  2975  0167                     l2709:
  2976  0167  0842               	movf	___flmul@temp,w
  2977  0168  00B2               	movwf	??___flmul
  2978  0169  0843               	movf	___flmul@temp+1,w
  2979  016A  00B3               	movwf	??___flmul+1
  2980  016B  01B4               	clrf	??___flmul+2
  2981  016C  01B5               	clrf	??___flmul+3
  2982  016D  0832               	movf	??___flmul,w
  2983  016E  07B9               	addwf	___flmul@grs,f
  2984  016F  0833               	movf	??___flmul+1,w
  2985  0170  1103               	clrz
  2986  0171  1803               	skipnc
  2987  0172  3E01               	addlw	1
  2988  0173  1903               	skipnz
  2989  0174  2976               	goto	u3111
  2990  0175  07BA               	addwf	___flmul@grs+1,f
  2991  0176                     u3111:
  2992  0176  0834               	movf	??___flmul+2,w
  2993  0177  1103               	clrz
  2994  0178  1803               	skipnc
  2995  0179  3E01               	addlw	1
  2996  017A  1903               	skipnz
  2997  017B  297D               	goto	u3112
  2998  017C  07BB               	addwf	___flmul@grs+2,f
  2999  017D                     u3112:
  3000  017D  0835               	movf	??___flmul+3,w
  3001  017E  1103               	clrz
  3002  017F  1803               	skipnc
  3003  0180  3E01               	addlw	1
  3004  0181  1903               	skipnz
  3005  0182  2984               	goto	u3113
  3006  0183  07BC               	addwf	___flmul@grs+3,f
  3007  0184                     u3113:
  3008  0184                     l2711:
  3009  0184  082A               	movf	___flmul@b,w
  3010  0185  00B2               	movwf	??___flmul
  3011  0186  0832               	movf	??___flmul,w
  3012  0187  00F3               	movwf	__Umul8_16@multiplicand
  3013  0188  082F               	movf	___flmul@a+1,w
  3014  0189  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  3015  018E  0874               	movf	?__Umul8_16+1,w
  3016  018F  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0190  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0191  00C3               	movwf	___flmul@temp+1
  3019  0192  0873               	movf	?__Umul8_16,w
  3020  0193  00C2               	movwf	___flmul@temp
  3021  0194                     l2713:
  3022  0194  0842               	movf	___flmul@temp,w
  3023  0195  00B2               	movwf	??___flmul
  3024  0196  0843               	movf	___flmul@temp+1,w
  3025  0197  00B3               	movwf	??___flmul+1
  3026  0198  01B4               	clrf	??___flmul+2
  3027  0199  01B5               	clrf	??___flmul+3
  3028  019A  0832               	movf	??___flmul,w
  3029  019B  07B9               	addwf	___flmul@grs,f
  3030  019C  0833               	movf	??___flmul+1,w
  3031  019D  1103               	clrz
  3032  019E  1803               	skipnc
  3033  019F  3E01               	addlw	1
  3034  01A0  1903               	skipnz
  3035  01A1  29A3               	goto	u3121
  3036  01A2  07BA               	addwf	___flmul@grs+1,f
  3037  01A3                     u3121:
  3038  01A3  0834               	movf	??___flmul+2,w
  3039  01A4  1103               	clrz
  3040  01A5  1803               	skipnc
  3041  01A6  3E01               	addlw	1
  3042  01A7  1903               	skipnz
  3043  01A8  29AA               	goto	u3122
  3044  01A9  07BB               	addwf	___flmul@grs+2,f
  3045  01AA                     u3122:
  3046  01AA  0835               	movf	??___flmul+3,w
  3047  01AB  1103               	clrz
  3048  01AC  1803               	skipnc
  3049  01AD  3E01               	addlw	1
  3050  01AE  1903               	skipnz
  3051  01AF  29B1               	goto	u3123
  3052  01B0  07BC               	addwf	___flmul@grs+3,f
  3053  01B1                     u3123:
  3054  01B1                     l2715:
  3055  01B1  3008               	movlw	8
  3056  01B2  00B2               	movwf	??___flmul
  3057  01B3                     u3135:
  3058  01B3  1003               	clrc
  3059  01B4  0DB9               	rlf	___flmul@grs,f
  3060  01B5  0DBA               	rlf	___flmul@grs+1,f
  3061  01B6  0DBB               	rlf	___flmul@grs+2,f
  3062  01B7  0DBC               	rlf	___flmul@grs+3,f
  3063  01B8  0BB2               	decfsz	??___flmul,f
  3064  01B9  29B3               	goto	u3135
  3065  01BA  082A               	movf	___flmul@b,w
  3066  01BB  00B2               	movwf	??___flmul
  3067  01BC  0832               	movf	??___flmul,w
  3068  01BD  00F3               	movwf	__Umul8_16@multiplicand
  3069  01BE  082E               	movf	___flmul@a,w
  3070  01BF  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  3071  01C4  0874               	movf	?__Umul8_16+1,w
  3072  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3073  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3074  01C7  00C3               	movwf	___flmul@temp+1
  3075  01C8  0873               	movf	?__Umul8_16,w
  3076  01C9  00C2               	movwf	___flmul@temp
  3077  01CA                     l2717:
  3078  01CA  0842               	movf	___flmul@temp,w
  3079  01CB  00B2               	movwf	??___flmul
  3080  01CC  0843               	movf	___flmul@temp+1,w
  3081  01CD  00B3               	movwf	??___flmul+1
  3082  01CE  01B4               	clrf	??___flmul+2
  3083  01CF  01B5               	clrf	??___flmul+3
  3084  01D0  0832               	movf	??___flmul,w
  3085  01D1  07B9               	addwf	___flmul@grs,f
  3086  01D2  0833               	movf	??___flmul+1,w
  3087  01D3  1103               	clrz
  3088  01D4  1803               	skipnc
  3089  01D5  3E01               	addlw	1
  3090  01D6  1903               	skipnz
  3091  01D7  29D9               	goto	u3141
  3092  01D8  07BA               	addwf	___flmul@grs+1,f
  3093  01D9                     u3141:
  3094  01D9  0834               	movf	??___flmul+2,w
  3095  01DA  1103               	clrz
  3096  01DB  1803               	skipnc
  3097  01DC  3E01               	addlw	1
  3098  01DD  1903               	skipnz
  3099  01DE  29E0               	goto	u3142
  3100  01DF  07BB               	addwf	___flmul@grs+2,f
  3101  01E0                     u3142:
  3102  01E0  0835               	movf	??___flmul+3,w
  3103  01E1  1103               	clrz
  3104  01E2  1803               	skipnc
  3105  01E3  3E01               	addlw	1
  3106  01E4  1903               	skipnz
  3107  01E5  29E7               	goto	u3143
  3108  01E6  07BC               	addwf	___flmul@grs+3,f
  3109  01E7                     u3143:
  3110  01E7                     l2719:
  3111  01E7  082B               	movf	___flmul@b+1,w
  3112  01E8  00B2               	movwf	??___flmul
  3113  01E9  0832               	movf	??___flmul,w
  3114  01EA  00F3               	movwf	__Umul8_16@multiplicand
  3115  01EB  0830               	movf	___flmul@a+2,w
  3116  01EC  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  3117  01F1  0874               	movf	?__Umul8_16+1,w
  3118  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3119  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3120  01F4  00C3               	movwf	___flmul@temp+1
  3121  01F5  0873               	movf	?__Umul8_16,w
  3122  01F6  00C2               	movwf	___flmul@temp
  3123  01F7  0842               	movf	___flmul@temp,w
  3124  01F8  00B2               	movwf	??___flmul
  3125  01F9  0843               	movf	___flmul@temp+1,w
  3126  01FA  00B3               	movwf	??___flmul+1
  3127  01FB  01B4               	clrf	??___flmul+2
  3128  01FC  01B5               	clrf	??___flmul+3
  3129  01FD  0832               	movf	??___flmul,w
  3130  01FE  07BE               	addwf	___flmul@prod,f
  3131  01FF  0833               	movf	??___flmul+1,w
  3132  0200  1103               	clrz
  3133  0201  1803               	skipnc
  3134  0202  3E01               	addlw	1
  3135  0203  1903               	skipnz
  3136  0204  2A06               	goto	u3151
  3137  0205  07BF               	addwf	___flmul@prod+1,f
  3138  0206                     u3151:
  3139  0206  0834               	movf	??___flmul+2,w
  3140  0207  1103               	clrz
  3141  0208  1803               	skipnc
  3142  0209  3E01               	addlw	1
  3143  020A  1903               	skipnz
  3144  020B  2A0D               	goto	u3152
  3145  020C  07C0               	addwf	___flmul@prod+2,f
  3146  020D                     u3152:
  3147  020D  0835               	movf	??___flmul+3,w
  3148  020E  1103               	clrz
  3149  020F  1803               	skipnc
  3150  0210  3E01               	addlw	1
  3151  0211  1903               	skipnz
  3152  0212  2A14               	goto	u3153
  3153  0213  07C1               	addwf	___flmul@prod+3,f
  3154  0214                     u3153:
  3155  0214                     l2721:
  3156  0214  082C               	movf	___flmul@b+2,w
  3157  0215  00B2               	movwf	??___flmul
  3158  0216  0832               	movf	??___flmul,w
  3159  0217  00F3               	movwf	__Umul8_16@multiplicand
  3160  0218  082F               	movf	___flmul@a+1,w
  3161  0219  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  3162  021E  0874               	movf	?__Umul8_16+1,w
  3163  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0221  00C3               	movwf	___flmul@temp+1
  3166  0222  0873               	movf	?__Umul8_16,w
  3167  0223  00C2               	movwf	___flmul@temp
  3168  0224                     l2723:
  3169  0224  0842               	movf	___flmul@temp,w
  3170  0225  00B2               	movwf	??___flmul
  3171  0226  0843               	movf	___flmul@temp+1,w
  3172  0227  00B3               	movwf	??___flmul+1
  3173  0228  01B4               	clrf	??___flmul+2
  3174  0229  01B5               	clrf	??___flmul+3
  3175  022A  0832               	movf	??___flmul,w
  3176  022B  07BE               	addwf	___flmul@prod,f
  3177  022C  0833               	movf	??___flmul+1,w
  3178  022D  1103               	clrz
  3179  022E  1803               	skipnc
  3180  022F  3E01               	addlw	1
  3181  0230  1903               	skipnz
  3182  0231  2A33               	goto	u3161
  3183  0232  07BF               	addwf	___flmul@prod+1,f
  3184  0233                     u3161:
  3185  0233  0834               	movf	??___flmul+2,w
  3186  0234  1103               	clrz
  3187  0235  1803               	skipnc
  3188  0236  3E01               	addlw	1
  3189  0237  1903               	skipnz
  3190  0238  2A3A               	goto	u3162
  3191  0239  07C0               	addwf	___flmul@prod+2,f
  3192  023A                     u3162:
  3193  023A  0835               	movf	??___flmul+3,w
  3194  023B  1103               	clrz
  3195  023C  1803               	skipnc
  3196  023D  3E01               	addlw	1
  3197  023E  1903               	skipnz
  3198  023F  2A41               	goto	u3163
  3199  0240  07C1               	addwf	___flmul@prod+3,f
  3200  0241                     u3163:
  3201  0241  082C               	movf	___flmul@b+2,w
  3202  0242  00B2               	movwf	??___flmul
  3203  0243  0832               	movf	??___flmul,w
  3204  0244  00F3               	movwf	__Umul8_16@multiplicand
  3205  0245  0830               	movf	___flmul@a+2,w
  3206  0246  120A  158A  25AE  120A  118A  	fcall	__Umul8_16
  3207  024B  0874               	movf	?__Umul8_16+1,w
  3208  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3209  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3210  024E  00C3               	movwf	___flmul@temp+1
  3211  024F  0873               	movf	?__Umul8_16,w
  3212  0250  00C2               	movwf	___flmul@temp
  3213  0251                     l2725:
  3214  0251  0842               	movf	___flmul@temp,w
  3215  0252  00B2               	movwf	??___flmul
  3216  0253  0843               	movf	___flmul@temp+1,w
  3217  0254  00B3               	movwf	??___flmul+1
  3218  0255  01B4               	clrf	??___flmul+2
  3219  0256  01B5               	clrf	??___flmul+3
  3220  0257  3008               	movlw	8
  3221  0258                     u3175:
  3222  0258  1003               	clrc
  3223  0259  0DB2               	rlf	??___flmul,f
  3224  025A  0DB3               	rlf	??___flmul+1,f
  3225  025B  0DB4               	rlf	??___flmul+2,f
  3226  025C  0DB5               	rlf	??___flmul+3,f
  3227  025D                     u3170:
  3228  025D  3EFF               	addlw	-1
  3229  025E  1D03               	skipz
  3230  025F  2A58               	goto	u3175
  3231  0260  0832               	movf	??___flmul,w
  3232  0261  07BE               	addwf	___flmul@prod,f
  3233  0262  0833               	movf	??___flmul+1,w
  3234  0263  1103               	clrz
  3235  0264  1803               	skipnc
  3236  0265  3E01               	addlw	1
  3237  0266  1903               	skipnz
  3238  0267  2A69               	goto	u3181
  3239  0268  07BF               	addwf	___flmul@prod+1,f
  3240  0269                     u3181:
  3241  0269  0834               	movf	??___flmul+2,w
  3242  026A  1103               	clrz
  3243  026B  1803               	skipnc
  3244  026C  3E01               	addlw	1
  3245  026D  1903               	skipnz
  3246  026E  2A70               	goto	u3182
  3247  026F  07C0               	addwf	___flmul@prod+2,f
  3248  0270                     u3182:
  3249  0270  0835               	movf	??___flmul+3,w
  3250  0271  1103               	clrz
  3251  0272  1803               	skipnc
  3252  0273  3E01               	addlw	1
  3253  0274  1903               	skipnz
  3254  0275  2A77               	goto	u3183
  3255  0276  07C1               	addwf	___flmul@prod+3,f
  3256  0277                     u3183:
  3257  0277                     l2727:
  3258  0277  0839               	movf	___flmul@grs,w
  3259  0278  00B2               	movwf	??___flmul
  3260  0279  083A               	movf	___flmul@grs+1,w
  3261  027A  00B3               	movwf	??___flmul+1
  3262  027B  083B               	movf	___flmul@grs+2,w
  3263  027C  00B4               	movwf	??___flmul+2
  3264  027D  083C               	movf	___flmul@grs+3,w
  3265  027E  00B5               	movwf	??___flmul+3
  3266  027F  3018               	movlw	24
  3267  0280                     u3195:
  3268  0280  1003               	clrc
  3269  0281  0CB5               	rrf	??___flmul+3,f
  3270  0282  0CB4               	rrf	??___flmul+2,f
  3271  0283  0CB3               	rrf	??___flmul+1,f
  3272  0284  0CB2               	rrf	??___flmul,f
  3273  0285                     u3190:
  3274  0285  3EFF               	addlw	-1
  3275  0286  1D03               	skipz
  3276  0287  2A80               	goto	u3195
  3277  0288  0832               	movf	??___flmul,w
  3278  0289  07BE               	addwf	___flmul@prod,f
  3279  028A  0833               	movf	??___flmul+1,w
  3280  028B  1103               	clrz
  3281  028C  1803               	skipnc
  3282  028D  3E01               	addlw	1
  3283  028E  1903               	skipnz
  3284  028F  2A91               	goto	u3201
  3285  0290  07BF               	addwf	___flmul@prod+1,f
  3286  0291                     u3201:
  3287  0291  0834               	movf	??___flmul+2,w
  3288  0292  1103               	clrz
  3289  0293  1803               	skipnc
  3290  0294  3E01               	addlw	1
  3291  0295  1903               	skipnz
  3292  0296  2A98               	goto	u3202
  3293  0297  07C0               	addwf	___flmul@prod+2,f
  3294  0298                     u3202:
  3295  0298  0835               	movf	??___flmul+3,w
  3296  0299  1103               	clrz
  3297  029A  1803               	skipnc
  3298  029B  3E01               	addlw	1
  3299  029C  1903               	skipnz
  3300  029D  2A9F               	goto	u3203
  3301  029E  07C1               	addwf	___flmul@prod+3,f
  3302  029F                     u3203:
  3303  029F                     l2729:
  3304  029F  3008               	movlw	8
  3305  02A0  00B2               	movwf	??___flmul
  3306  02A1                     u3215:
  3307  02A1  1003               	clrc
  3308  02A2  0DB9               	rlf	___flmul@grs,f
  3309  02A3  0DBA               	rlf	___flmul@grs+1,f
  3310  02A4  0DBB               	rlf	___flmul@grs+2,f
  3311  02A5  0DBC               	rlf	___flmul@grs+3,f
  3312  02A6  0BB2               	decfsz	??___flmul,f
  3313  02A7  2AA1               	goto	u3215
  3314  02A8                     l2731:
  3315  02A8  083D               	movf	___flmul@bexp,w
  3316  02A9  0738               	addwf	___flmul@aexp,w
  3317  02AA  00B2               	movwf	??___flmul
  3318  02AB  01B3               	clrf	??___flmul+1
  3319  02AC  0DB3               	rlf	??___flmul+1,f
  3320  02AD  0832               	movf	??___flmul,w
  3321  02AE  3E82               	addlw	130
  3322  02AF  00C2               	movwf	___flmul@temp
  3323  02B0  0833               	movf	??___flmul+1,w
  3324  02B1  1803               	skipnc
  3325  02B2  3E01               	addlw	1
  3326  02B3  3EFF               	addlw	255
  3327  02B4  00C3               	movwf	___flmul@temp+1
  3328  02B5  2AD3               	goto	l2743
  3329  02B6                     l2733:
  3330  02B6  3001               	movlw	1
  3331  02B7  00B2               	movwf	??___flmul
  3332  02B8                     u3225:
  3333  02B8  1003               	clrc
  3334  02B9  0DBE               	rlf	___flmul@prod,f
  3335  02BA  0DBF               	rlf	___flmul@prod+1,f
  3336  02BB  0DC0               	rlf	___flmul@prod+2,f
  3337  02BC  0DC1               	rlf	___flmul@prod+3,f
  3338  02BD  0BB2               	decfsz	??___flmul,f
  3339  02BE  2AB8               	goto	u3225
  3340  02BF                     l2735:
  3341  02BF  1FBC               	btfss	___flmul@grs+3,7
  3342  02C0  2AC2               	goto	u3231
  3343  02C1  2AC3               	goto	u3230
  3344  02C2                     u3231:
  3345  02C2  2AC4               	goto	l2739
  3346  02C3                     u3230:
  3347  02C3                     l2737:
  3348  02C3  143E               	bsf	___flmul@prod,0
  3349  02C4                     l2739:
  3350  02C4  3001               	movlw	1
  3351  02C5  00B2               	movwf	??___flmul
  3352  02C6                     u3245:
  3353  02C6  1003               	clrc
  3354  02C7  0DB9               	rlf	___flmul@grs,f
  3355  02C8  0DBA               	rlf	___flmul@grs+1,f
  3356  02C9  0DBB               	rlf	___flmul@grs+2,f
  3357  02CA  0DBC               	rlf	___flmul@grs+3,f
  3358  02CB  0BB2               	decfsz	??___flmul,f
  3359  02CC  2AC6               	goto	u3245
  3360  02CD                     l2741:
  3361  02CD  30FF               	movlw	255
  3362  02CE  07C2               	addwf	___flmul@temp,f
  3363  02CF  1803               	skipnc
  3364  02D0  0AC3               	incf	___flmul@temp+1,f
  3365  02D1  30FF               	movlw	255
  3366  02D2  07C3               	addwf	___flmul@temp+1,f
  3367  02D3                     l2743:
  3368  02D3  1FC0               	btfss	___flmul@prod+2,7
  3369  02D4  2AD6               	goto	u3251
  3370  02D5  2AD7               	goto	u3250
  3371  02D6                     u3251:
  3372  02D6  2AB6               	goto	l2733
  3373  02D7                     u3250:
  3374  02D7                     l2745:
  3375  02D7  01B8               	clrf	___flmul@aexp
  3376  02D8                     l2747:
  3377  02D8  1FBC               	btfss	___flmul@grs+3,7
  3378  02D9  2ADB               	goto	u3261
  3379  02DA  2ADC               	goto	u3260
  3380  02DB                     u3261:
  3381  02DB  2AF8               	goto	l2755
  3382  02DC                     u3260:
  3383  02DC                     l2749:
  3384  02DC  30FF               	movlw	255
  3385  02DD  0539               	andwf	___flmul@grs,w
  3386  02DE  00B2               	movwf	??___flmul
  3387  02DF  30FF               	movlw	255
  3388  02E0  053A               	andwf	___flmul@grs+1,w
  3389  02E1  00B3               	movwf	??___flmul+1
  3390  02E2  30FF               	movlw	255
  3391  02E3  053B               	andwf	___flmul@grs+2,w
  3392  02E4  00B4               	movwf	??___flmul+2
  3393  02E5  307F               	movlw	127
  3394  02E6  053C               	andwf	___flmul@grs+3,w
  3395  02E7  00B5               	movwf	??___flmul+3
  3396  02E8  0835               	movf	??___flmul+3,w
  3397  02E9  0434               	iorwf	??___flmul+2,w
  3398  02EA  0433               	iorwf	??___flmul+1,w
  3399  02EB  0432               	iorwf	??___flmul,w
  3400  02EC  1903               	skipnz
  3401  02ED  2AEF               	goto	u3271
  3402  02EE  2AF0               	goto	u3270
  3403  02EF                     u3271:
  3404  02EF  2AF3               	goto	l710
  3405  02F0                     u3270:
  3406  02F0                     l2751:
  3407  02F0  01B8               	clrf	___flmul@aexp
  3408  02F1  0AB8               	incf	___flmul@aexp,f
  3409  02F2  2AF8               	goto	l2755
  3410  02F3                     l710:
  3411  02F3  1C3E               	btfss	___flmul@prod,0
  3412  02F4  2AF6               	goto	u3281
  3413  02F5  2AF7               	goto	u3280
  3414  02F6                     u3281:
  3415  02F6  2AF8               	goto	l2755
  3416  02F7                     u3280:
  3417  02F7  2AF0               	goto	l2751
  3418  02F8                     l2755:
  3419  02F8  0838               	movf	___flmul@aexp,w
  3420  02F9  1903               	btfsc	3,2
  3421  02FA  2AFC               	goto	u3291
  3422  02FB  2AFD               	goto	u3290
  3423  02FC                     u3291:
  3424  02FC  2B2E               	goto	l2765
  3425  02FD                     u3290:
  3426  02FD                     l2757:
  3427  02FD  3001               	movlw	1
  3428  02FE  07BE               	addwf	___flmul@prod,f
  3429  02FF  3000               	movlw	0
  3430  0300  1803               	skipnc
  3431  0301  3001               	movlw	1
  3432  0302  07BF               	addwf	___flmul@prod+1,f
  3433  0303  3000               	movlw	0
  3434  0304  1803               	skipnc
  3435  0305  3001               	movlw	1
  3436  0306  07C0               	addwf	___flmul@prod+2,f
  3437  0307  3000               	movlw	0
  3438  0308  1803               	skipnc
  3439  0309  3001               	movlw	1
  3440  030A  07C1               	addwf	___flmul@prod+3,f
  3441  030B                     l2759:
  3442  030B  1C41               	btfss	___flmul@prod+3,0
  3443  030C  2B0E               	goto	u3301
  3444  030D  2B0F               	goto	u3300
  3445  030E                     u3301:
  3446  030E  2B2E               	goto	l2765
  3447  030F                     u3300:
  3448  030F                     l2761:
  3449  030F  083E               	movf	___flmul@prod,w
  3450  0310  00B2               	movwf	??___flmul
  3451  0311  083F               	movf	___flmul@prod+1,w
  3452  0312  00B3               	movwf	??___flmul+1
  3453  0313  0840               	movf	___flmul@prod+2,w
  3454  0314  00B4               	movwf	??___flmul+2
  3455  0315  0841               	movf	___flmul@prod+3,w
  3456  0316  00B5               	movwf	??___flmul+3
  3457  0317  3001               	movlw	1
  3458  0318  00B6               	movwf	??___flmul+4
  3459  0319                     u3315:
  3460  0319  0D35               	rlf	??___flmul+3,w
  3461  031A  0CB5               	rrf	??___flmul+3,f
  3462  031B  0CB4               	rrf	??___flmul+2,f
  3463  031C  0CB3               	rrf	??___flmul+1,f
  3464  031D  0CB2               	rrf	??___flmul,f
  3465  031E                     u3310:
  3466  031E  0BB6               	decfsz	??___flmul+4,f
  3467  031F  2B19               	goto	u3315
  3468  0320  0835               	movf	??___flmul+3,w
  3469  0321  00C1               	movwf	___flmul@prod+3
  3470  0322  0834               	movf	??___flmul+2,w
  3471  0323  00C0               	movwf	___flmul@prod+2
  3472  0324  0833               	movf	??___flmul+1,w
  3473  0325  00BF               	movwf	___flmul@prod+1
  3474  0326  0832               	movf	??___flmul,w
  3475  0327  00BE               	movwf	___flmul@prod
  3476  0328                     l2763:
  3477  0328  3001               	movlw	1
  3478  0329  07C2               	addwf	___flmul@temp,f
  3479  032A  1803               	skipnc
  3480  032B  0AC3               	incf	___flmul@temp+1,f
  3481  032C  3000               	movlw	0
  3482  032D  07C3               	addwf	___flmul@temp+1,f
  3483  032E                     l2765:
  3484  032E  0843               	movf	___flmul@temp+1,w
  3485  032F  3A80               	xorlw	128
  3486  0330  00FF               	movwf	btemp+1
  3487  0331  3080               	movlw	128
  3488  0332  027F               	subwf	btemp+1,w
  3489  0333  1D03               	skipz
  3490  0334  2B37               	goto	u3325
  3491  0335  30FF               	movlw	255
  3492  0336  0242               	subwf	___flmul@temp,w
  3493  0337                     u3325:
  3494  0337  1C03               	skipc
  3495  0338  2B3A               	goto	u3321
  3496  0339  2B3B               	goto	u3320
  3497  033A                     u3321:
  3498  033A  2B46               	goto	l2769
  3499  033B                     u3320:
  3500  033B                     l2767:
  3501  033B  307F               	movlw	127
  3502  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3503  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3504  033E  00C1               	movwf	___flmul@prod+3
  3505  033F  3080               	movlw	128
  3506  0340  00C0               	movwf	___flmul@prod+2
  3507  0341  3000               	movlw	0
  3508  0342  00BF               	movwf	___flmul@prod+1
  3509  0343  3000               	movlw	0
  3510  0344  00BE               	movwf	___flmul@prod
  3511  0345  2B7B               	goto	l716
  3512  0346                     l2769:
  3513  0346  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0347  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0348  0843               	movf	___flmul@temp+1,w
  3516  0349  3A80               	xorlw	128
  3517  034A  00FF               	movwf	btemp+1
  3518  034B  3080               	movlw	128
  3519  034C  027F               	subwf	btemp+1,w
  3520  034D  1D03               	skipz
  3521  034E  2B51               	goto	u3335
  3522  034F  3001               	movlw	1
  3523  0350  0242               	subwf	___flmul@temp,w
  3524  0351                     u3335:
  3525  0351  1803               	skipnc
  3526  0352  2B54               	goto	u3331
  3527  0353  2B55               	goto	u3330
  3528  0354                     u3331:
  3529  0354  2B61               	goto	l2775
  3530  0355                     u3330:
  3531  0355                     l2771:
  3532  0355  3000               	movlw	0
  3533  0356  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0357  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0358  00C1               	movwf	___flmul@prod+3
  3536  0359  3000               	movlw	0
  3537  035A  00C0               	movwf	___flmul@prod+2
  3538  035B  3000               	movlw	0
  3539  035C  00BF               	movwf	___flmul@prod+1
  3540  035D  3000               	movlw	0
  3541  035E  00BE               	movwf	___flmul@prod
  3542  035F                     l2773:
  3543  035F  01B7               	clrf	___flmul@sign
  3544  0360  2B7B               	goto	l716
  3545  0361                     l2775:
  3546  0361  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0362  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0363  0842               	movf	___flmul@temp,w
  3549  0364  00B2               	movwf	??___flmul
  3550  0365  0832               	movf	??___flmul,w
  3551  0366  00BD               	movwf	___flmul@bexp
  3552  0367  30FF               	movlw	255
  3553  0368  05BE               	andwf	___flmul@prod,f
  3554  0369  30FF               	movlw	255
  3555  036A  05BF               	andwf	___flmul@prod+1,f
  3556  036B  307F               	movlw	127
  3557  036C  05C0               	andwf	___flmul@prod+2,f
  3558  036D  3000               	movlw	0
  3559  036E  05C1               	andwf	___flmul@prod+3,f
  3560  036F                     l2777:
  3561  036F  1C3D               	btfss	___flmul@bexp,0
  3562  0370  2B72               	goto	u3341
  3563  0371  2B73               	goto	u3340
  3564  0372                     u3341:
  3565  0372  2B74               	goto	l2781
  3566  0373                     u3340:
  3567  0373                     l2779:
  3568  0373  17C0               	bsf	___flmul@prod+2,7
  3569  0374                     l2781:
  3570  0374  083D               	movf	___flmul@bexp,w
  3571  0375  00B2               	movwf	??___flmul
  3572  0376  1003               	clrc
  3573  0377  0C32               	rrf	??___flmul,w
  3574  0378  00B3               	movwf	??___flmul+1
  3575  0379  0833               	movf	??___flmul+1,w
  3576  037A  00C1               	movwf	___flmul@prod+3
  3577  037B                     l716:
  3578  037B  0837               	movf	___flmul@sign,w
  3579  037C  00B2               	movwf	??___flmul
  3580  037D  0832               	movf	??___flmul,w
  3581  037E  04C1               	iorwf	___flmul@prod+3,f
  3582  037F                     l2783:
  3583  037F  0841               	movf	___flmul@prod+3,w
  3584  0380  00AD               	movwf	?___flmul+3
  3585  0381  0840               	movf	___flmul@prod+2,w
  3586  0382  00AC               	movwf	?___flmul+2
  3587  0383  083F               	movf	___flmul@prod+1,w
  3588  0384  00AB               	movwf	?___flmul+1
  3589  0385  083E               	movf	___flmul@prod,w
  3590  0386  00AA               	movwf	?___flmul
  3591  0387                     l704:
  3592  0387  0008               	return
  3593  0388                     __end_of___flmul:
  3594                           
  3595                           	psect	text7
  3596  0DAE                     __ptext7:	
  3597 ;; *************** function __Umul8_16 *****************
  3598 ;; Defined at:
  3599 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  multiplier      1    wreg     unsigned char 
  3602 ;;  multiplicand    1    3[COMMON] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3605 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3606 ;;  product         2    0[BANK0 ] unsigned int 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  2    3[COMMON] unsigned int 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         2       0       0       0       0
  3617 ;;      Locals:         0       5       0       0       0
  3618 ;;      Temps:          2       0       0       0       0
  3619 ;;      Totals:         4       5       0       0       0
  3620 ;;Total ram usage:        9 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		___flmul
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           
  3631                           ;psect for function __Umul8_16
  3632  0DAE                     __Umul8_16:
  3633                           
  3634                           ;incstack = 0
  3635                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3636                           ;__Umul8_16@multiplier stored from wreg
  3637  0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0DB0  00A4               	movwf	__Umul8_16@multiplier
  3640  0DB1                     l2339:
  3641  0DB1  01A0               	clrf	__Umul8_16@product
  3642  0DB2  01A1               	clrf	__Umul8_16@product+1
  3643  0DB3                     l2341:
  3644  0DB3  0873               	movf	__Umul8_16@multiplicand,w
  3645  0DB4  00F5               	movwf	??__Umul8_16
  3646  0DB5  01F6               	clrf	??__Umul8_16+1
  3647  0DB6  0875               	movf	??__Umul8_16,w
  3648  0DB7  00A2               	movwf	__Umul8_16@word_mpld
  3649  0DB8  0876               	movf	??__Umul8_16+1,w
  3650  0DB9  00A3               	movwf	__Umul8_16@word_mpld+1
  3651  0DBA                     l2343:
  3652  0DBA  1C24               	btfss	__Umul8_16@multiplier,0
  3653  0DBB  2DBD               	goto	u2501
  3654  0DBC  2DBE               	goto	u2500
  3655  0DBD                     u2501:
  3656  0DBD  2DC4               	goto	l723
  3657  0DBE                     u2500:
  3658  0DBE                     l2345:
  3659  0DBE  0822               	movf	__Umul8_16@word_mpld,w
  3660  0DBF  07A0               	addwf	__Umul8_16@product,f
  3661  0DC0  1803               	skipnc
  3662  0DC1  0AA1               	incf	__Umul8_16@product+1,f
  3663  0DC2  0823               	movf	__Umul8_16@word_mpld+1,w
  3664  0DC3  07A1               	addwf	__Umul8_16@product+1,f
  3665  0DC4                     l723:
  3666  0DC4  3001               	movlw	1
  3667  0DC5                     u2515:
  3668  0DC5  1003               	clrc
  3669  0DC6  0DA2               	rlf	__Umul8_16@word_mpld,f
  3670  0DC7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3671  0DC8  3EFF               	addlw	-1
  3672  0DC9  1D03               	skipz
  3673  0DCA  2DC5               	goto	u2515
  3674  0DCB  1003               	clrc
  3675  0DCC  0CA4               	rrf	__Umul8_16@multiplier,f
  3676  0DCD                     l2347:
  3677  0DCD  0824               	movf	__Umul8_16@multiplier,w
  3678  0DCE  1D03               	btfss	3,2
  3679  0DCF  2DD1               	goto	u2521
  3680  0DD0  2DD2               	goto	u2520
  3681  0DD1                     u2521:
  3682  0DD1  2DBA               	goto	l2343
  3683  0DD2                     u2520:
  3684  0DD2                     l2349:
  3685  0DD2  0821               	movf	__Umul8_16@product+1,w
  3686  0DD3  00F4               	movwf	?__Umul8_16+1
  3687  0DD4  0820               	movf	__Umul8_16@product,w
  3688  0DD5  00F3               	movwf	?__Umul8_16
  3689  0DD6                     l725:
  3690  0DD6  0008               	return
  3691  0DD7                     __end_of__Umul8_16:
  3692                           
  3693                           	psect	text8
  3694  0F48                     __ptext8:	
  3695 ;; *************** function ___awmod *****************
  3696 ;; Defined at:
  3697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  divisor         2    3[COMMON] int 
  3700 ;;  dividend        2    5[COMMON] int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  sign            1    1[BANK0 ] unsigned char 
  3703 ;;  counter         1    0[BANK0 ] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2    3[COMMON] int 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         4       0       0       0       0
  3714 ;;      Locals:         0       2       0       0       0
  3715 ;;      Temps:          1       0       0       0       0
  3716 ;;      Totals:         5       2       0       0       0
  3717 ;;Total ram usage:        7 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    1
  3720 ;; This function calls:
  3721 ;;		Nothing
  3722 ;; This function is called by:
  3723 ;;		_main
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           
  3728                           ;psect for function ___awmod
  3729  0F48                     ___awmod:
  3730  0F48                     l2573:	
  3731                           ;incstack = 0
  3732                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3733                           
  3734  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0F4A  01A1               	clrf	___awmod@sign
  3737  0F4B                     l2575:
  3738  0F4B  1FF6               	btfss	___awmod@dividend+1,7
  3739  0F4C  2F4E               	goto	u2791
  3740  0F4D  2F4F               	goto	u2790
  3741  0F4E                     u2791:
  3742  0F4E  2F56               	goto	l2581
  3743  0F4F                     u2790:
  3744  0F4F                     l2577:
  3745  0F4F  09F5               	comf	___awmod@dividend,f
  3746  0F50  09F6               	comf	___awmod@dividend+1,f
  3747  0F51  0AF5               	incf	___awmod@dividend,f
  3748  0F52  1903               	skipnz
  3749  0F53  0AF6               	incf	___awmod@dividend+1,f
  3750  0F54                     l2579:
  3751  0F54  01A1               	clrf	___awmod@sign
  3752  0F55  0AA1               	incf	___awmod@sign,f
  3753  0F56                     l2581:
  3754  0F56  1FF4               	btfss	___awmod@divisor+1,7
  3755  0F57  2F59               	goto	u2801
  3756  0F58  2F5A               	goto	u2800
  3757  0F59                     u2801:
  3758  0F59  2F5F               	goto	l2585
  3759  0F5A                     u2800:
  3760  0F5A                     l2583:
  3761  0F5A  09F3               	comf	___awmod@divisor,f
  3762  0F5B  09F4               	comf	___awmod@divisor+1,f
  3763  0F5C  0AF3               	incf	___awmod@divisor,f
  3764  0F5D  1903               	skipnz
  3765  0F5E  0AF4               	incf	___awmod@divisor+1,f
  3766  0F5F                     l2585:
  3767  0F5F  0873               	movf	___awmod@divisor,w
  3768  0F60  0474               	iorwf	___awmod@divisor+1,w
  3769  0F61  1903               	btfsc	3,2
  3770  0F62  2F64               	goto	u2811
  3771  0F63  2F65               	goto	u2810
  3772  0F64                     u2811:
  3773  0F64  2F94               	goto	l2603
  3774  0F65                     u2810:
  3775  0F65                     l2587:
  3776  0F65  01A0               	clrf	___awmod@counter
  3777  0F66  0AA0               	incf	___awmod@counter,f
  3778  0F67  2F73               	goto	l2593
  3779  0F68                     l2589:
  3780  0F68  3001               	movlw	1
  3781  0F69                     u2825:
  3782  0F69  1003               	clrc
  3783  0F6A  0DF3               	rlf	___awmod@divisor,f
  3784  0F6B  0DF4               	rlf	___awmod@divisor+1,f
  3785  0F6C  3EFF               	addlw	-1
  3786  0F6D  1D03               	skipz
  3787  0F6E  2F69               	goto	u2825
  3788  0F6F                     l2591:
  3789  0F6F  3001               	movlw	1
  3790  0F70  00F7               	movwf	??___awmod
  3791  0F71  0877               	movf	??___awmod,w
  3792  0F72  07A0               	addwf	___awmod@counter,f
  3793  0F73                     l2593:
  3794  0F73  1FF4               	btfss	___awmod@divisor+1,7
  3795  0F74  2F76               	goto	u2831
  3796  0F75  2F77               	goto	u2830
  3797  0F76                     u2831:
  3798  0F76  2F68               	goto	l2589
  3799  0F77                     u2830:
  3800  0F77                     l2595:
  3801  0F77  0874               	movf	___awmod@divisor+1,w
  3802  0F78  0276               	subwf	___awmod@dividend+1,w
  3803  0F79  1D03               	skipz
  3804  0F7A  2F7D               	goto	u2845
  3805  0F7B  0873               	movf	___awmod@divisor,w
  3806  0F7C  0275               	subwf	___awmod@dividend,w
  3807  0F7D                     u2845:
  3808  0F7D  1C03               	skipc
  3809  0F7E  2F80               	goto	u2841
  3810  0F7F  2F81               	goto	u2840
  3811  0F80                     u2841:
  3812  0F80  2F87               	goto	l2599
  3813  0F81                     u2840:
  3814  0F81                     l2597:
  3815  0F81  0873               	movf	___awmod@divisor,w
  3816  0F82  02F5               	subwf	___awmod@dividend,f
  3817  0F83  0874               	movf	___awmod@divisor+1,w
  3818  0F84  1C03               	skipc
  3819  0F85  03F6               	decf	___awmod@dividend+1,f
  3820  0F86  02F6               	subwf	___awmod@dividend+1,f
  3821  0F87                     l2599:
  3822  0F87  3001               	movlw	1
  3823  0F88                     u2855:
  3824  0F88  1003               	clrc
  3825  0F89  0CF4               	rrf	___awmod@divisor+1,f
  3826  0F8A  0CF3               	rrf	___awmod@divisor,f
  3827  0F8B  3EFF               	addlw	-1
  3828  0F8C  1D03               	skipz
  3829  0F8D  2F88               	goto	u2855
  3830  0F8E                     l2601:
  3831  0F8E  3001               	movlw	1
  3832  0F8F  02A0               	subwf	___awmod@counter,f
  3833  0F90  1D03               	btfss	3,2
  3834  0F91  2F93               	goto	u2861
  3835  0F92  2F94               	goto	u2860
  3836  0F93                     u2861:
  3837  0F93  2F77               	goto	l2595
  3838  0F94                     u2860:
  3839  0F94                     l2603:
  3840  0F94  0821               	movf	___awmod@sign,w
  3841  0F95  1903               	btfsc	3,2
  3842  0F96  2F98               	goto	u2871
  3843  0F97  2F99               	goto	u2870
  3844  0F98                     u2871:
  3845  0F98  2F9E               	goto	l2607
  3846  0F99                     u2870:
  3847  0F99                     l2605:
  3848  0F99  09F5               	comf	___awmod@dividend,f
  3849  0F9A  09F6               	comf	___awmod@dividend+1,f
  3850  0F9B  0AF5               	incf	___awmod@dividend,f
  3851  0F9C  1903               	skipnz
  3852  0F9D  0AF6               	incf	___awmod@dividend+1,f
  3853  0F9E                     l2607:
  3854  0F9E  0876               	movf	___awmod@dividend+1,w
  3855  0F9F  00F4               	movwf	?___awmod+1
  3856  0FA0  0875               	movf	___awmod@dividend,w
  3857  0FA1  00F3               	movwf	?___awmod
  3858  0FA2                     l481:
  3859  0FA2  0008               	return
  3860  0FA3                     __end_of___awmod:
  3861                           
  3862                           	psect	text9
  3863  0755                     __ptext9:	
  3864 ;; *************** function ___awdiv *****************
  3865 ;; Defined at:
  3866 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  divisor         2    2[BANK0 ] int 
  3869 ;;  dividend        2    4[BANK0 ] int 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  quotient        2    9[BANK0 ] int 
  3872 ;;  sign            1    8[BANK0 ] unsigned char 
  3873 ;;  counter         1    7[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    2[BANK0 ] int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3883 ;;      Params:         0       4       0       0       0
  3884 ;;      Locals:         0       4       0       0       0
  3885 ;;      Temps:          0       1       0       0       0
  3886 ;;      Totals:         0       9       0       0       0
  3887 ;;Total ram usage:        9 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           
  3898                           ;psect for function ___awdiv
  3899  0755                     ___awdiv:
  3900  0755                     l2529:	
  3901                           ;incstack = 0
  3902                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3903                           
  3904  0755  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0756  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0757  01A8               	clrf	___awdiv@sign
  3907  0758                     l2531:
  3908  0758  1FA3               	btfss	___awdiv@divisor+1,7
  3909  0759  2F5B               	goto	u2691
  3910  075A  2F5C               	goto	u2690
  3911  075B                     u2691:
  3912  075B  2F63               	goto	l2537
  3913  075C                     u2690:
  3914  075C                     l2533:
  3915  075C  09A2               	comf	___awdiv@divisor,f
  3916  075D  09A3               	comf	___awdiv@divisor+1,f
  3917  075E  0AA2               	incf	___awdiv@divisor,f
  3918  075F  1903               	skipnz
  3919  0760  0AA3               	incf	___awdiv@divisor+1,f
  3920  0761                     l2535:
  3921  0761  01A8               	clrf	___awdiv@sign
  3922  0762  0AA8               	incf	___awdiv@sign,f
  3923  0763                     l2537:
  3924  0763  1FA5               	btfss	___awdiv@dividend+1,7
  3925  0764  2F66               	goto	u2701
  3926  0765  2F67               	goto	u2700
  3927  0766                     u2701:
  3928  0766  2F70               	goto	l2543
  3929  0767                     u2700:
  3930  0767                     l2539:
  3931  0767  09A4               	comf	___awdiv@dividend,f
  3932  0768  09A5               	comf	___awdiv@dividend+1,f
  3933  0769  0AA4               	incf	___awdiv@dividend,f
  3934  076A  1903               	skipnz
  3935  076B  0AA5               	incf	___awdiv@dividend+1,f
  3936  076C                     l2541:
  3937  076C  3001               	movlw	1
  3938  076D  00A6               	movwf	??___awdiv
  3939  076E  0826               	movf	??___awdiv,w
  3940  076F  06A8               	xorwf	___awdiv@sign,f
  3941  0770                     l2543:
  3942  0770  01A9               	clrf	___awdiv@quotient
  3943  0771  01AA               	clrf	___awdiv@quotient+1
  3944  0772                     l2545:
  3945  0772  0822               	movf	___awdiv@divisor,w
  3946  0773  0423               	iorwf	___awdiv@divisor+1,w
  3947  0774  1903               	btfsc	3,2
  3948  0775  2F77               	goto	u2711
  3949  0776  2F78               	goto	u2710
  3950  0777                     u2711:
  3951  0777  2FAF               	goto	l2565
  3952  0778                     u2710:
  3953  0778                     l2547:
  3954  0778  01A7               	clrf	___awdiv@counter
  3955  0779  0AA7               	incf	___awdiv@counter,f
  3956  077A  2F86               	goto	l2553
  3957  077B                     l2549:
  3958  077B  3001               	movlw	1
  3959  077C                     u2725:
  3960  077C  1003               	clrc
  3961  077D  0DA2               	rlf	___awdiv@divisor,f
  3962  077E  0DA3               	rlf	___awdiv@divisor+1,f
  3963  077F  3EFF               	addlw	-1
  3964  0780  1D03               	skipz
  3965  0781  2F7C               	goto	u2725
  3966  0782                     l2551:
  3967  0782  3001               	movlw	1
  3968  0783  00A6               	movwf	??___awdiv
  3969  0784  0826               	movf	??___awdiv,w
  3970  0785  07A7               	addwf	___awdiv@counter,f
  3971  0786                     l2553:
  3972  0786  1FA3               	btfss	___awdiv@divisor+1,7
  3973  0787  2F89               	goto	u2731
  3974  0788  2F8A               	goto	u2730
  3975  0789                     u2731:
  3976  0789  2F7B               	goto	l2549
  3977  078A                     u2730:
  3978  078A                     l2555:
  3979  078A  3001               	movlw	1
  3980  078B                     u2745:
  3981  078B  1003               	clrc
  3982  078C  0DA9               	rlf	___awdiv@quotient,f
  3983  078D  0DAA               	rlf	___awdiv@quotient+1,f
  3984  078E  3EFF               	addlw	-1
  3985  078F  1D03               	skipz
  3986  0790  2F8B               	goto	u2745
  3987  0791  0823               	movf	___awdiv@divisor+1,w
  3988  0792  0225               	subwf	___awdiv@dividend+1,w
  3989  0793  1D03               	skipz
  3990  0794  2F97               	goto	u2755
  3991  0795  0822               	movf	___awdiv@divisor,w
  3992  0796  0224               	subwf	___awdiv@dividend,w
  3993  0797                     u2755:
  3994  0797  1C03               	skipc
  3995  0798  2F9A               	goto	u2751
  3996  0799  2F9B               	goto	u2750
  3997  079A                     u2751:
  3998  079A  2FA2               	goto	l2561
  3999  079B                     u2750:
  4000  079B                     l2557:
  4001  079B  0822               	movf	___awdiv@divisor,w
  4002  079C  02A4               	subwf	___awdiv@dividend,f
  4003  079D  0823               	movf	___awdiv@divisor+1,w
  4004  079E  1C03               	skipc
  4005  079F  03A5               	decf	___awdiv@dividend+1,f
  4006  07A0  02A5               	subwf	___awdiv@dividend+1,f
  4007  07A1                     l2559:
  4008  07A1  1429               	bsf	___awdiv@quotient,0
  4009  07A2                     l2561:
  4010  07A2  3001               	movlw	1
  4011  07A3                     u2765:
  4012  07A3  1003               	clrc
  4013  07A4  0CA3               	rrf	___awdiv@divisor+1,f
  4014  07A5  0CA2               	rrf	___awdiv@divisor,f
  4015  07A6  3EFF               	addlw	-1
  4016  07A7  1D03               	skipz
  4017  07A8  2FA3               	goto	u2765
  4018  07A9                     l2563:
  4019  07A9  3001               	movlw	1
  4020  07AA  02A7               	subwf	___awdiv@counter,f
  4021  07AB  1D03               	btfss	3,2
  4022  07AC  2FAE               	goto	u2771
  4023  07AD  2FAF               	goto	u2770
  4024  07AE                     u2771:
  4025  07AE  2F8A               	goto	l2555
  4026  07AF                     u2770:
  4027  07AF                     l2565:
  4028  07AF  0828               	movf	___awdiv@sign,w
  4029  07B0  1903               	btfsc	3,2
  4030  07B1  2FB3               	goto	u2781
  4031  07B2  2FB4               	goto	u2780
  4032  07B3                     u2781:
  4033  07B3  2FB9               	goto	l2569
  4034  07B4                     u2780:
  4035  07B4                     l2567:
  4036  07B4  09A9               	comf	___awdiv@quotient,f
  4037  07B5  09AA               	comf	___awdiv@quotient+1,f
  4038  07B6  0AA9               	incf	___awdiv@quotient,f
  4039  07B7  1903               	skipnz
  4040  07B8  0AAA               	incf	___awdiv@quotient+1,f
  4041  07B9                     l2569:
  4042  07B9  082A               	movf	___awdiv@quotient+1,w
  4043  07BA  00A3               	movwf	?___awdiv+1
  4044  07BB  0829               	movf	___awdiv@quotient,w
  4045  07BC  00A2               	movwf	?___awdiv
  4046  07BD                     l468:
  4047  07BD  0008               	return
  4048  07BE                     __end_of___awdiv:
  4049                           
  4050                           	psect	text10
  4051  0E77                     __ptext10:	
  4052 ;; *************** function _USART_CONFIG *****************
  4053 ;; Defined at:
  4054 ;;		line 11 in file "USART.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  frec            2    0[BANK0 ] int 
  4057 ;;  tr              2    2[BANK0 ] int 
  4058 ;;  rc              2    4[BANK0 ] int 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       6       0       0       0
  4071 ;;      Locals:         0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0
  4073 ;;      Totals:         0       6       0       0       0
  4074 ;;Total ram usage:        6 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_main
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _USART_CONFIG
  4086  0E77                     _USART_CONFIG:
  4087  0E77                     l2379:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  4090                           
  4091                           
  4092                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  4093  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0E79  1798               	bsf	24,7	;volatile
  4096                           
  4097                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  4098  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  4099  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  4100  0E7C  1218               	bcf	24,4	;volatile
  4101                           
  4102                           ;USART.c: 14:     TXSTAbits.TX9 = 0;
  4103  0E7D  1318               	bcf	24,6	;volatile
  4104                           
  4105                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  4106  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0E80  1318               	bcf	24,6	;volatile
  4109                           
  4110                           ;USART.c: 16:     switch(frec){
  4111  0E81  2E94               	goto	l2395
  4112  0E82                     l2381:
  4113                           
  4114                           ;USART.c: 18:             SPBRG = 25;
  4115  0E82  3019               	movlw	25
  4116  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  4117  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  4118  0E85  0099               	movwf	25	;volatile
  4119  0E86                     l2383:
  4120                           
  4121                           ;USART.c: 19:             TXSTAbits.BRGH = 1;
  4122  0E86  1518               	bsf	24,2	;volatile
  4123  0E87                     l2385:
  4124                           
  4125                           ;USART.c: 20:             BAUDCTLbits.BRG16 = 0;
  4126  0E87  1683               	bsf	3,5	;RP0=1, select bank3
  4127  0E88  1703               	bsf	3,6	;RP1=1, select bank3
  4128  0E89  1187               	bcf	7,3	;volatile
  4129                           
  4130                           ;USART.c: 21:             break;
  4131  0E8A  2EA1               	goto	l2397
  4132  0E8B                     l2387:
  4133                           
  4134                           ;USART.c: 23:             SPBRG = 12;
  4135  0E8B  300C               	movlw	12
  4136  0E8C  1683               	bsf	3,5	;RP0=1, select bank1
  4137  0E8D  1303               	bcf	3,6	;RP1=0, select bank1
  4138  0E8E  0099               	movwf	25	;volatile
  4139  0E8F                     l2389:
  4140                           
  4141                           ;USART.c: 24:             TXSTAbits.BRGH = 0;
  4142  0E8F  1118               	bcf	24,2	;volatile
  4143  0E90                     l2391:
  4144                           
  4145                           ;USART.c: 25:             BAUDCTLbits.BRG16 = 0;
  4146  0E90  1683               	bsf	3,5	;RP0=1, select bank3
  4147  0E91  1703               	bsf	3,6	;RP1=1, select bank3
  4148  0E92  1187               	bcf	7,3	;volatile
  4149                           
  4150                           ;USART.c: 26:             break;
  4151  0E93  2EA1               	goto	l2397
  4152  0E94                     l2395:
  4153                           
  4154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4155                           ; Switch size 1, requested type "simple"
  4156                           ; Number of cases is 1, Range of values is 0 to 0
  4157                           ; switch strategies available:
  4158                           ; Name         Instructions Cycles
  4159                           ; simple_byte            4     3 (average)
  4160                           ; direct_byte           11     8 (fixed)
  4161                           ; jumptable            260     6 (fixed)
  4162                           ;	Chosen strategy is simple_byte
  4163  0E94  0821               	movf	USART_CONFIG@frec+1,w
  4164  0E95  3A00               	xorlw	0	; case 0
  4165  0E96  1903               	skipnz
  4166  0E97  2E99               	goto	l2971
  4167  0E98  2EA1               	goto	l2397
  4168  0E99                     l2971:
  4169                           
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 2, Range of values is 4 to 8
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            7     4 (average)
  4175                           ; direct_byte           26    11 (fixed)
  4176                           ; jumptable            263     9 (fixed)
  4177                           ;	Chosen strategy is simple_byte
  4178  0E99  0820               	movf	USART_CONFIG@frec,w
  4179  0E9A  3A04               	xorlw	4	; case 4
  4180  0E9B  1903               	skipnz
  4181  0E9C  2E82               	goto	l2381
  4182  0E9D  3A0C               	xorlw	12	; case 8
  4183  0E9E  1903               	skipnz
  4184  0E9F  2E8B               	goto	l2387
  4185  0EA0  2EA1               	goto	l2397
  4186  0EA1                     l2397:
  4187                           
  4188                           ;USART.c: 28:     if(tr==1){
  4189  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0EA3  0322               	decf	USART_CONFIG@tr,w
  4192  0EA4  0423               	iorwf	USART_CONFIG@tr+1,w
  4193  0EA5  1D03               	btfss	3,2
  4194  0EA6  2EA8               	goto	u2531
  4195  0EA7  2EA9               	goto	u2530
  4196  0EA8                     u2531:
  4197  0EA8  2EAD               	goto	l159
  4198  0EA9                     u2530:
  4199  0EA9                     l2399:
  4200                           
  4201                           ;USART.c: 29:         TXEN = 1;
  4202  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  4203  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  4204  0EAB  1698               	bsf	24,5	;volatile
  4205                           
  4206                           ;USART.c: 30:     }
  4207  0EAC  2EB0               	goto	l2401
  4208  0EAD                     l159:	
  4209                           ;USART.c: 31:     else{
  4210                           
  4211                           
  4212                           ;USART.c: 32:         TXEN = 0;
  4213  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
  4214  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
  4215  0EAF  1298               	bcf	24,5	;volatile
  4216  0EB0                     l2401:
  4217                           
  4218                           ;USART.c: 34:     if(rc == 1){
  4219  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0EB2  0324               	decf	USART_CONFIG@rc,w
  4222  0EB3  0425               	iorwf	USART_CONFIG@rc+1,w
  4223  0EB4  1D03               	btfss	3,2
  4224  0EB5  2EB7               	goto	u2541
  4225  0EB6  2EB8               	goto	u2540
  4226  0EB7                     u2541:
  4227  0EB7  2EBA               	goto	l161
  4228  0EB8                     u2540:
  4229  0EB8                     l2403:
  4230                           
  4231                           ;USART.c: 35:         RCSTAbits.CREN = 1;
  4232  0EB8  1618               	bsf	24,4	;volatile
  4233                           
  4234                           ;USART.c: 36:     }
  4235  0EB9  2EBB               	goto	l163
  4236  0EBA                     l161:	
  4237                           ;USART.c: 37:     else{
  4238                           
  4239                           
  4240                           ;USART.c: 38:         RCSTAbits.CREN = 0;
  4241  0EBA  1218               	bcf	24,4	;volatile
  4242  0EBB                     l163:
  4243  0EBB  0008               	return
  4244  0EBC                     __end_of_USART_CONFIG:
  4245                           
  4246                           	psect	text11
  4247  0EBC                     __ptext11:	
  4248 ;; *************** function _Lcd_Write_String *****************
  4249 ;; Defined at:
  4250 ;;		line 72 in file "LCDh.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  a               2    5[COMMON] PTR unsigned char 
  4253 ;;		 -> buffer1(20), buffer(20), STR_11(14), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  i               2    3[BANK0 ] int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         2       0       0       0       0
  4266 ;;      Locals:         0       2       0       0       0
  4267 ;;      Temps:          0       3       0       0       0
  4268 ;;      Totals:         2       5       0       0       0
  4269 ;;Total ram usage:        7 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    2
  4272 ;; This function calls:
  4273 ;;		_Lcd_Write_Char
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _Lcd_Write_String
  4281  0EBC                     _Lcd_Write_String:
  4282  0EBC                     l2447:	
  4283                           ;incstack = 0
  4284                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4285                           
  4286                           
  4287                           ;LCDh.c: 73:     int i;;LCDh.c: 74:     for (i = 0; a[i] != '\0'; i++)
  4288  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0EBE  01A3               	clrf	Lcd_Write_String@i
  4291  0EBF  01A4               	clrf	Lcd_Write_String@i+1
  4292  0EC0  2EE5               	goto	l2453
  4293  0EC1                     l2449:
  4294                           
  4295                           ;LCDh.c: 75:         Lcd_Write_Char(a[i]);
  4296  0EC1  0823               	movf	Lcd_Write_String@i,w
  4297  0EC2  0775               	addwf	Lcd_Write_String@a,w
  4298  0EC3  00A1               	movwf	??_Lcd_Write_String+1
  4299  0EC4  0876               	movf	Lcd_Write_String@a+1,w
  4300  0EC5  00A0               	movwf	??_Lcd_Write_String
  4301  0EC6  1803               	skipnc
  4302  0EC7  0AA0               	incf	??_Lcd_Write_String,f
  4303  0EC8  1FA3               	btfss	Lcd_Write_String@i,7
  4304  0EC9  2ECB               	goto	u2570
  4305  0ECA  03A0               	decf	??_Lcd_Write_String,f
  4306  0ECB                     u2570:
  4307  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0ECD  0820               	movf	??_Lcd_Write_String,w
  4310  0ECE  00A2               	movwf	??_Lcd_Write_String+2
  4311  0ECF  0822               	movf	??_Lcd_Write_String+2,w
  4312  0ED0  00FF               	movwf	btemp+1
  4313  0ED1  0821               	movf	??_Lcd_Write_String+1,w
  4314  0ED2  0084               	movwf	4
  4315  0ED3  120A  118A  27BE  120A  158A  	fcall	stringtab
  4316  0ED8  120A  158A  254F  120A  158A  	fcall	_Lcd_Write_Char
  4317  0EDD                     l2451:
  4318  0EDD  3001               	movlw	1
  4319  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  4321  0EE0  07A3               	addwf	Lcd_Write_String@i,f
  4322  0EE1  1803               	skipnc
  4323  0EE2  0AA4               	incf	Lcd_Write_String@i+1,f
  4324  0EE3  3000               	movlw	0
  4325  0EE4  07A4               	addwf	Lcd_Write_String@i+1,f
  4326  0EE5                     l2453:
  4327  0EE5  0823               	movf	Lcd_Write_String@i,w
  4328  0EE6  0775               	addwf	Lcd_Write_String@a,w
  4329  0EE7  00A1               	movwf	??_Lcd_Write_String+1
  4330  0EE8  0876               	movf	Lcd_Write_String@a+1,w
  4331  0EE9  00A0               	movwf	??_Lcd_Write_String
  4332  0EEA  1803               	skipnc
  4333  0EEB  0AA0               	incf	??_Lcd_Write_String,f
  4334  0EEC  1FA3               	btfss	Lcd_Write_String@i,7
  4335  0EED  2EEF               	goto	u2580
  4336  0EEE  03A0               	decf	??_Lcd_Write_String,f
  4337  0EEF                     u2580:
  4338  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0EF1  0820               	movf	??_Lcd_Write_String,w
  4341  0EF2  00A2               	movwf	??_Lcd_Write_String+2
  4342  0EF3  0822               	movf	??_Lcd_Write_String+2,w
  4343  0EF4  00FF               	movwf	btemp+1
  4344  0EF5  0821               	movf	??_Lcd_Write_String+1,w
  4345  0EF6  0084               	movwf	4
  4346  0EF7  120A  118A  27BE  120A  158A  	fcall	stringtab
  4347  0EFC  3A00               	xorlw	0
  4348  0EFD  1D03               	skipz
  4349  0EFE  2F00               	goto	u2591
  4350  0EFF  2F01               	goto	u2590
  4351  0F00                     u2591:
  4352  0F00  2EC1               	goto	l2449
  4353  0F01                     u2590:
  4354  0F01                     l195:
  4355  0F01  0008               	return
  4356  0F02                     __end_of_Lcd_Write_String:
  4357                           
  4358                           	psect	text12
  4359  0D4F                     __ptext12:	
  4360 ;; *************** function _Lcd_Write_Char *****************
  4361 ;; Defined at:
  4362 ;;		line 58 in file "LCDh.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  a               1    wreg     unsigned char 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  a               1    4[COMMON] unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4376 ;;      Params:         0       0       0       0       0
  4377 ;;      Locals:         1       0       0       0       0
  4378 ;;      Temps:          1       0       0       0       0
  4379 ;;      Totals:         2       0       0       0       0
  4380 ;;Total ram usage:        2 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    1
  4383 ;; This function calls:
  4384 ;;		Nothing
  4385 ;; This function is called by:
  4386 ;;		_main
  4387 ;;		_Lcd_Write_String
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _Lcd_Write_Char
  4393  0D4F                     _Lcd_Write_Char:
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _Lcd_Write_Char: [wreg]
  4397                           ;Lcd_Write_Char@a stored from wreg
  4398  0D4F  00F4               	movwf	Lcd_Write_Char@a
  4399  0D50                     l2275:
  4400                           
  4401                           ;LCDh.c: 61:     RC4 = 1;
  4402  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0D52  1607               	bsf	7,4	;volatile
  4405  0D53                     l2277:
  4406                           
  4407                           ;LCDh.c: 62:     PORTD = a;
  4408  0D53  0874               	movf	Lcd_Write_Char@a,w
  4409  0D54  0088               	movwf	8	;volatile
  4410  0D55                     l2279:
  4411                           
  4412                           ;LCDh.c: 63:     RC5 = 1;
  4413  0D55  1687               	bsf	7,5	;volatile
  4414                           
  4415                           ;LCDh.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4416  0D56  300D               	movlw	13
  4417  0D57  00F3               	movwf	??_Lcd_Write_Char
  4418  0D58                     u3497:
  4419  0D58  0BF3               	decfsz	??_Lcd_Write_Char,f
  4420  0D59  2D58               	goto	u3497
  4421  0D5A                     l2281:
  4422                           
  4423                           ;LCDh.c: 69:     RC5 = 0;
  4424  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0D5C  1287               	bcf	7,5	;volatile
  4427  0D5D                     l189:
  4428  0D5D  0008               	return
  4429  0D5E                     __end_of_Lcd_Write_Char:
  4430                           
  4431                           	psect	text13
  4432  0D71                     __ptext13:	
  4433 ;; *************** function _Lcd_Set_Cursor *****************
  4434 ;; Defined at:
  4435 ;;		line 29 in file "LCDh.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  a               1    wreg     unsigned char 
  4438 ;;  b               1    6[COMMON] unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  a               1    7[COMMON] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, pclath, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         1       0       0       0       0
  4451 ;;      Locals:         1       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0
  4453 ;;      Totals:         2       0       0       0       0
  4454 ;;Total ram usage:        2 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		_Lcd_Cmd
  4459 ;; This function is called by:
  4460 ;;		_main
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           
  4465                           ;psect for function _Lcd_Set_Cursor
  4466  0D71                     _Lcd_Set_Cursor:
  4467                           
  4468                           ;incstack = 0
  4469                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4470                           ;Lcd_Set_Cursor@a stored from wreg
  4471  0D71  00F7               	movwf	Lcd_Set_Cursor@a
  4472  0D72                     l2439:
  4473                           
  4474                           ;LCDh.c: 30:     if (a == 1){
  4475  0D72  0377               	decf	Lcd_Set_Cursor@a,w
  4476  0D73  1D03               	btfss	3,2
  4477  0D74  2D76               	goto	u2551
  4478  0D75  2D77               	goto	u2550
  4479  0D76                     u2551:
  4480  0D76  2D80               	goto	l2443
  4481  0D77                     u2550:
  4482  0D77                     l2441:
  4483                           
  4484                           ;LCDh.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  4485  0D77  0876               	movf	Lcd_Set_Cursor@b,w
  4486  0D78  390F               	andlw	15
  4487  0D79  3880               	iorlw	128
  4488  0D7A  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4489                           
  4490                           ;LCDh.c: 32:     }
  4491  0D7F  2D8E               	goto	l183
  4492  0D80                     l2443:
  4493  0D80  3002               	movlw	2
  4494  0D81  0677               	xorwf	Lcd_Set_Cursor@a,w
  4495  0D82  1D03               	btfss	3,2
  4496  0D83  2D85               	goto	u2561
  4497  0D84  2D86               	goto	u2560
  4498  0D85                     u2561:
  4499  0D85  2D8E               	goto	l183
  4500  0D86                     u2560:
  4501  0D86                     l2445:
  4502                           
  4503                           ;LCDh.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  4504  0D86  0876               	movf	Lcd_Set_Cursor@b,w
  4505  0D87  390F               	andlw	15
  4506  0D88  38C0               	iorlw	192
  4507  0D89  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4508  0D8E                     l183:
  4509  0D8E  0008               	return
  4510  0D8F                     __end_of_Lcd_Set_Cursor:
  4511                           
  4512                           	psect	text14
  4513  0FA3                     __ptext14:	
  4514 ;; *************** function _Lcd_Init *****************
  4515 ;; Defined at:
  4516 ;;		line 39 in file "LCDh.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0
  4532 ;;      Temps:          2       0       0       0       0
  4533 ;;      Totals:         2       0       0       0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    2
  4537 ;; This function calls:
  4538 ;;		_Lcd_Cmd
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _Lcd_Init
  4546  0FA3                     _Lcd_Init:
  4547  0FA3                     l2409:	
  4548                           ;incstack = 0
  4549                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4550                           
  4551                           
  4552                           ;LCDh.c: 40:     PORTD = (0x00);
  4553  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  4554  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  4555  0FA5  0188               	clrf	8	;volatile
  4556  0FA6                     l2411:
  4557                           
  4558                           ;LCDh.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4559  0FA6  301A               	movlw	26
  4560  0FA7  00F7               	movwf	??_Lcd_Init+1
  4561  0FA8  30F8               	movlw	248
  4562  0FA9  00F6               	movwf	??_Lcd_Init
  4563  0FAA                     u3507:
  4564  0FAA  0BF6               	decfsz	??_Lcd_Init,f
  4565  0FAB  2FAA               	goto	u3507
  4566  0FAC  0BF7               	decfsz	??_Lcd_Init+1,f
  4567  0FAD  2FAA               	goto	u3507
  4568  0FAE  0000               	nop
  4569  0FAF                     l2413:
  4570                           
  4571                           ;LCDh.c: 42:     Lcd_Cmd(0x30);
  4572  0FAF  3030               	movlw	48
  4573  0FB0  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4574  0FB5                     l2415:
  4575                           
  4576                           ;LCDh.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4577  0FB5  3007               	movlw	7
  4578  0FB6  00F7               	movwf	??_Lcd_Init+1
  4579  0FB7  307D               	movlw	125
  4580  0FB8  00F6               	movwf	??_Lcd_Init
  4581  0FB9                     u3517:
  4582  0FB9  0BF6               	decfsz	??_Lcd_Init,f
  4583  0FBA  2FB9               	goto	u3517
  4584  0FBB  0BF7               	decfsz	??_Lcd_Init+1,f
  4585  0FBC  2FB9               	goto	u3517
  4586  0FBD                     l2417:
  4587                           
  4588                           ;LCDh.c: 44:     Lcd_Cmd(0x30);
  4589  0FBD  3030               	movlw	48
  4590  0FBE  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4591  0FC3                     l2419:
  4592                           
  4593                           ;LCDh.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4594  0FC3  300F               	movlw	15
  4595  0FC4  00F7               	movwf	??_Lcd_Init+1
  4596  0FC5  3047               	movlw	71
  4597  0FC6  00F6               	movwf	??_Lcd_Init
  4598  0FC7                     u3527:
  4599  0FC7  0BF6               	decfsz	??_Lcd_Init,f
  4600  0FC8  2FC7               	goto	u3527
  4601  0FC9  0BF7               	decfsz	??_Lcd_Init+1,f
  4602  0FCA  2FC7               	goto	u3527
  4603  0FCB  2FCC               	nop2
  4604  0FCC                     l2421:
  4605                           
  4606                           ;LCDh.c: 46:     Lcd_Cmd(0x30);
  4607  0FCC  3030               	movlw	48
  4608  0FCD  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4609  0FD2                     l2423:
  4610                           
  4611                           ;LCDh.c: 48:     Lcd_Cmd(0x38);
  4612  0FD2  3038               	movlw	56
  4613  0FD3  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4614  0FD8                     l2425:
  4615                           
  4616                           ;LCDh.c: 49:     Lcd_Cmd(0x10);
  4617  0FD8  3010               	movlw	16
  4618  0FD9  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4619  0FDE                     l2427:
  4620                           
  4621                           ;LCDh.c: 50:     Lcd_Cmd(0x01);
  4622  0FDE  3001               	movlw	1
  4623  0FDF  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4624  0FE4                     l2429:
  4625                           
  4626                           ;LCDh.c: 51:     Lcd_Cmd(0x06);
  4627  0FE4  3006               	movlw	6
  4628  0FE5  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4629  0FEA                     l2431:
  4630                           
  4631                           ;LCDh.c: 52:     Lcd_Cmd(0x10);
  4632  0FEA  3010               	movlw	16
  4633  0FEB  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4634  0FF0                     l2433:
  4635                           
  4636                           ;LCDh.c: 53:     Lcd_Cmd(0x0C);
  4637  0FF0  300C               	movlw	12
  4638  0FF1  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4639  0FF6                     l2435:
  4640                           
  4641                           ;LCDh.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4642  0FF6  3082               	movlw	130
  4643  0FF7  00F7               	movwf	??_Lcd_Init+1
  4644  0FF8  30DD               	movlw	221
  4645  0FF9  00F6               	movwf	??_Lcd_Init
  4646  0FFA                     u3537:
  4647  0FFA  0BF6               	decfsz	??_Lcd_Init,f
  4648  0FFB  2FFA               	goto	u3537
  4649  0FFC  0BF7               	decfsz	??_Lcd_Init+1,f
  4650  0FFD  2FFA               	goto	u3537
  4651  0FFE  2FFF               	nop2
  4652  0FFF                     l186:
  4653  0FFF  0008               	return
  4654  1000                     __end_of_Lcd_Init:
  4655                           
  4656                           	psect	text15
  4657  0D42                     __ptext15:	
  4658 ;; *************** function _Lcd_Clear *****************
  4659 ;; Defined at:
  4660 ;;		line 24 in file "LCDh.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, pclath, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    2
  4681 ;; This function calls:
  4682 ;;		_Lcd_Cmd
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           
  4689                           ;psect for function _Lcd_Clear
  4690  0D42                     _Lcd_Clear:
  4691  0D42                     l2437:	
  4692                           ;incstack = 0
  4693                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4694                           
  4695                           
  4696                           ;LCDh.c: 25:     Lcd_Cmd(0);
  4697  0D42  3000               	movlw	0
  4698  0D43  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4699                           
  4700                           ;LCDh.c: 26:     Lcd_Cmd(1);
  4701  0D48  3001               	movlw	1
  4702  0D49  120A  158A  255E  120A  158A  	fcall	_Lcd_Cmd
  4703  0D4E                     l177:
  4704  0D4E  0008               	return
  4705  0D4F                     __end_of_Lcd_Clear:
  4706                           
  4707                           	psect	text16
  4708  0D5E                     __ptext16:	
  4709 ;; *************** function _Lcd_Cmd *****************
  4710 ;; Defined at:
  4711 ;;		line 16 in file "LCDh.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  a               1    wreg     unsigned char 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  a               1    5[COMMON] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       0       0       0       0
  4726 ;;      Locals:         1       0       0       0       0
  4727 ;;      Temps:          2       0       0       0       0
  4728 ;;      Totals:         3       0       0       0       0
  4729 ;;Total ram usage:        3 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    1
  4732 ;; This function calls:
  4733 ;;		Nothing
  4734 ;; This function is called by:
  4735 ;;		_Lcd_Clear
  4736 ;;		_Lcd_Set_Cursor
  4737 ;;		_Lcd_Init
  4738 ;;		_Lcd_Shift_Right
  4739 ;;		_Lcd_Shift_Left
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function _Lcd_Cmd
  4745  0D5E                     _Lcd_Cmd:
  4746                           
  4747                           ;incstack = 0
  4748                           ; Regs used in _Lcd_Cmd: [wreg]
  4749                           ;Lcd_Cmd@a stored from wreg
  4750  0D5E  00F5               	movwf	Lcd_Cmd@a
  4751  0D5F                     l2283:
  4752                           
  4753                           ;LCDh.c: 17:     RC4 = 0;
  4754  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4755  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4756  0D61  1207               	bcf	7,4	;volatile
  4757  0D62                     l2285:
  4758                           
  4759                           ;LCDh.c: 18:     PORTD = a;
  4760  0D62  0875               	movf	Lcd_Cmd@a,w
  4761  0D63  0088               	movwf	8	;volatile
  4762  0D64                     l2287:
  4763                           
  4764                           ;LCDh.c: 19:     RC5 = 1;
  4765  0D64  1687               	bsf	7,5	;volatile
  4766                           
  4767                           ;LCDh.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4768  0D65  3007               	movlw	7
  4769  0D66  00F4               	movwf	??_Lcd_Cmd+1
  4770  0D67  307D               	movlw	125
  4771  0D68  00F3               	movwf	??_Lcd_Cmd
  4772  0D69                     u3547:
  4773  0D69  0BF3               	decfsz	??_Lcd_Cmd,f
  4774  0D6A  2D69               	goto	u3547
  4775  0D6B  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4776  0D6C  2D69               	goto	u3547
  4777  0D6D                     l2289:
  4778                           
  4779                           ;LCDh.c: 21:     RC5 = 0;
  4780  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  4781  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  4782  0D6F  1287               	bcf	7,5	;volatile
  4783  0D70                     l174:
  4784  0D70  0008               	return
  4785  0D71                     __end_of_Lcd_Cmd:
  4786                           
  4787                           	psect	text17
  4788  0D8F                     __ptext17:	
  4789 ;; *************** function _ADC_IF *****************
  4790 ;; Defined at:
  4791 ;;		line 36 in file "ADC.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;		None
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;		None
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  1    wreg      void 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         0       0       0       0       0
  4806 ;;      Locals:         0       0       0       0       0
  4807 ;;      Temps:          1       0       0       0       0
  4808 ;;      Totals:         1       0       0       0       0
  4809 ;;Total ram usage:        1 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; Hardware stack levels required when called:    1
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_main
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           
  4820                           ;psect for function _ADC_IF
  4821  0D8F                     _ADC_IF:
  4822  0D8F                     l2455:	
  4823                           ;incstack = 0
  4824                           ; Regs used in _ADC_IF: [wreg+status,2+status,0]
  4825                           
  4826                           
  4827                           ;ADC.c: 37:     if (ADCON0bits.GO == 0){
  4828  0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0D90  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0D91  189F               	btfsc	31,1	;volatile
  4831  0D92  2D94               	goto	u2601
  4832  0D93  2D95               	goto	u2600
  4833  0D94                     u2601:
  4834  0D94  2DAD               	goto	l142
  4835  0D95                     u2600:
  4836  0D95                     l2457:
  4837                           
  4838                           ;ADC.c: 38:             if(ADCON0bits.CHS == 0){
  4839  0D95  0C1F               	rrf	31,w	;volatile
  4840  0D96  00F3               	movwf	??_ADC_IF
  4841  0D97  0C73               	rrf	??_ADC_IF,w
  4842  0D98  390F               	andlw	15
  4843  0D99  3A00               	xorlw	0
  4844  0D9A  1D03               	skipz
  4845  0D9B  2D9D               	goto	u2611
  4846  0D9C  2D9E               	goto	u2610
  4847  0D9D                     u2611:
  4848  0D9D  2DA3               	goto	l2461
  4849  0D9E                     u2610:
  4850  0D9E                     l2459:
  4851                           
  4852                           ;ADC.c: 39:                 ADCON0bits.CHS = 1;
  4853  0D9E  081F               	movf	31,w	;volatile
  4854  0D9F  39C3               	andlw	-61
  4855  0DA0  3804               	iorlw	4
  4856  0DA1  009F               	movwf	31	;volatile
  4857                           
  4858                           ;ADC.c: 40:             }
  4859  0DA2  2DA5               	goto	l2463
  4860  0DA3                     l2461:
  4861                           
  4862                           ;ADC.c: 42:                 ADCON0bits.CHS = 0;
  4863  0DA3  30C3               	movlw	-61
  4864  0DA4  059F               	andwf	31,f	;volatile
  4865  0DA5                     l2463:
  4866                           
  4867                           ;ADC.c: 44:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  4868  0DA5  3010               	movlw	16
  4869  0DA6  00F3               	movwf	??_ADC_IF
  4870  0DA7                     u3557:
  4871  0DA7  0BF3               	decfsz	??_ADC_IF,f
  4872  0DA8  2DA7               	goto	u3557
  4873  0DA9  0000               	nop
  4874  0DAA                     l2465:
  4875                           
  4876                           ;ADC.c: 45:             ADCON0bits.GO = 1;
  4877  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  4878  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  4879  0DAC  149F               	bsf	31,1	;volatile
  4880  0DAD                     l142:
  4881  0DAD  0008               	return
  4882  0DAE                     __end_of_ADC_IF:
  4883                           
  4884                           	psect	text18
  4885  0DD7                     __ptext18:	
  4886 ;; *************** function _ADC_CONFIG *****************
  4887 ;; Defined at:
  4888 ;;		line 14 in file "ADC.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  frec            2    3[COMMON] int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         2       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0
  4905 ;;      Totals:         2       0       0       0       0
  4906 ;;Total ram usage:        2 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _ADC_CONFIG
  4918  0DD7                     _ADC_CONFIG:
  4919  0DD7                     l2353:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  4922                           
  4923                           
  4924                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  4925  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0DD9  141F               	bsf	31,0	;volatile
  4928  0DDA                     l2355:
  4929                           
  4930                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  4931  0DDA  30C3               	movlw	-61
  4932  0DDB  059F               	andwf	31,f	;volatile
  4933  0DDC                     l2357:
  4934                           
  4935                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  4936  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  4937  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  4938  0DDE  139F               	bcf	31,7	;volatile
  4939  0DDF                     l2359:
  4940                           
  4941                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  4942  0DDF  121F               	bcf	31,4	;volatile
  4943  0DE0                     l2361:
  4944                           
  4945                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  4946  0DE0  129F               	bcf	31,5	;volatile
  4947  0DE1                     l2363:
  4948                           
  4949                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  4950  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0DE3  109F               	bcf	31,1	;volatile
  4953                           
  4954                           ;ADC.c: 23:     switch(frec){
  4955  0DE4  2DF2               	goto	l2373
  4956  0DE5                     l2365:
  4957                           
  4958                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  4959  0DE5  303F               	movlw	-193
  4960  0DE6  059F               	andwf	31,f	;volatile
  4961                           
  4962                           ;ADC.c: 26:             break;
  4963  0DE7  2E02               	goto	l136
  4964  0DE8                     l2367:
  4965                           
  4966                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  4967  0DE8  081F               	movf	31,w	;volatile
  4968  0DE9  393F               	andlw	-193
  4969  0DEA  3840               	iorlw	64
  4970  0DEB  009F               	movwf	31	;volatile
  4971                           
  4972                           ;ADC.c: 29:             break;
  4973  0DEC  2E02               	goto	l136
  4974  0DED                     l2369:
  4975                           
  4976                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  4977  0DED  081F               	movf	31,w	;volatile
  4978  0DEE  393F               	andlw	-193
  4979  0DEF  3880               	iorlw	128
  4980  0DF0  009F               	movwf	31	;volatile
  4981                           
  4982                           ;ADC.c: 32:             break;
  4983  0DF1  2E02               	goto	l136
  4984  0DF2                     l2373:
  4985                           
  4986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4987                           ; Switch size 1, requested type "simple"
  4988                           ; Number of cases is 1, Range of values is 0 to 0
  4989                           ; switch strategies available:
  4990                           ; Name         Instructions Cycles
  4991                           ; simple_byte            4     3 (average)
  4992                           ; direct_byte           11     8 (fixed)
  4993                           ; jumptable            260     6 (fixed)
  4994                           ;	Chosen strategy is simple_byte
  4995  0DF2  0874               	movf	ADC_CONFIG@frec+1,w
  4996  0DF3  3A00               	xorlw	0	; case 0
  4997  0DF4  1903               	skipnz
  4998  0DF5  2DF7               	goto	l2973
  4999  0DF6  2E02               	goto	l136
  5000  0DF7                     l2973:
  5001                           
  5002                           ; Switch size 1, requested type "simple"
  5003                           ; Number of cases is 3, Range of values is 1 to 8
  5004                           ; switch strategies available:
  5005                           ; Name         Instructions Cycles
  5006                           ; simple_byte           10     6 (average)
  5007                           ; direct_byte           35    11 (fixed)
  5008                           ; jumptable            263     9 (fixed)
  5009                           ;	Chosen strategy is simple_byte
  5010  0DF7  0873               	movf	ADC_CONFIG@frec,w
  5011  0DF8  3A01               	xorlw	1	; case 1
  5012  0DF9  1903               	skipnz
  5013  0DFA  2DE5               	goto	l2365
  5014  0DFB  3A05               	xorlw	5	; case 4
  5015  0DFC  1903               	skipnz
  5016  0DFD  2DE8               	goto	l2367
  5017  0DFE  3A0C               	xorlw	12	; case 8
  5018  0DFF  1903               	skipnz
  5019  0E00  2DED               	goto	l2369
  5020  0E01  2E02               	goto	l136
  5021  0E02                     l136:
  5022  0E02  0008               	return
  5023  0E03                     __end_of_ADC_CONFIG:
  5024                           
  5025                           	psect	text19
  5026  0E03                     __ptext19:	
  5027 ;; *************** function _isr *****************
  5028 ;; Defined at:
  5029 ;;		line 87 in file "Lab2.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0
  5045 ;;      Temps:          3       0       0       0       0
  5046 ;;      Totals:         3       0       0       0       0
  5047 ;;Total ram usage:        3 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		Interrupt level 1
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _isr
  5058  0E03                     _isr:
  5059  0E03                     i1l2113:
  5060                           
  5061                           ;Lab2.c: 88:     if(ADIF){
  5062  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0E05  1F0C               	btfss	12,6	;volatile
  5065  0E06  2E08               	goto	u232_21
  5066  0E07  2E09               	goto	u232_20
  5067  0E08                     u232_21:
  5068  0E08  2E1C               	goto	i1l2123
  5069  0E09                     u232_20:
  5070  0E09                     i1l2115:
  5071                           
  5072                           ;Lab2.c: 89:         if (ADCON0bits.CHS == 0){
  5073  0E09  0C1F               	rrf	31,w	;volatile
  5074  0E0A  00F0               	movwf	??_isr
  5075  0E0B  0C70               	rrf	??_isr,w
  5076  0E0C  390F               	andlw	15
  5077  0E0D  3A00               	xorlw	0
  5078  0E0E  1D03               	skipz
  5079  0E0F  2E11               	goto	u233_21
  5080  0E10  2E12               	goto	u233_20
  5081  0E11                     u233_21:
  5082  0E11  2E17               	goto	i1l2119
  5083  0E12                     u233_20:
  5084  0E12                     i1l2117:
  5085                           
  5086                           ;Lab2.c: 90:             pot1 = ADRESH;
  5087  0E12  081E               	movf	30,w	;volatile
  5088  0E13  00F0               	movwf	??_isr
  5089  0E14  0870               	movf	??_isr,w
  5090  0E15  00DB               	movwf	_pot1
  5091                           
  5092                           ;Lab2.c: 91:         }
  5093  0E16  2E1B               	goto	i1l2121
  5094  0E17                     i1l2119:
  5095                           
  5096                           ;Lab2.c: 93:             pot2 = ADRESH;
  5097  0E17  081E               	movf	30,w	;volatile
  5098  0E18  00F0               	movwf	??_isr
  5099  0E19  0870               	movf	??_isr,w
  5100  0E1A  00DA               	movwf	_pot2
  5101  0E1B                     i1l2121:
  5102                           
  5103                           ;Lab2.c: 96:         ADIF = 0;
  5104  0E1B  130C               	bcf	12,6	;volatile
  5105  0E1C                     i1l2123:
  5106                           
  5107                           ;Lab2.c: 98:     if (RCIF){
  5108  0E1C  1E8C               	btfss	12,5	;volatile
  5109  0E1D  2E1F               	goto	u234_21
  5110  0E1E  2E20               	goto	u234_20
  5111  0E1F                     u234_21:
  5112  0E1F  2E34               	goto	i1l114
  5113  0E20                     u234_20:
  5114  0E20                     i1l2125:
  5115                           
  5116                           ;Lab2.c: 99:         if (RCREG == '+'){
  5117  0E20  302B               	movlw	43
  5118  0E21  061A               	xorwf	26,w	;volatile
  5119  0E22  1D03               	btfss	3,2
  5120  0E23  2E25               	goto	u235_21
  5121  0E24  2E26               	goto	u235_20
  5122  0E25                     u235_21:
  5123  0E25  2E2B               	goto	i1l2129
  5124  0E26                     u235_20:
  5125  0E26                     i1l2127:
  5126                           
  5127                           ;Lab2.c: 100:             con++;
  5128  0E26  3001               	movlw	1
  5129  0E27  00F0               	movwf	??_isr
  5130  0E28  0870               	movf	??_isr,w
  5131  0E29  07D9               	addwf	_con,f
  5132                           
  5133                           ;Lab2.c: 101:         }
  5134  0E2A  2E33               	goto	i1l2133
  5135  0E2B                     i1l2129:
  5136  0E2B  302D               	movlw	45
  5137  0E2C  061A               	xorwf	26,w	;volatile
  5138  0E2D  1D03               	btfss	3,2
  5139  0E2E  2E30               	goto	u236_21
  5140  0E2F  2E31               	goto	u236_20
  5141  0E30                     u236_21:
  5142  0E30  2E33               	goto	i1l2133
  5143  0E31                     u236_20:
  5144  0E31                     i1l2131:
  5145                           
  5146                           ;Lab2.c: 103:             con--;
  5147  0E31  3001               	movlw	1
  5148  0E32  02D9               	subwf	_con,f
  5149  0E33                     i1l2133:
  5150                           
  5151                           ;Lab2.c: 106:         RCIF = 0;
  5152  0E33  128C               	bcf	12,5	;volatile
  5153  0E34                     i1l114:
  5154  0E34  0872               	movf	??_isr+2,w
  5155  0E35  008A               	movwf	10
  5156  0E36  0E71               	swapf	??_isr+1,w
  5157  0E37  0083               	movwf	3
  5158  0E38  0EFE               	swapf	btemp,f
  5159  0E39  0E7E               	swapf	btemp,w
  5160  0E3A  0009               	retfie
  5161  0E3B                     __end_of_isr:
  5162  007E                     btemp	set	126	;btemp
  5163  007E                     wtemp0	set	126
  5164                           
  5165                           	psect	intentry
  5166  0004                     __pintentry:	
  5167                           ;incstack = 0
  5168                           ; Regs used in _isr: [wreg+status,2+status,0]
  5169                           
  5170  0004                     interrupt_function:
  5171  007E                     saved_w	set	btemp
  5172  0004  00FE               	movwf	btemp
  5173  0005  0E03               	swapf	3,w
  5174  0006  00F1               	movwf	??_isr+1
  5175  0007  080A               	movf	10,w
  5176  0008  00F2               	movwf	??_isr+2
  5177  0009  120A  158A  2E03   	ljmp	_isr
  5178                           
  5179                           	psect	config
  5180                           
  5181                           ;Config register CONFIG1 @ 0x2007
  5182                           ;	Oscillator Selection bits
  5183                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5184                           ;	Watchdog Timer Enable bit
  5185                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5186                           ;	Power-up Timer Enable bit
  5187                           ;	PWRTE = ON, PWRT enabled
  5188                           ;	RE3/MCLR pin function select bit
  5189                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5190                           ;	Code Protection bit
  5191                           ;	CP = OFF, Program memory code protection is disabled
  5192                           ;	Data Code Protection bit
  5193                           ;	CPD = OFF, Data memory code protection is disabled
  5194                           ;	Brown Out Reset Selection bits
  5195                           ;	BOREN = OFF, BOR disabled
  5196                           ;	Internal External Switchover bit
  5197                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5198                           ;	Fail-Safe Clock Monitor Enabled bit
  5199                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5200                           ;	Low Voltage Programming Enable bit
  5201                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  5202                           ;	In-Circuit Debugger Mode bit
  5203                           ;	DEBUG = 0x1, unprogrammed default
  5204  2007                     	org	8199
  5205  2007  30C4               	dw	12484
  5206                           
  5207                           ;Config register CONFIG2 @ 0x2008
  5208                           ;	Brown-out Reset Selection bit
  5209                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5210                           ;	Flash Program Memory Self Write Enable bits
  5211                           ;	WRT = OFF, Write protection off
  5212  2008                     	org	8200
  5213  2008  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     52      80
    BANK1            80      2      22
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer1(BANK1[20]), buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(BANK1[20]), buffer(BANK0[20]), STR_11(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->___awmod
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___awdiv->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    9732
                                             47 BANK0      5     5      0
                                              0 BANK1      2     2      0
                         _ADC_CONFIG
                             _ADC_IF
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                       _USART_CONFIG
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1781
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3533
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_CONFIG                                         6     0      6     363
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     431
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     425
                                              6 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      31
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      31
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           2     0      2     121
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_IF
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_CONFIG
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      71       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      2      16       7       27.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      71      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 16:05:30 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0073                          pc 0002  
             ___awdiv@sign 0028                         _rc 0078                         _tr 0079  
                       fsr 0004        __Umul8_16@word_mpld 0022                        l142 0DAD  
                      l311 061C                        l136 0E02                        l161 0EBA  
                      l163 0EBB                        l501 0754                        l174 0D70  
                      l183 0D8E                        l159 0EAD                        l511 0754  
                      l177 0D4E                        l186 0FFF                        l195 0F01  
                      l508 073F                        l189 0D5D                        l710 02F3  
                      l704 0387                        l481 0FA2                        l723 0DC4  
                      l468 07BD                        l716 037B                        l725 0DD6  
                      l750 06D8                        l761 06A2                        l762 06AE  
                      l754 0686                        l587 0F47                        l748 0641  
                      l597 0E76                        _RC4 003C                        _RC5 003D  
                      _dec 0055                        _cen 0056                        _con 0059  
                      _isr 0E03                        fsr0 0004                        _uni 0054  
                      indf 0000               ___awmod@sign 0021               ___flmul@aexp 0038  
             ___flmul@bexp 003D               ___flmul@sign 0037               ___flmul@temp 0042  
             ___flmul@prod 003E               ___fltol@exp1 004E                       l2301 0F1A  
                     l2311 0F3D                       l2303 0F1E                       l2401 0EB0  
                     l2305 0F2F                       l2313 0F43                       l2321 0E46  
                     l2411 0FA6                       l2403 0EB8                       l2307 0F35  
                     l2331 0E65                       l2323 0E4D                       l2421 0FCC  
                     l2413 0FAF                       l2341 0DB3                       l2309 0F36  
                     l2333 0E6C                       l2325 0E51                       l2317 0E3B  
                     l2501 05A2                       l2431 0FEA                       l2423 0FD2  
                     l2415 0FB5                       l2343 0DBA                       l2327 0E55  
                     l2319 0E43                       l2335 0E72                       l2511 05C2  
                     l2503 05AC                       l2361 0DE0                       l2353 0DD7  
                     l2433 0FF0                       l2425 0FD8                       l2417 0FBD  
                     l2409 0FA3                       l2441 0D77                       l2281 0D5A  
                     l2601 0F8E                       l2345 0DBE                       l2329 0E5F  
                     l2513 05F2                       l2505 05B2                       l2521 0618  
                     l2363 0DE1                       l2355 0DDA                       l2283 0D5F  
                     l2435 0FF6                       l2427 0FDE                       l2419 0FC3  
                     l2443 0D80                       l2275 0D50                       l2451 0EDD  
                     l2531 0758                       l2603 0F94                       l2347 0DCD  
                     l2339 0DB1                       l2611 06D9                       l2291 0F02  
                     l2515 05F9                       l2507 05B9                       l2365 0DE5  
                     l2373 0DF2                       l2357 0DDC                       l2461 0DA3  
                     l2285 0D62                       l2437 0D42                       l2429 0FE4  
                     l2445 0D86                       l2277 0D53                       l2453 0EE5  
                     l2381 0E82                       l2541 076C                       l2533 075C  
                     l2605 0F99                       l2349 0DD2                       l2701 0116  
                     l2621 0705                       l2613 06E6                       l2293 0F06  
                     l2517 05FD                       l2509 05BD                       l2367 0DE8  
                     l2359 0DDF                       l2463 0DA5                       l2455 0D8F  
                     l2287 0D64                       l2439 0D72                       l2279 0D55  
                     l2447 0EBC                       l2391 0E90                       l2383 0E86  
                     l2551 0782                       l2543 0770                       l2535 0761  
                     l2607 0F9E                       l2711 0184                       l2703 0132  
                     l2623 070D                       l2295 0F0C                       l2471 0541  
                     l2519 0606                       l2369 0DED                       l2465 0DAA  
                     l2457 0D95                       l2289 0D6D                       l2449 0EC1  
                     l2385 0E87                       l2561 07A2                       l2553 0786  
                     l2545 0772                       l2537 0763                       l2529 0755  
                     l2721 0214                       l2713 0194                       l2705 014E  
                     l2641 0734                       l2633 071B                       l2625 070F  
                     l2617 06EF                       l2801 0657                       l2297 0F0F  
                     l2481 056B                       l2473 0548                       l2459 0D9E  
                     l2387 0E8B                       l2395 0E94                       l2379 0E77  
                     l2563 07A9                       l2555 078A                       l2547 0778  
                     l2539 0767                       l2731 02A8                       l2723 0224  
                     l2715 01B1                       l2707 0157                       l2651 0034  
                     l2643 0744                       l2627 0713                       l2635 072D  
                     l2619 0704                       l2811 068D                       l2803 0664  
                     l2299 0F16                       l2491 0584                       l2483 0573  
                     l2475 054D                       l2467 0536                       l2389 0E8F  
                     l2397 0EA1                       l2557 079B                       l2549 077B  
                     l2565 07AF                       l2581 0F56                       l2573 0F48  
                     l2741 02CD                       l2733 02B6                       l2725 0251  
                     l2717 01CA                       l2709 0167                       l2661 004B  
                     l2653 0038                       l2645 0749                       l2821 06C6  
                     l2813 0698                       l2805 066B                       l2485 0577  
                     l2469 053B                       l2901 051F                       l2399 0EA9  
                     l2567 07B4                       l2559 07A1                       l2591 0F6F  
                     l2583 0F5A                       l2575 0F4B                       l2751 02F0  
                     l2735 02BF                       l2743 02D3                       l2727 0277  
                     l2719 01E7                       l2671 0064                       l2663 004D  
                     l2655 0039                       l2647 0027                       l2823 06CB  
                     l2815 069C                       l2807 066F                       l2487 057B  
                     l2479 054E                       l2903 0527                       l2831 0388  
                     l2569 07B9                       l2593 0F73                       l2585 0F5F  
                     l2577 0F4F                       l2761 030F                       l2745 02D7  
                     l2737 02C3                       l2729 029F                       l2681 0079  
                     l2673 0065                       l2665 0055                       l2657 003E  
                     l2649 002E                       l2825 06CF                       l2817 06A6  
                     l2809 067D                       l2497 0586                       l2489 057F  
                     l2841 0395                       l2833 038C                       l2595 0F77  
                     l2587 0F65                       l2579 0F54                       l2771 0355  
                     l2763 0328                       l2755 02F8                       l2747 02D8  
                     l2739 02C4                       l2691 0094                       l2683 0081  
                     l2675 006A                       l2667 005A                       l2659 0043  
                     l2827 06D0                       l2819 06B0                       l2851 03B7  
                     l2843 0399                       l2835 038D                       l2597 0F81  
                     l2589 0F68                       l2781 0374                       l2773 035F  
                     l2757 02FD                       l2765 032E                       l2749 02DC  
                     l2693 00A4                       l2685 0086                       l2677 006F  
                     l2669 0060                       l2861 03C4                       l2853 03B8  
                     l2845 039A                       l2837 0392                       l2599 0F87  
                     l2783 037F                       l2775 0361                       l2767 033B  
                     l2759 030B                       l2695 00B1                       l2687 008B  
                     l2679 0077                       l2791 0629                       l2871 03DE  
                     l2863 03C7                       l2855 03BB                       l2847 039B  
                     l2839 0394                       l2777 036F                       l2769 0346  
                     l2697 00CE                       l2793 0639                       l2881 0476  
                     l2873 03E3                       l2865 03C8                       l2857 03BC  
                     l2849 03A4                       l2971 0E99                       l2779 0373  
                     l2699 00EA                       l2795 0649                       l2787 0620  
                     l2891 04EF                       l2883 0489                       l2875 03E7  
                     l2867 03CD                       l2859 03BF                       l2973 0DF7  
                     l2789 0625                       l2893 04F9                       l2885 04A1  
                     l2877 0426                       l2869 03D5                       l2799 0652  
                     l2895 0502                       l2887 04C6                       l2879 0465  
                     l2969 0560                       l2897 050B                       l2889 04DC  
                     l2899 0517                       _ADIF 0066                       ?_isr 0070  
                     STR_1 07EB                       STR_2 07ED                       STR_3 07EF  
                     STR_4 07F1                       STR_5 07F3                       STR_6 07F5  
                     STR_7 07F7                       STR_8 07F9                       STR_9 07FB  
                     u3000 0043                       u3001 0042                       u3010 0064  
                     u3011 0063                       u3020 006A                       u3021 0069  
                     u3030 006F                       u3111 0176                       u3031 006E  
                     u3112 017D                       u3040 0086                       u3201 0291  
                     u3121 01A3                       u3113 0184                       u3105 0150  
                     u3041 0085                       u3202 0298                       u3122 01AA  
                     u3050 008B                       u2410 0F2F                       u3203 029F  
                     u3123 01B1                       u3051 008A                       u2411 0F2E  
                     u2500 0DBE                       u3300 030F                       u2501 0DBD  
                     u3301 030E                       u3141 01D9                       u3061 00DC  
                     u2405 0F1F                       u3310 031E                       u3230 02C3  
                     u3142 01E0                       u3062 00E3                       u2430 0F43  
                     u3231 02C2                       u3215 02A1                       u3151 0206  
                     u3143 01E7                       u3135 01B3                       u3071 00F8  
                     u3063 00EA                       u2431 0F42                       u2415 0F2B  
                     u2600 0D95                       u2520 0DD2                       u3320 033B  
                     u3152 020D                       u3072 00FF                       u2440 0E43  
                     u2601 0D94                       u2521 0DD1                       u3321 033A  
                     u3225 02B8                       u3161 0233                       u3153 0214  
                     u3081 0124                       u3073 0106                       u2425 0F37  
                     u2441 0E42                       u2610 0D9E                       u2530 0EA9  
                     u3330 0355                       u3250 02D7                       u3170 025D  
                     u3162 023A                       u3082 012B                       u3410 068C  
                     u2370 0F0C                       u2611 0D9D                       u2531 0EA8  
                     u2515 0DC5                       u3331 0354                       u3315 0319  
                     u3251 02D6                       u3163 0241                       u3091 0140  
                     u3083 0132                       u3411 068B                       u2371 0F0B  
                     u2540 0EB8                       u2700 0767                       u3340 0373  
                     u3260 02DC                       u3092 0147                       u2460 0E55  
                     u2620 0541                       u2541 0EB7                       u2701 0766  
                     u3341 0372                       u3325 0337                       u3261 02DB  
                     u3245 02C6                       u3181 0269                       u3093 014E  
                     u3405 067E                       u2461 0E54                       u2621 0540  
                     u2550 0D77                       u2710 0778                       u3270 02F0  
                     u3190 0285                       u3182 0270                       u3430 069C  
                     u3350 0625                       u2390 0F1E                       u2470 0E5F  
                     u2630 057B                       u2551 0D76                       u2711 0777  
                     u3335 0351                       u3271 02EF                       u3183 0277  
                     u3175 0258                       u3431 069B                       u3351 0624  
                     u2391 0F1D                       u2471 0E5E                       u2455 0E47  
                     u2631 057A                       u2560 0D86                       u2800 0F5A  
                     u3280 02F7                       u3440 06A2                       u3360 0629  
                     u2640 05A1                       u2561 0D85                       u2801 0F59  
                     u3281 02F6                       u3441 06A1                       u3425 0691  
                     u3361 0628                       u2385 0F10                       u2641 05A0  
                     u2570 0ECB                       u2730 078A                       u2810 0F65  
                     u3290 02FD                       u3450 06A6                       u3370 0649  
                     u2490 0E72                       u2650 05AC                       u3507 0FAA  
                     u2731 0789                       u2811 0F64                       u3291 02FC  
                     u3195 0280                       u3451 06A5                       u3371 0648  
                     u2491 0E71                       u2475 0E5B                       u2651 05AB  
                     u2580 0EEF                       u2900 0713                       u3460 06BB  
                     u2660 05B2                       u3517 0FB9                       u2725 077C  
                     u2901 0712                       u2485 0E66                       u2661 05B1  
                     u2645 059D                       u2590 0F01                       u2750 079B  
                     u2830 0F77                       u2910 071A                       u3470 06CB  
                     u3390 066A                       u2670 0606                       u3527 0FC7  
                     u2591 0F00                       u2751 079A                       u2831 0F76  
                     u2911 0719                       u3471 06CA                       u3391 0669  
                     u2671 0605                       u2840 0F81                       u3480 06CF  
                     u2680 0618                       u3537 0FFA                       u2745 078B  
                     u2841 0F80                       u2825 0F69                       u3481 06CE  
                     u3465 06B6                       u3385 065C                       u2681 0617  
                     u2770 07AF                       u2690 075C                       u2930 072C  
                     u3547 0D69                       u2771 07AE                       u2755 0797  
                     u2691 075B                       u2931 072B                       u2780 07B4  
                     u2860 0F94                       u2940 0733                       u3557 0DA7  
                     u2781 07B3                       u2765 07A3                       u2861 0F93  
                     u2845 0F7D                       u2941 0732                       u2925 071C  
                     u2870 0F99                       u2790 0F4F                       u2871 0F98  
                     u2855 0F88                       u2791 0F4E                       u2960 0744  
                     u2880 06E6                       u3497 0D58                       u2961 0743  
                     u2881 06E5                       u2970 0749                       u2890 06FD  
                     u2971 0748                       u2955 0736                       u2980 0038  
                     _RCIF 0065                       u2981 0037                       u2990 003E  
                     u2991 003D                       u2895 06F8                       _TXEN 04C5  
        ?_Lcd_Write_String 0075                       _frec 007A                       _main 0388  
                     _pot1 005B                       _pot2 005A                       _vol1 0058  
                     _vol2 0057                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0D71                      ??_isr 0070  
            ___fltol@sign1 004D                      ?_main 0070            __end_of___awdiv 07BE  
                    STR_10 07FD                      STR_11 07D8                      STR_12 07E6  
                    STR_13 07E6            __end_of___awmod 0FA3            __end_of___flmul 0388  
          __end_of___fltol 0755                      _ANSEL 0188            ___awdiv@divisor 0022  
          __end_of___lwdiv 0F48                      i1l114 0E34            __end_of___lwmod 0E77  
          ___awdiv@counter 0027                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019           USART_CONFIG@frec 0020  
          __end_of_dpowers 07D8                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 061D           __end_of_Lcd_Init 1000  
          __initialization 000F               __end_of_main 0533                     ??_main 004F  
       __size_of_Lcd_Clear 000D               ??_ADC_CONFIG 0075                     _ADC_IF 0D8F  
                   _ADRESH 001E           ___awdiv@dividend 0024                     _ANSELH 0189  
                   i1l2121 0E1B                     i1l2113 0E03                     i1l2131 0E31  
                   i1l2115 0E09                     i1l2123 0E1C                     i1l2133 0E33  
                   i1l2125 0E20                     i1l2117 0E12                     i1l2127 0E26  
                   i1l2119 0E17                     i1l2129 0E2B                     u232_20 0E09  
                   u232_21 0E08                     u233_20 0E12                     u233_21 0E11  
                   u234_20 0E20                     u234_21 0E1F                     u235_20 0E26  
                   u235_21 0E25                     u236_20 0E31                     u236_21 0E30  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 000F           __end_of___xxtofl 06D9  
       __end_of_ADC_CONFIG 0E03                  ??___awdiv 0026                  ??___awmod 0077  
                ??___flmul 0032                  ??___fltol 0048                  ??___lwdiv 0077  
                ??___lwmod 0027                     _buffer 005C           ___awdiv@quotient 0029  
          ___awmod@divisor 0073            ___awmod@counter 0020         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 002C            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0076               ___xxtofl@arg 0026               ___xxtofl@exp 0025  
             ___xxtofl@val 0073    __end_of__initialization 0023          __end_of_Lcd_Clear 0D4F  
               ___fltol@f1 0044             __pcstackCOMMON 0070             USART_CONFIG@rc 0024  
           USART_CONFIG@tr 0022             _Lcd_Set_Cursor 0D71                  ?_Lcd_Init 0070  
                  ?_ADC_IF 0070                 __pbssBANK0 0054                 __pbssBANK1 00A0  
        __end_of__Umul8_16 0DD7                 __pmaintext 0388                 __pintentry 0004  
__size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0D8F                  ?___xxtofl 0073  
               ??_Lcd_Init 0076            __size_of_ADC_IF 001F                 __stringtab 07BE  
           _Lcd_Write_Char 0D4F                    _Lcd_Cmd 0D5E                    ___awdiv 0755  
                  ___awmod 0F48                    ___flmul 0027                    ___fltol 06D9  
                  ___lwdiv 0F02                    ___lwmod 0E3B            ?_Lcd_Set_Cursor 0076  
                  __ptext1 0533                    __ptext2 0E3B                    __ptext3 0F02  
                  __ptext4 061D                    __ptext5 06D9                    __ptext6 0027  
                  __ptext7 0DAE                    __ptext8 0F48                    __ptext9 0755  
                  _buffer1 00A0                    _dpowers 07CE               __size_of_isr 0038  
               ??___xxtofl 0020           ___awmod@dividend 0075                    _sprintf 0533  
                  clrloop0 0D3B     __end_of_Lcd_Write_Char 0D5E       end_of_initialization 0023  
                _RCSTAbits 0018              ___xxtofl@sign 0024              ?_USART_CONFIG 0020  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 0023  
           __end_of_ADC_IF 0DAE                ___flmul@grs 0039                  _TXSTAbits 0098  
                _Lcd_Clear 0D42           _Lcd_Write_String 0EBC                _BAUDCTLbits 0187  
           ??_USART_CONFIG 0073        start_initialization 000F                __end_of_isr 0E3B  
                 ??_ADC_IF 0073          __size_of_Lcd_Init 005D                 ?_Lcd_Clear 0070  
                __Umul8_16 0DAE            Lcd_Write_Char@a 0074                  ___flmul@a 002E  
                ___flmul@b 002A                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00B4          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 0030                sprintf@prec 0031  
                _main$1125 00B4           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0022                   ?___awmod 0073                   ?___flmul 002A  
                 ?___fltol 0044                 ?__Umul8_16 0073                   ?___lwdiv 0073  
                 ?___lwmod 0023                  __pstrings 07BE           ___lwdiv@quotient 0021  
                 ?_sprintf 0029          interrupt_function 0004                  clear_ram0 0D3A  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075       __end_of_USART_CONFIG 0EBC  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 07CD  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0073                 _ADC_CONFIG 0DD7  
                 _Lcd_Init 0FA3   __end_of_Lcd_Write_String 0F02           __size_of_Lcd_Cmd 0013  
              ??__Umul8_16 0075           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___flmul 0361           __size_of___fltol 007C           __size_of___lwdiv 0046  
         __size_of___lwmod 003C         __end_of__stringtab 07CE                 sprintf@val 0032  
                 ___xxtofl 061D            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 0E77                   __ptext11 0EBC                   __ptext12 0D4F  
                 __ptext13 0D71                   __ptext14 0FA3                   __ptext15 0D42  
                 __ptext16 0D5E                   __ptext17 0D8F                   __ptext18 0DD7  
                 __ptext19 0E03           __size_of_sprintf 00EA              __size_of_main 01AB  
               _INTCONbits 000B                ?_ADC_CONFIG 0073                   intlevel1 0000  
                sprintf@ap 002F                  sprintf@sp 0034      __size_of_USART_CONFIG 0045  
         ___lwmod@dividend 0025                  stringcode 07C8                 _OSCCONbits 008F  
   __Umul8_16@multiplicand 0073                   sprintf@c 0035                   sprintf@f 0029  
          ___lwmod@divisor 0023            ___lwmod@counter 0028                   stringdir 07C8  
                 stringtab 07BE               _USART_CONFIG 0E77       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
