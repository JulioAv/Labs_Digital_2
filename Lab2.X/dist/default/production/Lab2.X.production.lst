

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 11:24:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461                           
   462                           	psect	strings
   463  070D                     __pstrings:
   464  070D                     stringtab:
   465  070D                     __stringtab:
   466                           
   467                           ;	String table - string pointers are 1 byte each
   468  070D  1BFF               	btfsc	btemp+1,7
   469  070E  2F17               	ljmp	stringcode
   470  070F  1383               	bcf	3,7
   471  0710  187F               	btfsc	btemp+1,0
   472  0711  1783               	bsf	3,7
   473  0712  0800               	movf	0,w
   474  0713  0A84               	incf	4,f
   475  0714  1903               	skipnz
   476  0715  0AFF               	incf	btemp+1,f
   477  0716  0008               	return
   478  0717                     stringcode:
   479  0717                     stringdir:
   480  0717  3007               	movlw	high stringdir
   481  0718  008A               	movwf	10
   482  0719  0804               	movf	4,w
   483  071A  0A84               	incf	4,f
   484  071B  0782               	addwf	2,f
   485  071C                     __stringbase:
   486  071C  3400               	retlw	0
   487  071D                     __end_of__stringtab:
   488  071D                     _dpowers:
   489  071D  3401               	retlw	1
   490  071E  3400               	retlw	0
   491  071F  340A               	retlw	10
   492  0720  3400               	retlw	0
   493  0721  3464               	retlw	100
   494  0722  3400               	retlw	0
   495  0723  34E8               	retlw	232
   496  0724  3403               	retlw	3
   497  0725  3410               	retlw	16
   498  0726  3427               	retlw	39
   499  0727                     __end_of_dpowers:
   500  0008                     _PORTD	set	8
   501  0018                     _RCSTAbits	set	24
   502  0006                     _PORTB	set	6
   503  000B                     _INTCONbits	set	11
   504  001A                     _RCREG	set	26
   505  001E                     _ADRESH	set	30
   506  001F                     _ADCON0bits	set	31
   507  0019                     _TXREG	set	25
   508  003D                     _RC5	set	61
   509  003C                     _RC4	set	60
   510  0065                     _RCIF	set	101
   511  0066                     _ADIF	set	102
   512  0099                     _SPBRG	set	153
   513  009F                     _ADCON1bits	set	159
   514  008C                     _PIE1bits	set	140
   515  008F                     _OSCCONbits	set	143
   516  0088                     _TRISD	set	136
   517  0087                     _TRISC	set	135
   518  0086                     _TRISB	set	134
   519  0085                     _TRISA	set	133
   520  0098                     _TXSTAbits	set	152
   521  04C5                     _TXEN	set	1221
   522  0187                     _BAUDCTLbits	set	391
   523  0189                     _ANSELH	set	393
   524  0188                     _ANSEL	set	392
   525  0727                     STR_2:
   526  0727  3450               	retlw	80	;'P'
   527  0728  3472               	retlw	114	;'r'
   528  0729  3465               	retlw	101	;'e'
   529  072A  3473               	retlw	115	;'s'
   530  072B  3469               	retlw	105	;'i'
   531  072C  346F               	retlw	111	;'o'
   532  072D  346E               	retlw	110	;'n'
   533  072E  3465               	retlw	101	;'e'
   534  072F  3420               	retlw	32	;' '
   535  0730  342A               	retlw	42	;'*'
   536  0731  3420               	retlw	32	;' '
   537  0732  3470               	retlw	112	;'p'
   538  0733  3461               	retlw	97	;'a'
   539  0734  3472               	retlw	114	;'r'
   540  0735  3461               	retlw	97	;'a'
   541  0736  3420               	retlw	32	;' '
   542  0737  346D               	retlw	109	;'m'
   543  0738  346F               	retlw	111	;'o'
   544  0739  3473               	retlw	115	;'s'
   545  073A  3474               	retlw	116	;'t'
   546  073B  3472               	retlw	114	;'r'
   547  073C  3461               	retlw	97	;'a'
   548  073D  3472               	retlw	114	;'r'
   549  073E  3420               	retlw	32	;' '
   550  073F  346C               	retlw	108	;'l'
   551  0740  346F               	retlw	111	;'o'
   552  0741  3473               	retlw	115	;'s'
   553  0742  3420               	retlw	32	;' '
   554  0743  3470               	retlw	112	;'p'
   555  0744  346F               	retlw	111	;'o'
   556  0745  3474               	retlw	116	;'t'
   557  0746  3420               	retlw	32	;' '
   558  0747  3400               	retlw	0
   559  0748                     STR_3:
   560  0748  344F               	retlw	79	;'O'
   561  0749  3420               	retlw	32	;' '
   562  074A  3470               	retlw	112	;'p'
   563  074B  3472               	retlw	114	;'r'
   564  074C  3465               	retlw	101	;'e'
   565  074D  3473               	retlw	115	;'s'
   566  074E  3469               	retlw	105	;'i'
   567  074F  346F               	retlw	111	;'o'
   568  0750  346E               	retlw	110	;'n'
   569  0751  3465               	retlw	101	;'e'
   570  0752  3420               	retlw	32	;' '
   571  0753  342B               	retlw	43	;'+'
   572  0754  3420               	retlw	32	;' '
   573  0755  342D               	retlw	45	;'-'
   574  0756  3420               	retlw	32	;' '
   575  0757  3470               	retlw	112	;'p'
   576  0758  3461               	retlw	97	;'a'
   577  0759  3472               	retlw	114	;'r'
   578  075A  3461               	retlw	97	;'a'
   579  075B  3420               	retlw	32	;' '
   580  075C  3465               	retlw	101	;'e'
   581  075D  346C               	retlw	108	;'l'
   582  075E  3420               	retlw	32	;' '
   583  075F  3463               	retlw	99	;'c'
   584  0760  346F               	retlw	111	;'o'
   585  0761  346E               	retlw	110	;'n'
   586  0762  3474               	retlw	116	;'t'
   587  0763  3461               	retlw	97	;'a'
   588  0764  3464               	retlw	100	;'d'
   589  0765  346F               	retlw	111	;'o'
   590  0766  3472               	retlw	114	;'r'
   591  0767  3400               	retlw	0
   592  0768                     STR_1:
   593  0768  3453               	retlw	83	;'S'
   594  0769  3431               	retlw	49	;'1'
   595  076A  343A               	retlw	58	;':'
   596  076B  3420               	retlw	32	;' '
   597  076C  3420               	retlw	32	;' '
   598  076D  3453               	retlw	83	;'S'
   599  076E  3432               	retlw	50	;'2'
   600  076F  343A               	retlw	58	;':'
   601  0770  3420               	retlw	32	;' '
   602  0771  3420               	retlw	32	;' '
   603  0772  3453               	retlw	83	;'S'
   604  0773  3433               	retlw	51	;'3'
   605  0774  343A               	retlw	58	;':'
   606  0775  3400               	retlw	0
   607  0776                     STR_13:
   608  0776  3420               	retlw	32	;' '
   609  0777  3450               	retlw	80	;'P'
   610  0778  346F               	retlw	111	;'o'
   611  0779  3474               	retlw	116	;'t'
   612  077A  3420               	retlw	32	;' '
   613  077B  3432               	retlw	50	;'2'
   614  077C  343A               	retlw	58	;':'
   615  077D  3420               	retlw	32	;' '
   616  077E  3400               	retlw	0
   617  077F                     STR_11:
   618  077F  3450               	retlw	80	;'P'
   619  0780  346F               	retlw	111	;'o'
   620  0781  3474               	retlw	116	;'t'
   621  0782  3420               	retlw	32	;' '
   622  0783  3431               	retlw	49	;'1'
   623  0784  343A               	retlw	58	;':'
   624  0785  3420               	retlw	32	;' '
   625  0786  3400               	retlw	0
   626  0787                     STR_4:
   627  0787  3425               	retlw	37	;'%'
   628  0788  3464               	retlw	100	;'d'
   629  0789  3456               	retlw	86	;'V'
   630  078A  3420               	retlw	32	;' '
   631  078B  3420               	retlw	32	;' '
   632  078C  3400               	retlw	0
   633  078D                     STR_5:
   634  078D  3420               	retlw	32	;' '
   635  078E  3425               	retlw	37	;'%'
   636  078F  3464               	retlw	100	;'d'
   637  0790  3456               	retlw	86	;'V'
   638  0791  3420               	retlw	32	;' '
   639  0792  3400               	retlw	0
   640  0793                     STR_6:
   641  0793  3420               	retlw	32	;' '
   642  0794  3420               	retlw	32	;' '
   643  0795  3425               	retlw	37	;'%'
   644  0796  3464               	retlw	100	;'d'
   645  0797  3400               	retlw	0
   646  0798                     STR_9:
   647  0798  340D               	retlw	13
   648  0799  3420               	retlw	32	;' '
   649  079A  3400               	retlw	0
   650  079B  3400               	retlw	0
   651  0798                     
   652                           	psect	cinit
   653  000F                     start_initialization:	
   654                           ; #config settings
   655                           
   656  000F                     __initialization:
   657                           
   658                           ; Clear objects allocated to COMMON
   659  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   660  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   661  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   662                           
   663                           ; Clear objects allocated to BANK0
   664  0012  1383               	bcf	3,7	;select IRP bank0
   665  0013  3053               	movlw	low __pbssBANK0
   666  0014  0084               	movwf	4
   667  0015  3064               	movlw	low (__pbssBANK0+17)
   668  0016  120A  158A  2417  120A  118A  	fcall	clear_ram0
   669  001B                     end_of_initialization:	
   670                           ;End of C runtime variable initialization code
   671                           
   672  001B                     __end_of__initialization:
   673  001B  0183               	clrf	3
   674  001C  120A  118A  2B80   	ljmp	_main	;jump to C main() function
   675                           
   676                           	psect	bssCOMMON
   677  0078                     __pbssCOMMON:
   678  0078                     _rc:
   679  0078                     	ds	1
   680  0079                     _tr:
   681  0079                     	ds	1
   682  007A                     _frec:
   683  007A                     	ds	1
   684                           
   685                           	psect	bssBANK0
   686  0053                     __pbssBANK0:
   687  0053                     _x:
   688  0053                     	ds	2
   689  0055                     _vol2:
   690  0055                     	ds	2
   691  0057                     _vol1:
   692  0057                     	ds	2
   693  0059                     _uni:
   694  0059                     	ds	1
   695  005A                     _dec:
   696  005A                     	ds	1
   697  005B                     _cen:
   698  005B                     	ds	1
   699  005C                     _con:
   700  005C                     	ds	1
   701  005D                     _pot2:
   702  005D                     	ds	1
   703  005E                     _pot1:
   704  005E                     	ds	1
   705  005F                     _buffer:
   706  005F                     	ds	5
   707                           
   708                           	psect	clrtext
   709  0C17                     clear_ram0:	
   710                           ;	Called with FSR containing the base address, and
   711                           ;	W with the last address+1
   712                           
   713  0C17  0064               	clrwdt	;clear the watchdog before getting into this loop
   714  0C18                     clrloop0:
   715  0C18  0180               	clrf	0	;clear RAM location pointed to by FSR
   716  0C19  0A84               	incf	4,f	;increment pointer
   717  0C1A  0604               	xorwf	4,w	;XOR with final address
   718  0C1B  1903               	btfsc	3,2	;have we reached the end yet?
   719  0C1C  3400               	retlw	0	;all done for this memory range, return
   720  0C1D  0604               	xorwf	4,w	;XOR again to restore value
   721  0C1E  2C18               	goto	clrloop0	;do the next byte
   722                           
   723                           	psect	cstackCOMMON
   724  0070                     __pcstackCOMMON:
   725  0070                     ?_Lcd_Init:
   726  0070                     ?_Lcd_Clear:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_ADC_IF:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_Division:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_isr:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??_isr:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_main:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_Lcd_Cmd:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_Lcd_Write_Char:	
   748                           ; 1 bytes @ 0x0
   749                           
   750                           
   751                           ; 1 bytes @ 0x0
   752  0070                     	ds	3
   753  0073                     ?_ADC_CONFIG:
   754  0073                     ??_USART_CONFIG:	
   755                           ; 1 bytes @ 0x3
   756                           
   757  0073                     ??_ADC_IF:	
   758                           ; 1 bytes @ 0x3
   759                           
   760  0073                     ?_UART_write:	
   761                           ; 1 bytes @ 0x3
   762                           
   763  0073                     ??_Lcd_Cmd:	
   764                           ; 1 bytes @ 0x3
   765                           
   766  0073                     ??_Lcd_Write_Char:	
   767                           ; 1 bytes @ 0x3
   768                           
   769  0073                     ?__Umul8_16:	
   770                           ; 1 bytes @ 0x3
   771                           
   772  0073                     ?___awmod:	
   773                           ; 2 bytes @ 0x3
   774                           
   775  0073                     ?___lwdiv:	
   776                           ; 2 bytes @ 0x3
   777                           
   778  0073                     ?___xxtofl:	
   779                           ; 2 bytes @ 0x3
   780                           
   781  0073                     __Umul8_16@multiplicand:	
   782                           ; 4 bytes @ 0x3
   783                           
   784  0073                     UART_write@word:	
   785                           ; 1 bytes @ 0x3
   786                           
   787  0073                     ADC_CONFIG@frec:	
   788                           ; 2 bytes @ 0x3
   789                           
   790  0073                     ___awmod@divisor:	
   791                           ; 2 bytes @ 0x3
   792                           
   793  0073                     ___lwdiv@divisor:	
   794                           ; 2 bytes @ 0x3
   795                           
   796  0073                     ___xxtofl@val:	
   797                           ; 2 bytes @ 0x3
   798                           
   799                           
   800                           ; 4 bytes @ 0x3
   801  0073                     	ds	1
   802  0074                     Lcd_Write_Char@a:
   803                           
   804                           ; 1 bytes @ 0x4
   805  0074                     	ds	1
   806  0075                     ??_ADC_CONFIG:
   807  0075                     ?_Lcd_Write_String:	
   808                           ; 1 bytes @ 0x5
   809                           
   810  0075                     ??__Umul8_16:	
   811                           ; 1 bytes @ 0x5
   812                           
   813  0075                     ??_UART_write:	
   814                           ; 1 bytes @ 0x5
   815                           
   816  0075                     Lcd_Cmd@a:	
   817                           ; 1 bytes @ 0x5
   818                           
   819  0075                     Lcd_Write_String@a:	
   820                           ; 1 bytes @ 0x5
   821                           
   822  0075                     ___awmod@dividend:	
   823                           ; 2 bytes @ 0x5
   824                           
   825  0075                     ___lwdiv@dividend:	
   826                           ; 2 bytes @ 0x5
   827                           
   828                           
   829                           ; 2 bytes @ 0x5
   830  0075                     	ds	1
   831  0076                     ??_Lcd_Init:
   832  0076                     ??_Lcd_Clear:	
   833                           ; 1 bytes @ 0x6
   834                           
   835  0076                     ?_Lcd_Set_Cursor:	
   836                           ; 1 bytes @ 0x6
   837                           
   838  0076                     Lcd_Set_Cursor@b:	
   839                           ; 1 bytes @ 0x6
   840                           
   841                           
   842                           ; 1 bytes @ 0x6
   843  0076                     	ds	1
   844  0077                     ??_Lcd_Set_Cursor:
   845  0077                     ??___awmod:	
   846                           ; 1 bytes @ 0x7
   847                           
   848  0077                     ??___lwdiv:	
   849                           ; 1 bytes @ 0x7
   850                           
   851  0077                     Lcd_Set_Cursor@a:	
   852                           ; 1 bytes @ 0x7
   853                           
   854                           
   855                           ; 1 bytes @ 0x7
   856  0077                     	ds	1
   857                           
   858                           	psect	cstackBANK0
   859  0020                     __pcstackBANK0:
   860  0020                     ?_USART_CONFIG:
   861  0020                     ??_Lcd_Write_String:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     ??___xxtofl:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0020                     ___awmod@counter:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     ___lwdiv@counter:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     USART_CONFIG@frec:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     __Umul8_16@product:	
   877                           ; 2 bytes @ 0x0
   878                           
   879                           
   880                           ; 2 bytes @ 0x0
   881  0020                     	ds	1
   882  0021                     ___awmod@sign:
   883  0021                     ___lwdiv@quotient:	
   884                           ; 1 bytes @ 0x1
   885                           
   886                           
   887                           ; 2 bytes @ 0x1
   888  0021                     	ds	1
   889  0022                     ?___awdiv:
   890  0022                     USART_CONFIG@tr:	
   891                           ; 2 bytes @ 0x2
   892                           
   893  0022                     ___awdiv@divisor:	
   894                           ; 2 bytes @ 0x2
   895                           
   896  0022                     __Umul8_16@word_mpld:	
   897                           ; 2 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  0022                     	ds	1
   902  0023                     ?___lwmod:
   903  0023                     Lcd_Write_String@i:	
   904                           ; 2 bytes @ 0x3
   905                           
   906  0023                     ___lwmod@divisor:	
   907                           ; 2 bytes @ 0x3
   908                           
   909                           
   910                           ; 2 bytes @ 0x3
   911  0023                     	ds	1
   912  0024                     __Umul8_16@multiplier:
   913  0024                     ___xxtofl@sign:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0024                     USART_CONFIG@rc:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0024                     ___awdiv@dividend:	
   920                           ; 2 bytes @ 0x4
   921                           
   922                           
   923                           ; 2 bytes @ 0x4
   924  0024                     	ds	1
   925  0025                     ___xxtofl@exp:
   926  0025                     ___lwmod@dividend:	
   927                           ; 1 bytes @ 0x5
   928                           
   929                           
   930                           ; 2 bytes @ 0x5
   931  0025                     	ds	1
   932  0026                     ??___awdiv:
   933  0026                     ___xxtofl@arg:	
   934                           ; 1 bytes @ 0x6
   935                           
   936                           
   937                           ; 4 bytes @ 0x6
   938  0026                     	ds	1
   939  0027                     ??___lwmod:
   940  0027                     ___awdiv@counter:	
   941                           ; 1 bytes @ 0x7
   942                           
   943                           
   944                           ; 1 bytes @ 0x7
   945  0027                     	ds	1
   946  0028                     ___awdiv@sign:
   947  0028                     ___lwmod@counter:	
   948                           ; 1 bytes @ 0x8
   949                           
   950                           
   951                           ; 1 bytes @ 0x8
   952  0028                     	ds	1
   953  0029                     ?_sprintf:
   954  0029                     sprintf@f:	
   955                           ; 2 bytes @ 0x9
   956                           
   957  0029                     ___awdiv@quotient:	
   958                           ; 1 bytes @ 0x9
   959                           
   960                           
   961                           ; 2 bytes @ 0x9
   962  0029                     	ds	1
   963  002A                     ?___flmul:
   964  002A                     ___flmul@b:	
   965                           ; 4 bytes @ 0xA
   966                           
   967                           
   968                           ; 4 bytes @ 0xA
   969  002A                     	ds	1
   970  002B                     ??_Division:
   971                           
   972                           ; 1 bytes @ 0xB
   973  002B                     	ds	1
   974  002C                     ??_sprintf:
   975                           
   976                           ; 1 bytes @ 0xC
   977  002C                     	ds	2
   978  002E                     _Division$1123:
   979  002E                     ___flmul@a:	
   980                           ; 2 bytes @ 0xE
   981                           
   982                           
   983                           ; 4 bytes @ 0xE
   984  002E                     	ds	1
   985  002F                     sprintf@ap:
   986                           
   987                           ; 1 bytes @ 0xF
   988  002F                     	ds	1
   989  0030                     Division@y:
   990  0030                     sprintf@flag:	
   991                           ; 1 bytes @ 0x10
   992                           
   993                           
   994                           ; 1 bytes @ 0x10
   995  0030                     	ds	1
   996  0031                     sprintf@prec:
   997                           
   998                           ; 1 bytes @ 0x11
   999  0031                     	ds	1
  1000  0032                     ??___flmul:
  1001  0032                     sprintf@val:	
  1002                           ; 1 bytes @ 0x12
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x12
  1006  0032                     	ds	2
  1007  0034                     sprintf@sp:
  1008                           
  1009                           ; 1 bytes @ 0x14
  1010  0034                     	ds	1
  1011  0035                     sprintf@c:
  1012                           
  1013                           ; 1 bytes @ 0x15
  1014  0035                     	ds	2
  1015  0037                     ___flmul@sign:
  1016                           
  1017                           ; 1 bytes @ 0x17
  1018  0037                     	ds	1
  1019  0038                     ___flmul@grs:
  1020                           
  1021                           ; 4 bytes @ 0x18
  1022  0038                     	ds	4
  1023  003C                     ___flmul@aexp:
  1024                           
  1025                           ; 1 bytes @ 0x1C
  1026  003C                     	ds	1
  1027  003D                     ___flmul@bexp:
  1028                           
  1029                           ; 1 bytes @ 0x1D
  1030  003D                     	ds	1
  1031  003E                     ___flmul@prod:
  1032                           
  1033                           ; 4 bytes @ 0x1E
  1034  003E                     	ds	4
  1035  0042                     ___flmul@temp:
  1036                           
  1037                           ; 2 bytes @ 0x22
  1038  0042                     	ds	2
  1039  0044                     ?___fltol:
  1040  0044                     ___fltol@f1:	
  1041                           ; 4 bytes @ 0x24
  1042                           
  1043                           
  1044                           ; 4 bytes @ 0x24
  1045  0044                     	ds	4
  1046  0048                     ??___fltol:
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  0048                     	ds	5
  1050  004D                     ___fltol@sign1:
  1051                           
  1052                           ; 1 bytes @ 0x2D
  1053  004D                     	ds	1
  1054  004E                     ___fltol@exp1:
  1055                           
  1056                           ; 1 bytes @ 0x2E
  1057  004E                     	ds	1
  1058  004F                     ??_main:
  1059                           
  1060                           ; 1 bytes @ 0x2F
  1061  004F                     	ds	4
  1062                           
  1063                           	psect	maintext
  1064  0380                     __pmaintext:	
  1065 ;;
  1066 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1067 ;;
  1068 ;; *************** function _main *****************
  1069 ;; Defined at:
  1070 ;;		line 93 in file "Lab2.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : B00/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       4       0       0       0
  1087 ;;      Totals:         0       4       0       0       0
  1088 ;;Total ram usage:        4 bytes
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		_ADC_CONFIG
  1092 ;;		_ADC_IF
  1093 ;;		_Division
  1094 ;;		_Lcd_Clear
  1095 ;;		_Lcd_Init
  1096 ;;		_Lcd_Set_Cursor
  1097 ;;		_Lcd_Write_String
  1098 ;;		_UART_write
  1099 ;;		_USART_CONFIG
  1100 ;;		___flmul
  1101 ;;		___fltol
  1102 ;;		___xxtofl
  1103 ;;		_sprintf
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _main
  1111  0380                     _main:
  1112  0380                     l2572:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1115                           
  1116                           
  1117                           ;Lab2.c: 94:     ANSEL = 0x03;
  1118  0380  3003               	movlw	3
  1119  0381  1683               	bsf	3,5	;RP0=1, select bank3
  1120  0382  1703               	bsf	3,6	;RP1=1, select bank3
  1121  0383  0088               	movwf	8	;volatile
  1122  0384                     l2574:
  1123                           
  1124                           ;Lab2.c: 95:     ANSELH = 0x00;
  1125  0384  0189               	clrf	9	;volatile
  1126  0385                     l2576:
  1127                           
  1128                           ;Lab2.c: 97:     TRISA = 0x03;
  1129  0385  3003               	movlw	3
  1130  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1131  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1132  0388  0085               	movwf	5	;volatile
  1133                           
  1134                           ;Lab2.c: 98:     TRISB = 0x00;
  1135  0389  0186               	clrf	6	;volatile
  1136  038A                     l2578:
  1137                           
  1138                           ;Lab2.c: 99:     TRISC = 0x80;
  1139  038A  3080               	movlw	128
  1140  038B  0087               	movwf	7	;volatile
  1141  038C                     l2580:
  1142                           
  1143                           ;Lab2.c: 100:     TRISD = 0x00;
  1144  038C  0188               	clrf	8	;volatile
  1145  038D                     l2582:
  1146                           
  1147                           ;Lab2.c: 102:     OSCCONbits.IRCF = 0B110;
  1148  038D  080F               	movf	15,w	;volatile
  1149  038E  398F               	andlw	-113
  1150  038F  3860               	iorlw	96
  1151  0390  008F               	movwf	15	;volatile
  1152  0391                     l2584:
  1153                           
  1154                           ;Lab2.c: 103:     OSCCONbits.OSTS = 0;
  1155  0391  118F               	bcf	15,3	;volatile
  1156  0392                     l2586:
  1157                           
  1158                           ;Lab2.c: 104:     OSCCONbits.SCS = 1;
  1159  0392  140F               	bsf	15,0	;volatile
  1160  0393                     l2588:
  1161                           
  1162                           ;Lab2.c: 106:     ADC_CONFIG(4);
  1163  0393  3004               	movlw	4
  1164  0394  00F3               	movwf	ADC_CONFIG@frec
  1165  0395  3000               	movlw	0
  1166  0396  00F4               	movwf	ADC_CONFIG@frec+1
  1167  0397  120A  158A  24DC  120A  118A  	fcall	_ADC_CONFIG
  1168  039C                     l2590:
  1169                           
  1170                           ;Lab2.c: 107:     USART_CONFIG(4, 1, 1);
  1171  039C  3004               	movlw	4
  1172  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1173  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1174  039F  00A0               	movwf	USART_CONFIG@frec
  1175  03A0  3000               	movlw	0
  1176  03A1  00A1               	movwf	USART_CONFIG@frec+1
  1177  03A2  3001               	movlw	1
  1178  03A3  00A2               	movwf	USART_CONFIG@tr
  1179  03A4  3000               	movlw	0
  1180  03A5  00A3               	movwf	USART_CONFIG@tr+1
  1181  03A6  3001               	movlw	1
  1182  03A7  00A4               	movwf	USART_CONFIG@rc
  1183  03A8  3000               	movlw	0
  1184  03A9  00A5               	movwf	USART_CONFIG@rc+1
  1185  03AA  120A  158A  2587  120A  118A  	fcall	_USART_CONFIG
  1186  03AF                     l2592:
  1187                           
  1188                           ;Lab2.c: 109:     INTCONbits.PEIE = 1;
  1189  03AF  170B               	bsf	11,6	;volatile
  1190  03B0                     l2594:
  1191                           
  1192                           ;Lab2.c: 110:     PIE1bits.ADIE = 1;
  1193  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1194  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1195  03B2  170C               	bsf	12,6	;volatile
  1196  03B3                     l2596:
  1197                           
  1198                           ;Lab2.c: 112:     PIE1bits.RCIE = 1;
  1199  03B3  168C               	bsf	12,5	;volatile
  1200  03B4                     l2598:
  1201                           
  1202                           ;Lab2.c: 113:     ADCON0bits.GO = 1;
  1203  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1204  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1205  03B6  149F               	bsf	31,1	;volatile
  1206  03B7                     l2600:
  1207                           
  1208                           ;Lab2.c: 114:     Lcd_Init();
  1209  03B7  120A  118A  279C  120A  118A  	fcall	_Lcd_Init
  1210  03BC                     l2602:
  1211                           
  1212                           ;Lab2.c: 115:     RCIF = 0;
  1213  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1214  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1215  03BE  128C               	bcf	12,5	;volatile
  1216  03BF                     l2604:
  1217                           
  1218                           ;Lab2.c: 117:     INTCONbits.GIE = 1;
  1219  03BF  178B               	bsf	11,7	;volatile
  1220  03C0                     l2606:
  1221                           
  1222                           ;Lab2.c: 118:     Lcd_Clear();
  1223  03C0  120A  158A  241F  120A  118A  	fcall	_Lcd_Clear
  1224  03C5                     l2608:
  1225                           
  1226                           ;Lab2.c: 119:     Lcd_Set_Cursor(1,1);
  1227  03C5  01F6               	clrf	Lcd_Set_Cursor@b
  1228  03C6  0AF6               	incf	Lcd_Set_Cursor@b,f
  1229  03C7  3001               	movlw	1
  1230  03C8  120A  158A  244E  120A  118A  	fcall	_Lcd_Set_Cursor
  1231  03CD                     l2610:
  1232                           
  1233                           ;Lab2.c: 120:     Lcd_Write_String("S1:  S2:  S3:");
  1234  03CD  304C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1235  03CE  00F5               	movwf	Lcd_Write_String@a
  1236  03CF  3080               	movlw	128
  1237  03D0  00F6               	movwf	Lcd_Write_String@a+1
  1238  03D1  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1239  03D6                     l2612:
  1240                           
  1241                           ;Lab2.c: 121:     UART_write("Presione * para mostrar los pot ");
  1242  03D6  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1243  03D7  00F3               	movwf	UART_write@word
  1244  03D8  3080               	movlw	128
  1245  03D9  00F4               	movwf	UART_write@word+1
  1246  03DA  120A  158A  248B  120A  118A  	fcall	_UART_write
  1247  03DF                     l2614:
  1248                           
  1249                           ;Lab2.c: 122:     UART_write("O presione + - para el contador");
  1250  03DF  302C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1251  03E0  00F3               	movwf	UART_write@word
  1252  03E1  3080               	movlw	128
  1253  03E2  00F4               	movwf	UART_write@word+1
  1254  03E3  120A  158A  248B  120A  118A  	fcall	_UART_write
  1255  03E8                     l2616:
  1256                           
  1257                           ;Lab2.c: 125:         ADC_IF();
  1258  03E8  120A  158A  246C  120A  118A  	fcall	_ADC_IF
  1259  03ED                     l2618:
  1260                           
  1261                           ;Lab2.c: 126:         PORTB = con;
  1262  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  1263  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  1264  03EF  085C               	movf	_con,w
  1265  03F0  0086               	movwf	6	;volatile
  1266  03F1                     l2620:
  1267                           
  1268                           ;Lab2.c: 127:         vol1 = (pot1*0.01961);
  1269  03F1  085E               	movf	_pot1,w
  1270  03F2  00CF               	movwf	??_main
  1271  03F3  01D0               	clrf	??_main+1
  1272  03F4  01D1               	clrf	??_main+2
  1273  03F5  01D2               	clrf	??_main+3
  1274  03F6  0852               	movf	??_main+3,w
  1275  03F7  00F6               	movwf	___xxtofl@val+3
  1276  03F8  0851               	movf	??_main+2,w
  1277  03F9  00F5               	movwf	___xxtofl@val+2
  1278  03FA  0850               	movf	??_main+1,w
  1279  03FB  00F4               	movwf	___xxtofl@val+1
  1280  03FC  084F               	movf	??_main,w
  1281  03FD  00F3               	movwf	___xxtofl@val
  1282  03FE  3001               	movlw	1
  1283  03FF  120A  118A  2651  120A  118A  	fcall	___xxtofl
  1284  0404  0876               	movf	?___xxtofl+3,w
  1285  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0407  00B1               	movwf	___flmul@a+3
  1288  0408  0875               	movf	?___xxtofl+2,w
  1289  0409  00B0               	movwf	___flmul@a+2
  1290  040A  0874               	movf	?___xxtofl+1,w
  1291  040B  00AF               	movwf	___flmul@a+1
  1292  040C  0873               	movf	?___xxtofl,w
  1293  040D  00AE               	movwf	___flmul@a
  1294  040E  303C               	movlw	60
  1295  040F  00AD               	movwf	___flmul@b+3
  1296  0410  30A0               	movlw	160
  1297  0411  00AC               	movwf	___flmul@b+2
  1298  0412  30A5               	movlw	165
  1299  0413  00AB               	movwf	___flmul@b+1
  1300  0414  3027               	movlw	39
  1301  0415  00AA               	movwf	___flmul@b
  1302  0416  120A  118A  201F  120A  118A  	fcall	___flmul
  1303  041B  1283               	bcf	3,5	;RP0=0, select bank0
  1304  041C  1303               	bcf	3,6	;RP1=0, select bank0
  1305  041D  082D               	movf	?___flmul+3,w
  1306  041E  00C7               	movwf	___fltol@f1+3
  1307  041F  082C               	movf	?___flmul+2,w
  1308  0420  00C6               	movwf	___fltol@f1+2
  1309  0421  082B               	movf	?___flmul+1,w
  1310  0422  00C5               	movwf	___fltol@f1+1
  1311  0423  082A               	movf	?___flmul,w
  1312  0424  00C4               	movwf	___fltol@f1
  1313  0425  120A  158A  2784  120A  118A  	fcall	___fltol
  1314  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1315  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1316  042C  0845               	movf	?___fltol+1,w
  1317  042D  00D8               	movwf	_vol1+1
  1318  042E  0844               	movf	?___fltol,w
  1319  042F  00D7               	movwf	_vol1
  1320  0430                     l2622:
  1321                           
  1322                           ;Lab2.c: 128:         vol2 = (pot2*0.01961);
  1323  0430  085D               	movf	_pot2,w
  1324  0431  00CF               	movwf	??_main
  1325  0432  01D0               	clrf	??_main+1
  1326  0433  01D1               	clrf	??_main+2
  1327  0434  01D2               	clrf	??_main+3
  1328  0435  0852               	movf	??_main+3,w
  1329  0436  00F6               	movwf	___xxtofl@val+3
  1330  0437  0851               	movf	??_main+2,w
  1331  0438  00F5               	movwf	___xxtofl@val+2
  1332  0439  0850               	movf	??_main+1,w
  1333  043A  00F4               	movwf	___xxtofl@val+1
  1334  043B  084F               	movf	??_main,w
  1335  043C  00F3               	movwf	___xxtofl@val
  1336  043D  3001               	movlw	1
  1337  043E  120A  118A  2651  120A  118A  	fcall	___xxtofl
  1338  0443  0876               	movf	?___xxtofl+3,w
  1339  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0445  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0446  00B1               	movwf	___flmul@a+3
  1342  0447  0875               	movf	?___xxtofl+2,w
  1343  0448  00B0               	movwf	___flmul@a+2
  1344  0449  0874               	movf	?___xxtofl+1,w
  1345  044A  00AF               	movwf	___flmul@a+1
  1346  044B  0873               	movf	?___xxtofl,w
  1347  044C  00AE               	movwf	___flmul@a
  1348  044D  303C               	movlw	60
  1349  044E  00AD               	movwf	___flmul@b+3
  1350  044F  30A0               	movlw	160
  1351  0450  00AC               	movwf	___flmul@b+2
  1352  0451  30A5               	movlw	165
  1353  0452  00AB               	movwf	___flmul@b+1
  1354  0453  3027               	movlw	39
  1355  0454  00AA               	movwf	___flmul@b
  1356  0455  120A  118A  201F  120A  118A  	fcall	___flmul
  1357  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1358  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1359  045C  082D               	movf	?___flmul+3,w
  1360  045D  00C7               	movwf	___fltol@f1+3
  1361  045E  082C               	movf	?___flmul+2,w
  1362  045F  00C6               	movwf	___fltol@f1+2
  1363  0460  082B               	movf	?___flmul+1,w
  1364  0461  00C5               	movwf	___fltol@f1+1
  1365  0462  082A               	movf	?___flmul,w
  1366  0463  00C4               	movwf	___fltol@f1
  1367  0464  120A  158A  2784  120A  118A  	fcall	___fltol
  1368  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1369  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1370  046B  0845               	movf	?___fltol+1,w
  1371  046C  00D6               	movwf	_vol2+1
  1372  046D  0844               	movf	?___fltol,w
  1373  046E  00D5               	movwf	_vol2
  1374  046F                     l2624:
  1375                           
  1376                           ;Lab2.c: 130:         Division(con);
  1377  046F  085C               	movf	_con,w
  1378  0470  120A  158A  26B3  120A  118A  	fcall	_Division
  1379  0475                     l2626:
  1380                           
  1381                           ;Lab2.c: 131:         Lcd_Set_Cursor(2,1);
  1382  0475  01F6               	clrf	Lcd_Set_Cursor@b
  1383  0476  0AF6               	incf	Lcd_Set_Cursor@b,f
  1384  0477  3002               	movlw	2
  1385  0478  120A  158A  244E  120A  118A  	fcall	_Lcd_Set_Cursor
  1386  047D                     l2628:
  1387                           
  1388                           ;Lab2.c: 132:         sprintf(buffer, "%dV  ", vol1);
  1389  047D  306B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1390  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1391  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0480  00CF               	movwf	??_main
  1393  0481  084F               	movf	??_main,w
  1394  0482  00A9               	movwf	sprintf@f
  1395  0483  0858               	movf	_vol1+1,w
  1396  0484  00AB               	movwf	?_sprintf+2
  1397  0485  0857               	movf	_vol1,w
  1398  0486  00AA               	movwf	?_sprintf+1
  1399  0487  305F               	movlw	(low (_buffer| 0))& (0+255)
  1400  0488  120A  118A  2567  120A  118A  	fcall	_sprintf
  1401  048D                     l2630:
  1402                           
  1403                           ;Lab2.c: 133:         Lcd_Write_String(buffer);
  1404  048D  305F               	movlw	(low (_buffer| 0))& (0+255)
  1405  048E  00F5               	movwf	Lcd_Write_String@a
  1406  048F  3000               	movlw	0
  1407  0490  00F6               	movwf	Lcd_Write_String@a+1
  1408  0491  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1409  0496                     l2632:
  1410                           
  1411                           ;Lab2.c: 134:         sprintf(buffer, " %dV ", vol2);
  1412  0496  3071               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1413  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0499  00CF               	movwf	??_main
  1416  049A  084F               	movf	??_main,w
  1417  049B  00A9               	movwf	sprintf@f
  1418  049C  0856               	movf	_vol2+1,w
  1419  049D  00AB               	movwf	?_sprintf+2
  1420  049E  0855               	movf	_vol2,w
  1421  049F  00AA               	movwf	?_sprintf+1
  1422  04A0  305F               	movlw	(low (_buffer| 0))& (0+255)
  1423  04A1  120A  118A  2567  120A  118A  	fcall	_sprintf
  1424  04A6                     l2634:
  1425                           
  1426                           ;Lab2.c: 135:         Lcd_Write_String(buffer);
  1427  04A6  305F               	movlw	(low (_buffer| 0))& (0+255)
  1428  04A7  00F5               	movwf	Lcd_Write_String@a
  1429  04A8  3000               	movlw	0
  1430  04A9  00F6               	movwf	Lcd_Write_String@a+1
  1431  04AA  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1432  04AF                     l2636:
  1433                           
  1434                           ;Lab2.c: 136:         sprintf(buffer, "  %d", cen);
  1435  04AF  3077               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1436  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1437  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1438  04B2  00CF               	movwf	??_main
  1439  04B3  084F               	movf	??_main,w
  1440  04B4  00A9               	movwf	sprintf@f
  1441  04B5  085B               	movf	_cen,w
  1442  04B6  00D0               	movwf	??_main+1
  1443  04B7  01D1               	clrf	??_main+2
  1444  04B8  0850               	movf	??_main+1,w
  1445  04B9  00AA               	movwf	?_sprintf+1
  1446  04BA  0851               	movf	??_main+2,w
  1447  04BB  00AB               	movwf	?_sprintf+2
  1448  04BC  305F               	movlw	(low (_buffer| 0))& (0+255)
  1449  04BD  120A  118A  2567  120A  118A  	fcall	_sprintf
  1450  04C2                     l2638:
  1451                           
  1452                           ;Lab2.c: 137:         Lcd_Write_String(buffer);
  1453  04C2  305F               	movlw	(low (_buffer| 0))& (0+255)
  1454  04C3  00F5               	movwf	Lcd_Write_String@a
  1455  04C4  3000               	movlw	0
  1456  04C5  00F6               	movwf	Lcd_Write_String@a+1
  1457  04C6  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1458  04CB                     l2640:
  1459                           
  1460                           ;Lab2.c: 138:         sprintf(buffer, "%d", dec);
  1461  04CB  3079               	movlw	(low (((STR_6+2)-__stringbase)| (0+32768)))& (0+255)
  1462  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1463  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1464  04CE  00CF               	movwf	??_main
  1465  04CF  084F               	movf	??_main,w
  1466  04D0  00A9               	movwf	sprintf@f
  1467  04D1  085A               	movf	_dec,w
  1468  04D2  00D0               	movwf	??_main+1
  1469  04D3  01D1               	clrf	??_main+2
  1470  04D4  0850               	movf	??_main+1,w
  1471  04D5  00AA               	movwf	?_sprintf+1
  1472  04D6  0851               	movf	??_main+2,w
  1473  04D7  00AB               	movwf	?_sprintf+2
  1474  04D8  305F               	movlw	(low (_buffer| 0))& (0+255)
  1475  04D9  120A  118A  2567  120A  118A  	fcall	_sprintf
  1476  04DE                     l2642:
  1477                           
  1478                           ;Lab2.c: 139:         Lcd_Write_String(buffer);
  1479  04DE  305F               	movlw	(low (_buffer| 0))& (0+255)
  1480  04DF  00F5               	movwf	Lcd_Write_String@a
  1481  04E0  3000               	movlw	0
  1482  04E1  00F6               	movwf	Lcd_Write_String@a+1
  1483  04E2  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1484  04E7                     l2644:
  1485                           
  1486                           ;Lab2.c: 140:         sprintf(buffer, "%d", uni);
  1487  04E7  3079               	movlw	(low (((STR_6+2)-__stringbase)| (0+32768)))& (0+255)
  1488  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1489  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1490  04EA  00CF               	movwf	??_main
  1491  04EB  084F               	movf	??_main,w
  1492  04EC  00A9               	movwf	sprintf@f
  1493  04ED  0859               	movf	_uni,w
  1494  04EE  00D0               	movwf	??_main+1
  1495  04EF  01D1               	clrf	??_main+2
  1496  04F0  0850               	movf	??_main+1,w
  1497  04F1  00AA               	movwf	?_sprintf+1
  1498  04F2  0851               	movf	??_main+2,w
  1499  04F3  00AB               	movwf	?_sprintf+2
  1500  04F4  305F               	movlw	(low (_buffer| 0))& (0+255)
  1501  04F5  120A  118A  2567  120A  118A  	fcall	_sprintf
  1502  04FA                     l2646:
  1503                           
  1504                           ;Lab2.c: 141:         Lcd_Write_String(buffer);
  1505  04FA  305F               	movlw	(low (_buffer| 0))& (0+255)
  1506  04FB  00F5               	movwf	Lcd_Write_String@a
  1507  04FC  3000               	movlw	0
  1508  04FD  00F6               	movwf	Lcd_Write_String@a+1
  1509  04FE  120A  158A  25CC  120A  118A  	fcall	_Lcd_Write_String
  1510  0503                     l2648:
  1511                           
  1512                           ;Lab2.c: 151:         if (x == 1){
  1513  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0505  0353               	decf	_x,w
  1516  0506  0454               	iorwf	_x+1,w
  1517  0507  1D03               	btfss	3,2
  1518  0508  2D0A               	goto	u2951
  1519  0509  2D0B               	goto	u2950
  1520  050A                     u2951:
  1521  050A  2BE8               	goto	l2616
  1522  050B                     u2950:
  1523  050B                     l2650:
  1524                           
  1525                           ;Lab2.c: 152:             x = 0;
  1526  050B  01D3               	clrf	_x
  1527  050C  01D4               	clrf	_x+1
  1528  050D                     l2652:
  1529                           
  1530                           ;Lab2.c: 153:             UART_write("\r \0");
  1531  050D  307C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1532  050E  00F3               	movwf	UART_write@word
  1533  050F  3080               	movlw	128
  1534  0510  00F4               	movwf	UART_write@word+1
  1535  0511  120A  158A  248B  120A  118A  	fcall	_UART_write
  1536  0516                     l2654:
  1537                           
  1538                           ;Lab2.c: 154:             sprintf(buffer, "%dV  ", vol1);
  1539  0516  306B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1540  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0519  00CF               	movwf	??_main
  1543  051A  084F               	movf	??_main,w
  1544  051B  00A9               	movwf	sprintf@f
  1545  051C  0858               	movf	_vol1+1,w
  1546  051D  00AB               	movwf	?_sprintf+2
  1547  051E  0857               	movf	_vol1,w
  1548  051F  00AA               	movwf	?_sprintf+1
  1549  0520  305F               	movlw	(low (_buffer| 0))& (0+255)
  1550  0521  120A  118A  2567  120A  118A  	fcall	_sprintf
  1551  0526                     l2656:
  1552                           
  1553                           ;Lab2.c: 155:             UART_write("Pot 1: ");
  1554  0526  3063               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1555  0527  00F3               	movwf	UART_write@word
  1556  0528  3080               	movlw	128
  1557  0529  00F4               	movwf	UART_write@word+1
  1558  052A  120A  158A  248B  120A  118A  	fcall	_UART_write
  1559  052F                     l2658:
  1560                           
  1561                           ;Lab2.c: 156:             UART_write(buffer);
  1562  052F  305F               	movlw	(low (_buffer| 0))& (0+255)
  1563  0530  00F3               	movwf	UART_write@word
  1564  0531  3000               	movlw	0
  1565  0532  00F4               	movwf	UART_write@word+1
  1566  0533  120A  158A  248B  120A  118A  	fcall	_UART_write
  1567  0538                     l2660:
  1568                           
  1569                           ;Lab2.c: 157:             sprintf(buffer, "%dV  ", vol2);
  1570  0538  306B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1571  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1572  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1573  053B  00CF               	movwf	??_main
  1574  053C  084F               	movf	??_main,w
  1575  053D  00A9               	movwf	sprintf@f
  1576  053E  0856               	movf	_vol2+1,w
  1577  053F  00AB               	movwf	?_sprintf+2
  1578  0540  0855               	movf	_vol2,w
  1579  0541  00AA               	movwf	?_sprintf+1
  1580  0542  305F               	movlw	(low (_buffer| 0))& (0+255)
  1581  0543  120A  118A  2567  120A  118A  	fcall	_sprintf
  1582  0548                     l2662:
  1583                           
  1584                           ;Lab2.c: 158:             UART_write(" Pot 2: ");
  1585  0548  305A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1586  0549  00F3               	movwf	UART_write@word
  1587  054A  3080               	movlw	128
  1588  054B  00F4               	movwf	UART_write@word+1
  1589  054C  120A  158A  248B  120A  118A  	fcall	_UART_write
  1590  0551                     l2664:
  1591                           
  1592                           ;Lab2.c: 159:             UART_write(buffer);
  1593  0551  305F               	movlw	(low (_buffer| 0))& (0+255)
  1594  0552  00F3               	movwf	UART_write@word
  1595  0553  3000               	movlw	0
  1596  0554  00F4               	movwf	UART_write@word+1
  1597  0555  120A  158A  248B  120A  118A  	fcall	_UART_write
  1598  055A                     l2666:
  1599                           
  1600                           ;Lab2.c: 160:             UART_write("\r \0");
  1601  055A  307C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1602  055B  00F3               	movwf	UART_write@word
  1603  055C  3080               	movlw	128
  1604  055D  00F4               	movwf	UART_write@word+1
  1605  055E  120A  158A  248B  120A  118A  	fcall	_UART_write
  1606  0563  2BE8               	goto	l2616
  1607  0564  120A  118A  280C   	ljmp	start
  1608  0567                     __end_of_main:
  1609                           
  1610                           	psect	text1
  1611  0567                     __ptext1:	
  1612 ;; *************** function _sprintf *****************
  1613 ;; Defined at:
  1614 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  sp              1    wreg     PTR unsigned char 
  1617 ;;		 -> buffer(5), 
  1618 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1619 ;;		 -> STR_12(6), STR_10(6), STR_8(3), STR_7(3), 
  1620 ;;		 -> STR_6(5), STR_5(6), STR_4(6), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  1623 ;;		 -> buffer(5), 
  1624 ;;  tmpval          4    0        struct .
  1625 ;;  val             2   18[BANK0 ] unsigned int 
  1626 ;;  cp              2    0        PTR const unsigned char 
  1627 ;;  len             2    0        unsigned int 
  1628 ;;  c               1   21[BANK0 ] unsigned char 
  1629 ;;  prec            1   17[BANK0 ] char 
  1630 ;;  flag            1   16[BANK0 ] unsigned char 
  1631 ;;  ap              1   15[BANK0 ] PTR void [1]
  1632 ;;		 -> ?_sprintf(2), 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  2    9[BANK0 ] int 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1642 ;;      Params:         0       3       0       0       0
  1643 ;;      Locals:         0       7       0       0       0
  1644 ;;      Temps:          0       3       0       0       0
  1645 ;;      Totals:         0      13       0       0       0
  1646 ;;Total ram usage:       13 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		___lwdiv
  1651 ;;		___lwmod
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function _sprintf
  1659  0567                     _sprintf:
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1663                           ;sprintf@sp stored from wreg
  1664  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0569  00B4               	movwf	sprintf@sp
  1667  056A                     l2466:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1670  056A  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1671  056B  00AC               	movwf	??_sprintf
  1672  056C  082C               	movf	??_sprintf,w
  1673  056D  00AF               	movwf	sprintf@ap
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1676  056E  2E3A               	goto	l2518
  1677  056F                     l2468:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1680  056F  3025               	movlw	37
  1681  0570  0635               	xorwf	sprintf@c,w
  1682  0571  1903               	btfsc	3,2
  1683  0572  2D74               	goto	u2741
  1684  0573  2D75               	goto	u2740
  1685  0574                     u2741:
  1686  0574  2D81               	goto	l2474
  1687  0575                     u2740:
  1688  0575                     l2470:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1691  0575  0835               	movf	sprintf@c,w
  1692  0576  00AC               	movwf	??_sprintf
  1693  0577  0834               	movf	sprintf@sp,w
  1694  0578  0084               	movwf	4
  1695  0579  082C               	movf	??_sprintf,w
  1696  057A  1383               	bcf	3,7	;select IRP bank0
  1697  057B  0080               	movwf	0
  1698  057C                     l2472:
  1699  057C  3001               	movlw	1
  1700  057D  00AC               	movwf	??_sprintf
  1701  057E  082C               	movf	??_sprintf,w
  1702  057F  07B4               	addwf	sprintf@sp,f
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1705  0580  2E3A               	goto	l2518
  1706  0581                     l2474:
  1707                           
  1708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1709  0581  01B0               	clrf	sprintf@flag
  1710  0582                     l2478:	
  1711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1712                           
  1713  0582  3001               	movlw	1
  1714  0583  07A9               	addwf	sprintf@f,f
  1715  0584  30FF               	movlw	-1
  1716  0585  0729               	addwf	sprintf@f,w
  1717  0586  0084               	movwf	4
  1718  0587  120A  118A  2717  120A  118A  	fcall	stringdir
  1719  058C  00B5               	movwf	sprintf@c
  1720  058D  00AC               	movwf	??_sprintf
  1721  058E  01AD               	clrf	??_sprintf+1
  1722                           
  1723                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1724                           ; Switch size 1, requested type "simple"
  1725                           ; Number of cases is 1, Range of values is 0 to 0
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ; direct_byte           11     8 (fixed)
  1730                           ; jumptable            260     6 (fixed)
  1731                           ;	Chosen strategy is simple_byte
  1732  058F  082D               	movf	??_sprintf+1,w
  1733  0590  3A00               	xorlw	0	; case 0
  1734  0591  1903               	skipnz
  1735  0592  2D94               	goto	l2728
  1736  0593  2E3A               	goto	l2518
  1737  0594                     l2728:
  1738                           
  1739                           ; Switch size 1, requested type "simple"
  1740                           ; Number of cases is 3, Range of values is 0 to 105
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           10     6 (average)
  1744                           ; jumptable            260     6 (fixed)
  1745                           ;	Chosen strategy is simple_byte
  1746  0594  082C               	movf	??_sprintf,w
  1747  0595  3A00               	xorlw	0	; case 0
  1748  0596  1903               	skipnz
  1749  0597  2E4C               	goto	l2520
  1750  0598  3A64               	xorlw	100	; case 100
  1751  0599  1903               	skipnz
  1752  059A  2D9F               	goto	l2480
  1753  059B  3A0D               	xorlw	13	; case 105
  1754  059C  1903               	skipnz
  1755  059D  2D9F               	goto	l2480
  1756  059E  2E3A               	goto	l2518
  1757  059F                     l2480:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1760  059F  082F               	movf	sprintf@ap,w
  1761  05A0  0084               	movwf	4
  1762  05A1  1383               	bcf	3,7	;select IRP bank0
  1763  05A2  0800               	movf	0,w
  1764  05A3  00B2               	movwf	sprintf@val
  1765  05A4  0A84               	incf	4,f
  1766  05A5  0800               	movf	0,w
  1767  05A6  00B3               	movwf	sprintf@val+1
  1768  05A7                     l2482:
  1769  05A7  3002               	movlw	2
  1770  05A8  00AC               	movwf	??_sprintf
  1771  05A9  082C               	movf	??_sprintf,w
  1772  05AA  07AF               	addwf	sprintf@ap,f
  1773  05AB                     l2484:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1776  05AB  1FB3               	btfss	sprintf@val+1,7
  1777  05AC  2DAE               	goto	u2751
  1778  05AD  2DAF               	goto	u2750
  1779  05AE                     u2751:
  1780  05AE  2DB8               	goto	l2490
  1781  05AF                     u2750:
  1782  05AF                     l2486:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1785  05AF  3003               	movlw	3
  1786  05B0  00AC               	movwf	??_sprintf
  1787  05B1  082C               	movf	??_sprintf,w
  1788  05B2  04B0               	iorwf	sprintf@flag,f
  1789  05B3                     l2488:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1792  05B3  09B2               	comf	sprintf@val,f
  1793  05B4  09B3               	comf	sprintf@val+1,f
  1794  05B5  0AB2               	incf	sprintf@val,f
  1795  05B6  1903               	skipnz
  1796  05B7  0AB3               	incf	sprintf@val+1,f
  1797  05B8                     l2490:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1800  05B8  01B5               	clrf	sprintf@c
  1801  05B9  0AB5               	incf	sprintf@c,f
  1802  05BA                     l2496:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1805  05BA  0835               	movf	sprintf@c,w
  1806  05BB  00AC               	movwf	??_sprintf
  1807  05BC  072C               	addwf	??_sprintf,w
  1808  05BD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1809  05BE  0084               	movwf	4
  1810  05BF  120A  118A  2717  120A  118A  	fcall	stringdir
  1811  05C4  00AD               	movwf	??_sprintf+1
  1812  05C5  120A  118A  2717  120A  118A  	fcall	stringdir
  1813  05CA  00AE               	movwf	??_sprintf+2
  1814  05CB  082E               	movf	??_sprintf+2,w
  1815  05CC  0233               	subwf	sprintf@val+1,w
  1816  05CD  1D03               	skipz
  1817  05CE  2DD1               	goto	u2765
  1818  05CF  082D               	movf	??_sprintf+1,w
  1819  05D0  0232               	subwf	sprintf@val,w
  1820  05D1                     u2765:
  1821  05D1  1803               	skipnc
  1822  05D2  2DD4               	goto	u2761
  1823  05D3  2DD5               	goto	u2760
  1824  05D4                     u2761:
  1825  05D4  2DD6               	goto	l2500
  1826  05D5                     u2760:
  1827  05D5  2DE0               	goto	l2502
  1828  05D6                     l2500:
  1829  05D6  3001               	movlw	1
  1830  05D7  00AC               	movwf	??_sprintf
  1831  05D8  082C               	movf	??_sprintf,w
  1832  05D9  07B5               	addwf	sprintf@c,f
  1833  05DA  3005               	movlw	5
  1834  05DB  0635               	xorwf	sprintf@c,w
  1835  05DC  1D03               	btfss	3,2
  1836  05DD  2DDF               	goto	u2771
  1837  05DE  2DE0               	goto	u2770
  1838  05DF                     u2771:
  1839  05DF  2DBA               	goto	l2496
  1840  05E0                     u2770:
  1841  05E0                     l2502:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1844  05E0  0830               	movf	sprintf@flag,w
  1845  05E1  3903               	andlw	3
  1846  05E2  1903               	btfsc	3,2
  1847  05E3  2DE5               	goto	u2781
  1848  05E4  2DE6               	goto	u2780
  1849  05E5                     u2781:
  1850  05E5  2DF1               	goto	l2508
  1851  05E6                     u2780:
  1852  05E6                     l2504:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1855  05E6  302D               	movlw	45
  1856  05E7  00AC               	movwf	??_sprintf
  1857  05E8  0834               	movf	sprintf@sp,w
  1858  05E9  0084               	movwf	4
  1859  05EA  082C               	movf	??_sprintf,w
  1860  05EB  1383               	bcf	3,7	;select IRP bank0
  1861  05EC  0080               	movwf	0
  1862  05ED                     l2506:
  1863  05ED  3001               	movlw	1
  1864  05EE  00AC               	movwf	??_sprintf
  1865  05EF  082C               	movf	??_sprintf,w
  1866  05F0  07B4               	addwf	sprintf@sp,f
  1867  05F1                     l2508:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1870  05F1  0835               	movf	sprintf@c,w
  1871  05F2  00AC               	movwf	??_sprintf
  1872  05F3  082C               	movf	??_sprintf,w
  1873  05F4  00B1               	movwf	sprintf@prec
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1876  05F5  2E31               	goto	l2516
  1877  05F6                     l2510:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1880  05F6  300A               	movlw	10
  1881  05F7  00A3               	movwf	___lwmod@divisor
  1882  05F8  3000               	movlw	0
  1883  05F9  00A4               	movwf	___lwmod@divisor+1
  1884  05FA  0831               	movf	sprintf@prec,w
  1885  05FB  00AC               	movwf	??_sprintf
  1886  05FC  072C               	addwf	??_sprintf,w
  1887  05FD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1888  05FE  0084               	movwf	4
  1889  05FF  120A  118A  2717  120A  118A  	fcall	stringdir
  1890  0604  00F3               	movwf	___lwdiv@divisor
  1891  0605  120A  118A  2717  120A  118A  	fcall	stringdir
  1892  060A  00F4               	movwf	___lwdiv@divisor+1
  1893  060B  0833               	movf	sprintf@val+1,w
  1894  060C  00F6               	movwf	___lwdiv@dividend+1
  1895  060D  0832               	movf	sprintf@val,w
  1896  060E  00F5               	movwf	___lwdiv@dividend
  1897  060F  120A  158A  2612  120A  118A  	fcall	___lwdiv
  1898  0614  0874               	movf	?___lwdiv+1,w
  1899  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0617  00A6               	movwf	___lwmod@dividend+1
  1902  0618  0873               	movf	?___lwdiv,w
  1903  0619  00A5               	movwf	___lwmod@dividend
  1904  061A  120A  158A  2508  120A  118A  	fcall	___lwmod
  1905  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0621  0823               	movf	?___lwmod,w
  1908  0622  3E30               	addlw	48
  1909  0623  00AD               	movwf	??_sprintf+1
  1910  0624  082D               	movf	??_sprintf+1,w
  1911  0625  00B5               	movwf	sprintf@c
  1912  0626                     l2512:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1915  0626  0835               	movf	sprintf@c,w
  1916  0627  00AC               	movwf	??_sprintf
  1917  0628  0834               	movf	sprintf@sp,w
  1918  0629  0084               	movwf	4
  1919  062A  082C               	movf	??_sprintf,w
  1920  062B  1383               	bcf	3,7	;select IRP bank0
  1921  062C  0080               	movwf	0
  1922  062D                     l2514:
  1923  062D  3001               	movlw	1
  1924  062E  00AC               	movwf	??_sprintf
  1925  062F  082C               	movf	??_sprintf,w
  1926  0630  07B4               	addwf	sprintf@sp,f
  1927  0631                     l2516:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1930  0631  30FF               	movlw	255
  1931  0632  00AC               	movwf	??_sprintf
  1932  0633  082C               	movf	??_sprintf,w
  1933  0634  07B1               	addwf	sprintf@prec,f
  1934  0635  0A31               	incf	sprintf@prec,w
  1935  0636  1D03               	btfss	3,2
  1936  0637  2E39               	goto	u2791
  1937  0638  2E3A               	goto	u2790
  1938  0639                     u2791:
  1939  0639  2DF6               	goto	l2510
  1940  063A                     u2790:
  1941  063A                     l2518:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1944  063A  3001               	movlw	1
  1945  063B  07A9               	addwf	sprintf@f,f
  1946  063C  30FF               	movlw	-1
  1947  063D  0729               	addwf	sprintf@f,w
  1948  063E  0084               	movwf	4
  1949  063F  120A  118A  2717  120A  118A  	fcall	stringdir
  1950  0644  00AC               	movwf	??_sprintf
  1951  0645  082C               	movf	??_sprintf,w
  1952  0646  00B5               	movwf	sprintf@c
  1953  0647  0835               	movf	sprintf@c,w
  1954  0648  1D03               	btfss	3,2
  1955  0649  2E4B               	goto	u2801
  1956  064A  2E4C               	goto	u2800
  1957  064B                     u2801:
  1958  064B  2D6F               	goto	l2468
  1959  064C                     u2800:
  1960  064C                     l2520:
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1963  064C  0834               	movf	sprintf@sp,w
  1964  064D  0084               	movwf	4
  1965  064E  1383               	bcf	3,7	;select IRP bank0
  1966  064F  0180               	clrf	0
  1967  0650                     l300:
  1968  0650  0008               	return
  1969  0651                     __end_of_sprintf:
  1970                           
  1971                           	psect	text2
  1972  0D08                     __ptext2:	
  1973 ;; *************** function ___lwmod *****************
  1974 ;; Defined at:
  1975 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  divisor         2    3[BANK0 ] unsigned int 
  1978 ;;  dividend        2    5[BANK0 ] unsigned int 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  counter         1    8[BANK0 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  2    3[BANK0 ] unsigned int 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       4       0       0       0
  1991 ;;      Locals:         0       1       0       0       0
  1992 ;;      Temps:          0       1       0       0       0
  1993 ;;      Totals:         0       6       0       0       0
  1994 ;;Total ram usage:        6 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_sprintf
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function ___lwmod
  2006  0D08                     ___lwmod:
  2007  0D08                     l1688:	
  2008                           ;incstack = 0
  2009                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2010                           
  2011  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0D0A  0823               	movf	___lwmod@divisor,w
  2014  0D0B  0424               	iorwf	___lwmod@divisor+1,w
  2015  0D0C  1903               	btfsc	3,2
  2016  0D0D  2D0F               	goto	u1481
  2017  0D0E  2D10               	goto	u1480
  2018  0D0F                     u1481:
  2019  0D0F  2D3F               	goto	l1706
  2020  0D10                     u1480:
  2021  0D10                     l1690:
  2022  0D10  01A8               	clrf	___lwmod@counter
  2023  0D11  0AA8               	incf	___lwmod@counter,f
  2024  0D12  2D1E               	goto	l1696
  2025  0D13                     l1692:
  2026  0D13  3001               	movlw	1
  2027  0D14                     u1495:
  2028  0D14  1003               	clrc
  2029  0D15  0DA3               	rlf	___lwmod@divisor,f
  2030  0D16  0DA4               	rlf	___lwmod@divisor+1,f
  2031  0D17  3EFF               	addlw	-1
  2032  0D18  1D03               	skipz
  2033  0D19  2D14               	goto	u1495
  2034  0D1A                     l1694:
  2035  0D1A  3001               	movlw	1
  2036  0D1B  00A7               	movwf	??___lwmod
  2037  0D1C  0827               	movf	??___lwmod,w
  2038  0D1D  07A8               	addwf	___lwmod@counter,f
  2039  0D1E                     l1696:
  2040  0D1E  1FA4               	btfss	___lwmod@divisor+1,7
  2041  0D1F  2D21               	goto	u1501
  2042  0D20  2D22               	goto	u1500
  2043  0D21                     u1501:
  2044  0D21  2D13               	goto	l1692
  2045  0D22                     u1500:
  2046  0D22                     l1698:
  2047  0D22  0824               	movf	___lwmod@divisor+1,w
  2048  0D23  0226               	subwf	___lwmod@dividend+1,w
  2049  0D24  1D03               	skipz
  2050  0D25  2D28               	goto	u1515
  2051  0D26  0823               	movf	___lwmod@divisor,w
  2052  0D27  0225               	subwf	___lwmod@dividend,w
  2053  0D28                     u1515:
  2054  0D28  1C03               	skipc
  2055  0D29  2D2B               	goto	u1511
  2056  0D2A  2D2C               	goto	u1510
  2057  0D2B                     u1511:
  2058  0D2B  2D32               	goto	l1702
  2059  0D2C                     u1510:
  2060  0D2C                     l1700:
  2061  0D2C  0823               	movf	___lwmod@divisor,w
  2062  0D2D  02A5               	subwf	___lwmod@dividend,f
  2063  0D2E  0824               	movf	___lwmod@divisor+1,w
  2064  0D2F  1C03               	skipc
  2065  0D30  03A6               	decf	___lwmod@dividend+1,f
  2066  0D31  02A6               	subwf	___lwmod@dividend+1,f
  2067  0D32                     l1702:
  2068  0D32  3001               	movlw	1
  2069  0D33                     u1525:
  2070  0D33  1003               	clrc
  2071  0D34  0CA4               	rrf	___lwmod@divisor+1,f
  2072  0D35  0CA3               	rrf	___lwmod@divisor,f
  2073  0D36  3EFF               	addlw	-1
  2074  0D37  1D03               	skipz
  2075  0D38  2D33               	goto	u1525
  2076  0D39                     l1704:
  2077  0D39  3001               	movlw	1
  2078  0D3A  02A8               	subwf	___lwmod@counter,f
  2079  0D3B  1D03               	btfss	3,2
  2080  0D3C  2D3E               	goto	u1531
  2081  0D3D  2D3F               	goto	u1530
  2082  0D3E                     u1531:
  2083  0D3E  2D22               	goto	l1698
  2084  0D3F                     u1530:
  2085  0D3F                     l1706:
  2086  0D3F  0826               	movf	___lwmod@dividend+1,w
  2087  0D40  00A4               	movwf	?___lwmod+1
  2088  0D41  0825               	movf	___lwmod@dividend,w
  2089  0D42  00A3               	movwf	?___lwmod
  2090  0D43                     l586:
  2091  0D43  0008               	return
  2092  0D44                     __end_of___lwmod:
  2093                           
  2094                           	psect	text3
  2095  0E12                     __ptext3:	
  2096 ;; *************** function ___lwdiv *****************
  2097 ;; Defined at:
  2098 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  divisor         2    3[COMMON] unsigned int 
  2101 ;;  dividend        2    5[COMMON] unsigned int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  quotient        2    1[BANK0 ] unsigned int 
  2104 ;;  counter         1    0[BANK0 ] unsigned char 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2    3[COMMON] unsigned int 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2, status,0
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         4       0       0       0       0
  2115 ;;      Locals:         0       3       0       0       0
  2116 ;;      Temps:          1       0       0       0       0
  2117 ;;      Totals:         5       3       0       0       0
  2118 ;;Total ram usage:        8 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_sprintf
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function ___lwdiv
  2130  0E12                     ___lwdiv:
  2131  0E12                     l2400:	
  2132                           ;incstack = 0
  2133                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2134                           
  2135  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0E14  01A1               	clrf	___lwdiv@quotient
  2138  0E15  01A2               	clrf	___lwdiv@quotient+1
  2139  0E16                     l2402:
  2140  0E16  0873               	movf	___lwdiv@divisor,w
  2141  0E17  0474               	iorwf	___lwdiv@divisor+1,w
  2142  0E18  1903               	btfsc	3,2
  2143  0E19  2E1B               	goto	u2621
  2144  0E1A  2E1C               	goto	u2620
  2145  0E1B                     u2621:
  2146  0E1B  2E53               	goto	l2422
  2147  0E1C                     u2620:
  2148  0E1C                     l2404:
  2149  0E1C  01A0               	clrf	___lwdiv@counter
  2150  0E1D  0AA0               	incf	___lwdiv@counter,f
  2151  0E1E  2E2A               	goto	l2410
  2152  0E1F                     l2406:
  2153  0E1F  3001               	movlw	1
  2154  0E20                     u2635:
  2155  0E20  1003               	clrc
  2156  0E21  0DF3               	rlf	___lwdiv@divisor,f
  2157  0E22  0DF4               	rlf	___lwdiv@divisor+1,f
  2158  0E23  3EFF               	addlw	-1
  2159  0E24  1D03               	skipz
  2160  0E25  2E20               	goto	u2635
  2161  0E26                     l2408:
  2162  0E26  3001               	movlw	1
  2163  0E27  00F7               	movwf	??___lwdiv
  2164  0E28  0877               	movf	??___lwdiv,w
  2165  0E29  07A0               	addwf	___lwdiv@counter,f
  2166  0E2A                     l2410:
  2167  0E2A  1FF4               	btfss	___lwdiv@divisor+1,7
  2168  0E2B  2E2D               	goto	u2641
  2169  0E2C  2E2E               	goto	u2640
  2170  0E2D                     u2641:
  2171  0E2D  2E1F               	goto	l2406
  2172  0E2E                     u2640:
  2173  0E2E                     l2412:
  2174  0E2E  3001               	movlw	1
  2175  0E2F                     u2655:
  2176  0E2F  1003               	clrc
  2177  0E30  0DA1               	rlf	___lwdiv@quotient,f
  2178  0E31  0DA2               	rlf	___lwdiv@quotient+1,f
  2179  0E32  3EFF               	addlw	-1
  2180  0E33  1D03               	skipz
  2181  0E34  2E2F               	goto	u2655
  2182  0E35  0874               	movf	___lwdiv@divisor+1,w
  2183  0E36  0276               	subwf	___lwdiv@dividend+1,w
  2184  0E37  1D03               	skipz
  2185  0E38  2E3B               	goto	u2665
  2186  0E39  0873               	movf	___lwdiv@divisor,w
  2187  0E3A  0275               	subwf	___lwdiv@dividend,w
  2188  0E3B                     u2665:
  2189  0E3B  1C03               	skipc
  2190  0E3C  2E3E               	goto	u2661
  2191  0E3D  2E3F               	goto	u2660
  2192  0E3E                     u2661:
  2193  0E3E  2E46               	goto	l2418
  2194  0E3F                     u2660:
  2195  0E3F                     l2414:
  2196  0E3F  0873               	movf	___lwdiv@divisor,w
  2197  0E40  02F5               	subwf	___lwdiv@dividend,f
  2198  0E41  0874               	movf	___lwdiv@divisor+1,w
  2199  0E42  1C03               	skipc
  2200  0E43  03F6               	decf	___lwdiv@dividend+1,f
  2201  0E44  02F6               	subwf	___lwdiv@dividend+1,f
  2202  0E45                     l2416:
  2203  0E45  1421               	bsf	___lwdiv@quotient,0
  2204  0E46                     l2418:
  2205  0E46  3001               	movlw	1
  2206  0E47                     u2675:
  2207  0E47  1003               	clrc
  2208  0E48  0CF4               	rrf	___lwdiv@divisor+1,f
  2209  0E49  0CF3               	rrf	___lwdiv@divisor,f
  2210  0E4A  3EFF               	addlw	-1
  2211  0E4B  1D03               	skipz
  2212  0E4C  2E47               	goto	u2675
  2213  0E4D                     l2420:
  2214  0E4D  3001               	movlw	1
  2215  0E4E  02A0               	subwf	___lwdiv@counter,f
  2216  0E4F  1D03               	btfss	3,2
  2217  0E50  2E52               	goto	u2681
  2218  0E51  2E53               	goto	u2680
  2219  0E52                     u2681:
  2220  0E52  2E2E               	goto	l2412
  2221  0E53                     u2680:
  2222  0E53                     l2422:
  2223  0E53  0822               	movf	___lwdiv@quotient+1,w
  2224  0E54  00F4               	movwf	?___lwdiv+1
  2225  0E55  0821               	movf	___lwdiv@quotient,w
  2226  0E56  00F3               	movwf	?___lwdiv
  2227  0E57                     l576:
  2228  0E57  0008               	return
  2229  0E58                     __end_of___lwdiv:
  2230                           
  2231                           	psect	text4
  2232  0651                     __ptext4:	
  2233 ;; *************** function ___xxtofl *****************
  2234 ;; Defined at:
  2235 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  sign            1    wreg     unsigned char 
  2238 ;;  val             4    3[COMMON] long 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  sign            1    4[BANK0 ] unsigned char 
  2241 ;;  arg             4    6[BANK0 ] unsigned long 
  2242 ;;  exp             1    5[BANK0 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  4    3[COMMON] unsigned char 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         4       0       0       0       0
  2253 ;;      Locals:         0       6       0       0       0
  2254 ;;      Temps:          0       4       0       0       0
  2255 ;;      Totals:         4      10       0       0       0
  2256 ;;Total ram usage:       14 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_main
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function ___xxtofl
  2268  0651                     ___xxtofl:
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2272                           ;___xxtofl@sign stored from wreg
  2273  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0653  00A4               	movwf	___xxtofl@sign
  2276  0654                     l2528:
  2277  0654  0824               	movf	___xxtofl@sign,w
  2278  0655  1903               	btfsc	3,2
  2279  0656  2E58               	goto	u2811
  2280  0657  2E59               	goto	u2810
  2281  0658                     u2811:
  2282  0658  2E6D               	goto	l2534
  2283  0659                     u2810:
  2284  0659                     l2530:
  2285  0659  1FF6               	btfss	___xxtofl@val+3,7
  2286  065A  2E5C               	goto	u2821
  2287  065B  2E5D               	goto	u2820
  2288  065C                     u2821:
  2289  065C  2E6D               	goto	l2534
  2290  065D                     u2820:
  2291  065D                     l2532:
  2292  065D  0973               	comf	___xxtofl@val,w
  2293  065E  00A6               	movwf	___xxtofl@arg
  2294  065F  0974               	comf	___xxtofl@val+1,w
  2295  0660  00A7               	movwf	___xxtofl@arg+1
  2296  0661  0975               	comf	___xxtofl@val+2,w
  2297  0662  00A8               	movwf	___xxtofl@arg+2
  2298  0663  0976               	comf	___xxtofl@val+3,w
  2299  0664  00A9               	movwf	___xxtofl@arg+3
  2300  0665  0AA6               	incf	___xxtofl@arg,f
  2301  0666  1903               	skipnz
  2302  0667  0AA7               	incf	___xxtofl@arg+1,f
  2303  0668  1903               	skipnz
  2304  0669  0AA8               	incf	___xxtofl@arg+2,f
  2305  066A  1903               	skipnz
  2306  066B  0AA9               	incf	___xxtofl@arg+3,f
  2307  066C  2E75               	goto	l737
  2308  066D                     l2534:
  2309  066D  0876               	movf	___xxtofl@val+3,w
  2310  066E  00A9               	movwf	___xxtofl@arg+3
  2311  066F  0875               	movf	___xxtofl@val+2,w
  2312  0670  00A8               	movwf	___xxtofl@arg+2
  2313  0671  0874               	movf	___xxtofl@val+1,w
  2314  0672  00A7               	movwf	___xxtofl@arg+1
  2315  0673  0873               	movf	___xxtofl@val,w
  2316  0674  00A6               	movwf	___xxtofl@arg
  2317  0675                     l737:
  2318  0675  0876               	movf	___xxtofl@val+3,w
  2319  0676  0475               	iorwf	___xxtofl@val+2,w
  2320  0677  0474               	iorwf	___xxtofl@val+1,w
  2321  0678  0473               	iorwf	___xxtofl@val,w
  2322  0679  1D03               	skipz
  2323  067A  2E7C               	goto	u2831
  2324  067B  2E7D               	goto	u2830
  2325  067C                     u2831:
  2326  067C  2E86               	goto	l2540
  2327  067D                     u2830:
  2328  067D                     l2536:
  2329  067D  3000               	movlw	0
  2330  067E  00F6               	movwf	?___xxtofl+3
  2331  067F  3000               	movlw	0
  2332  0680  00F5               	movwf	?___xxtofl+2
  2333  0681  3000               	movlw	0
  2334  0682  00F4               	movwf	?___xxtofl+1
  2335  0683  3000               	movlw	0
  2336  0684  00F3               	movwf	?___xxtofl
  2337  0685  2F0C               	goto	l739
  2338  0686                     l2540:
  2339  0686  3096               	movlw	150
  2340  0687  00A0               	movwf	??___xxtofl
  2341  0688  0820               	movf	??___xxtofl,w
  2342  0689  00A5               	movwf	___xxtofl@exp
  2343  068A  2E98               	goto	l2544
  2344  068B                     l2542:
  2345  068B  3001               	movlw	1
  2346  068C  00A0               	movwf	??___xxtofl
  2347  068D  0820               	movf	??___xxtofl,w
  2348  068E  07A5               	addwf	___xxtofl@exp,f
  2349  068F  3001               	movlw	1
  2350  0690                     u2845:
  2351  0690  1003               	clrc
  2352  0691  0CA9               	rrf	___xxtofl@arg+3,f
  2353  0692  0CA8               	rrf	___xxtofl@arg+2,f
  2354  0693  0CA7               	rrf	___xxtofl@arg+1,f
  2355  0694  0CA6               	rrf	___xxtofl@arg,f
  2356  0695  3EFF               	addlw	-1
  2357  0696  1D03               	skipz
  2358  0697  2E90               	goto	u2845
  2359  0698                     l2544:
  2360  0698  30FE               	movlw	254
  2361  0699  0529               	andwf	___xxtofl@arg+3,w
  2362  069A  1D03               	btfss	3,2
  2363  069B  2E9D               	goto	u2851
  2364  069C  2E9E               	goto	u2850
  2365  069D                     u2851:
  2366  069D  2E8B               	goto	l2542
  2367  069E                     u2850:
  2368  069E  2EBA               	goto	l743
  2369  069F                     l2546:
  2370  069F  3001               	movlw	1
  2371  06A0  00A0               	movwf	??___xxtofl
  2372  06A1  0820               	movf	??___xxtofl,w
  2373  06A2  07A5               	addwf	___xxtofl@exp,f
  2374  06A3                     l2548:
  2375  06A3  3001               	movlw	1
  2376  06A4  07A6               	addwf	___xxtofl@arg,f
  2377  06A5  3000               	movlw	0
  2378  06A6  1803               	skipnc
  2379  06A7  3001               	movlw	1
  2380  06A8  07A7               	addwf	___xxtofl@arg+1,f
  2381  06A9  3000               	movlw	0
  2382  06AA  1803               	skipnc
  2383  06AB  3001               	movlw	1
  2384  06AC  07A8               	addwf	___xxtofl@arg+2,f
  2385  06AD  3000               	movlw	0
  2386  06AE  1803               	skipnc
  2387  06AF  3001               	movlw	1
  2388  06B0  07A9               	addwf	___xxtofl@arg+3,f
  2389  06B1                     l2550:
  2390  06B1  3001               	movlw	1
  2391  06B2                     u2865:
  2392  06B2  1003               	clrc
  2393  06B3  0CA9               	rrf	___xxtofl@arg+3,f
  2394  06B4  0CA8               	rrf	___xxtofl@arg+2,f
  2395  06B5  0CA7               	rrf	___xxtofl@arg+1,f
  2396  06B6  0CA6               	rrf	___xxtofl@arg,f
  2397  06B7  3EFF               	addlw	-1
  2398  06B8  1D03               	skipz
  2399  06B9  2EB2               	goto	u2865
  2400  06BA                     l743:
  2401  06BA  30FF               	movlw	255
  2402  06BB  0529               	andwf	___xxtofl@arg+3,w
  2403  06BC  1D03               	btfss	3,2
  2404  06BD  2EBF               	goto	u2871
  2405  06BE  2EC0               	goto	u2870
  2406  06BF                     u2871:
  2407  06BF  2E9F               	goto	l2546
  2408  06C0                     u2870:
  2409  06C0  2ECC               	goto	l2554
  2410  06C1                     l2552:
  2411  06C1  3001               	movlw	1
  2412  06C2  02A5               	subwf	___xxtofl@exp,f
  2413  06C3  3001               	movlw	1
  2414  06C4  00A0               	movwf	??___xxtofl
  2415  06C5                     u2885:
  2416  06C5  1003               	clrc
  2417  06C6  0DA6               	rlf	___xxtofl@arg,f
  2418  06C7  0DA7               	rlf	___xxtofl@arg+1,f
  2419  06C8  0DA8               	rlf	___xxtofl@arg+2,f
  2420  06C9  0DA9               	rlf	___xxtofl@arg+3,f
  2421  06CA  0BA0               	decfsz	??___xxtofl,f
  2422  06CB  2EC5               	goto	u2885
  2423  06CC                     l2554:
  2424  06CC  1BA8               	btfsc	___xxtofl@arg+2,7
  2425  06CD  2ECF               	goto	u2891
  2426  06CE  2ED0               	goto	u2890
  2427  06CF                     u2891:
  2428  06CF  2ED6               	goto	l750
  2429  06D0                     u2890:
  2430  06D0                     l2556:
  2431  06D0  3002               	movlw	2
  2432  06D1  0225               	subwf	___xxtofl@exp,w
  2433  06D2  1803               	skipnc
  2434  06D3  2ED5               	goto	u2901
  2435  06D4  2ED6               	goto	u2900
  2436  06D5                     u2901:
  2437  06D5  2EC1               	goto	l2552
  2438  06D6                     u2900:
  2439  06D6                     l750:
  2440  06D6  1825               	btfsc	___xxtofl@exp,0
  2441  06D7  2ED9               	goto	u2911
  2442  06D8  2EDA               	goto	u2910
  2443  06D9                     u2911:
  2444  06D9  2EE2               	goto	l751
  2445  06DA                     u2910:
  2446  06DA                     l2558:
  2447  06DA  30FF               	movlw	255
  2448  06DB  05A6               	andwf	___xxtofl@arg,f
  2449  06DC  30FF               	movlw	255
  2450  06DD  05A7               	andwf	___xxtofl@arg+1,f
  2451  06DE  307F               	movlw	127
  2452  06DF  05A8               	andwf	___xxtofl@arg+2,f
  2453  06E0  30FF               	movlw	255
  2454  06E1  05A9               	andwf	___xxtofl@arg+3,f
  2455  06E2                     l751:
  2456  06E2  1003               	clrc
  2457  06E3  0CA5               	rrf	___xxtofl@exp,f
  2458  06E4                     l2560:
  2459  06E4  0825               	movf	___xxtofl@exp,w
  2460  06E5  00A0               	movwf	??___xxtofl
  2461  06E6  01A1               	clrf	??___xxtofl+1
  2462  06E7  01A2               	clrf	??___xxtofl+2
  2463  06E8  01A3               	clrf	??___xxtofl+3
  2464  06E9  3018               	movlw	24
  2465  06EA                     u2925:
  2466  06EA  1003               	clrc
  2467  06EB  0DA0               	rlf	??___xxtofl,f
  2468  06EC  0DA1               	rlf	??___xxtofl+1,f
  2469  06ED  0DA2               	rlf	??___xxtofl+2,f
  2470  06EE  0DA3               	rlf	??___xxtofl+3,f
  2471  06EF                     u2920:
  2472  06EF  3EFF               	addlw	-1
  2473  06F0  1D03               	skipz
  2474  06F1  2EEA               	goto	u2925
  2475  06F2  0820               	movf	??___xxtofl,w
  2476  06F3  04A6               	iorwf	___xxtofl@arg,f
  2477  06F4  0821               	movf	??___xxtofl+1,w
  2478  06F5  04A7               	iorwf	___xxtofl@arg+1,f
  2479  06F6  0822               	movf	??___xxtofl+2,w
  2480  06F7  04A8               	iorwf	___xxtofl@arg+2,f
  2481  06F8  0823               	movf	??___xxtofl+3,w
  2482  06F9  04A9               	iorwf	___xxtofl@arg+3,f
  2483  06FA                     l2562:
  2484  06FA  0824               	movf	___xxtofl@sign,w
  2485  06FB  1903               	btfsc	3,2
  2486  06FC  2EFE               	goto	u2931
  2487  06FD  2EFF               	goto	u2930
  2488  06FE                     u2931:
  2489  06FE  2F04               	goto	l2568
  2490  06FF                     u2930:
  2491  06FF                     l2564:
  2492  06FF  1FF6               	btfss	___xxtofl@val+3,7
  2493  0700  2F02               	goto	u2941
  2494  0701  2F03               	goto	u2940
  2495  0702                     u2941:
  2496  0702  2F04               	goto	l2568
  2497  0703                     u2940:
  2498  0703                     l2566:
  2499  0703  17A9               	bsf	___xxtofl@arg+3,7
  2500  0704                     l2568:
  2501  0704  0829               	movf	___xxtofl@arg+3,w
  2502  0705  00F6               	movwf	?___xxtofl+3
  2503  0706  0828               	movf	___xxtofl@arg+2,w
  2504  0707  00F5               	movwf	?___xxtofl+2
  2505  0708  0827               	movf	___xxtofl@arg+1,w
  2506  0709  00F4               	movwf	?___xxtofl+1
  2507  070A  0826               	movf	___xxtofl@arg,w
  2508  070B  00F3               	movwf	?___xxtofl
  2509  070C                     l739:
  2510  070C  0008               	return
  2511  070D                     __end_of___xxtofl:
  2512                           
  2513                           	psect	text5
  2514  0F84                     __ptext5:	
  2515 ;; *************** function ___fltol *****************
  2516 ;; Defined at:
  2517 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  f1              4   36[BANK0 ] unsigned char 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  exp1            1   46[BANK0 ] unsigned char 
  2522 ;;  sign1           1   45[BANK0 ] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  4   36[BANK0 ] long 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       4       0       0       0
  2533 ;;      Locals:         0       2       0       0       0
  2534 ;;      Temps:          0       5       0       0       0
  2535 ;;      Totals:         0      11       0       0       0
  2536 ;;Total ram usage:       11 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    1
  2539 ;; This function calls:
  2540 ;;		Nothing
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           
  2547                           ;psect for function ___fltol
  2548  0F84                     ___fltol:
  2549  0F84                     l1910:	
  2550                           ;incstack = 0
  2551                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2552                           
  2553  0F84  1003               	clrc
  2554  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2556  0F87  0D46               	rlf	___fltol@f1+2,w
  2557  0F88  0D47               	rlf	___fltol@f1+3,w
  2558  0F89  00C8               	movwf	??___fltol
  2559  0F8A  0848               	movf	??___fltol,w
  2560  0F8B  00CE               	movwf	___fltol@exp1
  2561  0F8C  084E               	movf	___fltol@exp1,w
  2562  0F8D  1D03               	btfss	3,2
  2563  0F8E  2F90               	goto	u1751
  2564  0F8F  2F91               	goto	u1750
  2565  0F90                     u1751:
  2566  0F90  2F9A               	goto	l1916
  2567  0F91                     u1750:
  2568  0F91                     l1912:
  2569  0F91  3000               	movlw	0
  2570  0F92  00C7               	movwf	?___fltol+3
  2571  0F93  3000               	movlw	0
  2572  0F94  00C6               	movwf	?___fltol+2
  2573  0F95  3000               	movlw	0
  2574  0F96  00C5               	movwf	?___fltol+1
  2575  0F97  3000               	movlw	0
  2576  0F98  00C4               	movwf	?___fltol
  2577  0F99  2FFF               	goto	l490
  2578  0F9A                     l1916:
  2579  0F9A  0844               	movf	___fltol@f1,w
  2580  0F9B  00C8               	movwf	??___fltol
  2581  0F9C  0845               	movf	___fltol@f1+1,w
  2582  0F9D  00C9               	movwf	??___fltol+1
  2583  0F9E  0846               	movf	___fltol@f1+2,w
  2584  0F9F  00CA               	movwf	??___fltol+2
  2585  0FA0  0847               	movf	___fltol@f1+3,w
  2586  0FA1  00CB               	movwf	??___fltol+3
  2587  0FA2  301F               	movlw	31
  2588  0FA3                     u1765:
  2589  0FA3  1003               	clrc
  2590  0FA4  0CCB               	rrf	??___fltol+3,f
  2591  0FA5  0CCA               	rrf	??___fltol+2,f
  2592  0FA6  0CC9               	rrf	??___fltol+1,f
  2593  0FA7  0CC8               	rrf	??___fltol,f
  2594  0FA8                     u1760:
  2595  0FA8  3EFF               	addlw	-1
  2596  0FA9  1D03               	skipz
  2597  0FAA  2FA3               	goto	u1765
  2598  0FAB  0848               	movf	??___fltol,w
  2599  0FAC  00CC               	movwf	??___fltol+4
  2600  0FAD  084C               	movf	??___fltol+4,w
  2601  0FAE  00CD               	movwf	___fltol@sign1
  2602  0FAF                     l1918:
  2603  0FAF  17C6               	bsf	___fltol@f1+2,7
  2604  0FB0                     l1920:
  2605  0FB0  30FF               	movlw	255
  2606  0FB1  05C4               	andwf	___fltol@f1,f
  2607  0FB2  30FF               	movlw	255
  2608  0FB3  05C5               	andwf	___fltol@f1+1,f
  2609  0FB4  30FF               	movlw	255
  2610  0FB5  05C6               	andwf	___fltol@f1+2,f
  2611  0FB6  3000               	movlw	0
  2612  0FB7  05C7               	andwf	___fltol@f1+3,f
  2613  0FB8                     l1922:
  2614  0FB8  3096               	movlw	150
  2615  0FB9  02CE               	subwf	___fltol@exp1,f
  2616  0FBA                     l1924:
  2617  0FBA  1FCE               	btfss	___fltol@exp1,7
  2618  0FBB  2FBD               	goto	u1771
  2619  0FBC  2FBE               	goto	u1770
  2620  0FBD                     u1771:
  2621  0FBD  2FD8               	goto	l1934
  2622  0FBE                     u1770:
  2623  0FBE                     l1926:
  2624  0FBE  084E               	movf	___fltol@exp1,w
  2625  0FBF  3A80               	xorlw	128
  2626  0FC0  3E97               	addlw	151
  2627  0FC1  1803               	skipnc
  2628  0FC2  2FC4               	goto	u1781
  2629  0FC3  2FC5               	goto	u1780
  2630  0FC4                     u1781:
  2631  0FC4  2FC6               	goto	l1932
  2632  0FC5                     u1780:
  2633  0FC5  2F91               	goto	l1912
  2634  0FC6                     l1932:
  2635  0FC6  3001               	movlw	1
  2636  0FC7                     u1795:
  2637  0FC7  1003               	clrc
  2638  0FC8  0CC7               	rrf	___fltol@f1+3,f
  2639  0FC9  0CC6               	rrf	___fltol@f1+2,f
  2640  0FCA  0CC5               	rrf	___fltol@f1+1,f
  2641  0FCB  0CC4               	rrf	___fltol@f1,f
  2642  0FCC  3EFF               	addlw	-1
  2643  0FCD  1D03               	skipz
  2644  0FCE  2FC7               	goto	u1795
  2645  0FCF  3001               	movlw	1
  2646  0FD0  00C8               	movwf	??___fltol
  2647  0FD1  0848               	movf	??___fltol,w
  2648  0FD2  07CE               	addwf	___fltol@exp1,f
  2649  0FD3  1D03               	btfss	3,2
  2650  0FD4  2FD6               	goto	u1801
  2651  0FD5  2FD7               	goto	u1800
  2652  0FD6                     u1801:
  2653  0FD6  2FC6               	goto	l1932
  2654  0FD7                     u1800:
  2655  0FD7  2FEF               	goto	l1942
  2656  0FD8                     l1934:
  2657  0FD8  3020               	movlw	32
  2658  0FD9  024E               	subwf	___fltol@exp1,w
  2659  0FDA  1C03               	skipc
  2660  0FDB  2FDD               	goto	u1811
  2661  0FDC  2FDE               	goto	u1810
  2662  0FDD                     u1811:
  2663  0FDD  2FEA               	goto	l497
  2664  0FDE                     u1810:
  2665  0FDE  2F91               	goto	l1912
  2666  0FDF                     l1940:
  2667  0FDF  3001               	movlw	1
  2668  0FE0  00C8               	movwf	??___fltol
  2669  0FE1                     u1825:
  2670  0FE1  1003               	clrc
  2671  0FE2  0DC4               	rlf	___fltol@f1,f
  2672  0FE3  0DC5               	rlf	___fltol@f1+1,f
  2673  0FE4  0DC6               	rlf	___fltol@f1+2,f
  2674  0FE5  0DC7               	rlf	___fltol@f1+3,f
  2675  0FE6  0BC8               	decfsz	??___fltol,f
  2676  0FE7  2FE1               	goto	u1825
  2677  0FE8  3001               	movlw	1
  2678  0FE9  02CE               	subwf	___fltol@exp1,f
  2679  0FEA                     l497:
  2680  0FEA  084E               	movf	___fltol@exp1,w
  2681  0FEB  1D03               	btfss	3,2
  2682  0FEC  2FEE               	goto	u1831
  2683  0FED  2FEF               	goto	u1830
  2684  0FEE                     u1831:
  2685  0FEE  2FDF               	goto	l1940
  2686  0FEF                     u1830:
  2687  0FEF                     l1942:
  2688  0FEF  084D               	movf	___fltol@sign1,w
  2689  0FF0  1903               	btfsc	3,2
  2690  0FF1  2FF3               	goto	u1841
  2691  0FF2  2FF4               	goto	u1840
  2692  0FF3                     u1841:
  2693  0FF3  2FFF               	goto	l500
  2694  0FF4                     u1840:
  2695  0FF4                     l1944:
  2696  0FF4  09C4               	comf	___fltol@f1,f
  2697  0FF5  09C5               	comf	___fltol@f1+1,f
  2698  0FF6  09C6               	comf	___fltol@f1+2,f
  2699  0FF7  09C7               	comf	___fltol@f1+3,f
  2700  0FF8  0AC4               	incf	___fltol@f1,f
  2701  0FF9  1903               	skipnz
  2702  0FFA  0AC5               	incf	___fltol@f1+1,f
  2703  0FFB  1903               	skipnz
  2704  0FFC  0AC6               	incf	___fltol@f1+2,f
  2705  0FFD  1903               	skipnz
  2706  0FFE  0AC7               	incf	___fltol@f1+3,f
  2707  0FFF                     l500:
  2708  0FFF                     l490:
  2709  0FFF  0008               	return
  2710  1000                     __end_of___fltol:
  2711                           
  2712                           	psect	text6
  2713  001F                     __ptext6:	
  2714 ;; *************** function ___flmul *****************
  2715 ;; Defined at:
  2716 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  b               4   10[BANK0 ] long 
  2719 ;;  a               4   14[BANK0 ] long 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  prod            4   30[BANK0 ] struct .
  2722 ;;  grs             4   24[BANK0 ] unsigned long 
  2723 ;;  temp            2   34[BANK0 ] struct .
  2724 ;;  bexp            1   29[BANK0 ] unsigned char 
  2725 ;;  aexp            1   28[BANK0 ] unsigned char 
  2726 ;;  sign            1   23[BANK0 ] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  4   10[BANK0 ] unsigned char 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       8       0       0       0
  2737 ;;      Locals:         0      13       0       0       0
  2738 ;;      Temps:          0       5       0       0       0
  2739 ;;      Totals:         0      26       0       0       0
  2740 ;;Total ram usage:       26 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    2
  2743 ;; This function calls:
  2744 ;;		__Umul8_16
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function ___flmul
  2752  001F                     ___flmul:
  2753  001F                     l1946:	
  2754                           ;incstack = 0
  2755                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2756                           
  2757  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0021  082D               	movf	___flmul@b+3,w
  2760  0022  3980               	andlw	128
  2761  0023  00B2               	movwf	??___flmul
  2762  0024  0832               	movf	??___flmul,w
  2763  0025  00B7               	movwf	___flmul@sign
  2764  0026                     l1948:
  2765  0026  082D               	movf	___flmul@b+3,w
  2766  0027  00B2               	movwf	??___flmul
  2767  0028  0732               	addwf	??___flmul,w
  2768  0029  00B3               	movwf	??___flmul+1
  2769  002A  0833               	movf	??___flmul+1,w
  2770  002B  00BD               	movwf	___flmul@bexp
  2771  002C                     l1950:
  2772  002C  1FAC               	btfss	___flmul@b+2,7
  2773  002D  282F               	goto	u1851
  2774  002E  2830               	goto	u1850
  2775  002F                     u1851:
  2776  002F  2831               	goto	l1954
  2777  0030                     u1850:
  2778  0030                     l1952:
  2779  0030  143D               	bsf	___flmul@bexp,0
  2780  0031                     l1954:
  2781  0031  083D               	movf	___flmul@bexp,w
  2782  0032  1903               	btfsc	3,2
  2783  0033  2835               	goto	u1861
  2784  0034  2836               	goto	u1860
  2785  0035                     u1861:
  2786  0035  2845               	goto	l1962
  2787  0036                     u1860:
  2788  0036                     l1956:
  2789  0036  0A3D               	incf	___flmul@bexp,w
  2790  0037  1D03               	btfss	3,2
  2791  0038  283A               	goto	u1871
  2792  0039  283B               	goto	u1870
  2793  003A                     u1871:
  2794  003A  2843               	goto	l1960
  2795  003B                     u1870:
  2796  003B                     l1958:
  2797  003B  3000               	movlw	0
  2798  003C  00AD               	movwf	___flmul@b+3
  2799  003D  3000               	movlw	0
  2800  003E  00AC               	movwf	___flmul@b+2
  2801  003F  3000               	movlw	0
  2802  0040  00AB               	movwf	___flmul@b+1
  2803  0041  3000               	movlw	0
  2804  0042  00AA               	movwf	___flmul@b
  2805  0043                     l1960:
  2806  0043  17AC               	bsf	___flmul@b+2,7
  2807  0044  284D               	goto	l1964
  2808  0045                     l1962:
  2809  0045  3000               	movlw	0
  2810  0046  00AD               	movwf	___flmul@b+3
  2811  0047  3000               	movlw	0
  2812  0048  00AC               	movwf	___flmul@b+2
  2813  0049  3000               	movlw	0
  2814  004A  00AB               	movwf	___flmul@b+1
  2815  004B  3000               	movlw	0
  2816  004C  00AA               	movwf	___flmul@b
  2817  004D                     l1964:
  2818  004D  0831               	movf	___flmul@a+3,w
  2819  004E  3980               	andlw	128
  2820  004F  00B2               	movwf	??___flmul
  2821  0050  0832               	movf	??___flmul,w
  2822  0051  06B7               	xorwf	___flmul@sign,f
  2823  0052                     l1966:
  2824  0052  0831               	movf	___flmul@a+3,w
  2825  0053  00B2               	movwf	??___flmul
  2826  0054  0732               	addwf	??___flmul,w
  2827  0055  00B3               	movwf	??___flmul+1
  2828  0056  0833               	movf	??___flmul+1,w
  2829  0057  00BC               	movwf	___flmul@aexp
  2830  0058                     l1968:
  2831  0058  1FB0               	btfss	___flmul@a+2,7
  2832  0059  285B               	goto	u1881
  2833  005A  285C               	goto	u1880
  2834  005B                     u1881:
  2835  005B  285D               	goto	l1972
  2836  005C                     u1880:
  2837  005C                     l1970:
  2838  005C  143C               	bsf	___flmul@aexp,0
  2839  005D                     l1972:
  2840  005D  083C               	movf	___flmul@aexp,w
  2841  005E  1903               	btfsc	3,2
  2842  005F  2861               	goto	u1891
  2843  0060  2862               	goto	u1890
  2844  0061                     u1891:
  2845  0061  2871               	goto	l1980
  2846  0062                     u1890:
  2847  0062                     l1974:
  2848  0062  0A3C               	incf	___flmul@aexp,w
  2849  0063  1D03               	btfss	3,2
  2850  0064  2866               	goto	u1901
  2851  0065  2867               	goto	u1900
  2852  0066                     u1901:
  2853  0066  286F               	goto	l1978
  2854  0067                     u1900:
  2855  0067                     l1976:
  2856  0067  3000               	movlw	0
  2857  0068  00B1               	movwf	___flmul@a+3
  2858  0069  3000               	movlw	0
  2859  006A  00B0               	movwf	___flmul@a+2
  2860  006B  3000               	movlw	0
  2861  006C  00AF               	movwf	___flmul@a+1
  2862  006D  3000               	movlw	0
  2863  006E  00AE               	movwf	___flmul@a
  2864  006F                     l1978:
  2865  006F  17B0               	bsf	___flmul@a+2,7
  2866  0070  2879               	goto	l1982
  2867  0071                     l1980:
  2868  0071  3000               	movlw	0
  2869  0072  00B1               	movwf	___flmul@a+3
  2870  0073  3000               	movlw	0
  2871  0074  00B0               	movwf	___flmul@a+2
  2872  0075  3000               	movlw	0
  2873  0076  00AF               	movwf	___flmul@a+1
  2874  0077  3000               	movlw	0
  2875  0078  00AE               	movwf	___flmul@a
  2876  0079                     l1982:
  2877  0079  083C               	movf	___flmul@aexp,w
  2878  007A  1903               	btfsc	3,2
  2879  007B  287D               	goto	u1911
  2880  007C  287E               	goto	u1910
  2881  007D                     u1911:
  2882  007D  2883               	goto	l1986
  2883  007E                     u1910:
  2884  007E                     l1984:
  2885  007E  083D               	movf	___flmul@bexp,w
  2886  007F  1D03               	btfss	3,2
  2887  0080  2882               	goto	u1921
  2888  0081  2883               	goto	u1920
  2889  0082                     u1921:
  2890  0082  288C               	goto	l1990
  2891  0083                     u1920:
  2892  0083                     l1986:
  2893  0083  3000               	movlw	0
  2894  0084  00AD               	movwf	?___flmul+3
  2895  0085  3000               	movlw	0
  2896  0086  00AC               	movwf	?___flmul+2
  2897  0087  3000               	movlw	0
  2898  0088  00AB               	movwf	?___flmul+1
  2899  0089  3000               	movlw	0
  2900  008A  00AA               	movwf	?___flmul
  2901  008B  2B7F               	goto	l693
  2902  008C                     l1990:
  2903  008C  082A               	movf	___flmul@b,w
  2904  008D  00B2               	movwf	??___flmul
  2905  008E  0832               	movf	??___flmul,w
  2906  008F  00F3               	movwf	__Umul8_16@multiplicand
  2907  0090  0830               	movf	___flmul@a+2,w
  2908  0091  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  2909  0096  0874               	movf	?__Umul8_16+1,w
  2910  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0099  00C3               	movwf	___flmul@temp+1
  2913  009A  0873               	movf	?__Umul8_16,w
  2914  009B  00C2               	movwf	___flmul@temp
  2915  009C                     l1992:
  2916  009C  0842               	movf	___flmul@temp,w
  2917  009D  00B2               	movwf	??___flmul
  2918  009E  01B3               	clrf	??___flmul+1
  2919  009F  01B4               	clrf	??___flmul+2
  2920  00A0  01B5               	clrf	??___flmul+3
  2921  00A1  0835               	movf	??___flmul+3,w
  2922  00A2  00BB               	movwf	___flmul@grs+3
  2923  00A3  0834               	movf	??___flmul+2,w
  2924  00A4  00BA               	movwf	___flmul@grs+2
  2925  00A5  0833               	movf	??___flmul+1,w
  2926  00A6  00B9               	movwf	___flmul@grs+1
  2927  00A7  0832               	movf	??___flmul,w
  2928  00A8  00B8               	movwf	___flmul@grs
  2929  00A9                     l1994:
  2930  00A9  0843               	movf	___flmul@temp+1,w
  2931  00AA  00B2               	movwf	??___flmul
  2932  00AB  01B3               	clrf	??___flmul+1
  2933  00AC  01B4               	clrf	??___flmul+2
  2934  00AD  01B5               	clrf	??___flmul+3
  2935  00AE  0835               	movf	??___flmul+3,w
  2936  00AF  00C1               	movwf	___flmul@prod+3
  2937  00B0  0834               	movf	??___flmul+2,w
  2938  00B1  00C0               	movwf	___flmul@prod+2
  2939  00B2  0833               	movf	??___flmul+1,w
  2940  00B3  00BF               	movwf	___flmul@prod+1
  2941  00B4  0832               	movf	??___flmul,w
  2942  00B5  00BE               	movwf	___flmul@prod
  2943  00B6  082B               	movf	___flmul@b+1,w
  2944  00B7  00B2               	movwf	??___flmul
  2945  00B8  0832               	movf	??___flmul,w
  2946  00B9  00F3               	movwf	__Umul8_16@multiplicand
  2947  00BA  082F               	movf	___flmul@a+1,w
  2948  00BB  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  2949  00C0  0874               	movf	?__Umul8_16+1,w
  2950  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2951  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2952  00C3  00C3               	movwf	___flmul@temp+1
  2953  00C4  0873               	movf	?__Umul8_16,w
  2954  00C5  00C2               	movwf	___flmul@temp
  2955  00C6                     l1996:
  2956  00C6  0842               	movf	___flmul@temp,w
  2957  00C7  00B2               	movwf	??___flmul
  2958  00C8  01B3               	clrf	??___flmul+1
  2959  00C9  01B4               	clrf	??___flmul+2
  2960  00CA  01B5               	clrf	??___flmul+3
  2961  00CB  0832               	movf	??___flmul,w
  2962  00CC  07B8               	addwf	___flmul@grs,f
  2963  00CD  0833               	movf	??___flmul+1,w
  2964  00CE  1103               	clrz
  2965  00CF  1803               	skipnc
  2966  00D0  3E01               	addlw	1
  2967  00D1  1903               	skipnz
  2968  00D2  28D4               	goto	u1931
  2969  00D3  07B9               	addwf	___flmul@grs+1,f
  2970  00D4                     u1931:
  2971  00D4  0834               	movf	??___flmul+2,w
  2972  00D5  1103               	clrz
  2973  00D6  1803               	skipnc
  2974  00D7  3E01               	addlw	1
  2975  00D8  1903               	skipnz
  2976  00D9  28DB               	goto	u1932
  2977  00DA  07BA               	addwf	___flmul@grs+2,f
  2978  00DB                     u1932:
  2979  00DB  0835               	movf	??___flmul+3,w
  2980  00DC  1103               	clrz
  2981  00DD  1803               	skipnc
  2982  00DE  3E01               	addlw	1
  2983  00DF  1903               	skipnz
  2984  00E0  28E2               	goto	u1933
  2985  00E1  07BB               	addwf	___flmul@grs+3,f
  2986  00E2                     u1933:
  2987  00E2                     l1998:
  2988  00E2  0843               	movf	___flmul@temp+1,w
  2989  00E3  00B2               	movwf	??___flmul
  2990  00E4  01B3               	clrf	??___flmul+1
  2991  00E5  01B4               	clrf	??___flmul+2
  2992  00E6  01B5               	clrf	??___flmul+3
  2993  00E7  0832               	movf	??___flmul,w
  2994  00E8  07BE               	addwf	___flmul@prod,f
  2995  00E9  0833               	movf	??___flmul+1,w
  2996  00EA  1103               	clrz
  2997  00EB  1803               	skipnc
  2998  00EC  3E01               	addlw	1
  2999  00ED  1903               	skipnz
  3000  00EE  28F0               	goto	u1941
  3001  00EF  07BF               	addwf	___flmul@prod+1,f
  3002  00F0                     u1941:
  3003  00F0  0834               	movf	??___flmul+2,w
  3004  00F1  1103               	clrz
  3005  00F2  1803               	skipnc
  3006  00F3  3E01               	addlw	1
  3007  00F4  1903               	skipnz
  3008  00F5  28F7               	goto	u1942
  3009  00F6  07C0               	addwf	___flmul@prod+2,f
  3010  00F7                     u1942:
  3011  00F7  0835               	movf	??___flmul+3,w
  3012  00F8  1103               	clrz
  3013  00F9  1803               	skipnc
  3014  00FA  3E01               	addlw	1
  3015  00FB  1903               	skipnz
  3016  00FC  28FE               	goto	u1943
  3017  00FD  07C1               	addwf	___flmul@prod+3,f
  3018  00FE                     u1943:
  3019  00FE  082C               	movf	___flmul@b+2,w
  3020  00FF  00B2               	movwf	??___flmul
  3021  0100  0832               	movf	??___flmul,w
  3022  0101  00F3               	movwf	__Umul8_16@multiplicand
  3023  0102  082E               	movf	___flmul@a,w
  3024  0103  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3025  0108  0874               	movf	?__Umul8_16+1,w
  3026  0109  1283               	bcf	3,5	;RP0=0, select bank0
  3027  010A  1303               	bcf	3,6	;RP1=0, select bank0
  3028  010B  00C3               	movwf	___flmul@temp+1
  3029  010C  0873               	movf	?__Umul8_16,w
  3030  010D  00C2               	movwf	___flmul@temp
  3031  010E                     l2000:
  3032  010E  0842               	movf	___flmul@temp,w
  3033  010F  00B2               	movwf	??___flmul
  3034  0110  01B3               	clrf	??___flmul+1
  3035  0111  01B4               	clrf	??___flmul+2
  3036  0112  01B5               	clrf	??___flmul+3
  3037  0113  0832               	movf	??___flmul,w
  3038  0114  07B8               	addwf	___flmul@grs,f
  3039  0115  0833               	movf	??___flmul+1,w
  3040  0116  1103               	clrz
  3041  0117  1803               	skipnc
  3042  0118  3E01               	addlw	1
  3043  0119  1903               	skipnz
  3044  011A  291C               	goto	u1951
  3045  011B  07B9               	addwf	___flmul@grs+1,f
  3046  011C                     u1951:
  3047  011C  0834               	movf	??___flmul+2,w
  3048  011D  1103               	clrz
  3049  011E  1803               	skipnc
  3050  011F  3E01               	addlw	1
  3051  0120  1903               	skipnz
  3052  0121  2923               	goto	u1952
  3053  0122  07BA               	addwf	___flmul@grs+2,f
  3054  0123                     u1952:
  3055  0123  0835               	movf	??___flmul+3,w
  3056  0124  1103               	clrz
  3057  0125  1803               	skipnc
  3058  0126  3E01               	addlw	1
  3059  0127  1903               	skipnz
  3060  0128  292A               	goto	u1953
  3061  0129  07BB               	addwf	___flmul@grs+3,f
  3062  012A                     u1953:
  3063  012A                     l2002:
  3064  012A  0843               	movf	___flmul@temp+1,w
  3065  012B  00B2               	movwf	??___flmul
  3066  012C  01B3               	clrf	??___flmul+1
  3067  012D  01B4               	clrf	??___flmul+2
  3068  012E  01B5               	clrf	??___flmul+3
  3069  012F  0832               	movf	??___flmul,w
  3070  0130  07BE               	addwf	___flmul@prod,f
  3071  0131  0833               	movf	??___flmul+1,w
  3072  0132  1103               	clrz
  3073  0133  1803               	skipnc
  3074  0134  3E01               	addlw	1
  3075  0135  1903               	skipnz
  3076  0136  2938               	goto	u1961
  3077  0137  07BF               	addwf	___flmul@prod+1,f
  3078  0138                     u1961:
  3079  0138  0834               	movf	??___flmul+2,w
  3080  0139  1103               	clrz
  3081  013A  1803               	skipnc
  3082  013B  3E01               	addlw	1
  3083  013C  1903               	skipnz
  3084  013D  293F               	goto	u1962
  3085  013E  07C0               	addwf	___flmul@prod+2,f
  3086  013F                     u1962:
  3087  013F  0835               	movf	??___flmul+3,w
  3088  0140  1103               	clrz
  3089  0141  1803               	skipnc
  3090  0142  3E01               	addlw	1
  3091  0143  1903               	skipnz
  3092  0144  2946               	goto	u1963
  3093  0145  07C1               	addwf	___flmul@prod+3,f
  3094  0146                     u1963:
  3095  0146                     l2004:
  3096  0146  3008               	movlw	8
  3097  0147  00B2               	movwf	??___flmul
  3098  0148                     u1975:
  3099  0148  1003               	clrc
  3100  0149  0DB8               	rlf	___flmul@grs,f
  3101  014A  0DB9               	rlf	___flmul@grs+1,f
  3102  014B  0DBA               	rlf	___flmul@grs+2,f
  3103  014C  0DBB               	rlf	___flmul@grs+3,f
  3104  014D  0BB2               	decfsz	??___flmul,f
  3105  014E  2948               	goto	u1975
  3106  014F                     l2006:
  3107  014F  082B               	movf	___flmul@b+1,w
  3108  0150  00B2               	movwf	??___flmul
  3109  0151  0832               	movf	??___flmul,w
  3110  0152  00F3               	movwf	__Umul8_16@multiplicand
  3111  0153  082E               	movf	___flmul@a,w
  3112  0154  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3113  0159  0874               	movf	?__Umul8_16+1,w
  3114  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3115  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3116  015C  00C3               	movwf	___flmul@temp+1
  3117  015D  0873               	movf	?__Umul8_16,w
  3118  015E  00C2               	movwf	___flmul@temp
  3119  015F                     l2008:
  3120  015F  0842               	movf	___flmul@temp,w
  3121  0160  00B2               	movwf	??___flmul
  3122  0161  0843               	movf	___flmul@temp+1,w
  3123  0162  00B3               	movwf	??___flmul+1
  3124  0163  01B4               	clrf	??___flmul+2
  3125  0164  01B5               	clrf	??___flmul+3
  3126  0165  0832               	movf	??___flmul,w
  3127  0166  07B8               	addwf	___flmul@grs,f
  3128  0167  0833               	movf	??___flmul+1,w
  3129  0168  1103               	clrz
  3130  0169  1803               	skipnc
  3131  016A  3E01               	addlw	1
  3132  016B  1903               	skipnz
  3133  016C  296E               	goto	u1981
  3134  016D  07B9               	addwf	___flmul@grs+1,f
  3135  016E                     u1981:
  3136  016E  0834               	movf	??___flmul+2,w
  3137  016F  1103               	clrz
  3138  0170  1803               	skipnc
  3139  0171  3E01               	addlw	1
  3140  0172  1903               	skipnz
  3141  0173  2975               	goto	u1982
  3142  0174  07BA               	addwf	___flmul@grs+2,f
  3143  0175                     u1982:
  3144  0175  0835               	movf	??___flmul+3,w
  3145  0176  1103               	clrz
  3146  0177  1803               	skipnc
  3147  0178  3E01               	addlw	1
  3148  0179  1903               	skipnz
  3149  017A  297C               	goto	u1983
  3150  017B  07BB               	addwf	___flmul@grs+3,f
  3151  017C                     u1983:
  3152  017C                     l2010:
  3153  017C  082A               	movf	___flmul@b,w
  3154  017D  00B2               	movwf	??___flmul
  3155  017E  0832               	movf	??___flmul,w
  3156  017F  00F3               	movwf	__Umul8_16@multiplicand
  3157  0180  082F               	movf	___flmul@a+1,w
  3158  0181  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3159  0186  0874               	movf	?__Umul8_16+1,w
  3160  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3161  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3162  0189  00C3               	movwf	___flmul@temp+1
  3163  018A  0873               	movf	?__Umul8_16,w
  3164  018B  00C2               	movwf	___flmul@temp
  3165  018C                     l2012:
  3166  018C  0842               	movf	___flmul@temp,w
  3167  018D  00B2               	movwf	??___flmul
  3168  018E  0843               	movf	___flmul@temp+1,w
  3169  018F  00B3               	movwf	??___flmul+1
  3170  0190  01B4               	clrf	??___flmul+2
  3171  0191  01B5               	clrf	??___flmul+3
  3172  0192  0832               	movf	??___flmul,w
  3173  0193  07B8               	addwf	___flmul@grs,f
  3174  0194  0833               	movf	??___flmul+1,w
  3175  0195  1103               	clrz
  3176  0196  1803               	skipnc
  3177  0197  3E01               	addlw	1
  3178  0198  1903               	skipnz
  3179  0199  299B               	goto	u1991
  3180  019A  07B9               	addwf	___flmul@grs+1,f
  3181  019B                     u1991:
  3182  019B  0834               	movf	??___flmul+2,w
  3183  019C  1103               	clrz
  3184  019D  1803               	skipnc
  3185  019E  3E01               	addlw	1
  3186  019F  1903               	skipnz
  3187  01A0  29A2               	goto	u1992
  3188  01A1  07BA               	addwf	___flmul@grs+2,f
  3189  01A2                     u1992:
  3190  01A2  0835               	movf	??___flmul+3,w
  3191  01A3  1103               	clrz
  3192  01A4  1803               	skipnc
  3193  01A5  3E01               	addlw	1
  3194  01A6  1903               	skipnz
  3195  01A7  29A9               	goto	u1993
  3196  01A8  07BB               	addwf	___flmul@grs+3,f
  3197  01A9                     u1993:
  3198  01A9                     l2014:
  3199  01A9  3008               	movlw	8
  3200  01AA  00B2               	movwf	??___flmul
  3201  01AB                     u2005:
  3202  01AB  1003               	clrc
  3203  01AC  0DB8               	rlf	___flmul@grs,f
  3204  01AD  0DB9               	rlf	___flmul@grs+1,f
  3205  01AE  0DBA               	rlf	___flmul@grs+2,f
  3206  01AF  0DBB               	rlf	___flmul@grs+3,f
  3207  01B0  0BB2               	decfsz	??___flmul,f
  3208  01B1  29AB               	goto	u2005
  3209  01B2  082A               	movf	___flmul@b,w
  3210  01B3  00B2               	movwf	??___flmul
  3211  01B4  0832               	movf	??___flmul,w
  3212  01B5  00F3               	movwf	__Umul8_16@multiplicand
  3213  01B6  082E               	movf	___flmul@a,w
  3214  01B7  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3215  01BC  0874               	movf	?__Umul8_16+1,w
  3216  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  3217  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  3218  01BF  00C3               	movwf	___flmul@temp+1
  3219  01C0  0873               	movf	?__Umul8_16,w
  3220  01C1  00C2               	movwf	___flmul@temp
  3221  01C2                     l2016:
  3222  01C2  0842               	movf	___flmul@temp,w
  3223  01C3  00B2               	movwf	??___flmul
  3224  01C4  0843               	movf	___flmul@temp+1,w
  3225  01C5  00B3               	movwf	??___flmul+1
  3226  01C6  01B4               	clrf	??___flmul+2
  3227  01C7  01B5               	clrf	??___flmul+3
  3228  01C8  0832               	movf	??___flmul,w
  3229  01C9  07B8               	addwf	___flmul@grs,f
  3230  01CA  0833               	movf	??___flmul+1,w
  3231  01CB  1103               	clrz
  3232  01CC  1803               	skipnc
  3233  01CD  3E01               	addlw	1
  3234  01CE  1903               	skipnz
  3235  01CF  29D1               	goto	u2011
  3236  01D0  07B9               	addwf	___flmul@grs+1,f
  3237  01D1                     u2011:
  3238  01D1  0834               	movf	??___flmul+2,w
  3239  01D2  1103               	clrz
  3240  01D3  1803               	skipnc
  3241  01D4  3E01               	addlw	1
  3242  01D5  1903               	skipnz
  3243  01D6  29D8               	goto	u2012
  3244  01D7  07BA               	addwf	___flmul@grs+2,f
  3245  01D8                     u2012:
  3246  01D8  0835               	movf	??___flmul+3,w
  3247  01D9  1103               	clrz
  3248  01DA  1803               	skipnc
  3249  01DB  3E01               	addlw	1
  3250  01DC  1903               	skipnz
  3251  01DD  29DF               	goto	u2013
  3252  01DE  07BB               	addwf	___flmul@grs+3,f
  3253  01DF                     u2013:
  3254  01DF                     l2018:
  3255  01DF  082B               	movf	___flmul@b+1,w
  3256  01E0  00B2               	movwf	??___flmul
  3257  01E1  0832               	movf	??___flmul,w
  3258  01E2  00F3               	movwf	__Umul8_16@multiplicand
  3259  01E3  0830               	movf	___flmul@a+2,w
  3260  01E4  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3261  01E9  0874               	movf	?__Umul8_16+1,w
  3262  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3263  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3264  01EC  00C3               	movwf	___flmul@temp+1
  3265  01ED  0873               	movf	?__Umul8_16,w
  3266  01EE  00C2               	movwf	___flmul@temp
  3267  01EF  0842               	movf	___flmul@temp,w
  3268  01F0  00B2               	movwf	??___flmul
  3269  01F1  0843               	movf	___flmul@temp+1,w
  3270  01F2  00B3               	movwf	??___flmul+1
  3271  01F3  01B4               	clrf	??___flmul+2
  3272  01F4  01B5               	clrf	??___flmul+3
  3273  01F5  0832               	movf	??___flmul,w
  3274  01F6  07BE               	addwf	___flmul@prod,f
  3275  01F7  0833               	movf	??___flmul+1,w
  3276  01F8  1103               	clrz
  3277  01F9  1803               	skipnc
  3278  01FA  3E01               	addlw	1
  3279  01FB  1903               	skipnz
  3280  01FC  29FE               	goto	u2021
  3281  01FD  07BF               	addwf	___flmul@prod+1,f
  3282  01FE                     u2021:
  3283  01FE  0834               	movf	??___flmul+2,w
  3284  01FF  1103               	clrz
  3285  0200  1803               	skipnc
  3286  0201  3E01               	addlw	1
  3287  0202  1903               	skipnz
  3288  0203  2A05               	goto	u2022
  3289  0204  07C0               	addwf	___flmul@prod+2,f
  3290  0205                     u2022:
  3291  0205  0835               	movf	??___flmul+3,w
  3292  0206  1103               	clrz
  3293  0207  1803               	skipnc
  3294  0208  3E01               	addlw	1
  3295  0209  1903               	skipnz
  3296  020A  2A0C               	goto	u2023
  3297  020B  07C1               	addwf	___flmul@prod+3,f
  3298  020C                     u2023:
  3299  020C                     l2020:
  3300  020C  082C               	movf	___flmul@b+2,w
  3301  020D  00B2               	movwf	??___flmul
  3302  020E  0832               	movf	??___flmul,w
  3303  020F  00F3               	movwf	__Umul8_16@multiplicand
  3304  0210  082F               	movf	___flmul@a+1,w
  3305  0211  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3306  0216  0874               	movf	?__Umul8_16+1,w
  3307  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0219  00C3               	movwf	___flmul@temp+1
  3310  021A  0873               	movf	?__Umul8_16,w
  3311  021B  00C2               	movwf	___flmul@temp
  3312  021C                     l2022:
  3313  021C  0842               	movf	___flmul@temp,w
  3314  021D  00B2               	movwf	??___flmul
  3315  021E  0843               	movf	___flmul@temp+1,w
  3316  021F  00B3               	movwf	??___flmul+1
  3317  0220  01B4               	clrf	??___flmul+2
  3318  0221  01B5               	clrf	??___flmul+3
  3319  0222  0832               	movf	??___flmul,w
  3320  0223  07BE               	addwf	___flmul@prod,f
  3321  0224  0833               	movf	??___flmul+1,w
  3322  0225  1103               	clrz
  3323  0226  1803               	skipnc
  3324  0227  3E01               	addlw	1
  3325  0228  1903               	skipnz
  3326  0229  2A2B               	goto	u2031
  3327  022A  07BF               	addwf	___flmul@prod+1,f
  3328  022B                     u2031:
  3329  022B  0834               	movf	??___flmul+2,w
  3330  022C  1103               	clrz
  3331  022D  1803               	skipnc
  3332  022E  3E01               	addlw	1
  3333  022F  1903               	skipnz
  3334  0230  2A32               	goto	u2032
  3335  0231  07C0               	addwf	___flmul@prod+2,f
  3336  0232                     u2032:
  3337  0232  0835               	movf	??___flmul+3,w
  3338  0233  1103               	clrz
  3339  0234  1803               	skipnc
  3340  0235  3E01               	addlw	1
  3341  0236  1903               	skipnz
  3342  0237  2A39               	goto	u2033
  3343  0238  07C1               	addwf	___flmul@prod+3,f
  3344  0239                     u2033:
  3345  0239  082C               	movf	___flmul@b+2,w
  3346  023A  00B2               	movwf	??___flmul
  3347  023B  0832               	movf	??___flmul,w
  3348  023C  00F3               	movwf	__Umul8_16@multiplicand
  3349  023D  0830               	movf	___flmul@a+2,w
  3350  023E  120A  158A  24B3  120A  118A  	fcall	__Umul8_16
  3351  0243  0874               	movf	?__Umul8_16+1,w
  3352  0244  1283               	bcf	3,5	;RP0=0, select bank0
  3353  0245  1303               	bcf	3,6	;RP1=0, select bank0
  3354  0246  00C3               	movwf	___flmul@temp+1
  3355  0247  0873               	movf	?__Umul8_16,w
  3356  0248  00C2               	movwf	___flmul@temp
  3357  0249                     l2024:
  3358  0249  0842               	movf	___flmul@temp,w
  3359  024A  00B2               	movwf	??___flmul
  3360  024B  0843               	movf	___flmul@temp+1,w
  3361  024C  00B3               	movwf	??___flmul+1
  3362  024D  01B4               	clrf	??___flmul+2
  3363  024E  01B5               	clrf	??___flmul+3
  3364  024F  3008               	movlw	8
  3365  0250                     u2045:
  3366  0250  1003               	clrc
  3367  0251  0DB2               	rlf	??___flmul,f
  3368  0252  0DB3               	rlf	??___flmul+1,f
  3369  0253  0DB4               	rlf	??___flmul+2,f
  3370  0254  0DB5               	rlf	??___flmul+3,f
  3371  0255                     u2040:
  3372  0255  3EFF               	addlw	-1
  3373  0256  1D03               	skipz
  3374  0257  2A50               	goto	u2045
  3375  0258  0832               	movf	??___flmul,w
  3376  0259  07BE               	addwf	___flmul@prod,f
  3377  025A  0833               	movf	??___flmul+1,w
  3378  025B  1103               	clrz
  3379  025C  1803               	skipnc
  3380  025D  3E01               	addlw	1
  3381  025E  1903               	skipnz
  3382  025F  2A61               	goto	u2051
  3383  0260  07BF               	addwf	___flmul@prod+1,f
  3384  0261                     u2051:
  3385  0261  0834               	movf	??___flmul+2,w
  3386  0262  1103               	clrz
  3387  0263  1803               	skipnc
  3388  0264  3E01               	addlw	1
  3389  0265  1903               	skipnz
  3390  0266  2A68               	goto	u2052
  3391  0267  07C0               	addwf	___flmul@prod+2,f
  3392  0268                     u2052:
  3393  0268  0835               	movf	??___flmul+3,w
  3394  0269  1103               	clrz
  3395  026A  1803               	skipnc
  3396  026B  3E01               	addlw	1
  3397  026C  1903               	skipnz
  3398  026D  2A6F               	goto	u2053
  3399  026E  07C1               	addwf	___flmul@prod+3,f
  3400  026F                     u2053:
  3401  026F                     l2026:
  3402  026F  0838               	movf	___flmul@grs,w
  3403  0270  00B2               	movwf	??___flmul
  3404  0271  0839               	movf	___flmul@grs+1,w
  3405  0272  00B3               	movwf	??___flmul+1
  3406  0273  083A               	movf	___flmul@grs+2,w
  3407  0274  00B4               	movwf	??___flmul+2
  3408  0275  083B               	movf	___flmul@grs+3,w
  3409  0276  00B5               	movwf	??___flmul+3
  3410  0277  3018               	movlw	24
  3411  0278                     u2065:
  3412  0278  1003               	clrc
  3413  0279  0CB5               	rrf	??___flmul+3,f
  3414  027A  0CB4               	rrf	??___flmul+2,f
  3415  027B  0CB3               	rrf	??___flmul+1,f
  3416  027C  0CB2               	rrf	??___flmul,f
  3417  027D                     u2060:
  3418  027D  3EFF               	addlw	-1
  3419  027E  1D03               	skipz
  3420  027F  2A78               	goto	u2065
  3421  0280  0832               	movf	??___flmul,w
  3422  0281  07BE               	addwf	___flmul@prod,f
  3423  0282  0833               	movf	??___flmul+1,w
  3424  0283  1103               	clrz
  3425  0284  1803               	skipnc
  3426  0285  3E01               	addlw	1
  3427  0286  1903               	skipnz
  3428  0287  2A89               	goto	u2071
  3429  0288  07BF               	addwf	___flmul@prod+1,f
  3430  0289                     u2071:
  3431  0289  0834               	movf	??___flmul+2,w
  3432  028A  1103               	clrz
  3433  028B  1803               	skipnc
  3434  028C  3E01               	addlw	1
  3435  028D  1903               	skipnz
  3436  028E  2A90               	goto	u2072
  3437  028F  07C0               	addwf	___flmul@prod+2,f
  3438  0290                     u2072:
  3439  0290  0835               	movf	??___flmul+3,w
  3440  0291  1103               	clrz
  3441  0292  1803               	skipnc
  3442  0293  3E01               	addlw	1
  3443  0294  1903               	skipnz
  3444  0295  2A97               	goto	u2073
  3445  0296  07C1               	addwf	___flmul@prod+3,f
  3446  0297                     u2073:
  3447  0297                     l2028:
  3448  0297  3008               	movlw	8
  3449  0298  00B2               	movwf	??___flmul
  3450  0299                     u2085:
  3451  0299  1003               	clrc
  3452  029A  0DB8               	rlf	___flmul@grs,f
  3453  029B  0DB9               	rlf	___flmul@grs+1,f
  3454  029C  0DBA               	rlf	___flmul@grs+2,f
  3455  029D  0DBB               	rlf	___flmul@grs+3,f
  3456  029E  0BB2               	decfsz	??___flmul,f
  3457  029F  2A99               	goto	u2085
  3458  02A0                     l2030:
  3459  02A0  083D               	movf	___flmul@bexp,w
  3460  02A1  073C               	addwf	___flmul@aexp,w
  3461  02A2  00B2               	movwf	??___flmul
  3462  02A3  01B3               	clrf	??___flmul+1
  3463  02A4  0DB3               	rlf	??___flmul+1,f
  3464  02A5  0832               	movf	??___flmul,w
  3465  02A6  3E82               	addlw	130
  3466  02A7  00C2               	movwf	___flmul@temp
  3467  02A8  0833               	movf	??___flmul+1,w
  3468  02A9  1803               	skipnc
  3469  02AA  3E01               	addlw	1
  3470  02AB  3EFF               	addlw	255
  3471  02AC  00C3               	movwf	___flmul@temp+1
  3472  02AD  2ACB               	goto	l2042
  3473  02AE                     l2032:
  3474  02AE  3001               	movlw	1
  3475  02AF  00B2               	movwf	??___flmul
  3476  02B0                     u2095:
  3477  02B0  1003               	clrc
  3478  02B1  0DBE               	rlf	___flmul@prod,f
  3479  02B2  0DBF               	rlf	___flmul@prod+1,f
  3480  02B3  0DC0               	rlf	___flmul@prod+2,f
  3481  02B4  0DC1               	rlf	___flmul@prod+3,f
  3482  02B5  0BB2               	decfsz	??___flmul,f
  3483  02B6  2AB0               	goto	u2095
  3484  02B7                     l2034:
  3485  02B7  1FBB               	btfss	___flmul@grs+3,7
  3486  02B8  2ABA               	goto	u2101
  3487  02B9  2ABB               	goto	u2100
  3488  02BA                     u2101:
  3489  02BA  2ABC               	goto	l2038
  3490  02BB                     u2100:
  3491  02BB                     l2036:
  3492  02BB  143E               	bsf	___flmul@prod,0
  3493  02BC                     l2038:
  3494  02BC  3001               	movlw	1
  3495  02BD  00B2               	movwf	??___flmul
  3496  02BE                     u2115:
  3497  02BE  1003               	clrc
  3498  02BF  0DB8               	rlf	___flmul@grs,f
  3499  02C0  0DB9               	rlf	___flmul@grs+1,f
  3500  02C1  0DBA               	rlf	___flmul@grs+2,f
  3501  02C2  0DBB               	rlf	___flmul@grs+3,f
  3502  02C3  0BB2               	decfsz	??___flmul,f
  3503  02C4  2ABE               	goto	u2115
  3504  02C5                     l2040:
  3505  02C5  30FF               	movlw	255
  3506  02C6  07C2               	addwf	___flmul@temp,f
  3507  02C7  1803               	skipnc
  3508  02C8  0AC3               	incf	___flmul@temp+1,f
  3509  02C9  30FF               	movlw	255
  3510  02CA  07C3               	addwf	___flmul@temp+1,f
  3511  02CB                     l2042:
  3512  02CB  1FC0               	btfss	___flmul@prod+2,7
  3513  02CC  2ACE               	goto	u2121
  3514  02CD  2ACF               	goto	u2120
  3515  02CE                     u2121:
  3516  02CE  2AAE               	goto	l2032
  3517  02CF                     u2120:
  3518  02CF                     l2044:
  3519  02CF  01BC               	clrf	___flmul@aexp
  3520  02D0                     l2046:
  3521  02D0  1FBB               	btfss	___flmul@grs+3,7
  3522  02D1  2AD3               	goto	u2131
  3523  02D2  2AD4               	goto	u2130
  3524  02D3                     u2131:
  3525  02D3  2AF0               	goto	l2054
  3526  02D4                     u2130:
  3527  02D4                     l2048:
  3528  02D4  30FF               	movlw	255
  3529  02D5  0538               	andwf	___flmul@grs,w
  3530  02D6  00B2               	movwf	??___flmul
  3531  02D7  30FF               	movlw	255
  3532  02D8  0539               	andwf	___flmul@grs+1,w
  3533  02D9  00B3               	movwf	??___flmul+1
  3534  02DA  30FF               	movlw	255
  3535  02DB  053A               	andwf	___flmul@grs+2,w
  3536  02DC  00B4               	movwf	??___flmul+2
  3537  02DD  307F               	movlw	127
  3538  02DE  053B               	andwf	___flmul@grs+3,w
  3539  02DF  00B5               	movwf	??___flmul+3
  3540  02E0  0835               	movf	??___flmul+3,w
  3541  02E1  0434               	iorwf	??___flmul+2,w
  3542  02E2  0433               	iorwf	??___flmul+1,w
  3543  02E3  0432               	iorwf	??___flmul,w
  3544  02E4  1903               	skipnz
  3545  02E5  2AE7               	goto	u2141
  3546  02E6  2AE8               	goto	u2140
  3547  02E7                     u2141:
  3548  02E7  2AEB               	goto	l699
  3549  02E8                     u2140:
  3550  02E8                     l2050:
  3551  02E8  01BC               	clrf	___flmul@aexp
  3552  02E9  0ABC               	incf	___flmul@aexp,f
  3553  02EA  2AF0               	goto	l2054
  3554  02EB                     l699:
  3555  02EB  1C3E               	btfss	___flmul@prod,0
  3556  02EC  2AEE               	goto	u2151
  3557  02ED  2AEF               	goto	u2150
  3558  02EE                     u2151:
  3559  02EE  2AF0               	goto	l2054
  3560  02EF                     u2150:
  3561  02EF  2AE8               	goto	l2050
  3562  02F0                     l2054:
  3563  02F0  083C               	movf	___flmul@aexp,w
  3564  02F1  1903               	btfsc	3,2
  3565  02F2  2AF4               	goto	u2161
  3566  02F3  2AF5               	goto	u2160
  3567  02F4                     u2161:
  3568  02F4  2B26               	goto	l2064
  3569  02F5                     u2160:
  3570  02F5                     l2056:
  3571  02F5  3001               	movlw	1
  3572  02F6  07BE               	addwf	___flmul@prod,f
  3573  02F7  3000               	movlw	0
  3574  02F8  1803               	skipnc
  3575  02F9  3001               	movlw	1
  3576  02FA  07BF               	addwf	___flmul@prod+1,f
  3577  02FB  3000               	movlw	0
  3578  02FC  1803               	skipnc
  3579  02FD  3001               	movlw	1
  3580  02FE  07C0               	addwf	___flmul@prod+2,f
  3581  02FF  3000               	movlw	0
  3582  0300  1803               	skipnc
  3583  0301  3001               	movlw	1
  3584  0302  07C1               	addwf	___flmul@prod+3,f
  3585  0303                     l2058:
  3586  0303  1C41               	btfss	___flmul@prod+3,0
  3587  0304  2B06               	goto	u2171
  3588  0305  2B07               	goto	u2170
  3589  0306                     u2171:
  3590  0306  2B26               	goto	l2064
  3591  0307                     u2170:
  3592  0307                     l2060:
  3593  0307  083E               	movf	___flmul@prod,w
  3594  0308  00B2               	movwf	??___flmul
  3595  0309  083F               	movf	___flmul@prod+1,w
  3596  030A  00B3               	movwf	??___flmul+1
  3597  030B  0840               	movf	___flmul@prod+2,w
  3598  030C  00B4               	movwf	??___flmul+2
  3599  030D  0841               	movf	___flmul@prod+3,w
  3600  030E  00B5               	movwf	??___flmul+3
  3601  030F  3001               	movlw	1
  3602  0310  00B6               	movwf	??___flmul+4
  3603  0311                     u2185:
  3604  0311  0D35               	rlf	??___flmul+3,w
  3605  0312  0CB5               	rrf	??___flmul+3,f
  3606  0313  0CB4               	rrf	??___flmul+2,f
  3607  0314  0CB3               	rrf	??___flmul+1,f
  3608  0315  0CB2               	rrf	??___flmul,f
  3609  0316                     u2180:
  3610  0316  0BB6               	decfsz	??___flmul+4,f
  3611  0317  2B11               	goto	u2185
  3612  0318  0835               	movf	??___flmul+3,w
  3613  0319  00C1               	movwf	___flmul@prod+3
  3614  031A  0834               	movf	??___flmul+2,w
  3615  031B  00C0               	movwf	___flmul@prod+2
  3616  031C  0833               	movf	??___flmul+1,w
  3617  031D  00BF               	movwf	___flmul@prod+1
  3618  031E  0832               	movf	??___flmul,w
  3619  031F  00BE               	movwf	___flmul@prod
  3620  0320                     l2062:
  3621  0320  3001               	movlw	1
  3622  0321  07C2               	addwf	___flmul@temp,f
  3623  0322  1803               	skipnc
  3624  0323  0AC3               	incf	___flmul@temp+1,f
  3625  0324  3000               	movlw	0
  3626  0325  07C3               	addwf	___flmul@temp+1,f
  3627  0326                     l2064:
  3628  0326  0843               	movf	___flmul@temp+1,w
  3629  0327  3A80               	xorlw	128
  3630  0328  00FF               	movwf	btemp+1
  3631  0329  3080               	movlw	128
  3632  032A  027F               	subwf	btemp+1,w
  3633  032B  1D03               	skipz
  3634  032C  2B2F               	goto	u2195
  3635  032D  30FF               	movlw	255
  3636  032E  0242               	subwf	___flmul@temp,w
  3637  032F                     u2195:
  3638  032F  1C03               	skipc
  3639  0330  2B32               	goto	u2191
  3640  0331  2B33               	goto	u2190
  3641  0332                     u2191:
  3642  0332  2B3E               	goto	l2068
  3643  0333                     u2190:
  3644  0333                     l2066:
  3645  0333  307F               	movlw	127
  3646  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0336  00C1               	movwf	___flmul@prod+3
  3649  0337  3080               	movlw	128
  3650  0338  00C0               	movwf	___flmul@prod+2
  3651  0339  3000               	movlw	0
  3652  033A  00BF               	movwf	___flmul@prod+1
  3653  033B  3000               	movlw	0
  3654  033C  00BE               	movwf	___flmul@prod
  3655  033D  2B73               	goto	l705
  3656  033E                     l2068:
  3657  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3658  033F  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0340  0843               	movf	___flmul@temp+1,w
  3660  0341  3A80               	xorlw	128
  3661  0342  00FF               	movwf	btemp+1
  3662  0343  3080               	movlw	128
  3663  0344  027F               	subwf	btemp+1,w
  3664  0345  1D03               	skipz
  3665  0346  2B49               	goto	u2205
  3666  0347  3001               	movlw	1
  3667  0348  0242               	subwf	___flmul@temp,w
  3668  0349                     u2205:
  3669  0349  1803               	skipnc
  3670  034A  2B4C               	goto	u2201
  3671  034B  2B4D               	goto	u2200
  3672  034C                     u2201:
  3673  034C  2B59               	goto	l2074
  3674  034D                     u2200:
  3675  034D                     l2070:
  3676  034D  3000               	movlw	0
  3677  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3678  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0350  00C1               	movwf	___flmul@prod+3
  3680  0351  3000               	movlw	0
  3681  0352  00C0               	movwf	___flmul@prod+2
  3682  0353  3000               	movlw	0
  3683  0354  00BF               	movwf	___flmul@prod+1
  3684  0355  3000               	movlw	0
  3685  0356  00BE               	movwf	___flmul@prod
  3686  0357                     l2072:
  3687  0357  01B7               	clrf	___flmul@sign
  3688  0358  2B73               	goto	l705
  3689  0359                     l2074:
  3690  0359  1283               	bcf	3,5	;RP0=0, select bank0
  3691  035A  1303               	bcf	3,6	;RP1=0, select bank0
  3692  035B  0842               	movf	___flmul@temp,w
  3693  035C  00B2               	movwf	??___flmul
  3694  035D  0832               	movf	??___flmul,w
  3695  035E  00BD               	movwf	___flmul@bexp
  3696  035F  30FF               	movlw	255
  3697  0360  05BE               	andwf	___flmul@prod,f
  3698  0361  30FF               	movlw	255
  3699  0362  05BF               	andwf	___flmul@prod+1,f
  3700  0363  307F               	movlw	127
  3701  0364  05C0               	andwf	___flmul@prod+2,f
  3702  0365  3000               	movlw	0
  3703  0366  05C1               	andwf	___flmul@prod+3,f
  3704  0367                     l2076:
  3705  0367  1C3D               	btfss	___flmul@bexp,0
  3706  0368  2B6A               	goto	u2211
  3707  0369  2B6B               	goto	u2210
  3708  036A                     u2211:
  3709  036A  2B6C               	goto	l2080
  3710  036B                     u2210:
  3711  036B                     l2078:
  3712  036B  17C0               	bsf	___flmul@prod+2,7
  3713  036C                     l2080:
  3714  036C  083D               	movf	___flmul@bexp,w
  3715  036D  00B2               	movwf	??___flmul
  3716  036E  1003               	clrc
  3717  036F  0C32               	rrf	??___flmul,w
  3718  0370  00B3               	movwf	??___flmul+1
  3719  0371  0833               	movf	??___flmul+1,w
  3720  0372  00C1               	movwf	___flmul@prod+3
  3721  0373                     l705:
  3722  0373  0837               	movf	___flmul@sign,w
  3723  0374  00B2               	movwf	??___flmul
  3724  0375  0832               	movf	??___flmul,w
  3725  0376  04C1               	iorwf	___flmul@prod+3,f
  3726  0377                     l2082:
  3727  0377  0841               	movf	___flmul@prod+3,w
  3728  0378  00AD               	movwf	?___flmul+3
  3729  0379  0840               	movf	___flmul@prod+2,w
  3730  037A  00AC               	movwf	?___flmul+2
  3731  037B  083F               	movf	___flmul@prod+1,w
  3732  037C  00AB               	movwf	?___flmul+1
  3733  037D  083E               	movf	___flmul@prod,w
  3734  037E  00AA               	movwf	?___flmul
  3735  037F                     l693:
  3736  037F  0008               	return
  3737  0380                     __end_of___flmul:
  3738                           
  3739                           	psect	text7
  3740  0CB3                     __ptext7:	
  3741 ;; *************** function __Umul8_16 *****************
  3742 ;; Defined at:
  3743 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  multiplier      1    wreg     unsigned char 
  3746 ;;  multiplicand    1    3[COMMON] unsigned char 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3749 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3750 ;;  product         2    0[BANK0 ] unsigned int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2    3[COMMON] unsigned int 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         2       0       0       0       0
  3761 ;;      Locals:         0       5       0       0       0
  3762 ;;      Temps:          2       0       0       0       0
  3763 ;;      Totals:         4       5       0       0       0
  3764 ;;Total ram usage:        9 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    1
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		___flmul
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function __Umul8_16
  3776  0CB3                     __Umul8_16:
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3780                           ;__Umul8_16@multiplier stored from wreg
  3781  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0CB5  00A4               	movwf	__Umul8_16@multiplier
  3784  0CB6                     l1710:
  3785  0CB6  01A0               	clrf	__Umul8_16@product
  3786  0CB7  01A1               	clrf	__Umul8_16@product+1
  3787  0CB8                     l1712:
  3788  0CB8  0873               	movf	__Umul8_16@multiplicand,w
  3789  0CB9  00F5               	movwf	??__Umul8_16
  3790  0CBA  01F6               	clrf	??__Umul8_16+1
  3791  0CBB  0875               	movf	??__Umul8_16,w
  3792  0CBC  00A2               	movwf	__Umul8_16@word_mpld
  3793  0CBD  0876               	movf	??__Umul8_16+1,w
  3794  0CBE  00A3               	movwf	__Umul8_16@word_mpld+1
  3795  0CBF                     l1714:
  3796  0CBF  1C24               	btfss	__Umul8_16@multiplier,0
  3797  0CC0  2CC2               	goto	u1541
  3798  0CC1  2CC3               	goto	u1540
  3799  0CC2                     u1541:
  3800  0CC2  2CC9               	goto	l712
  3801  0CC3                     u1540:
  3802  0CC3                     l1716:
  3803  0CC3  0822               	movf	__Umul8_16@word_mpld,w
  3804  0CC4  07A0               	addwf	__Umul8_16@product,f
  3805  0CC5  1803               	skipnc
  3806  0CC6  0AA1               	incf	__Umul8_16@product+1,f
  3807  0CC7  0823               	movf	__Umul8_16@word_mpld+1,w
  3808  0CC8  07A1               	addwf	__Umul8_16@product+1,f
  3809  0CC9                     l712:
  3810  0CC9  3001               	movlw	1
  3811  0CCA                     u1555:
  3812  0CCA  1003               	clrc
  3813  0CCB  0DA2               	rlf	__Umul8_16@word_mpld,f
  3814  0CCC  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3815  0CCD  3EFF               	addlw	-1
  3816  0CCE  1D03               	skipz
  3817  0CCF  2CCA               	goto	u1555
  3818  0CD0  1003               	clrc
  3819  0CD1  0CA4               	rrf	__Umul8_16@multiplier,f
  3820  0CD2                     l1718:
  3821  0CD2  0824               	movf	__Umul8_16@multiplier,w
  3822  0CD3  1D03               	btfss	3,2
  3823  0CD4  2CD6               	goto	u1561
  3824  0CD5  2CD7               	goto	u1560
  3825  0CD6                     u1561:
  3826  0CD6  2CBF               	goto	l1714
  3827  0CD7                     u1560:
  3828  0CD7                     l1720:
  3829  0CD7  0821               	movf	__Umul8_16@product+1,w
  3830  0CD8  00F4               	movwf	?__Umul8_16+1
  3831  0CD9  0820               	movf	__Umul8_16@product,w
  3832  0CDA  00F3               	movwf	?__Umul8_16
  3833  0CDB                     l714:
  3834  0CDB  0008               	return
  3835  0CDC                     __end_of__Umul8_16:
  3836                           
  3837                           	psect	text8
  3838  0D87                     __ptext8:	
  3839 ;; *************** function _USART_CONFIG *****************
  3840 ;; Defined at:
  3841 ;;		line 11 in file "USART.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  frec            2    0[BANK0 ] int 
  3844 ;;  tr              2    2[BANK0 ] int 
  3845 ;;  rc              2    4[BANK0 ] int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       6       0       0       0
  3858 ;;      Locals:         0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0
  3860 ;;      Totals:         0       6       0       0       0
  3861 ;;Total ram usage:        6 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; Hardware stack levels required when called:    1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           
  3872                           ;psect for function _USART_CONFIG
  3873  0D87                     _USART_CONFIG:
  3874  0D87                     l2428:	
  3875                           ;incstack = 0
  3876                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  3877                           
  3878                           
  3879                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  3880  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0D89  1798               	bsf	24,7	;volatile
  3883                           
  3884                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  3885  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  3886  0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  3887  0D8C  1218               	bcf	24,4	;volatile
  3888                           
  3889                           ;USART.c: 14:     TXSTAbits.TX9 = 0;
  3890  0D8D  1318               	bcf	24,6	;volatile
  3891                           
  3892                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  3893  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3895  0D90  1318               	bcf	24,6	;volatile
  3896                           
  3897                           ;USART.c: 16:     switch(frec){
  3898  0D91  2DA4               	goto	l2444
  3899  0D92                     l2430:
  3900                           
  3901                           ;USART.c: 18:             SPBRG = 25;
  3902  0D92  3019               	movlw	25
  3903  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0D94  1303               	bcf	3,6	;RP1=0, select bank1
  3905  0D95  0099               	movwf	25	;volatile
  3906  0D96                     l2432:
  3907                           
  3908                           ;USART.c: 19:             TXSTAbits.BRGH = 1;
  3909  0D96  1518               	bsf	24,2	;volatile
  3910  0D97                     l2434:
  3911                           
  3912                           ;USART.c: 20:             BAUDCTLbits.BRG16 = 0;
  3913  0D97  1683               	bsf	3,5	;RP0=1, select bank3
  3914  0D98  1703               	bsf	3,6	;RP1=1, select bank3
  3915  0D99  1187               	bcf	7,3	;volatile
  3916                           
  3917                           ;USART.c: 21:             break;
  3918  0D9A  2DB1               	goto	l2446
  3919  0D9B                     l2436:
  3920                           
  3921                           ;USART.c: 23:             SPBRG = 12;
  3922  0D9B  300C               	movlw	12
  3923  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  3924  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  3925  0D9E  0099               	movwf	25	;volatile
  3926  0D9F                     l2438:
  3927                           
  3928                           ;USART.c: 24:             TXSTAbits.BRGH = 0;
  3929  0D9F  1118               	bcf	24,2	;volatile
  3930  0DA0                     l2440:
  3931                           
  3932                           ;USART.c: 25:             BAUDCTLbits.BRG16 = 0;
  3933  0DA0  1683               	bsf	3,5	;RP0=1, select bank3
  3934  0DA1  1703               	bsf	3,6	;RP1=1, select bank3
  3935  0DA2  1187               	bcf	7,3	;volatile
  3936                           
  3937                           ;USART.c: 26:             break;
  3938  0DA3  2DB1               	goto	l2446
  3939  0DA4                     l2444:
  3940                           
  3941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3942                           ; Switch size 1, requested type "simple"
  3943                           ; Number of cases is 1, Range of values is 0 to 0
  3944                           ; switch strategies available:
  3945                           ; Name         Instructions Cycles
  3946                           ; simple_byte            4     3 (average)
  3947                           ; direct_byte           11     8 (fixed)
  3948                           ; jumptable            260     6 (fixed)
  3949                           ;	Chosen strategy is simple_byte
  3950  0DA4  0821               	movf	USART_CONFIG@frec+1,w
  3951  0DA5  3A00               	xorlw	0	; case 0
  3952  0DA6  1903               	skipnz
  3953  0DA7  2DA9               	goto	l2730
  3954  0DA8  2DB1               	goto	l2446
  3955  0DA9                     l2730:
  3956                           
  3957                           ; Switch size 1, requested type "simple"
  3958                           ; Number of cases is 2, Range of values is 4 to 8
  3959                           ; switch strategies available:
  3960                           ; Name         Instructions Cycles
  3961                           ; simple_byte            7     4 (average)
  3962                           ; direct_byte           26    11 (fixed)
  3963                           ; jumptable            263     9 (fixed)
  3964                           ;	Chosen strategy is simple_byte
  3965  0DA9  0820               	movf	USART_CONFIG@frec,w
  3966  0DAA  3A04               	xorlw	4	; case 4
  3967  0DAB  1903               	skipnz
  3968  0DAC  2D92               	goto	l2430
  3969  0DAD  3A0C               	xorlw	12	; case 8
  3970  0DAE  1903               	skipnz
  3971  0DAF  2D9B               	goto	l2436
  3972  0DB0  2DB1               	goto	l2446
  3973  0DB1                     l2446:
  3974                           
  3975                           ;USART.c: 28:     if(tr==1){
  3976  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3978  0DB3  0322               	decf	USART_CONFIG@tr,w
  3979  0DB4  0423               	iorwf	USART_CONFIG@tr+1,w
  3980  0DB5  1D03               	btfss	3,2
  3981  0DB6  2DB8               	goto	u2691
  3982  0DB7  2DB9               	goto	u2690
  3983  0DB8                     u2691:
  3984  0DB8  2DBD               	goto	l148
  3985  0DB9                     u2690:
  3986  0DB9                     l2448:
  3987                           
  3988                           ;USART.c: 29:         TXEN = 1;
  3989  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  3990  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  3991  0DBB  1698               	bsf	24,5	;volatile
  3992                           
  3993                           ;USART.c: 30:     }
  3994  0DBC  2DC0               	goto	l2450
  3995  0DBD                     l148:	
  3996                           ;USART.c: 31:     else{
  3997                           
  3998                           
  3999                           ;USART.c: 32:         TXEN = 0;
  4000  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  4001  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  4002  0DBF  1298               	bcf	24,5	;volatile
  4003  0DC0                     l2450:
  4004                           
  4005                           ;USART.c: 34:     if(rc == 1){
  4006  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0DC2  0324               	decf	USART_CONFIG@rc,w
  4009  0DC3  0425               	iorwf	USART_CONFIG@rc+1,w
  4010  0DC4  1D03               	btfss	3,2
  4011  0DC5  2DC7               	goto	u2701
  4012  0DC6  2DC8               	goto	u2700
  4013  0DC7                     u2701:
  4014  0DC7  2DCA               	goto	l150
  4015  0DC8                     u2700:
  4016  0DC8                     l2452:
  4017                           
  4018                           ;USART.c: 35:         RCSTAbits.CREN = 1;
  4019  0DC8  1618               	bsf	24,4	;volatile
  4020                           
  4021                           ;USART.c: 36:     }
  4022  0DC9  2DCB               	goto	l152
  4023  0DCA                     l150:	
  4024                           ;USART.c: 37:     else{
  4025                           
  4026                           
  4027                           ;USART.c: 38:         RCSTAbits.CREN = 0;
  4028  0DCA  1218               	bcf	24,4	;volatile
  4029  0DCB                     l152:
  4030  0DCB  0008               	return
  4031  0DCC                     __end_of_USART_CONFIG:
  4032                           
  4033                           	psect	text9
  4034  0C8B                     __ptext9:	
  4035 ;; *************** function _UART_write *****************
  4036 ;; Defined at:
  4037 ;;		line 51 in file "Lab2.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  word            2    3[COMMON] PTR unsigned char 
  4040 ;;		 -> STR_14(4), STR_13(9), STR_11(8), STR_9(4), 
  4041 ;;		 -> buffer(5), STR_3(32), STR_2(33), 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4053 ;;      Params:         2       0       0       0       0
  4054 ;;      Locals:         0       0       0       0       0
  4055 ;;      Temps:          0       0       0       0       0
  4056 ;;      Totals:         2       0       0       0       0
  4057 ;;Total ram usage:        2 bytes
  4058 ;; Hardware stack levels used:    2
  4059 ;; Hardware stack levels required when called:    1
  4060 ;; This function calls:
  4061 ;;		Nothing
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           
  4068                           ;psect for function _UART_write
  4069  0C8B                     _UART_write:
  4070  0C8B                     l1724:	
  4071                           ;incstack = 0
  4072                           ; Regs used in _UART_write: [wreg-fsr0h+btemp+1+pclath]
  4073                           
  4074                           
  4075                           ;Lab2.c: 52:     while (*word != 0){
  4076  0C8B  2CA2               	goto	l1730
  4077  0C8C                     l1726:
  4078                           
  4079                           ;Lab2.c: 53:         TXREG = (*word);
  4080  0C8C  0874               	movf	UART_write@word+1,w
  4081  0C8D  00FF               	movwf	btemp+1
  4082  0C8E  0873               	movf	UART_write@word,w
  4083  0C8F  0084               	movwf	4
  4084  0C90  120A  118A  270D  120A  158A  	fcall	stringtab
  4085  0C95  0099               	movwf	25	;volatile
  4086  0C96                     l81:	
  4087                           ;Lab2.c: 54:         while(!TXSTAbits.TRMT);
  4088                           
  4089  0C96  1683               	bsf	3,5	;RP0=1, select bank1
  4090  0C97  1303               	bcf	3,6	;RP1=0, select bank1
  4091  0C98  1C98               	btfss	24,1	;volatile
  4092  0C99  2C9B               	goto	u1571
  4093  0C9A  2C9C               	goto	u1570
  4094  0C9B                     u1571:
  4095  0C9B  2C96               	goto	l81
  4096  0C9C                     u1570:
  4097  0C9C                     l1728:
  4098                           
  4099                           ;Lab2.c: 55:         word++;
  4100  0C9C  3001               	movlw	1
  4101  0C9D  07F3               	addwf	UART_write@word,f
  4102  0C9E  1803               	skipnc
  4103  0C9F  0AF4               	incf	UART_write@word+1,f
  4104  0CA0  3000               	movlw	0
  4105  0CA1  07F4               	addwf	UART_write@word+1,f
  4106  0CA2                     l1730:
  4107                           
  4108                           ;Lab2.c: 52:     while (*word != 0){
  4109  0CA2  0874               	movf	UART_write@word+1,w
  4110  0CA3  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0CA4  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0CA5  00FF               	movwf	btemp+1
  4113  0CA6  0873               	movf	UART_write@word,w
  4114  0CA7  0084               	movwf	4
  4115  0CA8  120A  118A  270D  120A  158A  	fcall	stringtab
  4116  0CAD  3A00               	xorlw	0
  4117  0CAE  1D03               	skipz
  4118  0CAF  2CB1               	goto	u1581
  4119  0CB0  2CB2               	goto	u1580
  4120  0CB1                     u1581:
  4121  0CB1  2C8C               	goto	l1726
  4122  0CB2                     u1580:
  4123  0CB2                     l85:
  4124  0CB2  0008               	return
  4125  0CB3                     __end_of_UART_write:
  4126                           
  4127                           	psect	text10
  4128  0DCC                     __ptext10:	
  4129 ;; *************** function _Lcd_Write_String *****************
  4130 ;; Defined at:
  4131 ;;		line 72 in file "LCDh.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  a               2    5[COMMON] PTR unsigned char 
  4134 ;;		 -> buffer(5), STR_1(14), 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  i               2    3[BANK0 ] int 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         2       0       0       0       0
  4147 ;;      Locals:         0       2       0       0       0
  4148 ;;      Temps:          0       3       0       0       0
  4149 ;;      Totals:         2       5       0       0       0
  4150 ;;Total ram usage:        7 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    2
  4153 ;; This function calls:
  4154 ;;		_Lcd_Write_Char
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           
  4161                           ;psect for function _Lcd_Write_String
  4162  0DCC                     _Lcd_Write_String:
  4163  0DCC                     l2458:	
  4164                           ;incstack = 0
  4165                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4166                           
  4167                           
  4168                           ;LCDh.c: 73:     int i;;LCDh.c: 74:     for (i = 0; a[i] != '\0'; i++)
  4169  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0DCE  01A3               	clrf	Lcd_Write_String@i
  4172  0DCF  01A4               	clrf	Lcd_Write_String@i+1
  4173  0DD0  2DF5               	goto	l2464
  4174  0DD1                     l2460:
  4175                           
  4176                           ;LCDh.c: 75:         Lcd_Write_Char(a[i]);
  4177  0DD1  0823               	movf	Lcd_Write_String@i,w
  4178  0DD2  0775               	addwf	Lcd_Write_String@a,w
  4179  0DD3  00A1               	movwf	??_Lcd_Write_String+1
  4180  0DD4  0876               	movf	Lcd_Write_String@a+1,w
  4181  0DD5  00A0               	movwf	??_Lcd_Write_String
  4182  0DD6  1803               	skipnc
  4183  0DD7  0AA0               	incf	??_Lcd_Write_String,f
  4184  0DD8  1FA3               	btfss	Lcd_Write_String@i,7
  4185  0DD9  2DDB               	goto	u2710
  4186  0DDA  03A0               	decf	??_Lcd_Write_String,f
  4187  0DDB                     u2710:
  4188  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  4189  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  4190  0DDD  0820               	movf	??_Lcd_Write_String,w
  4191  0DDE  00A2               	movwf	??_Lcd_Write_String+2
  4192  0DDF  0822               	movf	??_Lcd_Write_String+2,w
  4193  0DE0  00FF               	movwf	btemp+1
  4194  0DE1  0821               	movf	??_Lcd_Write_String+1,w
  4195  0DE2  0084               	movwf	4
  4196  0DE3  120A  118A  270D  120A  158A  	fcall	stringtab
  4197  0DE8  120A  158A  242C  120A  158A  	fcall	_Lcd_Write_Char
  4198  0DED                     l2462:
  4199  0DED  3001               	movlw	1
  4200  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0DF0  07A3               	addwf	Lcd_Write_String@i,f
  4203  0DF1  1803               	skipnc
  4204  0DF2  0AA4               	incf	Lcd_Write_String@i+1,f
  4205  0DF3  3000               	movlw	0
  4206  0DF4  07A4               	addwf	Lcd_Write_String@i+1,f
  4207  0DF5                     l2464:
  4208  0DF5  0823               	movf	Lcd_Write_String@i,w
  4209  0DF6  0775               	addwf	Lcd_Write_String@a,w
  4210  0DF7  00A1               	movwf	??_Lcd_Write_String+1
  4211  0DF8  0876               	movf	Lcd_Write_String@a+1,w
  4212  0DF9  00A0               	movwf	??_Lcd_Write_String
  4213  0DFA  1803               	skipnc
  4214  0DFB  0AA0               	incf	??_Lcd_Write_String,f
  4215  0DFC  1FA3               	btfss	Lcd_Write_String@i,7
  4216  0DFD  2DFF               	goto	u2720
  4217  0DFE  03A0               	decf	??_Lcd_Write_String,f
  4218  0DFF                     u2720:
  4219  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0E01  0820               	movf	??_Lcd_Write_String,w
  4222  0E02  00A2               	movwf	??_Lcd_Write_String+2
  4223  0E03  0822               	movf	??_Lcd_Write_String+2,w
  4224  0E04  00FF               	movwf	btemp+1
  4225  0E05  0821               	movf	??_Lcd_Write_String+1,w
  4226  0E06  0084               	movwf	4
  4227  0E07  120A  118A  270D  120A  158A  	fcall	stringtab
  4228  0E0C  3A00               	xorlw	0
  4229  0E0D  1D03               	skipz
  4230  0E0E  2E10               	goto	u2731
  4231  0E0F  2E11               	goto	u2730
  4232  0E10                     u2731:
  4233  0E10  2DD1               	goto	l2460
  4234  0E11                     u2730:
  4235  0E11                     l184:
  4236  0E11  0008               	return
  4237  0E12                     __end_of_Lcd_Write_String:
  4238                           
  4239                           	psect	text11
  4240  0C2C                     __ptext11:	
  4241 ;; *************** function _Lcd_Write_Char *****************
  4242 ;; Defined at:
  4243 ;;		line 58 in file "LCDh.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;  a               1    wreg     unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  a               1    4[COMMON] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         1       0       0       0       0
  4259 ;;      Temps:          1       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_Lcd_Write_String
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Lcd_Write_Char
  4273  0C2C                     _Lcd_Write_Char:
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _Lcd_Write_Char: [wreg]
  4277                           ;Lcd_Write_Char@a stored from wreg
  4278  0C2C  00F4               	movwf	Lcd_Write_Char@a
  4279  0C2D                     l1572:
  4280                           
  4281                           ;LCDh.c: 61:     RC4 = 1;
  4282  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  4283  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0C2F  1607               	bsf	7,4	;volatile
  4285  0C30                     l1574:
  4286                           
  4287                           ;LCDh.c: 62:     PORTD = a;
  4288  0C30  0874               	movf	Lcd_Write_Char@a,w
  4289  0C31  0088               	movwf	8	;volatile
  4290  0C32                     l1576:
  4291                           
  4292                           ;LCDh.c: 63:     RC5 = 1;
  4293  0C32  1687               	bsf	7,5	;volatile
  4294                           
  4295                           ;LCDh.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4296  0C33  300D               	movlw	13
  4297  0C34  00F3               	movwf	??_Lcd_Write_Char
  4298  0C35                     u2967:
  4299  0C35  0BF3               	decfsz	??_Lcd_Write_Char,f
  4300  0C36  2C35               	goto	u2967
  4301  0C37                     l1578:
  4302                           
  4303                           ;LCDh.c: 69:     RC5 = 0;
  4304  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0C39  1287               	bcf	7,5	;volatile
  4307  0C3A                     l178:
  4308  0C3A  0008               	return
  4309  0C3B                     __end_of_Lcd_Write_Char:
  4310                           
  4311                           	psect	text12
  4312  0C4E                     __ptext12:	
  4313 ;; *************** function _Lcd_Set_Cursor *****************
  4314 ;; Defined at:
  4315 ;;		line 29 in file "LCDh.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  a               1    wreg     unsigned char 
  4318 ;;  b               1    6[COMMON] unsigned char 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  a               1    7[COMMON] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, pclath, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         1       0       0       0       0
  4331 ;;      Locals:         1       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         2       0       0       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    2
  4337 ;; This function calls:
  4338 ;;		_Lcd_Cmd
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           
  4345                           ;psect for function _Lcd_Set_Cursor
  4346  0C4E                     _Lcd_Set_Cursor:
  4347                           
  4348                           ;incstack = 0
  4349                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4350                           ;Lcd_Set_Cursor@a stored from wreg
  4351  0C4E  00F7               	movwf	Lcd_Set_Cursor@a
  4352  0C4F                     l1820:
  4353                           
  4354                           ;LCDh.c: 30:     if (a == 1){
  4355  0C4F  0377               	decf	Lcd_Set_Cursor@a,w
  4356  0C50  1D03               	btfss	3,2
  4357  0C51  2C53               	goto	u1611
  4358  0C52  2C54               	goto	u1610
  4359  0C53                     u1611:
  4360  0C53  2C5D               	goto	l1824
  4361  0C54                     u1610:
  4362  0C54                     l1822:
  4363                           
  4364                           ;LCDh.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  4365  0C54  0876               	movf	Lcd_Set_Cursor@b,w
  4366  0C55  390F               	andlw	15
  4367  0C56  3880               	iorlw	128
  4368  0C57  120A  158A  243B  120A  158A  	fcall	_Lcd_Cmd
  4369                           
  4370                           ;LCDh.c: 32:     }
  4371  0C5C  2C6B               	goto	l172
  4372  0C5D                     l1824:
  4373  0C5D  3002               	movlw	2
  4374  0C5E  0677               	xorwf	Lcd_Set_Cursor@a,w
  4375  0C5F  1D03               	btfss	3,2
  4376  0C60  2C62               	goto	u1621
  4377  0C61  2C63               	goto	u1620
  4378  0C62                     u1621:
  4379  0C62  2C6B               	goto	l172
  4380  0C63                     u1620:
  4381  0C63                     l1826:
  4382                           
  4383                           ;LCDh.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  4384  0C63  0876               	movf	Lcd_Set_Cursor@b,w
  4385  0C64  390F               	andlw	15
  4386  0C65  38C0               	iorlw	192
  4387  0C66  120A  158A  243B  120A  158A  	fcall	_Lcd_Cmd
  4388  0C6B                     l172:
  4389  0C6B  0008               	return
  4390  0C6C                     __end_of_Lcd_Set_Cursor:
  4391                           
  4392                           	psect	text13
  4393  079C                     __ptext13:	
  4394 ;; *************** function _Lcd_Init *****************
  4395 ;; Defined at:
  4396 ;;		line 39 in file "LCDh.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0, pclath, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0
  4412 ;;      Temps:          2       0       0       0       0
  4413 ;;      Totals:         2       0       0       0       0
  4414 ;;Total ram usage:        2 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    2
  4417 ;; This function calls:
  4418 ;;		_Lcd_Cmd
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function _Lcd_Init
  4426  079C                     _Lcd_Init:
  4427  079C                     l1790:	
  4428                           ;incstack = 0
  4429                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4430                           
  4431                           
  4432                           ;LCDh.c: 40:     PORTD = (0x00);
  4433  079C  1283               	bcf	3,5	;RP0=0, select bank0
  4434  079D  1303               	bcf	3,6	;RP1=0, select bank0
  4435  079E  0188               	clrf	8	;volatile
  4436  079F                     l1792:
  4437                           
  4438                           ;LCDh.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4439  079F  301A               	movlw	26
  4440  07A0  00F7               	movwf	??_Lcd_Init+1
  4441  07A1  30F8               	movlw	248
  4442  07A2  00F6               	movwf	??_Lcd_Init
  4443  07A3                     u2977:
  4444  07A3  0BF6               	decfsz	??_Lcd_Init,f
  4445  07A4  2FA3               	goto	u2977
  4446  07A5  0BF7               	decfsz	??_Lcd_Init+1,f
  4447  07A6  2FA3               	goto	u2977
  4448  07A7  0000               	nop
  4449  07A8                     l1794:
  4450                           
  4451                           ;LCDh.c: 42:     Lcd_Cmd(0x30);
  4452  07A8  3030               	movlw	48
  4453  07A9  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4454  07AE                     l1796:
  4455                           
  4456                           ;LCDh.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4457  07AE  3007               	movlw	7
  4458  07AF  00F7               	movwf	??_Lcd_Init+1
  4459  07B0  307D               	movlw	125
  4460  07B1  00F6               	movwf	??_Lcd_Init
  4461  07B2                     u2987:
  4462  07B2  0BF6               	decfsz	??_Lcd_Init,f
  4463  07B3  2FB2               	goto	u2987
  4464  07B4  0BF7               	decfsz	??_Lcd_Init+1,f
  4465  07B5  2FB2               	goto	u2987
  4466  07B6                     l1798:
  4467                           
  4468                           ;LCDh.c: 44:     Lcd_Cmd(0x30);
  4469  07B6  3030               	movlw	48
  4470  07B7  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4471  07BC                     l1800:
  4472                           
  4473                           ;LCDh.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4474  07BC  300F               	movlw	15
  4475  07BD  00F7               	movwf	??_Lcd_Init+1
  4476  07BE  3047               	movlw	71
  4477  07BF  00F6               	movwf	??_Lcd_Init
  4478  07C0                     u2997:
  4479  07C0  0BF6               	decfsz	??_Lcd_Init,f
  4480  07C1  2FC0               	goto	u2997
  4481  07C2  0BF7               	decfsz	??_Lcd_Init+1,f
  4482  07C3  2FC0               	goto	u2997
  4483  07C4  2FC5               	nop2
  4484  07C5                     l1802:
  4485                           
  4486                           ;LCDh.c: 46:     Lcd_Cmd(0x30);
  4487  07C5  3030               	movlw	48
  4488  07C6  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4489  07CB                     l1804:
  4490                           
  4491                           ;LCDh.c: 48:     Lcd_Cmd(0x38);
  4492  07CB  3038               	movlw	56
  4493  07CC  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4494  07D1                     l1806:
  4495                           
  4496                           ;LCDh.c: 49:     Lcd_Cmd(0x10);
  4497  07D1  3010               	movlw	16
  4498  07D2  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4499  07D7                     l1808:
  4500                           
  4501                           ;LCDh.c: 50:     Lcd_Cmd(0x01);
  4502  07D7  3001               	movlw	1
  4503  07D8  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4504  07DD                     l1810:
  4505                           
  4506                           ;LCDh.c: 51:     Lcd_Cmd(0x06);
  4507  07DD  3006               	movlw	6
  4508  07DE  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4509  07E3                     l1812:
  4510                           
  4511                           ;LCDh.c: 52:     Lcd_Cmd(0x10);
  4512  07E3  3010               	movlw	16
  4513  07E4  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4514  07E9                     l1814:
  4515                           
  4516                           ;LCDh.c: 53:     Lcd_Cmd(0x0C);
  4517  07E9  300C               	movlw	12
  4518  07EA  120A  158A  243B  120A  118A  	fcall	_Lcd_Cmd
  4519  07EF                     l1816:
  4520                           
  4521                           ;LCDh.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  4522  07EF  3082               	movlw	130
  4523  07F0  00F7               	movwf	??_Lcd_Init+1
  4524  07F1  30DD               	movlw	221
  4525  07F2  00F6               	movwf	??_Lcd_Init
  4526  07F3                     u3007:
  4527  07F3  0BF6               	decfsz	??_Lcd_Init,f
  4528  07F4  2FF3               	goto	u3007
  4529  07F5  0BF7               	decfsz	??_Lcd_Init+1,f
  4530  07F6  2FF3               	goto	u3007
  4531  07F7  2FF8               	nop2
  4532  07F8                     l175:
  4533  07F8  0008               	return
  4534  07F9                     __end_of_Lcd_Init:
  4535                           
  4536                           	psect	text14
  4537  0C1F                     __ptext14:	
  4538 ;; *************** function _Lcd_Clear *****************
  4539 ;; Defined at:
  4540 ;;		line 24 in file "LCDh.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0, pclath, cstack
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4554 ;;      Params:         0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    2
  4561 ;; This function calls:
  4562 ;;		_Lcd_Cmd
  4563 ;; This function is called by:
  4564 ;;		_main
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           
  4569                           ;psect for function _Lcd_Clear
  4570  0C1F                     _Lcd_Clear:
  4571  0C1F                     l1818:	
  4572                           ;incstack = 0
  4573                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4574                           
  4575                           
  4576                           ;LCDh.c: 25:     Lcd_Cmd(0);
  4577  0C1F  3000               	movlw	0
  4578  0C20  120A  158A  243B  120A  158A  	fcall	_Lcd_Cmd
  4579                           
  4580                           ;LCDh.c: 26:     Lcd_Cmd(1);
  4581  0C25  3001               	movlw	1
  4582  0C26  120A  158A  243B  120A  158A  	fcall	_Lcd_Cmd
  4583  0C2B                     l166:
  4584  0C2B  0008               	return
  4585  0C2C                     __end_of_Lcd_Clear:
  4586                           
  4587                           	psect	text15
  4588  0C3B                     __ptext15:	
  4589 ;; *************** function _Lcd_Cmd *****************
  4590 ;; Defined at:
  4591 ;;		line 16 in file "LCDh.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  a               1    wreg     unsigned char 
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;  a               1    5[COMMON] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         0       0       0       0       0
  4606 ;;      Locals:         1       0       0       0       0
  4607 ;;      Temps:          2       0       0       0       0
  4608 ;;      Totals:         3       0       0       0       0
  4609 ;;Total ram usage:        3 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:    1
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_Lcd_Clear
  4616 ;;		_Lcd_Set_Cursor
  4617 ;;		_Lcd_Init
  4618 ;;		_Lcd_Shift_Right
  4619 ;;		_Lcd_Shift_Left
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function _Lcd_Cmd
  4625  0C3B                     _Lcd_Cmd:
  4626                           
  4627                           ;incstack = 0
  4628                           ; Regs used in _Lcd_Cmd: [wreg]
  4629                           ;Lcd_Cmd@a stored from wreg
  4630  0C3B  00F5               	movwf	Lcd_Cmd@a
  4631  0C3C                     l1564:
  4632                           
  4633                           ;LCDh.c: 17:     RC4 = 0;
  4634  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0C3E  1207               	bcf	7,4	;volatile
  4637  0C3F                     l1566:
  4638                           
  4639                           ;LCDh.c: 18:     PORTD = a;
  4640  0C3F  0875               	movf	Lcd_Cmd@a,w
  4641  0C40  0088               	movwf	8	;volatile
  4642  0C41                     l1568:
  4643                           
  4644                           ;LCDh.c: 19:     RC5 = 1;
  4645  0C41  1687               	bsf	7,5	;volatile
  4646                           
  4647                           ;LCDh.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4648  0C42  3007               	movlw	7
  4649  0C43  00F4               	movwf	??_Lcd_Cmd+1
  4650  0C44  307D               	movlw	125
  4651  0C45  00F3               	movwf	??_Lcd_Cmd
  4652  0C46                     u3017:
  4653  0C46  0BF3               	decfsz	??_Lcd_Cmd,f
  4654  0C47  2C46               	goto	u3017
  4655  0C48  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4656  0C49  2C46               	goto	u3017
  4657  0C4A                     l1570:
  4658                           
  4659                           ;LCDh.c: 21:     RC5 = 0;
  4660  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0C4C  1287               	bcf	7,5	;volatile
  4663  0C4D                     l163:
  4664  0C4D  0008               	return
  4665  0C4E                     __end_of_Lcd_Cmd:
  4666                           
  4667                           	psect	text16
  4668  0EB3                     __ptext16:	
  4669 ;; *************** function _Division *****************
  4670 ;; Defined at:
  4671 ;;		line 60 in file "Lab2.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  y               1    wreg     unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  y               1   16[BANK0 ] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, pclath, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4685 ;;      Params:         0       0       0       0       0
  4686 ;;      Locals:         0       3       0       0       0
  4687 ;;      Temps:          0       3       0       0       0
  4688 ;;      Totals:         0       6       0       0       0
  4689 ;;Total ram usage:        6 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    2
  4692 ;; This function calls:
  4693 ;;		___awdiv
  4694 ;;		___awmod
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           
  4701                           ;psect for function _Division
  4702  0EB3                     _Division:
  4703                           
  4704                           ;incstack = 0
  4705                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  4706                           ;Division@y stored from wreg
  4707  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4708  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4709  0EB5  00B0               	movwf	Division@y
  4710  0EB6                     l2426:
  4711                           
  4712                           ;Lab2.c: 61:         cen = (y/100);
  4713  0EB6  3064               	movlw	100
  4714  0EB7  00A2               	movwf	___awdiv@divisor
  4715  0EB8  3000               	movlw	0
  4716  0EB9  00A3               	movwf	___awdiv@divisor+1
  4717  0EBA  0830               	movf	Division@y,w
  4718  0EBB  00AB               	movwf	??_Division
  4719  0EBC  01AC               	clrf	??_Division+1
  4720  0EBD  082B               	movf	??_Division,w
  4721  0EBE  00A4               	movwf	___awdiv@dividend
  4722  0EBF  082C               	movf	??_Division+1,w
  4723  0EC0  00A5               	movwf	___awdiv@dividend+1
  4724  0EC1  120A  158A  271B  120A  158A  	fcall	___awdiv
  4725  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4726  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4727  0EC8  0822               	movf	?___awdiv,w
  4728  0EC9  00AD               	movwf	??_Division+2
  4729  0ECA  082D               	movf	??_Division+2,w
  4730  0ECB  00DB               	movwf	_cen
  4731                           
  4732                           ;Lab2.c: 62:         dec = ((y%100)/10);
  4733  0ECC  300A               	movlw	10
  4734  0ECD  00A2               	movwf	___awdiv@divisor
  4735  0ECE  3000               	movlw	0
  4736  0ECF  00A3               	movwf	___awdiv@divisor+1
  4737  0ED0  0830               	movf	Division@y,w
  4738  0ED1  00AB               	movwf	??_Division
  4739  0ED2  01AC               	clrf	??_Division+1
  4740  0ED3  082B               	movf	??_Division,w
  4741  0ED4  00F5               	movwf	___awmod@dividend
  4742  0ED5  082C               	movf	??_Division+1,w
  4743  0ED6  00F6               	movwf	___awmod@dividend+1
  4744  0ED7  3064               	movlw	100
  4745  0ED8  00F3               	movwf	___awmod@divisor
  4746  0ED9  3000               	movlw	0
  4747  0EDA  00F4               	movwf	___awmod@divisor+1
  4748  0EDB  120A  158A  2658  120A  158A  	fcall	___awmod
  4749  0EE0  0874               	movf	?___awmod+1,w
  4750  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4751  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4752  0EE3  00A5               	movwf	___awdiv@dividend+1
  4753  0EE4  0873               	movf	?___awmod,w
  4754  0EE5  00A4               	movwf	___awdiv@dividend
  4755  0EE6  120A  158A  271B  120A  158A  	fcall	___awdiv
  4756  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0EED  0822               	movf	?___awdiv,w
  4759  0EEE  00AD               	movwf	??_Division+2
  4760  0EEF  082D               	movf	??_Division+2,w
  4761  0EF0  00DA               	movwf	_dec
  4762                           
  4763                           ;Lab2.c: 63:         uni = ((y%100)%10);
  4764  0EF1  0830               	movf	Division@y,w
  4765  0EF2  00AB               	movwf	??_Division
  4766  0EF3  01AC               	clrf	??_Division+1
  4767  0EF4  082B               	movf	??_Division,w
  4768  0EF5  00F5               	movwf	___awmod@dividend
  4769  0EF6  082C               	movf	??_Division+1,w
  4770  0EF7  00F6               	movwf	___awmod@dividend+1
  4771  0EF8  3064               	movlw	100
  4772  0EF9  00F3               	movwf	___awmod@divisor
  4773  0EFA  3000               	movlw	0
  4774  0EFB  00F4               	movwf	___awmod@divisor+1
  4775  0EFC  120A  158A  2658  120A  158A  	fcall	___awmod
  4776  0F01  0874               	movf	?___awmod+1,w
  4777  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  4778  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  4779  0F04  00AF               	movwf	_Division$1123+1
  4780  0F05  0873               	movf	?___awmod,w
  4781  0F06  00AE               	movwf	_Division$1123
  4782                           
  4783                           ;Lab2.c: 63:         uni = ((y%100)%10);
  4784  0F07  300A               	movlw	10
  4785  0F08  00F3               	movwf	___awmod@divisor
  4786  0F09  3000               	movlw	0
  4787  0F0A  00F4               	movwf	___awmod@divisor+1
  4788  0F0B  082F               	movf	_Division$1123+1,w
  4789  0F0C  00F6               	movwf	___awmod@dividend+1
  4790  0F0D  082E               	movf	_Division$1123,w
  4791  0F0E  00F5               	movwf	___awmod@dividend
  4792  0F0F  120A  158A  2658  120A  158A  	fcall	___awmod
  4793  0F14  0873               	movf	?___awmod,w
  4794  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0F17  00AB               	movwf	??_Division
  4797  0F18  082B               	movf	??_Division,w
  4798  0F19  00D9               	movwf	_uni
  4799  0F1A                     l88:
  4800  0F1A  0008               	return
  4801  0F1B                     __end_of_Division:
  4802                           
  4803                           	psect	text17
  4804  0E58                     __ptext17:	
  4805 ;; *************** function ___awmod *****************
  4806 ;; Defined at:
  4807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  divisor         2    3[COMMON] int 
  4810 ;;  dividend        2    5[COMMON] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  sign            1    1[BANK0 ] unsigned char 
  4813 ;;  counter         1    0[BANK0 ] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2    3[COMMON] int 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         4       0       0       0       0
  4824 ;;      Locals:         0       2       0       0       0
  4825 ;;      Temps:          1       0       0       0       0
  4826 ;;      Totals:         5       2       0       0       0
  4827 ;;Total ram usage:        7 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_Division
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function ___awmod
  4839  0E58                     ___awmod:
  4840  0E58                     l2362:	
  4841                           ;incstack = 0
  4842                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4843                           
  4844  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  4845  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  4846  0E5A  01A1               	clrf	___awmod@sign
  4847  0E5B                     l2364:
  4848  0E5B  1FF6               	btfss	___awmod@dividend+1,7
  4849  0E5C  2E5E               	goto	u2531
  4850  0E5D  2E5F               	goto	u2530
  4851  0E5E                     u2531:
  4852  0E5E  2E66               	goto	l2370
  4853  0E5F                     u2530:
  4854  0E5F                     l2366:
  4855  0E5F  09F5               	comf	___awmod@dividend,f
  4856  0E60  09F6               	comf	___awmod@dividend+1,f
  4857  0E61  0AF5               	incf	___awmod@dividend,f
  4858  0E62  1903               	skipnz
  4859  0E63  0AF6               	incf	___awmod@dividend+1,f
  4860  0E64                     l2368:
  4861  0E64  01A1               	clrf	___awmod@sign
  4862  0E65  0AA1               	incf	___awmod@sign,f
  4863  0E66                     l2370:
  4864  0E66  1FF4               	btfss	___awmod@divisor+1,7
  4865  0E67  2E69               	goto	u2541
  4866  0E68  2E6A               	goto	u2540
  4867  0E69                     u2541:
  4868  0E69  2E6F               	goto	l2374
  4869  0E6A                     u2540:
  4870  0E6A                     l2372:
  4871  0E6A  09F3               	comf	___awmod@divisor,f
  4872  0E6B  09F4               	comf	___awmod@divisor+1,f
  4873  0E6C  0AF3               	incf	___awmod@divisor,f
  4874  0E6D  1903               	skipnz
  4875  0E6E  0AF4               	incf	___awmod@divisor+1,f
  4876  0E6F                     l2374:
  4877  0E6F  0873               	movf	___awmod@divisor,w
  4878  0E70  0474               	iorwf	___awmod@divisor+1,w
  4879  0E71  1903               	btfsc	3,2
  4880  0E72  2E74               	goto	u2551
  4881  0E73  2E75               	goto	u2550
  4882  0E74                     u2551:
  4883  0E74  2EA4               	goto	l2392
  4884  0E75                     u2550:
  4885  0E75                     l2376:
  4886  0E75  01A0               	clrf	___awmod@counter
  4887  0E76  0AA0               	incf	___awmod@counter,f
  4888  0E77  2E83               	goto	l2382
  4889  0E78                     l2378:
  4890  0E78  3001               	movlw	1
  4891  0E79                     u2565:
  4892  0E79  1003               	clrc
  4893  0E7A  0DF3               	rlf	___awmod@divisor,f
  4894  0E7B  0DF4               	rlf	___awmod@divisor+1,f
  4895  0E7C  3EFF               	addlw	-1
  4896  0E7D  1D03               	skipz
  4897  0E7E  2E79               	goto	u2565
  4898  0E7F                     l2380:
  4899  0E7F  3001               	movlw	1
  4900  0E80  00F7               	movwf	??___awmod
  4901  0E81  0877               	movf	??___awmod,w
  4902  0E82  07A0               	addwf	___awmod@counter,f
  4903  0E83                     l2382:
  4904  0E83  1FF4               	btfss	___awmod@divisor+1,7
  4905  0E84  2E86               	goto	u2571
  4906  0E85  2E87               	goto	u2570
  4907  0E86                     u2571:
  4908  0E86  2E78               	goto	l2378
  4909  0E87                     u2570:
  4910  0E87                     l2384:
  4911  0E87  0874               	movf	___awmod@divisor+1,w
  4912  0E88  0276               	subwf	___awmod@dividend+1,w
  4913  0E89  1D03               	skipz
  4914  0E8A  2E8D               	goto	u2585
  4915  0E8B  0873               	movf	___awmod@divisor,w
  4916  0E8C  0275               	subwf	___awmod@dividend,w
  4917  0E8D                     u2585:
  4918  0E8D  1C03               	skipc
  4919  0E8E  2E90               	goto	u2581
  4920  0E8F  2E91               	goto	u2580
  4921  0E90                     u2581:
  4922  0E90  2E97               	goto	l2388
  4923  0E91                     u2580:
  4924  0E91                     l2386:
  4925  0E91  0873               	movf	___awmod@divisor,w
  4926  0E92  02F5               	subwf	___awmod@dividend,f
  4927  0E93  0874               	movf	___awmod@divisor+1,w
  4928  0E94  1C03               	skipc
  4929  0E95  03F6               	decf	___awmod@dividend+1,f
  4930  0E96  02F6               	subwf	___awmod@dividend+1,f
  4931  0E97                     l2388:
  4932  0E97  3001               	movlw	1
  4933  0E98                     u2595:
  4934  0E98  1003               	clrc
  4935  0E99  0CF4               	rrf	___awmod@divisor+1,f
  4936  0E9A  0CF3               	rrf	___awmod@divisor,f
  4937  0E9B  3EFF               	addlw	-1
  4938  0E9C  1D03               	skipz
  4939  0E9D  2E98               	goto	u2595
  4940  0E9E                     l2390:
  4941  0E9E  3001               	movlw	1
  4942  0E9F  02A0               	subwf	___awmod@counter,f
  4943  0EA0  1D03               	btfss	3,2
  4944  0EA1  2EA3               	goto	u2601
  4945  0EA2  2EA4               	goto	u2600
  4946  0EA3                     u2601:
  4947  0EA3  2E87               	goto	l2384
  4948  0EA4                     u2600:
  4949  0EA4                     l2392:
  4950  0EA4  0821               	movf	___awmod@sign,w
  4951  0EA5  1903               	btfsc	3,2
  4952  0EA6  2EA8               	goto	u2611
  4953  0EA7  2EA9               	goto	u2610
  4954  0EA8                     u2611:
  4955  0EA8  2EAE               	goto	l2396
  4956  0EA9                     u2610:
  4957  0EA9                     l2394:
  4958  0EA9  09F5               	comf	___awmod@dividend,f
  4959  0EAA  09F6               	comf	___awmod@dividend+1,f
  4960  0EAB  0AF5               	incf	___awmod@dividend,f
  4961  0EAC  1903               	skipnz
  4962  0EAD  0AF6               	incf	___awmod@dividend+1,f
  4963  0EAE                     l2396:
  4964  0EAE  0876               	movf	___awmod@dividend+1,w
  4965  0EAF  00F4               	movwf	?___awmod+1
  4966  0EB0  0875               	movf	___awmod@dividend,w
  4967  0EB1  00F3               	movwf	?___awmod
  4968  0EB2                     l470:
  4969  0EB2  0008               	return
  4970  0EB3                     __end_of___awmod:
  4971                           
  4972                           	psect	text18
  4973  0F1B                     __ptext18:	
  4974 ;; *************** function ___awdiv *****************
  4975 ;; Defined at:
  4976 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  divisor         2    2[BANK0 ] int 
  4979 ;;  dividend        2    4[BANK0 ] int 
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  quotient        2    9[BANK0 ] int 
  4982 ;;  sign            1    8[BANK0 ] unsigned char 
  4983 ;;  counter         1    7[BANK0 ] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  2    2[BANK0 ] int 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, status,0
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4993 ;;      Params:         0       4       0       0       0
  4994 ;;      Locals:         0       4       0       0       0
  4995 ;;      Temps:          0       1       0       0       0
  4996 ;;      Totals:         0       9       0       0       0
  4997 ;;Total ram usage:        9 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_Division
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           
  5008                           ;psect for function ___awdiv
  5009  0F1B                     ___awdiv:
  5010  0F1B                     l2318:	
  5011                           ;incstack = 0
  5012                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5013                           
  5014  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0F1D  01A8               	clrf	___awdiv@sign
  5017  0F1E                     l2320:
  5018  0F1E  1FA3               	btfss	___awdiv@divisor+1,7
  5019  0F1F  2F21               	goto	u2431
  5020  0F20  2F22               	goto	u2430
  5021  0F21                     u2431:
  5022  0F21  2F29               	goto	l2326
  5023  0F22                     u2430:
  5024  0F22                     l2322:
  5025  0F22  09A2               	comf	___awdiv@divisor,f
  5026  0F23  09A3               	comf	___awdiv@divisor+1,f
  5027  0F24  0AA2               	incf	___awdiv@divisor,f
  5028  0F25  1903               	skipnz
  5029  0F26  0AA3               	incf	___awdiv@divisor+1,f
  5030  0F27                     l2324:
  5031  0F27  01A8               	clrf	___awdiv@sign
  5032  0F28  0AA8               	incf	___awdiv@sign,f
  5033  0F29                     l2326:
  5034  0F29  1FA5               	btfss	___awdiv@dividend+1,7
  5035  0F2A  2F2C               	goto	u2441
  5036  0F2B  2F2D               	goto	u2440
  5037  0F2C                     u2441:
  5038  0F2C  2F36               	goto	l2332
  5039  0F2D                     u2440:
  5040  0F2D                     l2328:
  5041  0F2D  09A4               	comf	___awdiv@dividend,f
  5042  0F2E  09A5               	comf	___awdiv@dividend+1,f
  5043  0F2F  0AA4               	incf	___awdiv@dividend,f
  5044  0F30  1903               	skipnz
  5045  0F31  0AA5               	incf	___awdiv@dividend+1,f
  5046  0F32                     l2330:
  5047  0F32  3001               	movlw	1
  5048  0F33  00A6               	movwf	??___awdiv
  5049  0F34  0826               	movf	??___awdiv,w
  5050  0F35  06A8               	xorwf	___awdiv@sign,f
  5051  0F36                     l2332:
  5052  0F36  01A9               	clrf	___awdiv@quotient
  5053  0F37  01AA               	clrf	___awdiv@quotient+1
  5054  0F38                     l2334:
  5055  0F38  0822               	movf	___awdiv@divisor,w
  5056  0F39  0423               	iorwf	___awdiv@divisor+1,w
  5057  0F3A  1903               	btfsc	3,2
  5058  0F3B  2F3D               	goto	u2451
  5059  0F3C  2F3E               	goto	u2450
  5060  0F3D                     u2451:
  5061  0F3D  2F75               	goto	l2354
  5062  0F3E                     u2450:
  5063  0F3E                     l2336:
  5064  0F3E  01A7               	clrf	___awdiv@counter
  5065  0F3F  0AA7               	incf	___awdiv@counter,f
  5066  0F40  2F4C               	goto	l2342
  5067  0F41                     l2338:
  5068  0F41  3001               	movlw	1
  5069  0F42                     u2465:
  5070  0F42  1003               	clrc
  5071  0F43  0DA2               	rlf	___awdiv@divisor,f
  5072  0F44  0DA3               	rlf	___awdiv@divisor+1,f
  5073  0F45  3EFF               	addlw	-1
  5074  0F46  1D03               	skipz
  5075  0F47  2F42               	goto	u2465
  5076  0F48                     l2340:
  5077  0F48  3001               	movlw	1
  5078  0F49  00A6               	movwf	??___awdiv
  5079  0F4A  0826               	movf	??___awdiv,w
  5080  0F4B  07A7               	addwf	___awdiv@counter,f
  5081  0F4C                     l2342:
  5082  0F4C  1FA3               	btfss	___awdiv@divisor+1,7
  5083  0F4D  2F4F               	goto	u2471
  5084  0F4E  2F50               	goto	u2470
  5085  0F4F                     u2471:
  5086  0F4F  2F41               	goto	l2338
  5087  0F50                     u2470:
  5088  0F50                     l2344:
  5089  0F50  3001               	movlw	1
  5090  0F51                     u2485:
  5091  0F51  1003               	clrc
  5092  0F52  0DA9               	rlf	___awdiv@quotient,f
  5093  0F53  0DAA               	rlf	___awdiv@quotient+1,f
  5094  0F54  3EFF               	addlw	-1
  5095  0F55  1D03               	skipz
  5096  0F56  2F51               	goto	u2485
  5097  0F57  0823               	movf	___awdiv@divisor+1,w
  5098  0F58  0225               	subwf	___awdiv@dividend+1,w
  5099  0F59  1D03               	skipz
  5100  0F5A  2F5D               	goto	u2495
  5101  0F5B  0822               	movf	___awdiv@divisor,w
  5102  0F5C  0224               	subwf	___awdiv@dividend,w
  5103  0F5D                     u2495:
  5104  0F5D  1C03               	skipc
  5105  0F5E  2F60               	goto	u2491
  5106  0F5F  2F61               	goto	u2490
  5107  0F60                     u2491:
  5108  0F60  2F68               	goto	l2350
  5109  0F61                     u2490:
  5110  0F61                     l2346:
  5111  0F61  0822               	movf	___awdiv@divisor,w
  5112  0F62  02A4               	subwf	___awdiv@dividend,f
  5113  0F63  0823               	movf	___awdiv@divisor+1,w
  5114  0F64  1C03               	skipc
  5115  0F65  03A5               	decf	___awdiv@dividend+1,f
  5116  0F66  02A5               	subwf	___awdiv@dividend+1,f
  5117  0F67                     l2348:
  5118  0F67  1429               	bsf	___awdiv@quotient,0
  5119  0F68                     l2350:
  5120  0F68  3001               	movlw	1
  5121  0F69                     u2505:
  5122  0F69  1003               	clrc
  5123  0F6A  0CA3               	rrf	___awdiv@divisor+1,f
  5124  0F6B  0CA2               	rrf	___awdiv@divisor,f
  5125  0F6C  3EFF               	addlw	-1
  5126  0F6D  1D03               	skipz
  5127  0F6E  2F69               	goto	u2505
  5128  0F6F                     l2352:
  5129  0F6F  3001               	movlw	1
  5130  0F70  02A7               	subwf	___awdiv@counter,f
  5131  0F71  1D03               	btfss	3,2
  5132  0F72  2F74               	goto	u2511
  5133  0F73  2F75               	goto	u2510
  5134  0F74                     u2511:
  5135  0F74  2F50               	goto	l2344
  5136  0F75                     u2510:
  5137  0F75                     l2354:
  5138  0F75  0828               	movf	___awdiv@sign,w
  5139  0F76  1903               	btfsc	3,2
  5140  0F77  2F79               	goto	u2521
  5141  0F78  2F7A               	goto	u2520
  5142  0F79                     u2521:
  5143  0F79  2F7F               	goto	l2358
  5144  0F7A                     u2520:
  5145  0F7A                     l2356:
  5146  0F7A  09A9               	comf	___awdiv@quotient,f
  5147  0F7B  09AA               	comf	___awdiv@quotient+1,f
  5148  0F7C  0AA9               	incf	___awdiv@quotient,f
  5149  0F7D  1903               	skipnz
  5150  0F7E  0AAA               	incf	___awdiv@quotient+1,f
  5151  0F7F                     l2358:
  5152  0F7F  082A               	movf	___awdiv@quotient+1,w
  5153  0F80  00A3               	movwf	?___awdiv+1
  5154  0F81  0829               	movf	___awdiv@quotient,w
  5155  0F82  00A2               	movwf	?___awdiv
  5156  0F83                     l457:
  5157  0F83  0008               	return
  5158  0F84                     __end_of___awdiv:
  5159                           
  5160                           	psect	text19
  5161  0C6C                     __ptext19:	
  5162 ;; *************** function _ADC_IF *****************
  5163 ;; Defined at:
  5164 ;;		line 36 in file "ADC.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;		None
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;		None
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      void 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         0       0       0       0       0
  5179 ;;      Locals:         0       0       0       0       0
  5180 ;;      Temps:          1       0       0       0       0
  5181 ;;      Totals:         1       0       0       0       0
  5182 ;;Total ram usage:        1 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_main
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _ADC_IF
  5194  0C6C                     _ADC_IF:
  5195  0C6C                     l1836:	
  5196                           ;incstack = 0
  5197                           ; Regs used in _ADC_IF: [wreg+status,2+status,0]
  5198                           
  5199                           
  5200                           ;ADC.c: 37:     if (ADCON0bits.GO == 0){
  5201  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5202  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  5203  0C6E  189F               	btfsc	31,1	;volatile
  5204  0C6F  2C71               	goto	u1661
  5205  0C70  2C72               	goto	u1660
  5206  0C71                     u1661:
  5207  0C71  2C8A               	goto	l131
  5208  0C72                     u1660:
  5209  0C72                     l1838:
  5210                           
  5211                           ;ADC.c: 38:             if(ADCON0bits.CHS == 0){
  5212  0C72  0C1F               	rrf	31,w	;volatile
  5213  0C73  00F3               	movwf	??_ADC_IF
  5214  0C74  0C73               	rrf	??_ADC_IF,w
  5215  0C75  390F               	andlw	15
  5216  0C76  3A00               	xorlw	0
  5217  0C77  1D03               	skipz
  5218  0C78  2C7A               	goto	u1671
  5219  0C79  2C7B               	goto	u1670
  5220  0C7A                     u1671:
  5221  0C7A  2C80               	goto	l1842
  5222  0C7B                     u1670:
  5223  0C7B                     l1840:
  5224                           
  5225                           ;ADC.c: 39:                 ADCON0bits.CHS = 1;
  5226  0C7B  081F               	movf	31,w	;volatile
  5227  0C7C  39C3               	andlw	-61
  5228  0C7D  3804               	iorlw	4
  5229  0C7E  009F               	movwf	31	;volatile
  5230                           
  5231                           ;ADC.c: 40:             }
  5232  0C7F  2C82               	goto	l1844
  5233  0C80                     l1842:
  5234                           
  5235                           ;ADC.c: 42:                 ADCON0bits.CHS = 0;
  5236  0C80  30C3               	movlw	-61
  5237  0C81  059F               	andwf	31,f	;volatile
  5238  0C82                     l1844:
  5239                           
  5240                           ;ADC.c: 44:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  5241  0C82  3010               	movlw	16
  5242  0C83  00F3               	movwf	??_ADC_IF
  5243  0C84                     u3027:
  5244  0C84  0BF3               	decfsz	??_ADC_IF,f
  5245  0C85  2C84               	goto	u3027
  5246  0C86  0000               	nop
  5247  0C87                     l1846:
  5248                           
  5249                           ;ADC.c: 45:             ADCON0bits.GO = 1;
  5250  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0C89  149F               	bsf	31,1	;volatile
  5253  0C8A                     l131:
  5254  0C8A  0008               	return
  5255  0C8B                     __end_of_ADC_IF:
  5256                           
  5257                           	psect	text20
  5258  0CDC                     __ptext20:	
  5259 ;; *************** function _ADC_CONFIG *****************
  5260 ;; Defined at:
  5261 ;;		line 14 in file "ADC.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  frec            2    3[COMMON] int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5275 ;;      Params:         2       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0
  5278 ;;      Totals:         2       0       0       0       0
  5279 ;;Total ram usage:        2 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_main
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function _ADC_CONFIG
  5291  0CDC                     _ADC_CONFIG:
  5292  0CDC                     l1734:	
  5293                           ;incstack = 0
  5294                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  5295                           
  5296                           
  5297                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  5298  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0CDE  141F               	bsf	31,0	;volatile
  5301  0CDF                     l1736:
  5302                           
  5303                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  5304  0CDF  30C3               	movlw	-61
  5305  0CE0  059F               	andwf	31,f	;volatile
  5306  0CE1                     l1738:
  5307                           
  5308                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  5309  0CE1  1683               	bsf	3,5	;RP0=1, select bank1
  5310  0CE2  1303               	bcf	3,6	;RP1=0, select bank1
  5311  0CE3  139F               	bcf	31,7	;volatile
  5312  0CE4                     l1740:
  5313                           
  5314                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  5315  0CE4  121F               	bcf	31,4	;volatile
  5316  0CE5                     l1742:
  5317                           
  5318                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  5319  0CE5  129F               	bcf	31,5	;volatile
  5320  0CE6                     l1744:
  5321                           
  5322                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  5323  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0CE8  109F               	bcf	31,1	;volatile
  5326                           
  5327                           ;ADC.c: 23:     switch(frec){
  5328  0CE9  2CF7               	goto	l1754
  5329  0CEA                     l1746:
  5330                           
  5331                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  5332  0CEA  303F               	movlw	-193
  5333  0CEB  059F               	andwf	31,f	;volatile
  5334                           
  5335                           ;ADC.c: 26:             break;
  5336  0CEC  2D07               	goto	l125
  5337  0CED                     l1748:
  5338                           
  5339                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  5340  0CED  081F               	movf	31,w	;volatile
  5341  0CEE  393F               	andlw	-193
  5342  0CEF  3840               	iorlw	64
  5343  0CF0  009F               	movwf	31	;volatile
  5344                           
  5345                           ;ADC.c: 29:             break;
  5346  0CF1  2D07               	goto	l125
  5347  0CF2                     l1750:
  5348                           
  5349                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  5350  0CF2  081F               	movf	31,w	;volatile
  5351  0CF3  393F               	andlw	-193
  5352  0CF4  3880               	iorlw	128
  5353  0CF5  009F               	movwf	31	;volatile
  5354                           
  5355                           ;ADC.c: 32:             break;
  5356  0CF6  2D07               	goto	l125
  5357  0CF7                     l1754:
  5358                           
  5359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5360                           ; Switch size 1, requested type "simple"
  5361                           ; Number of cases is 1, Range of values is 0 to 0
  5362                           ; switch strategies available:
  5363                           ; Name         Instructions Cycles
  5364                           ; simple_byte            4     3 (average)
  5365                           ; direct_byte           11     8 (fixed)
  5366                           ; jumptable            260     6 (fixed)
  5367                           ;	Chosen strategy is simple_byte
  5368  0CF7  0874               	movf	ADC_CONFIG@frec+1,w
  5369  0CF8  3A00               	xorlw	0	; case 0
  5370  0CF9  1903               	skipnz
  5371  0CFA  2CFC               	goto	l2732
  5372  0CFB  2D07               	goto	l125
  5373  0CFC                     l2732:
  5374                           
  5375                           ; Switch size 1, requested type "simple"
  5376                           ; Number of cases is 3, Range of values is 1 to 8
  5377                           ; switch strategies available:
  5378                           ; Name         Instructions Cycles
  5379                           ; simple_byte           10     6 (average)
  5380                           ; direct_byte           35    11 (fixed)
  5381                           ; jumptable            263     9 (fixed)
  5382                           ;	Chosen strategy is simple_byte
  5383  0CFC  0873               	movf	ADC_CONFIG@frec,w
  5384  0CFD  3A01               	xorlw	1	; case 1
  5385  0CFE  1903               	skipnz
  5386  0CFF  2CEA               	goto	l1746
  5387  0D00  3A05               	xorlw	5	; case 4
  5388  0D01  1903               	skipnz
  5389  0D02  2CED               	goto	l1748
  5390  0D03  3A0C               	xorlw	12	; case 8
  5391  0D04  1903               	skipnz
  5392  0D05  2CF2               	goto	l1750
  5393  0D06  2D07               	goto	l125
  5394  0D07                     l125:
  5395  0D07  0008               	return
  5396  0D08                     __end_of_ADC_CONFIG:
  5397                           
  5398                           	psect	text21
  5399  0D44                     __ptext21:	
  5400 ;; *************** function _isr *****************
  5401 ;; Defined at:
  5402 ;;		line 66 in file "Lab2.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5416 ;;      Params:         0       0       0       0       0
  5417 ;;      Locals:         0       0       0       0       0
  5418 ;;      Temps:          3       0       0       0       0
  5419 ;;      Totals:         3       0       0       0       0
  5420 ;;Total ram usage:        3 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		Interrupt level 1
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function _isr
  5431  0D44                     _isr:
  5432  0D44                     i1l2130:
  5433                           
  5434                           ;Lab2.c: 67:     if(ADIF){
  5435  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0D46  1F0C               	btfss	12,6	;volatile
  5438  0D47  2D49               	goto	u236_21
  5439  0D48  2D4A               	goto	u236_20
  5440  0D49                     u236_21:
  5441  0D49  2D5D               	goto	i1l2140
  5442  0D4A                     u236_20:
  5443  0D4A                     i1l2132:
  5444                           
  5445                           ;Lab2.c: 68:         if (ADCON0bits.CHS == 0){
  5446  0D4A  0C1F               	rrf	31,w	;volatile
  5447  0D4B  00F0               	movwf	??_isr
  5448  0D4C  0C70               	rrf	??_isr,w
  5449  0D4D  390F               	andlw	15
  5450  0D4E  3A00               	xorlw	0
  5451  0D4F  1D03               	skipz
  5452  0D50  2D52               	goto	u237_21
  5453  0D51  2D53               	goto	u237_20
  5454  0D52                     u237_21:
  5455  0D52  2D58               	goto	i1l2136
  5456  0D53                     u237_20:
  5457  0D53                     i1l2134:
  5458                           
  5459                           ;Lab2.c: 69:             pot1 = ADRESH;
  5460  0D53  081E               	movf	30,w	;volatile
  5461  0D54  00F0               	movwf	??_isr
  5462  0D55  0870               	movf	??_isr,w
  5463  0D56  00DE               	movwf	_pot1
  5464                           
  5465                           ;Lab2.c: 70:         }
  5466  0D57  2D5C               	goto	i1l2138
  5467  0D58                     i1l2136:
  5468                           
  5469                           ;Lab2.c: 72:             pot2 = ADRESH;
  5470  0D58  081E               	movf	30,w	;volatile
  5471  0D59  00F0               	movwf	??_isr
  5472  0D5A  0870               	movf	??_isr,w
  5473  0D5B  00DD               	movwf	_pot2
  5474  0D5C                     i1l2138:
  5475                           
  5476                           ;Lab2.c: 75:         ADIF = 0;
  5477  0D5C  130C               	bcf	12,6	;volatile
  5478  0D5D                     i1l2140:
  5479                           
  5480                           ;Lab2.c: 77:     if (RCIF){
  5481  0D5D  1E8C               	btfss	12,5	;volatile
  5482  0D5E  2D60               	goto	u238_21
  5483  0D5F  2D61               	goto	u238_20
  5484  0D60                     u238_21:
  5485  0D60  2D80               	goto	i1l102
  5486  0D61                     u238_20:
  5487  0D61                     i1l2142:
  5488                           
  5489                           ;Lab2.c: 78:         if (RCREG == '+'){
  5490  0D61  302B               	movlw	43
  5491  0D62  061A               	xorwf	26,w	;volatile
  5492  0D63  1D03               	btfss	3,2
  5493  0D64  2D66               	goto	u239_21
  5494  0D65  2D67               	goto	u239_20
  5495  0D66                     u239_21:
  5496  0D66  2D6C               	goto	i1l2146
  5497  0D67                     u239_20:
  5498  0D67                     i1l2144:
  5499                           
  5500                           ;Lab2.c: 79:             con++;
  5501  0D67  3001               	movlw	1
  5502  0D68  00F0               	movwf	??_isr
  5503  0D69  0870               	movf	??_isr,w
  5504  0D6A  07DC               	addwf	_con,f
  5505                           
  5506                           ;Lab2.c: 80:         }
  5507  0D6B  2D7F               	goto	i1l2154
  5508  0D6C                     i1l2146:
  5509  0D6C  302D               	movlw	45
  5510  0D6D  061A               	xorwf	26,w	;volatile
  5511  0D6E  1D03               	btfss	3,2
  5512  0D6F  2D71               	goto	u240_21
  5513  0D70  2D72               	goto	u240_20
  5514  0D71                     u240_21:
  5515  0D71  2D75               	goto	i1l2150
  5516  0D72                     u240_20:
  5517  0D72                     i1l2148:
  5518                           
  5519                           ;Lab2.c: 82:             con--;
  5520  0D72  3001               	movlw	1
  5521  0D73  02DC               	subwf	_con,f
  5522                           
  5523                           ;Lab2.c: 83:         }
  5524  0D74  2D7F               	goto	i1l2154
  5525  0D75                     i1l2150:
  5526  0D75  302A               	movlw	42
  5527  0D76  061A               	xorwf	26,w	;volatile
  5528  0D77  1D03               	btfss	3,2
  5529  0D78  2D7A               	goto	u241_21
  5530  0D79  2D7B               	goto	u241_20
  5531  0D7A                     u241_21:
  5532  0D7A  2D7F               	goto	i1l2154
  5533  0D7B                     u241_20:
  5534  0D7B                     i1l2152:
  5535                           
  5536                           ;Lab2.c: 85:             x = 1;
  5537  0D7B  3001               	movlw	1
  5538  0D7C  00D3               	movwf	_x
  5539  0D7D  3000               	movlw	0
  5540  0D7E  00D4               	movwf	_x+1
  5541  0D7F                     i1l2154:
  5542                           
  5543                           ;Lab2.c: 87:         RCIF = 0;
  5544  0D7F  128C               	bcf	12,5	;volatile
  5545  0D80                     i1l102:
  5546  0D80  0872               	movf	??_isr+2,w
  5547  0D81  008A               	movwf	10
  5548  0D82  0E71               	swapf	??_isr+1,w
  5549  0D83  0083               	movwf	3
  5550  0D84  0EFE               	swapf	btemp,f
  5551  0D85  0E7E               	swapf	btemp,w
  5552  0D86  0009               	retfie
  5553  0D87                     __end_of_isr:
  5554  007E                     btemp	set	126	;btemp
  5555  007E                     wtemp0	set	126
  5556                           
  5557                           	psect	intentry
  5558  0004                     __pintentry:	
  5559                           ;incstack = 0
  5560                           ; Regs used in _isr: [wreg+status,2+status,0]
  5561                           
  5562  0004                     interrupt_function:
  5563  007E                     saved_w	set	btemp
  5564  0004  00FE               	movwf	btemp
  5565  0005  0E03               	swapf	3,w
  5566  0006  00F1               	movwf	??_isr+1
  5567  0007  080A               	movf	10,w
  5568  0008  00F2               	movwf	??_isr+2
  5569  0009  120A  158A  2D44   	ljmp	_isr
  5570                           
  5571                           	psect	config
  5572                           
  5573                           ;Config register CONFIG1 @ 0x2007
  5574                           ;	Oscillator Selection bits
  5575                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5576                           ;	Watchdog Timer Enable bit
  5577                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5578                           ;	Power-up Timer Enable bit
  5579                           ;	PWRTE = ON, PWRT enabled
  5580                           ;	RE3/MCLR pin function select bit
  5581                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5582                           ;	Code Protection bit
  5583                           ;	CP = OFF, Program memory code protection is disabled
  5584                           ;	Data Code Protection bit
  5585                           ;	CPD = OFF, Data memory code protection is disabled
  5586                           ;	Brown Out Reset Selection bits
  5587                           ;	BOREN = OFF, BOR disabled
  5588                           ;	Internal External Switchover bit
  5589                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5590                           ;	Fail-Safe Clock Monitor Enabled bit
  5591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5592                           ;	Low Voltage Programming Enable bit
  5593                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  5594                           ;	In-Circuit Debugger Mode bit
  5595                           ;	DEBUG = 0x1, unprogrammed default
  5596  2007                     	org	8199
  5597  2007  30C4               	dw	12484
  5598                           
  5599                           ;Config register CONFIG2 @ 0x2008
  5600                           ;	Brown-out Reset Selection bit
  5601                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5602                           ;	Flash Program Memory Self Write Enable bits
  5603                           ;	WRT = OFF, Write protection off
  5604  2008                     	org	8200
  5605  2008  3FFF               	dw	16383

Data Sizes:
    Strings     117
    Constant    10
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     51      68
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_12(CODE[6]), STR_10(CODE[6]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[5]), STR_5(CODE[6]), STR_4(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> buffer(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 14
		 -> buffer(BANK0[5]), STR_1(CODE[14]), 

    UART_write@word	PTR unsigned char  size(2) Largest target is 33
		 -> STR_14(CODE[4]), STR_13(CODE[9]), STR_11(CODE[8]), STR_9(CODE[4]), 
		 -> buffer(BANK0[5]), STR_3(CODE[32]), STR_2(CODE[33]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Division->___awmod
    ___awdiv->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9933
                                             47 BANK0      4     4      0
                         _ADC_CONFIG
                             _ADC_IF
                           _Division
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _UART_write
                       _USART_CONFIG
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2310
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _USART_CONFIG                                         6     0      6     363
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _UART_write                                           2     0      2     653
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     692
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     262
                                              6 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    1905
                                             11 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_IF
   _Division
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _UART_write
   _USART_CONFIG
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4F      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 11:24:52 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0073                          _x 0053  
                        pc 0002                         l81 0C96                         l85 0CB2  
                       l88 0F1A               ___awdiv@sign 0028                         _rc 0078  
                       _tr 0079                         fsr 0004        __Umul8_16@word_mpld 0022  
                      l131 0C8A                        l300 0650                        l125 0D07  
                      l150 0DCA                        l152 0DCB                        l163 0C4D  
                      l172 0C6B                        l148 0DBD                        l500 0FFF  
                      l166 0C2B                        l175 07F8                        l184 0E11  
                      l178 0C3A                        l470 0EB2                        l712 0CC9  
                      l457 0F83                        l705 0373                        l714 0CDB  
                      l490 0FFF                        l750 06D6                        l751 06E2  
                      l743 06BA                        l576 0E57                        l497 0FEA  
                      l737 0675                        l586 0D43                        l739 070C  
                      l693 037F                        l699 02EB                        _RC4 003C  
                      _RC5 003D                        _dec 005A                        _cen 005B  
                      _con 005C                        _isr 0D44                        fsr0 0004  
                      _uni 0059                        indf 0000               ___awmod@sign 0021  
             ___flmul@aexp 003C               ___flmul@bexp 003D               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E               ___fltol@exp1 004E  
                     l2000 010E                       l2010 017C                       l2002 012A  
                     l2020 020C                       l2012 018C                       l2004 0146  
                     l2030 02A0                       l2022 021C                       l2014 01A9  
                     l2006 014F                       l2040 02C5                       l2032 02AE  
                     l2024 0249                       l2016 01C2                       l2008 015F  
                     l2050 02E8                       l2034 02B7                       l2042 02CB  
                     l2026 026F                       l2018 01DF                       l2060 0307  
                     l2044 02CF                       l2036 02BB                       l2028 0297  
                     l2070 034D                       l2062 0320                       l2054 02F0  
                     l2046 02D0                       l2038 02BC                       l2320 0F1E  
                     l2080 036C                       l2072 0357                       l2056 02F5  
                     l2064 0326                       l2048 02D4                       l2400 0E12  
                     l2330 0F32                       l2322 0F22                       l2082 0377  
                     l2074 0359                       l2066 0333                       l2058 0303  
                     l2410 0E2A                       l2402 0E16                       l2340 0F48  
                     l2332 0F36                       l2324 0F27                       l2076 0367  
                     l2068 033E                       l2420 0E4D                       l2412 0E2E  
                     l2404 0E1C                       l1700 0D2C                       l2500 05D6  
                     l2350 0F68                       l2342 0F4C                       l2334 0F38  
                     l2326 0F29                       l2318 0F1B                       l2430 0D92  
                     l1710 0CB6                       l2078 036B                       l2414 0E3F  
                     l2406 0E1F                       l2422 0E53                       l1702 0D32  
                     l2510 05F6                       l2502 05E0                       l2352 0F6F  
                     l2344 0F50                       l2336 0F3E                       l2328 0F2D  
                     l1800 07BC                       l2440 0DA0                       l2432 0D96  
                     l1720 0CD7                       l1712 0CB8                       l2416 0E45  
                     l2408 0E26                       l1704 0D39                       l2512 0626  
                     l2504 05E6                       l2520 064C                       l2600 03B7  
                     l2346 0F61                       l2338 0F41                       l2354 0F75  
                     l2370 0E66                       l2362 0E58                       l2426 0EB6  
                     l1570 0C4A                       l1810 07DD                       l1802 07C5  
                     l1730 0CA2                       l2450 0DC0                       l2434 0D97  
                     l1714 0CBF                       l2530 0659                       l2418 0E46  
                     l1706 0D3F                       l2514 062D                       l2506 05ED  
                     l2610 03CD                       l2602 03BC                       l1740 0CE4  
                     l2356 0F7A                       l2348 0F67                       l2380 0E7F  
                     l2372 0E6A                       l2364 0E5B                       l1564 0C3C  
                     l1812 07E3                       l1804 07CB                       l1820 0C4F  
                     l1572 0C2D                       l2460 0DD1                       l1724 0C8B  
                     l2452 0DC8                       l2436 0D9B                       l2444 0DA4  
                     l2428 0D87                       l1716 0CC3                       l2540 0686  
                     l2532 065D                       l2516 0631                       l2508 05F1  
                     l2620 03F1                       l2612 03D6                       l2604 03BF  
                     l1750 0CF2                       l1742 0CE5                       l1734 0CDC  
                     l2358 0F7F                       l2390 0E9E                       l2382 0E83  
                     l2374 0E6F                       l2366 0E5F                       l1566 0C3F  
                     l1814 07E9                       l1806 07D1                       l1822 0C54  
                     l1574 0C30                       l2462 0DED                       l1726 0C8C  
                     l2438 0D9F                       l2446 0DB1                       l1718 0CD2  
                     l1910 0F84                       l2550 06B1                       l2542 068B  
                     l2534 066D                       l2470 0575                       l2518 063A  
                     l2630 048D                       l2622 0430                       l2614 03DF  
                     l2606 03C0                       l1744 0CE6                       l1736 0CDF  
                     l1840 0C7B                       l2384 0E87                       l2376 0E75  
                     l2392 0EA4                       l2368 0E64                       l1568 0C41  
                     l1816 07EF                       l1808 07D7                       l1824 0C5D  
                     l1576 0C32                       l2464 0DF5                       l1728 0C9C  
                     l2448 0DB9                       l1920 0FB0                       l1912 0F91  
                     l2560 06E4                       l2552 06C1                       l2544 0698  
                     l2536 067D                       l2528 0654                       l2480 059F  
                     l2472 057C                       l2640 04CB                       l2632 0496  
                     l2624 046F                       l2616 03E8                       l2608 03C5  
                     l1746 0CEA                       l1754 0CF7                       l1738 0CE1  
                     l1842 0C80                       l2394 0EA9                       l2386 0E91  
                     l2378 0E78                       l1818 0C1F                       l1826 0C63  
                     l1578 0C37                       l2458 0DCC                       l2730 0DA9  
                     l1922 0FB8                       l2562 06FA                       l2554 06CC  
                     l2546 069F                       l1690 0D10                       l2490 05B8  
                     l2482 05A7                       l2474 0581                       l2466 056A  
                     l2650 050B                       l2642 04DE                       l2634 04A6  
                     l2626 0475                       l2618 03ED                       l2732 0CFC  
                     l1748 0CED                       l1844 0C82                       l1836 0C6C  
                     l2396 0EAE                       l2388 0E97                       l1940 0FDF  
                     l1932 0FC6                       l1924 0FBA                       l1916 0F9A  
                     l2564 06FF                       l2556 06D0                       l2548 06A3  
                     l1692 0D13                       l2484 05AB                       l2468 056F  
                     l2660 0538                       l2652 050D                       l2644 04E7  
                     l2636 04AF                       l2628 047D                       l2580 038C  
                     l2572 0380                       l1846 0C87                       l1838 0C72  
                     l1790 079C                       l1950 002C                       l1942 0FEF  
                     l1926 0FBE                       l1934 0FD8                       l1918 0FAF  
                     l2566 0703                       l2558 06DA                       l1694 0D1A  
                     l2486 05AF                       l2478 0582                       l2662 0548  
                     l2654 0516                       l2646 04FA                       l2638 04C2  
                     l2590 039C                       l2582 038D                       l2574 0384  
                     l1792 079F                       l1960 0043                       l1952 0030  
                     l1944 0FF4                       l2568 0704                       l1696 0D1E  
                     l1688 0D08                       l2496 05BA                       l2488 05B3  
                     l2728 0594                       l2664 0551                       l2656 0526  
                     l2648 0503                       l2592 03AF                       l2584 0391  
                     l2576 0385                       l1794 07A8                       l1970 005C  
                     l1962 0045                       l1954 0031                       l1946 001F  
                     l1698 0D22                       l2666 055A                       l2658 052F  
                     l2594 03B0                       l2586 0392                       l2578 038A  
                     l1796 07AE                       l1980 0071                       l1972 005D  
                     l1964 004D                       l1956 0036                       l1948 0026  
                     l2596 03B3                       l2588 0393                       l1798 07B6  
                     l1990 008C                       l1982 0079                       l1974 0062  
                     l1966 0052                       l1958 003B                       l2598 03B4  
                     l1992 009C                       l1984 007E                       l1976 0067  
                     l1968 0058                       l1994 00A9                       l1986 0083  
                     l1978 006F                       l1996 00C6                       l1998 00E2  
                     _ADIF 0066                       ?_isr 0070                       STR_1 0768  
                     STR_2 0727                       STR_3 0748                       STR_4 0787  
                     STR_5 078D                       STR_6 0793                       STR_7 0795  
                     STR_8 0795                       STR_9 0798                       u2011 01D1  
                     u2100 02BB                       u2012 01D8                       u2101 02BA  
                     u2021 01FE                       u2013 01DF                       u2005 01AB  
                     u2022 0205                       u2031 022B                       u2023 020C  
                     u2200 034D                       u2120 02CF                       u2040 0255  
                     u2032 0232                       u2201 034C                       u2121 02CE  
                     u2033 0239                       u2210 036B                       u2130 02D4  
                     u2211 036A                       u2131 02D3                       u2115 02BE  
                     u2051 0261                       u2140 02E8                       u2060 027D  
                     u2052 0268                       u1500 0D22                       u2205 0349  
                     u2141 02E7                       u2053 026F                       u2045 0250  
                     u1501 0D21                       u2150 02EF                       u1510 0D2C  
                     u3007 07F3                       u2151 02EE                       u2071 0289  
                     u1511 0D2B                       u2160 02F5                       u2072 0290  
                     u3017 0C46                       u2161 02F4                       u2073 0297  
                     u2065 0278                       u1610 0C54                       u2170 0307  
                     u1530 0D3F                       u3027 0C84                       u1611 0C53  
                     u2171 0306                       u1531 0D3E                       u1515 0D28  
                     u1620 0C63                       u1540 0CC3                       u2180 0316  
                     u1621 0C62                       u1541 0CC2                       u2085 0299  
                     u1525 0D33                       u2510 0F75                       u2430 0F22  
                     u2190 0333                       u2511 0F74                       u2431 0F21  
                     u2191 0332                       u2095 02B0                       u2520 0F7A  
                     u2440 0F2D                       u2600 0EA4                       u1560 0CD7  
                     u1800 0FD7                       u1480 0D10                       u2521 0F79  
                     u2505 0F69                       u2441 0F2C                       u2601 0EA3  
                     u1561 0CD6                       u2185 0311                       u1801 0FD6  
                     u1481 0D0F                       u2450 0F3E                       u2610 0EA9  
                     u2530 0E5F                       u1570 0C9C                       u1810 0FDE  
                     u2451 0F3D                       u2611 0EA8                       u2531 0E5E  
                     u1571 0C9B                       u1555 0CCA                       u2195 032F  
                     u1811 0FDD                       u1660 0C72                       u2540 0E6A  
                     u1580 0CB2                       u2700 0DC8                       u1900 0067  
                     u2620 0E1C                       u1661 0C71                       u2541 0E69  
                     u1581 0CB1                       u2701 0DC7                       u1901 0066  
                     u2621 0E1B                       u1670 0C7B                       u2470 0F50  
                     u2550 0E75                       u2710 0DDB                       u1910 007E  
                     u1830 0FEF                       u1750 0F91                       u1671 0C7A  
                     u2471 0F4F                       u2551 0E74                       u1911 007D  
                     u1831 0FEE                       u1751 0F90                       u1495 0D14  
                     u2720 0DFF                       u1920 0083                       u1840 0FF4  
                     u1760 0FA8                       u2640 0E2E                       u2800 064C  
                     u2465 0F42                       u1921 0082                       u1841 0FF3  
                     u1825 0FE1                       u2641 0E2D                       u2801 064B  
                     u2490 0F61                       u2570 0E87                       u2730 0E11  
                     u1850 0030                       u1770 0FBE                       u2810 0659  
                     u2491 0F60                       u2571 0E86                       u2731 0E10  
                     u1931 00D4                       u1851 002F                       u1771 0FBD  
                     u2811 0658                       u2635 0E20                       u2580 0E91  
                     u1932 00DB                       u1860 0036                       u1780 0FC5  
                     u2900 06D6                       u2820 065D                       u2660 0E3F  
                     u2740 0575                       u2485 0F51                       u2581 0E90  
                     u2565 0E79                       u1941 00F0                       u1933 00E2  
                     u1861 0035                       u1781 0FC4                       u1765 0FA3  
                     u2901 06D5                       u2821 065C                       u2661 0E3E  
                     u2741 0574                       u1942 00F7                       u1870 003B  
                     u2910 06DA                       u2830 067D                       u2750 05AF  
                     u2495 0F5D                       u1951 011C                       u1943 00FE  
                     u1871 003A                       u2911 06D9                       u2831 067C  
                     u2655 0E2F                       u2751 05AE                       u1952 0123  
                     u1880 005C                       u2920 06EF                       u2680 0E53  
                     u2760 05D5                       u2585 0E8D                       u1961 0138  
                     u1953 012A                       u1881 005B                       u2681 0E52  
                     u2665 0E3B                       u2761 05D4                       u2690 0DB9  
                     u1962 013F                       u1890 0062                       u2930 06FF  
                     u2850 069E                       u2770 05E0                       u2595 0E98  
                     u2691 0DB8                       u1963 0146                       u1891 0061  
                     u1795 0FC7                       u2931 06FE                       u2851 069D  
                     u2675 0E47                       u2771 05DF                       u2940 0703  
                     u2780 05E6                       u1981 016E                       u2941 0702  
                     u2925 06EA                       u2845 0690                       u2781 05E5  
                     u2765 05D1                       u1982 0175                       u2870 06C0  
                     u2790 063A                       u2950 050B                       u1991 019B  
                     u1983 017C                       u1975 0148                       u2871 06BF  
                     u2791 0639                       u2951 050A                       u1992 01A2  
                     u1993 01A9                       u2865 06B2                       u2890 06D0  
                     u2891 06CF                       _RCIF 0065                       u2885 06C5  
                     u2967 0C35                       u2977 07A3                       u2987 07B2  
                     u2997 07C0                       _TXEN 04C5          ?_Lcd_Write_String 0075  
                     _frec 007A                       _main 0380                       _pot1 005E  
                     _pot2 005D                       _vol1 0057                       _vol2 0055  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0020  
          __end_of_Lcd_Cmd 0C4E                      ??_isr 0070              ___fltol@sign1 004D  
                    ?_main 0070            __end_of___awdiv 0F84                      STR_10 0787  
                    STR_11 077F                      STR_12 0787                      STR_13 0776  
                    STR_14 0798            __end_of___awmod 0EB3            __end_of___flmul 0380  
          __end_of___fltol 1000                      _ANSEL 0188            ___awdiv@divisor 0022  
          __end_of___lwdiv 0E58                      i1l102 0D80            __end_of___lwmod 0D44  
          ___awdiv@counter 0027                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 001E  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019           USART_CONFIG@frec 0020  
          __end_of_dpowers 0727                ?_UART_write 0073                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0651  
         __end_of_Lcd_Init 07F9            __initialization 000F           __end_of_Division 0F1B  
             __end_of_main 0567                     ??_main 004F         __size_of_Lcd_Clear 000D  
             ??_ADC_CONFIG 0075                     _ADC_IF 0C6C                     _ADRESH 001E  
         ___awdiv@dividend 0024                     _ANSELH 0189                     i1l2130 0D44  
                   i1l2132 0D4A                     i1l2140 0D5D                     i1l2150 0D75  
                   i1l2142 0D61                     i1l2134 0D53                     i1l2152 0D7B  
                   i1l2144 0D67                     i1l2136 0D58                     i1l2154 0D7F  
                   i1l2146 0D6C                     i1l2138 0D5C                     i1l2148 0D72  
                   u240_20 0D72                     u240_21 0D71                     u241_20 0D7B  
                   u241_21 0D7A                     u236_20 0D4A                     u236_21 0D49  
                   u237_20 0D53                     u237_21 0D52                     u238_20 0D61  
                   u238_21 0D60                     u239_20 0D67                     u239_21 0D66  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 000F           __end_of___xxtofl 070D  
       __end_of_ADC_CONFIG 0D08                  ??___awdiv 0026                  ??___awmod 0077  
                ??___flmul 0032                  ??___fltol 0048                  ??___lwdiv 0077  
                ??___lwmod 0027                     _buffer 005F        __size_of_UART_write 0028  
         ___awdiv@quotient 0029            ___awmod@divisor 0073            ___awmod@counter 0020  
       __size_of__Umul8_16 0029                     saved_w 007E                  ??_sprintf 002C  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073    __end_of__initialization 001B  
        __end_of_Lcd_Clear 0C2C                 ___fltol@f1 0044             __pcstackCOMMON 0070  
           USART_CONFIG@rc 0024             USART_CONFIG@tr 0022             _Lcd_Set_Cursor 0C4E  
                ?_Lcd_Init 0070                    ?_ADC_IF 0070                  ?_Division 0070  
               __pbssBANK0 0053          __end_of__Umul8_16 0CDC                 __pmaintext 0380  
               __pintentry 0004  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 0C6C  
                ?___xxtofl 0073                 ??_Lcd_Init 0076               ??_UART_write 0075  
          __size_of_ADC_IF 001F                 ??_Division 002B                 __stringtab 070D  
           _Lcd_Write_Char 0C2C                    _Lcd_Cmd 0C3B                    ___awdiv 0F1B  
                  ___awmod 0E58                    ___flmul 001F                    ___fltol 0F84  
                  ___lwdiv 0E12                    ___lwmod 0D08            ?_Lcd_Set_Cursor 0076  
       __end_of_UART_write 0CB3                    __ptext1 0567                    __ptext2 0D08  
                  __ptext3 0E12                    __ptext4 0651                    __ptext5 0F84  
                  __ptext6 001F                    __ptext7 0CB3                    __ptext8 0D87  
                  __ptext9 0C8B                    _dpowers 071D               __size_of_isr 0043  
               ??___xxtofl 0020           ___awmod@dividend 0075                    _sprintf 0567  
                  clrloop0 0C18     __end_of_Lcd_Write_Char 0C3B       end_of_initialization 001B  
                _RCSTAbits 0018                  Division@y 0030              ___xxtofl@sign 0024  
            ?_USART_CONFIG 0020            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 0023             __end_of_ADC_IF 0C8B                ___flmul@grs 0038  
                _TXSTAbits 0098                  _Lcd_Clear 0C1F           _Lcd_Write_String 0DCC  
              _BAUDCTLbits 0187             ??_USART_CONFIG 0073        start_initialization 000F  
              __end_of_isr 0D87                   ??_ADC_IF 0073          __size_of_Lcd_Init 005D  
        __size_of_Division 0068                 ?_Lcd_Clear 0070                  __Umul8_16 0CB3  
          Lcd_Write_Char@a 0074                  ___flmul@a 002E                  ___flmul@b 002A  
              __pbssCOMMON 0078                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 0030  
              sprintf@prec 0031           ___lwdiv@dividend 0075           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0022                   ?___awmod 0073                   ?___flmul 002A  
                 ?___fltol 0044                 ?__Umul8_16 0073                   ?___lwdiv 0073  
                 ?___lwmod 0023                  __pstrings 070D           ___lwdiv@quotient 0021  
                 ?_sprintf 0029          interrupt_function 0004                  clear_ram0 0C17  
                 _PIE1bits 008C                   Lcd_Cmd@a 0075       __end_of_USART_CONFIG 0DCC  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 071C  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0073             UART_write@word 0073  
               _ADC_CONFIG 0CDC                   _Lcd_Init 079C                   _Division 0EB3  
 __end_of_Lcd_Write_String 0E12           __size_of_Lcd_Cmd 0013                ??__Umul8_16 0075  
         __size_of___awdiv 0069           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
            _Division$1123 002E         __end_of__stringtab 071D                 sprintf@val 0032  
                 ___xxtofl 0651            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 0DCC                   __ptext11 0C2C                   __ptext20 0CDC  
                 __ptext12 0C4E                   __ptext21 0D44                   __ptext13 079C  
                 __ptext14 0C1F                   __ptext15 0C3B                   __ptext16 0EB3  
                 __ptext17 0E58                   __ptext18 0F1B                   __ptext19 0C6C  
         __size_of_sprintf 00EA              __size_of_main 01E7                 _INTCONbits 000B  
              ?_ADC_CONFIG 0073                   intlevel1 0000                  sprintf@ap 002F  
                sprintf@sp 0034      __size_of_USART_CONFIG 0045           ___lwmod@dividend 0025  
                stringcode 0717                 _OSCCONbits 008F     __Umul8_16@multiplicand 0073  
                 sprintf@c 0035                   sprintf@f 0029            ___lwmod@divisor 0023  
          ___lwmod@counter 0028                   stringdir 0717                   stringtab 070D  
             _USART_CONFIG 0D87                 _UART_write 0C8B       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
