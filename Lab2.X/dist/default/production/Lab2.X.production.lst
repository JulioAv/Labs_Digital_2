

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 13:36:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	idataBANK0
   459  049E                     __pidataBANK0:
   460                           
   461                           ;initializer for _num
   462  049E  3430               	retlw	48
   463  049F  3400               	retlw	0
   464  04A0  3400               	retlw	0
   465  04A1  3400               	retlw	0
   466  04A2  3400               	retlw	0
   467  04A3  3400               	retlw	0
   468  04A4  3400               	retlw	0
   469  04A5  3400               	retlw	0
   470  04A6  3400               	retlw	0
   471  04A7  3400               	retlw	0
   472  0008                     _PORTD	set	8
   473  0018                     _RCSTAbits	set	24
   474  000B                     _INTCONbits	set	11
   475  001A                     _RCREG	set	26
   476  001E                     _ADRESH	set	30
   477  001F                     _ADCON0bits	set	31
   478  0019                     _TXREG	set	25
   479  003D                     _RC5	set	61
   480  003C                     _RC4	set	60
   481  0065                     _RCIF	set	101
   482  0066                     _ADIF	set	102
   483  0099                     _SPBRG	set	153
   484  009F                     _ADCON1bits	set	159
   485  008C                     _PIE1bits	set	140
   486  008F                     _OSCCONbits	set	143
   487  0088                     _TRISD	set	136
   488  0087                     _TRISC	set	135
   489  0086                     _TRISB	set	134
   490  0085                     _TRISA	set	133
   491  0098                     _TXSTAbits	set	152
   492  04C5                     _TXEN	set	1221
   493  0187                     _BAUDCTLbits	set	391
   494  0189                     _ANSELH	set	393
   495  0188                     _ANSEL	set	392
   496                           
   497                           	psect	strings
   498  0438                     __pstrings:
   499  0438                     stringtab:
   500  0438                     __stringtab:
   501                           
   502                           ;	String table - string pointers are 1 byte each
   503  0438  1BFF               	btfsc	btemp+1,7
   504  0439  2C42               	ljmp	stringcode
   505  043A  1383               	bcf	3,7
   506  043B  187F               	btfsc	btemp+1,0
   507  043C  1783               	bsf	3,7
   508  043D  0800               	movf	0,w
   509  043E  0A84               	incf	4,f
   510  043F  1903               	skipnz
   511  0440  0AFF               	incf	btemp+1,f
   512  0441  0008               	return
   513  0442                     stringcode:
   514  0442                     stringdir:
   515  0442  3004               	movlw	high stringdir
   516  0443  008A               	movwf	10
   517  0444  0804               	movf	4,w
   518  0445  0A84               	incf	4,f
   519  0446  0782               	addwf	2,f
   520  0447                     __stringbase:
   521  0447  3400               	retlw	0
   522  0448                     __end_of__stringtab:
   523  0448                     STR_1:
   524  0448  3453               	retlw	83	;'S'
   525  0449  3431               	retlw	49	;'1'
   526  044A  343A               	retlw	58	;':'
   527  044B  3420               	retlw	32	;' '
   528  044C  3420               	retlw	32	;' '
   529  044D  3453               	retlw	83	;'S'
   530  044E  3432               	retlw	50	;'2'
   531  044F  343A               	retlw	58	;':'
   532  0450  3420               	retlw	32	;' '
   533  0451  3420               	retlw	32	;' '
   534  0452  3453               	retlw	83	;'S'
   535  0453  3433               	retlw	51	;'3'
   536  0454  343A               	retlw	58	;':'
   537  0455  3400               	retlw	0
   538                           
   539                           	psect	cinit
   540  0011                     start_initialization:	
   541                           ; #config settings
   542                           
   543  0011                     __initialization:
   544                           
   545                           ; Initialize objects allocated to BANK0
   546  0011  1383               	bcf	3,7	;select IRP bank0
   547  0012  305A               	movlw	low (__pdataBANK0+10)
   548  0013  00FD               	movwf	btemp+-1
   549  0014  3004               	movlw	high __pidataBANK0
   550  0015  00FE               	movwf	btemp
   551  0016  309E               	movlw	low __pidataBANK0
   552  0017  00FF               	movwf	btemp+1
   553  0018  3050               	movlw	low __pdataBANK0
   554  0019  0084               	movwf	4
   555  001A  120A  118A  2470  120A  118A  	fcall	init_ram0
   556                           
   557                           ; Clear objects allocated to BANK0
   558  001F  303B               	movlw	low __pbssBANK0
   559  0020  0084               	movwf	4
   560  0021  3050               	movlw	low (__pbssBANK0+21)
   561  0022  120A  118A  24A8  120A  118A  	fcall	clear_ram0
   562                           
   563                           ; Clear objects allocated to COMMON
   564  0027  01FD               	clrf	__pbssCOMMON& (0+127)
   565  0028                     end_of_initialization:	
   566                           ;End of C runtime variable initialization code
   567                           
   568  0028                     __end_of__initialization:
   569  0028  0183               	clrf	3
   570  0029  120A  118A  282C   	ljmp	_main	;jump to C main() function
   571                           
   572                           	psect	bssCOMMON
   573  007D                     __pbssCOMMON:
   574  007D                     _cen2:
   575  007D                     	ds	1
   576                           
   577                           	psect	bssBANK0
   578  003B                     __pbssBANK0:
   579  003B                     _vol2:
   580  003B                     	ds	2
   581  003D                     _vol1:
   582  003D                     	ds	2
   583  003F                     _con:
   584  003F                     	ds	2
   585  0041                     _rc:
   586  0041                     	ds	2
   587  0043                     _tr:
   588  0043                     	ds	2
   589  0045                     _frec:
   590  0045                     	ds	2
   591  0047                     _pot2:
   592  0047                     	ds	2
   593  0049                     _pot1:
   594  0049                     	ds	2
   595  004B                     _uni2:
   596  004B                     	ds	1
   597  004C                     _dec2:
   598  004C                     	ds	1
   599  004D                     _uni1:
   600  004D                     	ds	1
   601  004E                     _dec1:
   602  004E                     	ds	1
   603  004F                     _cen1:
   604  004F                     	ds	1
   605                           
   606                           	psect	dataBANK0
   607  0050                     __pdataBANK0:
   608  0050                     _num:
   609  0050                     	ds	10
   610                           
   611                           	psect	inittext
   612  046C                     init_fetch0:	
   613                           ;	Called with low address in FSR and high address in W
   614                           
   615  046C  087E               	movf	btemp,w
   616  046D  008A               	movwf	10
   617  046E  087F               	movf	btemp+1,w
   618  046F  0082               	movwf	2
   619  0470                     init_ram0:	
   620                           ;Called with:
   621                           ;	high address of idata address in btemp 
   622                           ;	low address of idata address in btemp+1 
   623                           ;	low address of data in FSR
   624                           ;	high address + 1 of data in btemp-1
   625                           
   626  0470  120A  118A  246C  120A  118A  	fcall	init_fetch0
   627  0475  0080               	movwf	0
   628  0476  0A84               	incf	4,f
   629  0477  0804               	movf	4,w
   630  0478  067D               	xorwf	btemp+-1,w
   631  0479  1903               	btfsc	3,2
   632  047A  3400               	retlw	0
   633  047B  0AFF               	incf	btemp+1,f
   634  047C  1903               	btfsc	3,2
   635  047D  0AFE               	incf	btemp,f
   636  047E  2C70               	goto	init_ram0
   637                           
   638                           	psect	clrtext
   639  04A8                     clear_ram0:	
   640                           ;	Called with FSR containing the base address, and
   641                           ;	W with the last address+1
   642                           
   643  04A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   644  04A9                     clrloop0:
   645  04A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   646  04AA  0A84               	incf	4,f	;increment pointer
   647  04AB  0604               	xorwf	4,w	;XOR with final address
   648  04AC  1903               	btfsc	3,2	;have we reached the end yet?
   649  04AD  3400               	retlw	0	;all done for this memory range, return
   650  04AE  0604               	xorwf	4,w	;XOR again to restore value
   651  04AF  2CA9               	goto	clrloop0	;do the next byte
   652                           
   653                           	psect	cstackCOMMON
   654  0070                     __pcstackCOMMON:
   655  0070                     ?_ADC_IF:
   656  0070                     ??_ADC_IF:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_Lcd_Init:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Clear:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_isr:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_main:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_Lcd_Cmd:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_Lcd_Write_Char:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?i1___awdiv:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     i1___awdiv@divisor:	
   681                           ; 2 bytes @ 0x0
   682                           
   683                           
   684                           ; 2 bytes @ 0x0
   685  0070                     	ds	2
   686  0072                     i1___awdiv@dividend:
   687                           
   688                           ; 2 bytes @ 0x2
   689  0072                     	ds	2
   690  0074                     ??i1___awdiv:
   691                           
   692                           ; 1 bytes @ 0x4
   693  0074                     	ds	1
   694  0075                     i1___awdiv@counter:
   695                           
   696                           ; 1 bytes @ 0x5
   697  0075                     	ds	1
   698  0076                     i1___awdiv@sign:
   699                           
   700                           ; 1 bytes @ 0x6
   701  0076                     	ds	1
   702  0077                     i1___awdiv@quotient:
   703                           
   704                           ; 2 bytes @ 0x7
   705  0077                     	ds	2
   706  0079                     ?___wmul:
   707  0079                     ___wmul@multiplier:	
   708                           ; 2 bytes @ 0x9
   709                           
   710                           
   711                           ; 2 bytes @ 0x9
   712  0079                     	ds	2
   713  007B                     ___wmul@multiplicand:
   714                           
   715                           ; 2 bytes @ 0xB
   716  007B                     	ds	2
   717  007D                     ??___wmul:
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721                           ; 1 bytes @ 0xD
   722                           
   723  0020                     ___wmul@product:
   724                           
   725                           ; 2 bytes @ 0x0
   726  0020                     	ds	2
   727  0022                     ??_isr:
   728                           
   729                           ; 1 bytes @ 0x2
   730  0022                     	ds	4
   731  0026                     ?_ADC_CONFIG:
   732  0026                     ?_USART_CONFIG:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0026                     ??_Lcd_Cmd:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0026                     ??_Lcd_Write_Char:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0026                     ?___awmod:	
   742                           ; 1 bytes @ 0x6
   743                           
   744  0026                     ADC_CONFIG@frec:	
   745                           ; 2 bytes @ 0x6
   746                           
   747  0026                     USART_CONFIG@frec:	
   748                           ; 2 bytes @ 0x6
   749                           
   750  0026                     ___awmod@divisor:	
   751                           ; 2 bytes @ 0x6
   752                           
   753                           
   754                           ; 2 bytes @ 0x6
   755  0026                     	ds	1
   756  0027                     Lcd_Write_Char@a:
   757                           
   758                           ; 1 bytes @ 0x7
   759  0027                     	ds	1
   760  0028                     ??_ADC_CONFIG:
   761  0028                     ?_Lcd_Write_String:	
   762                           ; 1 bytes @ 0x8
   763                           
   764  0028                     Lcd_Cmd@a:	
   765                           ; 1 bytes @ 0x8
   766                           
   767  0028                     USART_CONFIG@tr:	
   768                           ; 1 bytes @ 0x8
   769                           
   770  0028                     Lcd_Write_String@a:	
   771                           ; 2 bytes @ 0x8
   772                           
   773  0028                     ___awmod@dividend:	
   774                           ; 2 bytes @ 0x8
   775                           
   776                           
   777                           ; 2 bytes @ 0x8
   778  0028                     	ds	1
   779  0029                     ??_Lcd_Init:
   780  0029                     ??_Lcd_Clear:	
   781                           ; 1 bytes @ 0x9
   782                           
   783  0029                     ?_Lcd_Set_Cursor:	
   784                           ; 1 bytes @ 0x9
   785                           
   786  0029                     Lcd_Set_Cursor@b:	
   787                           ; 1 bytes @ 0x9
   788                           
   789                           
   790                           ; 1 bytes @ 0x9
   791  0029                     	ds	1
   792  002A                     ??_Lcd_Set_Cursor:
   793  002A                     ??_Lcd_Write_String:	
   794                           ; 1 bytes @ 0xA
   795                           
   796  002A                     ??___awmod:	
   797                           ; 1 bytes @ 0xA
   798                           
   799  002A                     Lcd_Set_Cursor@a:	
   800                           ; 1 bytes @ 0xA
   801                           
   802  002A                     USART_CONFIG@rc:	
   803                           ; 1 bytes @ 0xA
   804                           
   805  002A                     Lcd_Write_String@i:	
   806                           ; 2 bytes @ 0xA
   807                           
   808                           
   809                           ; 2 bytes @ 0xA
   810  002A                     	ds	1
   811  002B                     ___awmod@counter:
   812                           
   813                           ; 1 bytes @ 0xB
   814  002B                     	ds	1
   815  002C                     ??_USART_CONFIG:
   816  002C                     ___awmod@sign:	
   817                           ; 1 bytes @ 0xC
   818                           
   819                           
   820                           ; 1 bytes @ 0xC
   821  002C                     	ds	1
   822  002D                     ?___awdiv:
   823  002D                     ___awdiv@divisor:	
   824                           ; 2 bytes @ 0xD
   825                           
   826                           
   827                           ; 2 bytes @ 0xD
   828  002D                     	ds	2
   829  002F                     ___awdiv@dividend:
   830                           
   831                           ; 2 bytes @ 0xF
   832  002F                     	ds	2
   833  0031                     ??___awdiv:
   834                           
   835                           ; 1 bytes @ 0x11
   836  0031                     	ds	1
   837  0032                     ___awdiv@counter:
   838                           
   839                           ; 1 bytes @ 0x12
   840  0032                     	ds	1
   841  0033                     ___awdiv@sign:
   842                           
   843                           ; 1 bytes @ 0x13
   844  0033                     	ds	1
   845  0034                     ___awdiv@quotient:
   846                           
   847                           ; 2 bytes @ 0x14
   848  0034                     	ds	2
   849  0036                     ??_main:
   850                           
   851                           ; 1 bytes @ 0x16
   852  0036                     	ds	3
   853  0039                     _main$1077:
   854                           
   855                           ; 2 bytes @ 0x19
   856  0039                     	ds	2
   857                           
   858                           	psect	maintext
   859  002C                     __pmaintext:	
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 83 in file "Lab2.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : B00/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       2       0       0       0
   881 ;;      Temps:          0       3       0       0       0
   882 ;;      Totals:         0       5       0       0       0
   883 ;;Total ram usage:        5 bytes
   884 ;; Hardware stack levels required when called:    4
   885 ;; This function calls:
   886 ;;		_ADC_CONFIG
   887 ;;		_Lcd_Clear
   888 ;;		_Lcd_Init
   889 ;;		_Lcd_Set_Cursor
   890 ;;		_Lcd_Write_String
   891 ;;		_USART_CONFIG
   892 ;;		___awdiv
   893 ;;		___awmod
   894 ;; This function is called by:
   895 ;;		Startup code after reset
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _main
   901  002C                     _main:
   902  002C                     l1486:	
   903                           ;incstack = 0
   904                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   905                           
   906                           
   907                           ;Lab2.c: 84:     ANSEL = 0x03;
   908  002C  3003               	movlw	3
   909  002D  1683               	bsf	3,5	;RP0=1, select bank3
   910  002E  1703               	bsf	3,6	;RP1=1, select bank3
   911  002F  0088               	movwf	8	;volatile
   912  0030                     l1488:
   913                           
   914                           ;Lab2.c: 85:     ANSELH = 0x00;
   915  0030  0189               	clrf	9	;volatile
   916  0031                     l1490:
   917                           
   918                           ;Lab2.c: 87:     TRISA = 0x03;
   919  0031  3003               	movlw	3
   920  0032  1683               	bsf	3,5	;RP0=1, select bank1
   921  0033  1303               	bcf	3,6	;RP1=0, select bank1
   922  0034  0085               	movwf	5	;volatile
   923                           
   924                           ;Lab2.c: 88:     TRISB = 0x00;
   925  0035  0186               	clrf	6	;volatile
   926  0036                     l1492:
   927                           
   928                           ;Lab2.c: 89:     TRISC = 0x80;
   929  0036  3080               	movlw	128
   930  0037  0087               	movwf	7	;volatile
   931  0038                     l1494:
   932                           
   933                           ;Lab2.c: 90:     TRISD = 0x00;
   934  0038  0188               	clrf	8	;volatile
   935  0039                     l1496:
   936                           
   937                           ;Lab2.c: 92:     OSCCONbits.IRCF = 0B110;
   938  0039  080F               	movf	15,w	;volatile
   939  003A  398F               	andlw	-113
   940  003B  3860               	iorlw	96
   941  003C  008F               	movwf	15	;volatile
   942  003D                     l1498:
   943                           
   944                           ;Lab2.c: 93:     OSCCONbits.OSTS = 0;
   945  003D  118F               	bcf	15,3	;volatile
   946  003E                     l1500:
   947                           
   948                           ;Lab2.c: 94:     OSCCONbits.SCS = 1;
   949  003E  140F               	bsf	15,0	;volatile
   950  003F                     l1502:
   951                           
   952                           ;Lab2.c: 96:     ADC_CONFIG(4);
   953  003F  3004               	movlw	4
   954  0040  1283               	bcf	3,5	;RP0=0, select bank0
   955  0041  1303               	bcf	3,6	;RP1=0, select bank0
   956  0042  00A6               	movwf	ADC_CONFIG@frec
   957  0043  3000               	movlw	0
   958  0044  00A7               	movwf	ADC_CONFIG@frec+1
   959  0045  120A  118A  23A2  120A  118A  	fcall	_ADC_CONFIG
   960  004A                     l1504:
   961                           
   962                           ;Lab2.c: 97:     USART_CONFIG(4, 1, 1);
   963  004A  3004               	movlw	4
   964  004B  1283               	bcf	3,5	;RP0=0, select bank0
   965  004C  1303               	bcf	3,6	;RP1=0, select bank0
   966  004D  00A6               	movwf	USART_CONFIG@frec
   967  004E  3000               	movlw	0
   968  004F  00A7               	movwf	USART_CONFIG@frec+1
   969  0050  3001               	movlw	1
   970  0051  00A8               	movwf	USART_CONFIG@tr
   971  0052  3000               	movlw	0
   972  0053  00A9               	movwf	USART_CONFIG@tr+1
   973  0054  3001               	movlw	1
   974  0055  00AA               	movwf	USART_CONFIG@rc
   975  0056  3000               	movlw	0
   976  0057  00AB               	movwf	USART_CONFIG@rc+1
   977  0058  120A  118A  232B  120A  118A  	fcall	_USART_CONFIG
   978  005D                     l1506:
   979                           
   980                           ;Lab2.c: 99:     INTCONbits.PEIE = 1;
   981  005D  170B               	bsf	11,6	;volatile
   982  005E                     l1508:
   983                           
   984                           ;Lab2.c: 100:     PIE1bits.ADIE = 1;
   985  005E  1683               	bsf	3,5	;RP0=1, select bank1
   986  005F  1303               	bcf	3,6	;RP1=0, select bank1
   987  0060  170C               	bsf	12,6	;volatile
   988  0061                     l1510:
   989                           
   990                           ;Lab2.c: 102:     PIE1bits.RCIE = 1;
   991  0061  168C               	bsf	12,5	;volatile
   992  0062                     l1512:
   993                           
   994                           ;Lab2.c: 103:     ADCON0bits.GO = 1;
   995  0062  1283               	bcf	3,5	;RP0=0, select bank0
   996  0063  1303               	bcf	3,6	;RP1=0, select bank0
   997  0064  149F               	bsf	31,1	;volatile
   998  0065                     l1514:
   999                           
  1000                           ;Lab2.c: 104:     Lcd_Init();
  1001  0065  120A  118A  226C  120A  118A  	fcall	_Lcd_Init
  1002  006A                     l1516:
  1003                           
  1004                           ;Lab2.c: 105:     RCIF = 0;
  1005  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1006  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1007  006C  128C               	bcf	12,5	;volatile
  1008  006D                     l1518:
  1009                           
  1010                           ;Lab2.c: 106:     ADIF = 0;
  1011  006D  130C               	bcf	12,6	;volatile
  1012  006E                     l1520:
  1013                           
  1014                           ;Lab2.c: 107:     INTCONbits.GIE = 1;
  1015  006E  178B               	bsf	11,7	;volatile
  1016  006F                     l1522:
  1017                           
  1018                           ;Lab2.c: 108:     Lcd_Clear();
  1019  006F  120A  118A  2491  120A  118A  	fcall	_Lcd_Clear
  1020  0074                     l1524:
  1021                           
  1022                           ;Lab2.c: 111:         cen1 = vol1/100;
  1023  0074  3064               	movlw	100
  1024  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0077  00AD               	movwf	___awdiv@divisor
  1027  0078  3000               	movlw	0
  1028  0079  00AE               	movwf	___awdiv@divisor+1
  1029  007A  083E               	movf	_vol1+1,w
  1030  007B  00B0               	movwf	___awdiv@dividend+1
  1031  007C  083D               	movf	_vol1,w
  1032  007D  00AF               	movwf	___awdiv@dividend
  1033  007E  120A  118A  219C  120A  118A  	fcall	___awdiv
  1034  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0085  082D               	movf	?___awdiv,w
  1037  0086  00B6               	movwf	??_main
  1038  0087  0836               	movf	??_main,w
  1039  0088  00CF               	movwf	_cen1
  1040  0089                     l1526:
  1041                           
  1042                           ;Lab2.c: 112:         dec1 = ((vol1%100)/10);
  1043  0089  300A               	movlw	10
  1044  008A  00AD               	movwf	___awdiv@divisor
  1045  008B  3000               	movlw	0
  1046  008C  00AE               	movwf	___awdiv@divisor+1
  1047  008D  083E               	movf	_vol1+1,w
  1048  008E  00A9               	movwf	___awmod@dividend+1
  1049  008F  083D               	movf	_vol1,w
  1050  0090  00A8               	movwf	___awmod@dividend
  1051  0091  3064               	movlw	100
  1052  0092  00A6               	movwf	___awmod@divisor
  1053  0093  3000               	movlw	0
  1054  0094  00A7               	movwf	___awmod@divisor+1
  1055  0095  120A  118A  22D0  120A  118A  	fcall	___awmod
  1056  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1057  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1058  009C  0827               	movf	?___awmod+1,w
  1059  009D  00B0               	movwf	___awdiv@dividend+1
  1060  009E  0826               	movf	?___awmod,w
  1061  009F  00AF               	movwf	___awdiv@dividend
  1062  00A0  120A  118A  219C  120A  118A  	fcall	___awdiv
  1063  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1064  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1065  00A7  082D               	movf	?___awdiv,w
  1066  00A8  00B6               	movwf	??_main
  1067  00A9  0836               	movf	??_main,w
  1068  00AA  00CE               	movwf	_dec1
  1069  00AB                     l1528:
  1070                           
  1071                           ;Lab2.c: 113:         uni1 = ((vol1%100)%10);
  1072  00AB  083E               	movf	_vol1+1,w
  1073  00AC  00A9               	movwf	___awmod@dividend+1
  1074  00AD  083D               	movf	_vol1,w
  1075  00AE  00A8               	movwf	___awmod@dividend
  1076  00AF  3064               	movlw	100
  1077  00B0  00A6               	movwf	___awmod@divisor
  1078  00B1  3000               	movlw	0
  1079  00B2  00A7               	movwf	___awmod@divisor+1
  1080  00B3  120A  118A  22D0  120A  118A  	fcall	___awmod
  1081  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00BA  0827               	movf	?___awmod+1,w
  1084  00BB  00BA               	movwf	_main$1077+1
  1085  00BC  0826               	movf	?___awmod,w
  1086  00BD  00B9               	movwf	_main$1077
  1087  00BE                     l1530:
  1088                           
  1089                           ;Lab2.c: 113:         uni1 = ((vol1%100)%10);
  1090  00BE  300A               	movlw	10
  1091  00BF  00A6               	movwf	___awmod@divisor
  1092  00C0  3000               	movlw	0
  1093  00C1  00A7               	movwf	___awmod@divisor+1
  1094  00C2  083A               	movf	_main$1077+1,w
  1095  00C3  00A9               	movwf	___awmod@dividend+1
  1096  00C4  0839               	movf	_main$1077,w
  1097  00C5  00A8               	movwf	___awmod@dividend
  1098  00C6  120A  118A  22D0  120A  118A  	fcall	___awmod
  1099  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00CD  0826               	movf	?___awmod,w
  1102  00CE  00B6               	movwf	??_main
  1103  00CF  0836               	movf	??_main,w
  1104  00D0  00CD               	movwf	_uni1
  1105  00D1                     l1532:
  1106                           
  1107                           ;Lab2.c: 115:         Lcd_Set_Cursor(1,1);
  1108  00D1  01A9               	clrf	Lcd_Set_Cursor@b
  1109  00D2  0AA9               	incf	Lcd_Set_Cursor@b,f
  1110  00D3  3001               	movlw	1
  1111  00D4  120A  118A  23F9  120A  118A  	fcall	_Lcd_Set_Cursor
  1112  00D9                     l1534:
  1113                           
  1114                           ;Lab2.c: 116:         Lcd_Write_String("S1:  S2:  S3:");
  1115  00D9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1116  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00DC  00A8               	movwf	Lcd_Write_String@a
  1119  00DD  3080               	movlw	128
  1120  00DE  00A9               	movwf	Lcd_Write_String@a+1
  1121  00DF  120A  118A  2370  120A  118A  	fcall	_Lcd_Write_String
  1122  00E4                     l1536:
  1123                           
  1124                           ;Lab2.c: 117:         Lcd_Set_Cursor(2,1);
  1125  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00E6  01A9               	clrf	Lcd_Set_Cursor@b
  1128  00E7  0AA9               	incf	Lcd_Set_Cursor@b,f
  1129  00E8  3002               	movlw	2
  1130  00E9  120A  118A  23F9  120A  118A  	fcall	_Lcd_Set_Cursor
  1131  00EE                     l1538:
  1132                           
  1133                           ;Lab2.c: 118:         Lcd_Write_String(num[cen1]);
  1134  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00F0  084F               	movf	_cen1,w
  1137  00F1  3E50               	addlw	(low (_num| 0))& (0+255)
  1138  00F2  0084               	movwf	4
  1139  00F3  1383               	bcf	3,7	;select IRP bank0
  1140  00F4  0800               	movf	0,w
  1141  00F5  00B6               	movwf	??_main
  1142  00F6  01B7               	clrf	??_main+1
  1143  00F7  0836               	movf	??_main,w
  1144  00F8  00A8               	movwf	Lcd_Write_String@a
  1145  00F9  0837               	movf	??_main+1,w
  1146  00FA  00A9               	movwf	Lcd_Write_String@a+1
  1147  00FB  120A  118A  2370  120A  118A  	fcall	_Lcd_Write_String
  1148  0100                     l1540:
  1149                           
  1150                           ;Lab2.c: 120:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1151  0100  301A               	movlw	26
  1152  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0103  00B8               	movwf	??_main+2
  1155  0104  305E               	movlw	94
  1156  0105  00B7               	movwf	??_main+1
  1157  0106  306D               	movlw	109
  1158  0107  00B6               	movwf	??_main
  1159  0108                     u937:
  1160  0108  0BB6               	decfsz	??_main,f
  1161  0109  2908               	goto	u937
  1162  010A  0BB7               	decfsz	??_main+1,f
  1163  010B  2908               	goto	u937
  1164  010C  0BB8               	decfsz	??_main+2,f
  1165  010D  2908               	goto	u937
  1166  010E  290F               	nop2
  1167  010F  2874               	goto	l1524
  1168  0110  120A  118A  280E   	ljmp	start
  1169  0113                     __end_of_main:
  1170                           
  1171                           	psect	text1
  1172  02D0                     __ptext1:	
  1173 ;; *************** function ___awmod *****************
  1174 ;; Defined at:
  1175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  divisor         2    6[BANK0 ] int 
  1178 ;;  dividend        2    8[BANK0 ] int 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  sign            1   12[BANK0 ] unsigned char 
  1181 ;;  counter         1   11[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  2    6[BANK0 ] int 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       4       0       0       0
  1192 ;;      Locals:         0       2       0       0       0
  1193 ;;      Temps:          0       1       0       0       0
  1194 ;;      Totals:         0       7       0       0       0
  1195 ;;Total ram usage:        7 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    2
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function ___awmod
  1207  02D0                     ___awmod:
  1208  02D0                     l1374:	
  1209                           ;incstack = 0
  1210                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1211                           
  1212  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1213  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1214  02D2  01AC               	clrf	___awmod@sign
  1215  02D3                     l1376:
  1216  02D3  1FA9               	btfss	___awmod@dividend+1,7
  1217  02D4  2AD6               	goto	u691
  1218  02D5  2AD7               	goto	u690
  1219  02D6                     u691:
  1220  02D6  2ADE               	goto	l1382
  1221  02D7                     u690:
  1222  02D7                     l1378:
  1223  02D7  09A8               	comf	___awmod@dividend,f
  1224  02D8  09A9               	comf	___awmod@dividend+1,f
  1225  02D9  0AA8               	incf	___awmod@dividend,f
  1226  02DA  1903               	skipnz
  1227  02DB  0AA9               	incf	___awmod@dividend+1,f
  1228  02DC                     l1380:
  1229  02DC  01AC               	clrf	___awmod@sign
  1230  02DD  0AAC               	incf	___awmod@sign,f
  1231  02DE                     l1382:
  1232  02DE  1FA7               	btfss	___awmod@divisor+1,7
  1233  02DF  2AE1               	goto	u701
  1234  02E0  2AE2               	goto	u700
  1235  02E1                     u701:
  1236  02E1  2AE7               	goto	l1386
  1237  02E2                     u700:
  1238  02E2                     l1384:
  1239  02E2  09A6               	comf	___awmod@divisor,f
  1240  02E3  09A7               	comf	___awmod@divisor+1,f
  1241  02E4  0AA6               	incf	___awmod@divisor,f
  1242  02E5  1903               	skipnz
  1243  02E6  0AA7               	incf	___awmod@divisor+1,f
  1244  02E7                     l1386:
  1245  02E7  0826               	movf	___awmod@divisor,w
  1246  02E8  0427               	iorwf	___awmod@divisor+1,w
  1247  02E9  1903               	btfsc	3,2
  1248  02EA  2AEC               	goto	u711
  1249  02EB  2AED               	goto	u710
  1250  02EC                     u711:
  1251  02EC  2B1C               	goto	l1404
  1252  02ED                     u710:
  1253  02ED                     l1388:
  1254  02ED  01AB               	clrf	___awmod@counter
  1255  02EE  0AAB               	incf	___awmod@counter,f
  1256  02EF  2AFB               	goto	l1394
  1257  02F0                     l1390:
  1258  02F0  3001               	movlw	1
  1259  02F1                     u725:
  1260  02F1  1003               	clrc
  1261  02F2  0DA6               	rlf	___awmod@divisor,f
  1262  02F3  0DA7               	rlf	___awmod@divisor+1,f
  1263  02F4  3EFF               	addlw	-1
  1264  02F5  1D03               	skipz
  1265  02F6  2AF1               	goto	u725
  1266  02F7                     l1392:
  1267  02F7  3001               	movlw	1
  1268  02F8  00AA               	movwf	??___awmod
  1269  02F9  082A               	movf	??___awmod,w
  1270  02FA  07AB               	addwf	___awmod@counter,f
  1271  02FB                     l1394:
  1272  02FB  1FA7               	btfss	___awmod@divisor+1,7
  1273  02FC  2AFE               	goto	u731
  1274  02FD  2AFF               	goto	u730
  1275  02FE                     u731:
  1276  02FE  2AF0               	goto	l1390
  1277  02FF                     u730:
  1278  02FF                     l1396:
  1279  02FF  0827               	movf	___awmod@divisor+1,w
  1280  0300  0229               	subwf	___awmod@dividend+1,w
  1281  0301  1D03               	skipz
  1282  0302  2B05               	goto	u745
  1283  0303  0826               	movf	___awmod@divisor,w
  1284  0304  0228               	subwf	___awmod@dividend,w
  1285  0305                     u745:
  1286  0305  1C03               	skipc
  1287  0306  2B08               	goto	u741
  1288  0307  2B09               	goto	u740
  1289  0308                     u741:
  1290  0308  2B0F               	goto	l1400
  1291  0309                     u740:
  1292  0309                     l1398:
  1293  0309  0826               	movf	___awmod@divisor,w
  1294  030A  02A8               	subwf	___awmod@dividend,f
  1295  030B  0827               	movf	___awmod@divisor+1,w
  1296  030C  1C03               	skipc
  1297  030D  03A9               	decf	___awmod@dividend+1,f
  1298  030E  02A9               	subwf	___awmod@dividend+1,f
  1299  030F                     l1400:
  1300  030F  3001               	movlw	1
  1301  0310                     u755:
  1302  0310  1003               	clrc
  1303  0311  0CA7               	rrf	___awmod@divisor+1,f
  1304  0312  0CA6               	rrf	___awmod@divisor,f
  1305  0313  3EFF               	addlw	-1
  1306  0314  1D03               	skipz
  1307  0315  2B10               	goto	u755
  1308  0316                     l1402:
  1309  0316  3001               	movlw	1
  1310  0317  02AB               	subwf	___awmod@counter,f
  1311  0318  1D03               	btfss	3,2
  1312  0319  2B1B               	goto	u761
  1313  031A  2B1C               	goto	u760
  1314  031B                     u761:
  1315  031B  2AFF               	goto	l1396
  1316  031C                     u760:
  1317  031C                     l1404:
  1318  031C  082C               	movf	___awmod@sign,w
  1319  031D  1903               	btfsc	3,2
  1320  031E  2B20               	goto	u771
  1321  031F  2B21               	goto	u770
  1322  0320                     u771:
  1323  0320  2B26               	goto	l1408
  1324  0321                     u770:
  1325  0321                     l1406:
  1326  0321  09A8               	comf	___awmod@dividend,f
  1327  0322  09A9               	comf	___awmod@dividend+1,f
  1328  0323  0AA8               	incf	___awmod@dividend,f
  1329  0324  1903               	skipnz
  1330  0325  0AA9               	incf	___awmod@dividend+1,f
  1331  0326                     l1408:
  1332  0326  0829               	movf	___awmod@dividend+1,w
  1333  0327  00A7               	movwf	?___awmod+1
  1334  0328  0828               	movf	___awmod@dividend,w
  1335  0329  00A6               	movwf	?___awmod
  1336  032A                     l438:
  1337  032A  0008               	return
  1338  032B                     __end_of___awmod:
  1339                           
  1340                           	psect	text2
  1341  019C                     __ptext2:	
  1342 ;; *************** function ___awdiv *****************
  1343 ;; Defined at:
  1344 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  divisor         2   13[BANK0 ] int 
  1347 ;;  dividend        2   15[BANK0 ] int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  quotient        2   20[BANK0 ] int 
  1350 ;;  sign            1   19[BANK0 ] unsigned char 
  1351 ;;  counter         1   18[BANK0 ] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  2   13[BANK0 ] int 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1361 ;;      Params:         0       4       0       0       0
  1362 ;;      Locals:         0       4       0       0       0
  1363 ;;      Temps:          0       1       0       0       0
  1364 ;;      Totals:         0       9       0       0       0
  1365 ;;Total ram usage:        9 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    2
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function ___awdiv
  1377  019C                     ___awdiv:
  1378  019C                     l1330:	
  1379                           ;incstack = 0
  1380                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1381                           
  1382  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1383  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1384  019E  01B3               	clrf	___awdiv@sign
  1385  019F                     l1332:
  1386  019F  1FAE               	btfss	___awdiv@divisor+1,7
  1387  01A0  29A2               	goto	u591
  1388  01A1  29A3               	goto	u590
  1389  01A2                     u591:
  1390  01A2  29AA               	goto	l1338
  1391  01A3                     u590:
  1392  01A3                     l1334:
  1393  01A3  09AD               	comf	___awdiv@divisor,f
  1394  01A4  09AE               	comf	___awdiv@divisor+1,f
  1395  01A5  0AAD               	incf	___awdiv@divisor,f
  1396  01A6  1903               	skipnz
  1397  01A7  0AAE               	incf	___awdiv@divisor+1,f
  1398  01A8                     l1336:
  1399  01A8  01B3               	clrf	___awdiv@sign
  1400  01A9  0AB3               	incf	___awdiv@sign,f
  1401  01AA                     l1338:
  1402  01AA  1FB0               	btfss	___awdiv@dividend+1,7
  1403  01AB  29AD               	goto	u601
  1404  01AC  29AE               	goto	u600
  1405  01AD                     u601:
  1406  01AD  29B7               	goto	l1344
  1407  01AE                     u600:
  1408  01AE                     l1340:
  1409  01AE  09AF               	comf	___awdiv@dividend,f
  1410  01AF  09B0               	comf	___awdiv@dividend+1,f
  1411  01B0  0AAF               	incf	___awdiv@dividend,f
  1412  01B1  1903               	skipnz
  1413  01B2  0AB0               	incf	___awdiv@dividend+1,f
  1414  01B3                     l1342:
  1415  01B3  3001               	movlw	1
  1416  01B4  00B1               	movwf	??___awdiv
  1417  01B5  0831               	movf	??___awdiv,w
  1418  01B6  06B3               	xorwf	___awdiv@sign,f
  1419  01B7                     l1344:
  1420  01B7  01B4               	clrf	___awdiv@quotient
  1421  01B8  01B5               	clrf	___awdiv@quotient+1
  1422  01B9                     l1346:
  1423  01B9  082D               	movf	___awdiv@divisor,w
  1424  01BA  042E               	iorwf	___awdiv@divisor+1,w
  1425  01BB  1903               	btfsc	3,2
  1426  01BC  29BE               	goto	u611
  1427  01BD  29BF               	goto	u610
  1428  01BE                     u611:
  1429  01BE  29F6               	goto	l1366
  1430  01BF                     u610:
  1431  01BF                     l1348:
  1432  01BF  01B2               	clrf	___awdiv@counter
  1433  01C0  0AB2               	incf	___awdiv@counter,f
  1434  01C1  29CD               	goto	l1354
  1435  01C2                     l1350:
  1436  01C2  3001               	movlw	1
  1437  01C3                     u625:
  1438  01C3  1003               	clrc
  1439  01C4  0DAD               	rlf	___awdiv@divisor,f
  1440  01C5  0DAE               	rlf	___awdiv@divisor+1,f
  1441  01C6  3EFF               	addlw	-1
  1442  01C7  1D03               	skipz
  1443  01C8  29C3               	goto	u625
  1444  01C9                     l1352:
  1445  01C9  3001               	movlw	1
  1446  01CA  00B1               	movwf	??___awdiv
  1447  01CB  0831               	movf	??___awdiv,w
  1448  01CC  07B2               	addwf	___awdiv@counter,f
  1449  01CD                     l1354:
  1450  01CD  1FAE               	btfss	___awdiv@divisor+1,7
  1451  01CE  29D0               	goto	u631
  1452  01CF  29D1               	goto	u630
  1453  01D0                     u631:
  1454  01D0  29C2               	goto	l1350
  1455  01D1                     u630:
  1456  01D1                     l1356:
  1457  01D1  3001               	movlw	1
  1458  01D2                     u645:
  1459  01D2  1003               	clrc
  1460  01D3  0DB4               	rlf	___awdiv@quotient,f
  1461  01D4  0DB5               	rlf	___awdiv@quotient+1,f
  1462  01D5  3EFF               	addlw	-1
  1463  01D6  1D03               	skipz
  1464  01D7  29D2               	goto	u645
  1465  01D8  082E               	movf	___awdiv@divisor+1,w
  1466  01D9  0230               	subwf	___awdiv@dividend+1,w
  1467  01DA  1D03               	skipz
  1468  01DB  29DE               	goto	u655
  1469  01DC  082D               	movf	___awdiv@divisor,w
  1470  01DD  022F               	subwf	___awdiv@dividend,w
  1471  01DE                     u655:
  1472  01DE  1C03               	skipc
  1473  01DF  29E1               	goto	u651
  1474  01E0  29E2               	goto	u650
  1475  01E1                     u651:
  1476  01E1  29E9               	goto	l1362
  1477  01E2                     u650:
  1478  01E2                     l1358:
  1479  01E2  082D               	movf	___awdiv@divisor,w
  1480  01E3  02AF               	subwf	___awdiv@dividend,f
  1481  01E4  082E               	movf	___awdiv@divisor+1,w
  1482  01E5  1C03               	skipc
  1483  01E6  03B0               	decf	___awdiv@dividend+1,f
  1484  01E7  02B0               	subwf	___awdiv@dividend+1,f
  1485  01E8                     l1360:
  1486  01E8  1434               	bsf	___awdiv@quotient,0
  1487  01E9                     l1362:
  1488  01E9  3001               	movlw	1
  1489  01EA                     u665:
  1490  01EA  1003               	clrc
  1491  01EB  0CAE               	rrf	___awdiv@divisor+1,f
  1492  01EC  0CAD               	rrf	___awdiv@divisor,f
  1493  01ED  3EFF               	addlw	-1
  1494  01EE  1D03               	skipz
  1495  01EF  29EA               	goto	u665
  1496  01F0                     l1364:
  1497  01F0  3001               	movlw	1
  1498  01F1  02B2               	subwf	___awdiv@counter,f
  1499  01F2  1D03               	btfss	3,2
  1500  01F3  29F5               	goto	u671
  1501  01F4  29F6               	goto	u670
  1502  01F5                     u671:
  1503  01F5  29D1               	goto	l1356
  1504  01F6                     u670:
  1505  01F6                     l1366:
  1506  01F6  0833               	movf	___awdiv@sign,w
  1507  01F7  1903               	btfsc	3,2
  1508  01F8  29FA               	goto	u681
  1509  01F9  29FB               	goto	u680
  1510  01FA                     u681:
  1511  01FA  2A00               	goto	l1370
  1512  01FB                     u680:
  1513  01FB                     l1368:
  1514  01FB  09B4               	comf	___awdiv@quotient,f
  1515  01FC  09B5               	comf	___awdiv@quotient+1,f
  1516  01FD  0AB4               	incf	___awdiv@quotient,f
  1517  01FE  1903               	skipnz
  1518  01FF  0AB5               	incf	___awdiv@quotient+1,f
  1519  0200                     l1370:
  1520  0200  0835               	movf	___awdiv@quotient+1,w
  1521  0201  00AE               	movwf	?___awdiv+1
  1522  0202  0834               	movf	___awdiv@quotient,w
  1523  0203  00AD               	movwf	?___awdiv
  1524  0204                     l425:
  1525  0204  0008               	return
  1526  0205                     __end_of___awdiv:
  1527                           
  1528                           	psect	text3
  1529  032B                     __ptext3:	
  1530 ;; *************** function _USART_CONFIG *****************
  1531 ;; Defined at:
  1532 ;;		line 11 in file "USART.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  frec            2    6[BANK0 ] int 
  1535 ;;  tr              2    8[BANK0 ] int 
  1536 ;;  rc              2   10[BANK0 ] int 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       6       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         0       6       0       0       0
  1552 ;;Total ram usage:        6 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    2
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _USART_CONFIG
  1564  032B                     _USART_CONFIG:
  1565  032B                     l1240:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _USART_CONFIG: [wreg-fsr0h+status,2+status,0]
  1568                           
  1569                           
  1570                           ;USART.c: 12:     RCSTAbits.SPEN = 1;
  1571  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1572  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1573  032D  1798               	bsf	24,7	;volatile
  1574                           
  1575                           ;USART.c: 13:     TXSTAbits.SYNC = 0;
  1576  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1577  032F  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0330  1218               	bcf	24,4	;volatile
  1579                           
  1580                           ;USART.c: 14:     TXSTAbits.TX9 = 0;
  1581  0331  1318               	bcf	24,6	;volatile
  1582                           
  1583                           ;USART.c: 15:     RCSTAbits.RX9 = 0;
  1584  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0334  1318               	bcf	24,6	;volatile
  1587                           
  1588                           ;USART.c: 16:     switch(frec){
  1589  0335  2B48               	goto	l1256
  1590  0336                     l1242:
  1591                           
  1592                           ;USART.c: 18:             SPBRG = 25;
  1593  0336  3019               	movlw	25
  1594  0337  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0338  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0339  0099               	movwf	25	;volatile
  1597  033A                     l1244:
  1598                           
  1599                           ;USART.c: 19:             TXSTAbits.BRGH = 1;
  1600  033A  1518               	bsf	24,2	;volatile
  1601  033B                     l1246:
  1602                           
  1603                           ;USART.c: 20:             BAUDCTLbits.BRG16 = 0;
  1604  033B  1683               	bsf	3,5	;RP0=1, select bank3
  1605  033C  1703               	bsf	3,6	;RP1=1, select bank3
  1606  033D  1187               	bcf	7,3	;volatile
  1607                           
  1608                           ;USART.c: 21:             break;
  1609  033E  2B55               	goto	l1258
  1610  033F                     l1248:
  1611                           
  1612                           ;USART.c: 23:             SPBRG = 12;
  1613  033F  300C               	movlw	12
  1614  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0342  0099               	movwf	25	;volatile
  1617  0343                     l1250:
  1618                           
  1619                           ;USART.c: 24:             TXSTAbits.BRGH = 0;
  1620  0343  1118               	bcf	24,2	;volatile
  1621  0344                     l1252:
  1622                           
  1623                           ;USART.c: 25:             BAUDCTLbits.BRG16 = 0;
  1624  0344  1683               	bsf	3,5	;RP0=1, select bank3
  1625  0345  1703               	bsf	3,6	;RP1=1, select bank3
  1626  0346  1187               	bcf	7,3	;volatile
  1627                           
  1628                           ;USART.c: 26:             break;
  1629  0347  2B55               	goto	l1258
  1630  0348                     l1256:
  1631                           
  1632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 1, Range of values is 0 to 0
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte            4     3 (average)
  1638                           ; direct_byte           11     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641  0348  0827               	movf	USART_CONFIG@frec+1,w
  1642  0349  3A00               	xorlw	0	; case 0
  1643  034A  1903               	skipnz
  1644  034B  2B4D               	goto	l1586
  1645  034C  2B55               	goto	l1258
  1646  034D                     l1586:
  1647                           
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 2, Range of values is 4 to 8
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte            7     4 (average)
  1653                           ; direct_byte           26    11 (fixed)
  1654                           ; jumptable            263     9 (fixed)
  1655                           ;	Chosen strategy is simple_byte
  1656  034D  0826               	movf	USART_CONFIG@frec,w
  1657  034E  3A04               	xorlw	4	; case 4
  1658  034F  1903               	skipnz
  1659  0350  2B36               	goto	l1242
  1660  0351  3A0C               	xorlw	12	; case 8
  1661  0352  1903               	skipnz
  1662  0353  2B3F               	goto	l1248
  1663  0354  2B55               	goto	l1258
  1664  0355                     l1258:
  1665                           
  1666                           ;USART.c: 28:     if(tr==1){
  1667  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0357  0328               	decf	USART_CONFIG@tr,w
  1670  0358  0429               	iorwf	USART_CONFIG@tr+1,w
  1671  0359  1D03               	btfss	3,2
  1672  035A  2B5C               	goto	u501
  1673  035B  2B5D               	goto	u500
  1674  035C                     u501:
  1675  035C  2B61               	goto	l144
  1676  035D                     u500:
  1677  035D                     l1260:
  1678                           
  1679                           ;USART.c: 29:         TXEN = 1;
  1680  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1681  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1682  035F  1698               	bsf	24,5	;volatile
  1683                           
  1684                           ;USART.c: 30:     }
  1685  0360  2B64               	goto	l1262
  1686  0361                     l144:	
  1687                           ;USART.c: 31:     else{
  1688                           
  1689                           
  1690                           ;USART.c: 32:         TXEN = 0;
  1691  0361  1683               	bsf	3,5	;RP0=1, select bank1
  1692  0362  1303               	bcf	3,6	;RP1=0, select bank1
  1693  0363  1298               	bcf	24,5	;volatile
  1694  0364                     l1262:
  1695                           
  1696                           ;USART.c: 34:     if(rc == 1){
  1697  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0366  032A               	decf	USART_CONFIG@rc,w
  1700  0367  042B               	iorwf	USART_CONFIG@rc+1,w
  1701  0368  1D03               	btfss	3,2
  1702  0369  2B6B               	goto	u511
  1703  036A  2B6C               	goto	u510
  1704  036B                     u511:
  1705  036B  2B6E               	goto	l146
  1706  036C                     u510:
  1707  036C                     l1264:
  1708                           
  1709                           ;USART.c: 35:         RCSTAbits.CREN = 1;
  1710  036C  1618               	bsf	24,4	;volatile
  1711                           
  1712                           ;USART.c: 36:     }
  1713  036D  2B6F               	goto	l148
  1714  036E                     l146:	
  1715                           ;USART.c: 37:     else{
  1716                           
  1717                           
  1718                           ;USART.c: 38:         RCSTAbits.CREN = 0;
  1719  036E  1218               	bcf	24,4	;volatile
  1720  036F                     l148:
  1721  036F  0008               	return
  1722  0370                     __end_of_USART_CONFIG:
  1723                           
  1724                           	psect	text4
  1725  0370                     __ptext4:	
  1726 ;; *************** function _Lcd_Write_String *****************
  1727 ;; Defined at:
  1728 ;;		line 72 in file "LCDh.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  a               2    8[BANK0 ] PTR unsigned char 
  1731 ;;		 -> RAM(512), STR_1(14), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  i               2   10[BANK0 ] int 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       2       0       0       0
  1744 ;;      Locals:         0       2       0       0       0
  1745 ;;      Temps:          0       0       0       0       0
  1746 ;;      Totals:         0       4       0       0       0
  1747 ;;Total ram usage:        4 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		_Lcd_Write_Char
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _Lcd_Write_String
  1759  0370                     _Lcd_Write_String:
  1760  0370                     l1308:	
  1761                           ;incstack = 0
  1762                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1763                           
  1764                           
  1765                           ;LCDh.c: 73:     int i;;LCDh.c: 74:     for (i = 0; a[i] != '\0'; i++)
  1766  0370  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0371  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0372  01AA               	clrf	Lcd_Write_String@i
  1769  0373  01AB               	clrf	Lcd_Write_String@i+1
  1770  0374  2B8F               	goto	l1314
  1771  0375                     l1310:
  1772                           
  1773                           ;LCDh.c: 75:         Lcd_Write_Char(a[i]);
  1774  0375  082A               	movf	Lcd_Write_String@i,w
  1775  0376  0728               	addwf	Lcd_Write_String@a,w
  1776  0377  0084               	movwf	4
  1777  0378  082B               	movf	Lcd_Write_String@i+1,w
  1778  0379  1803               	skipnc
  1779  037A  0A2B               	incf	Lcd_Write_String@i+1,w
  1780  037B  0729               	addwf	Lcd_Write_String@a+1,w
  1781  037C  00FF               	movwf	btemp+1
  1782  037D  120A  118A  2438  120A  118A  	fcall	stringtab
  1783  0382  120A  118A  247F  120A  118A  	fcall	_Lcd_Write_Char
  1784  0387                     l1312:
  1785  0387  3001               	movlw	1
  1786  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1788  038A  07AA               	addwf	Lcd_Write_String@i,f
  1789  038B  1803               	skipnc
  1790  038C  0AAB               	incf	Lcd_Write_String@i+1,f
  1791  038D  3000               	movlw	0
  1792  038E  07AB               	addwf	Lcd_Write_String@i+1,f
  1793  038F                     l1314:
  1794  038F  082A               	movf	Lcd_Write_String@i,w
  1795  0390  0728               	addwf	Lcd_Write_String@a,w
  1796  0391  0084               	movwf	4
  1797  0392  082B               	movf	Lcd_Write_String@i+1,w
  1798  0393  1803               	skipnc
  1799  0394  0A2B               	incf	Lcd_Write_String@i+1,w
  1800  0395  0729               	addwf	Lcd_Write_String@a+1,w
  1801  0396  00FF               	movwf	btemp+1
  1802  0397  120A  118A  2438  120A  118A  	fcall	stringtab
  1803  039C  3A00               	xorlw	0
  1804  039D  1D03               	skipz
  1805  039E  2BA0               	goto	u541
  1806  039F  2BA1               	goto	u540
  1807  03A0                     u541:
  1808  03A0  2B75               	goto	l1310
  1809  03A1                     u540:
  1810  03A1                     l180:
  1811  03A1  0008               	return
  1812  03A2                     __end_of_Lcd_Write_String:
  1813                           
  1814                           	psect	text5
  1815  047F                     __ptext5:	
  1816 ;; *************** function _Lcd_Write_Char *****************
  1817 ;; Defined at:
  1818 ;;		line 58 in file "LCDh.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  a               1    wreg     unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  a               1    7[BANK0 ] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       1       0       0       0
  1834 ;;      Temps:          0       1       0       0       0
  1835 ;;      Totals:         0       2       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    2
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_Lcd_Write_String
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _Lcd_Write_Char
  1848  047F                     _Lcd_Write_Char:
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _Lcd_Write_Char: [wreg]
  1852                           ;Lcd_Write_Char@a stored from wreg
  1853  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0481  00A7               	movwf	Lcd_Write_Char@a
  1856  0482                     l1194:
  1857                           
  1858                           ;LCDh.c: 61:     RC4 = 1;
  1859  0482  1607               	bsf	7,4	;volatile
  1860  0483                     l1196:
  1861                           
  1862                           ;LCDh.c: 62:     PORTD = a;
  1863  0483  0827               	movf	Lcd_Write_Char@a,w
  1864  0484  0088               	movwf	8	;volatile
  1865  0485                     l1198:
  1866                           
  1867                           ;LCDh.c: 63:     RC5 = 1;
  1868  0485  1687               	bsf	7,5	;volatile
  1869                           
  1870                           ;LCDh.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1871  0486  300C               	movlw	12
  1872  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0489  00A6               	movwf	??_Lcd_Write_Char
  1875  048A                     u947:
  1876  048A  0BA6               	decfsz	??_Lcd_Write_Char,f
  1877  048B  2C8A               	goto	u947
  1878  048C  0000               	nop
  1879  048D                     l1200:
  1880                           
  1881                           ;LCDh.c: 69:     RC5 = 0;
  1882  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1883  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1884  048F  1287               	bcf	7,5	;volatile
  1885  0490                     l174:
  1886  0490  0008               	return
  1887  0491                     __end_of_Lcd_Write_Char:
  1888                           
  1889                           	psect	text6
  1890  03F9                     __ptext6:	
  1891 ;; *************** function _Lcd_Set_Cursor *****************
  1892 ;; Defined at:
  1893 ;;		line 29 in file "LCDh.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  a               1    wreg     unsigned char 
  1896 ;;  b               1    9[BANK0 ] unsigned char 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;  a               1   10[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       1       0       0       0
  1909 ;;      Locals:         0       1       0       0       0
  1910 ;;      Temps:          0       0       0       0       0
  1911 ;;      Totals:         0       2       0       0       0
  1912 ;;Total ram usage:        2 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    3
  1915 ;; This function calls:
  1916 ;;		_Lcd_Cmd
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function _Lcd_Set_Cursor
  1924  03F9                     _Lcd_Set_Cursor:
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1928                           ;Lcd_Set_Cursor@a stored from wreg
  1929  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1930  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1931  03FB  00AA               	movwf	Lcd_Set_Cursor@a
  1932  03FC                     l1300:
  1933                           
  1934                           ;LCDh.c: 30:     if (a == 1){
  1935  03FC  032A               	decf	Lcd_Set_Cursor@a,w
  1936  03FD  1D03               	btfss	3,2
  1937  03FE  2C00               	goto	u521
  1938  03FF  2C01               	goto	u520
  1939  0400                     u521:
  1940  0400  2C0A               	goto	l1304
  1941  0401                     u520:
  1942  0401                     l1302:
  1943                           
  1944                           ;LCDh.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  1945  0401  0829               	movf	Lcd_Set_Cursor@b,w
  1946  0402  390F               	andlw	15
  1947  0403  3880               	iorlw	128
  1948  0404  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  1949                           
  1950                           ;LCDh.c: 32:     }
  1951  0409  2C18               	goto	l168
  1952  040A                     l1304:
  1953  040A  3002               	movlw	2
  1954  040B  062A               	xorwf	Lcd_Set_Cursor@a,w
  1955  040C  1D03               	btfss	3,2
  1956  040D  2C0F               	goto	u531
  1957  040E  2C10               	goto	u530
  1958  040F                     u531:
  1959  040F  2C18               	goto	l168
  1960  0410                     u530:
  1961  0410                     l1306:
  1962                           
  1963                           ;LCDh.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  1964  0410  0829               	movf	Lcd_Set_Cursor@b,w
  1965  0411  390F               	andlw	15
  1966  0412  38C0               	iorlw	192
  1967  0413  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  1968  0418                     l168:
  1969  0418  0008               	return
  1970  0419                     __end_of_Lcd_Set_Cursor:
  1971                           
  1972                           	psect	text7
  1973  026C                     __ptext7:	
  1974 ;; *************** function _Lcd_Init *****************
  1975 ;; Defined at:
  1976 ;;		line 39 in file "LCDh.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1990 ;;      Params:         0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0
  1992 ;;      Temps:          0       2       0       0       0
  1993 ;;      Totals:         0       2       0       0       0
  1994 ;;Total ram usage:        2 bytes
  1995 ;; Hardware stack levels used:    1
  1996 ;; Hardware stack levels required when called:    3
  1997 ;; This function calls:
  1998 ;;		_Lcd_Cmd
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _Lcd_Init
  2006  026C                     _Lcd_Init:
  2007  026C                     l1270:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2010                           
  2011                           
  2012                           ;LCDh.c: 40:     PORTD = (0x00);
  2013  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2014  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2015  026E  0188               	clrf	8	;volatile
  2016  026F                     l1272:
  2017                           
  2018                           ;LCDh.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2019  026F  301A               	movlw	26
  2020  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0272  00AA               	movwf	??_Lcd_Init+1
  2023  0273  30F7               	movlw	247
  2024  0274  00A9               	movwf	??_Lcd_Init
  2025  0275                     u957:
  2026  0275  0BA9               	decfsz	??_Lcd_Init,f
  2027  0276  2A75               	goto	u957
  2028  0277  0BAA               	decfsz	??_Lcd_Init+1,f
  2029  0278  2A75               	goto	u957
  2030  0279  2A7A               	nop2
  2031  027A                     l1274:
  2032                           
  2033                           ;LCDh.c: 42:     Lcd_Cmd(0x30);
  2034  027A  3030               	movlw	48
  2035  027B  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2036  0280                     l1276:
  2037                           
  2038                           ;LCDh.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2039  0280  3007               	movlw	7
  2040  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0282  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0283  00AA               	movwf	??_Lcd_Init+1
  2043  0284  307C               	movlw	124
  2044  0285  00A9               	movwf	??_Lcd_Init
  2045  0286                     u967:
  2046  0286  0BA9               	decfsz	??_Lcd_Init,f
  2047  0287  2A86               	goto	u967
  2048  0288  0BAA               	decfsz	??_Lcd_Init+1,f
  2049  0289  2A86               	goto	u967
  2050  028A  0000               	nop
  2051  028B                     l1278:
  2052                           
  2053                           ;LCDh.c: 44:     Lcd_Cmd(0x30);
  2054  028B  3030               	movlw	48
  2055  028C  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2056  0291                     l1280:
  2057                           
  2058                           ;LCDh.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2059  0291  300F               	movlw	15
  2060  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0294  00AA               	movwf	??_Lcd_Init+1
  2063  0295  3047               	movlw	71
  2064  0296  00A9               	movwf	??_Lcd_Init
  2065  0297                     u977:
  2066  0297  0BA9               	decfsz	??_Lcd_Init,f
  2067  0298  2A97               	goto	u977
  2068  0299  0BAA               	decfsz	??_Lcd_Init+1,f
  2069  029A  2A97               	goto	u977
  2070  029B                     l1282:
  2071                           
  2072                           ;LCDh.c: 46:     Lcd_Cmd(0x30);
  2073  029B  3030               	movlw	48
  2074  029C  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2075  02A1                     l1284:
  2076                           
  2077                           ;LCDh.c: 48:     Lcd_Cmd(0x38);
  2078  02A1  3038               	movlw	56
  2079  02A2  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2080  02A7                     l1286:
  2081                           
  2082                           ;LCDh.c: 49:     Lcd_Cmd(0x10);
  2083  02A7  3010               	movlw	16
  2084  02A8  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2085  02AD                     l1288:
  2086                           
  2087                           ;LCDh.c: 50:     Lcd_Cmd(0x01);
  2088  02AD  3001               	movlw	1
  2089  02AE  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2090  02B3                     l1290:
  2091                           
  2092                           ;LCDh.c: 51:     Lcd_Cmd(0x06);
  2093  02B3  3006               	movlw	6
  2094  02B4  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2095  02B9                     l1292:
  2096                           
  2097                           ;LCDh.c: 52:     Lcd_Cmd(0x10);
  2098  02B9  3010               	movlw	16
  2099  02BA  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2100  02BF                     l1294:
  2101                           
  2102                           ;LCDh.c: 53:     Lcd_Cmd(0x0C);
  2103  02BF  300C               	movlw	12
  2104  02C0  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2105  02C5                     l1296:
  2106                           
  2107                           ;LCDh.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2108  02C5  3082               	movlw	130
  2109  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2110  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2111  02C8  00AA               	movwf	??_Lcd_Init+1
  2112  02C9  30DD               	movlw	221
  2113  02CA  00A9               	movwf	??_Lcd_Init
  2114  02CB                     u987:
  2115  02CB  0BA9               	decfsz	??_Lcd_Init,f
  2116  02CC  2ACB               	goto	u987
  2117  02CD  0BAA               	decfsz	??_Lcd_Init+1,f
  2118  02CE  2ACB               	goto	u987
  2119  02CF                     l171:
  2120  02CF  0008               	return
  2121  02D0                     __end_of_Lcd_Init:
  2122                           
  2123                           	psect	text8
  2124  0491                     __ptext8:	
  2125 ;; *************** function _Lcd_Clear *****************
  2126 ;; Defined at:
  2127 ;;		line 24 in file "LCDh.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, pclath, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0
  2144 ;;      Totals:         0       0       0       0       0
  2145 ;;Total ram usage:        0 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    3
  2148 ;; This function calls:
  2149 ;;		_Lcd_Cmd
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _Lcd_Clear
  2157  0491                     _Lcd_Clear:
  2158  0491                     l1298:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2161                           
  2162                           
  2163                           ;LCDh.c: 25:     Lcd_Cmd(0);
  2164  0491  3000               	movlw	0
  2165  0492  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2166                           
  2167                           ;LCDh.c: 26:     Lcd_Cmd(1);
  2168  0497  3001               	movlw	1
  2169  0498  120A  118A  2456  120A  118A  	fcall	_Lcd_Cmd
  2170  049D                     l162:
  2171  049D  0008               	return
  2172  049E                     __end_of_Lcd_Clear:
  2173                           
  2174                           	psect	text9
  2175  0456                     __ptext9:	
  2176 ;; *************** function _Lcd_Cmd *****************
  2177 ;; Defined at:
  2178 ;;		line 16 in file "LCDh.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  a               1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  a               1    8[BANK0 ] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       1       0       0       0
  2194 ;;      Temps:          0       2       0       0       0
  2195 ;;      Totals:         0       3       0       0       0
  2196 ;;Total ram usage:        3 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    2
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_Lcd_Clear
  2203 ;;		_Lcd_Set_Cursor
  2204 ;;		_Lcd_Init
  2205 ;;		_Lcd_Shift_Right
  2206 ;;		_Lcd_Shift_Left
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _Lcd_Cmd
  2212  0456                     _Lcd_Cmd:
  2213                           
  2214                           ;incstack = 0
  2215                           ; Regs used in _Lcd_Cmd: [wreg]
  2216                           ;Lcd_Cmd@a stored from wreg
  2217  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0458  00A8               	movwf	Lcd_Cmd@a
  2220  0459                     l1186:
  2221                           
  2222                           ;LCDh.c: 17:     RC4 = 0;
  2223  0459  1207               	bcf	7,4	;volatile
  2224  045A                     l1188:
  2225                           
  2226                           ;LCDh.c: 18:     PORTD = a;
  2227  045A  0828               	movf	Lcd_Cmd@a,w
  2228  045B  0088               	movwf	8	;volatile
  2229  045C                     l1190:
  2230                           
  2231                           ;LCDh.c: 19:     RC5 = 1;
  2232  045C  1687               	bsf	7,5	;volatile
  2233                           
  2234                           ;LCDh.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2235  045D  3007               	movlw	7
  2236  045E  1283               	bcf	3,5	;RP0=0, select bank0
  2237  045F  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0460  00A7               	movwf	??_Lcd_Cmd+1
  2239  0461  307C               	movlw	124
  2240  0462  00A6               	movwf	??_Lcd_Cmd
  2241  0463                     u997:
  2242  0463  0BA6               	decfsz	??_Lcd_Cmd,f
  2243  0464  2C63               	goto	u997
  2244  0465  0BA7               	decfsz	??_Lcd_Cmd+1,f
  2245  0466  2C63               	goto	u997
  2246  0467  0000               	nop
  2247  0468                     l1192:
  2248                           
  2249                           ;LCDh.c: 21:     RC5 = 0;
  2250  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2251  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2252  046A  1287               	bcf	7,5	;volatile
  2253  046B                     l159:
  2254  046B  0008               	return
  2255  046C                     __end_of_Lcd_Cmd:
  2256                           
  2257                           	psect	text10
  2258  03A2                     __ptext10:	
  2259 ;; *************** function _ADC_CONFIG *****************
  2260 ;; Defined at:
  2261 ;;		line 14 in file "ADC.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  frec            2    6[BANK0 ] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       2       0       0       0
  2276 ;;      Locals:         0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0
  2278 ;;      Totals:         0       2       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    2
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _ADC_CONFIG
  2291  03A2                     _ADC_CONFIG:
  2292  03A2                     l1214:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
  2295                           
  2296                           
  2297                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
  2298  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2299  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2300  03A4  141F               	bsf	31,0	;volatile
  2301  03A5                     l1216:
  2302                           
  2303                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
  2304  03A5  30C3               	movlw	-61
  2305  03A6  059F               	andwf	31,f	;volatile
  2306  03A7                     l1218:
  2307                           
  2308                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
  2309  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2310  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2311  03A9  139F               	bcf	31,7	;volatile
  2312  03AA                     l1220:
  2313                           
  2314                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  2315  03AA  121F               	bcf	31,4	;volatile
  2316  03AB                     l1222:
  2317                           
  2318                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
  2319  03AB  129F               	bcf	31,5	;volatile
  2320  03AC                     l1224:
  2321                           
  2322                           ;ADC.c: 21:     ADCON0bits.GO = 0;
  2323  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2324  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2325  03AE  109F               	bcf	31,1	;volatile
  2326                           
  2327                           ;ADC.c: 23:     switch(frec){
  2328  03AF  2BBD               	goto	l1234
  2329  03B0                     l1226:
  2330                           
  2331                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
  2332  03B0  303F               	movlw	-193
  2333  03B1  059F               	andwf	31,f	;volatile
  2334                           
  2335                           ;ADC.c: 26:             break;
  2336  03B2  2BCD               	goto	l121
  2337  03B3                     l1228:
  2338                           
  2339                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
  2340  03B3  081F               	movf	31,w	;volatile
  2341  03B4  393F               	andlw	-193
  2342  03B5  3840               	iorlw	64
  2343  03B6  009F               	movwf	31	;volatile
  2344                           
  2345                           ;ADC.c: 29:             break;
  2346  03B7  2BCD               	goto	l121
  2347  03B8                     l1230:
  2348                           
  2349                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
  2350  03B8  081F               	movf	31,w	;volatile
  2351  03B9  393F               	andlw	-193
  2352  03BA  3880               	iorlw	128
  2353  03BB  009F               	movwf	31	;volatile
  2354                           
  2355                           ;ADC.c: 32:             break;
  2356  03BC  2BCD               	goto	l121
  2357  03BD                     l1234:
  2358                           
  2359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2360                           ; Switch size 1, requested type "simple"
  2361                           ; Number of cases is 1, Range of values is 0 to 0
  2362                           ; switch strategies available:
  2363                           ; Name         Instructions Cycles
  2364                           ; simple_byte            4     3 (average)
  2365                           ; direct_byte           11     8 (fixed)
  2366                           ; jumptable            260     6 (fixed)
  2367                           ;	Chosen strategy is simple_byte
  2368  03BD  0827               	movf	ADC_CONFIG@frec+1,w
  2369  03BE  3A00               	xorlw	0	; case 0
  2370  03BF  1903               	skipnz
  2371  03C0  2BC2               	goto	l1588
  2372  03C1  2BCD               	goto	l121
  2373  03C2                     l1588:
  2374                           
  2375                           ; Switch size 1, requested type "simple"
  2376                           ; Number of cases is 3, Range of values is 1 to 8
  2377                           ; switch strategies available:
  2378                           ; Name         Instructions Cycles
  2379                           ; simple_byte           10     6 (average)
  2380                           ; direct_byte           35    11 (fixed)
  2381                           ; jumptable            263     9 (fixed)
  2382                           ;	Chosen strategy is simple_byte
  2383  03C2  0826               	movf	ADC_CONFIG@frec,w
  2384  03C3  3A01               	xorlw	1	; case 1
  2385  03C4  1903               	skipnz
  2386  03C5  2BB0               	goto	l1226
  2387  03C6  3A05               	xorlw	5	; case 4
  2388  03C7  1903               	skipnz
  2389  03C8  2BB3               	goto	l1228
  2390  03C9  3A0C               	xorlw	12	; case 8
  2391  03CA  1903               	skipnz
  2392  03CB  2BB8               	goto	l1230
  2393  03CC  2BCD               	goto	l121
  2394  03CD                     l121:
  2395  03CD  0008               	return
  2396  03CE                     __end_of_ADC_CONFIG:
  2397                           
  2398                           	psect	text11
  2399  0113                     __ptext11:	
  2400 ;; *************** function _isr *****************
  2401 ;; Defined at:
  2402 ;;		line 57 in file "Lab2.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0
  2418 ;;      Temps:          0       4       0       0       0
  2419 ;;      Totals:         0       4       0       0       0
  2420 ;;Total ram usage:        4 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    1
  2423 ;; This function calls:
  2424 ;;		_ADC_IF
  2425 ;;		___wmul
  2426 ;;		i1___awdiv
  2427 ;; This function is called by:
  2428 ;;		Interrupt level 1
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function _isr
  2434  0113                     _isr:
  2435  0113                     i1l1456:
  2436                           
  2437                           ;Lab2.c: 58:     if(ADIF){
  2438  0113  1F0C               	btfss	12,6	;volatile
  2439  0114  2916               	goto	u88_21
  2440  0115  2917               	goto	u88_20
  2441  0116                     u88_21:
  2442  0116  2977               	goto	i1l1472
  2443  0117                     u88_20:
  2444  0117                     i1l1458:
  2445                           
  2446                           ;Lab2.c: 59:         if (ADCON0bits.CHS == 0){
  2447  0117  0C1F               	rrf	31,w	;volatile
  2448  0118  00A2               	movwf	??_isr
  2449  0119  0C22               	rrf	??_isr,w
  2450  011A  390F               	andlw	15
  2451  011B  3A00               	xorlw	0
  2452  011C  1D03               	skipz
  2453  011D  291F               	goto	u89_21
  2454  011E  2920               	goto	u89_20
  2455  011F                     u89_21:
  2456  011F  2948               	goto	i1l1464
  2457  0120                     u89_20:
  2458  0120                     i1l1460:
  2459                           
  2460                           ;Lab2.c: 60:             pot1 = ADRESH;
  2461  0120  081E               	movf	30,w	;volatile
  2462  0121  00A2               	movwf	??_isr
  2463  0122  01A3               	clrf	??_isr+1
  2464  0123  0822               	movf	??_isr,w
  2465  0124  00C9               	movwf	_pot1
  2466  0125  0823               	movf	??_isr+1,w
  2467  0126  00CA               	movwf	_pot1+1
  2468  0127                     i1l1462:
  2469                           
  2470                           ;Lab2.c: 61:             vol1 = ((pot1/256)*5);
  2471  0127  3000               	movlw	0
  2472  0128  00F0               	movwf	i1___awdiv@divisor
  2473  0129  3001               	movlw	1
  2474  012A  00F1               	movwf	i1___awdiv@divisor+1
  2475  012B  084A               	movf	_pot1+1,w
  2476  012C  00F3               	movwf	i1___awdiv@dividend+1
  2477  012D  0849               	movf	_pot1,w
  2478  012E  00F2               	movwf	i1___awdiv@dividend
  2479  012F  120A  118A  2205  120A  118A  	fcall	i1___awdiv
  2480  0134  0871               	movf	?i1___awdiv+1,w
  2481  0135  00FA               	movwf	___wmul@multiplier+1
  2482  0136  0870               	movf	?i1___awdiv,w
  2483  0137  00F9               	movwf	___wmul@multiplier
  2484  0138  3005               	movlw	5
  2485  0139  00FB               	movwf	___wmul@multiplicand
  2486  013A  3000               	movlw	0
  2487  013B  00FC               	movwf	___wmul@multiplicand+1
  2488  013C  120A  118A  23CE  120A  118A  	fcall	___wmul
  2489  0141  087A               	movf	?___wmul+1,w
  2490  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0144  00BE               	movwf	_vol1+1
  2493  0145  0879               	movf	?___wmul,w
  2494  0146  00BD               	movwf	_vol1
  2495                           
  2496                           ;Lab2.c: 62:         }
  2497  0147  296F               	goto	i1l1468
  2498  0148                     i1l1464:
  2499                           
  2500                           ;Lab2.c: 64:             pot2 = ADRESH;
  2501  0148  081E               	movf	30,w	;volatile
  2502  0149  00A2               	movwf	??_isr
  2503  014A  01A3               	clrf	??_isr+1
  2504  014B  0822               	movf	??_isr,w
  2505  014C  00C7               	movwf	_pot2
  2506  014D  0823               	movf	??_isr+1,w
  2507  014E  00C8               	movwf	_pot2+1
  2508  014F                     i1l1466:
  2509                           
  2510                           ;Lab2.c: 65:             vol2 = ((pot2/256)*500);
  2511  014F  3000               	movlw	0
  2512  0150  00F0               	movwf	i1___awdiv@divisor
  2513  0151  3001               	movlw	1
  2514  0152  00F1               	movwf	i1___awdiv@divisor+1
  2515  0153  0848               	movf	_pot2+1,w
  2516  0154  00F3               	movwf	i1___awdiv@dividend+1
  2517  0155  0847               	movf	_pot2,w
  2518  0156  00F2               	movwf	i1___awdiv@dividend
  2519  0157  120A  118A  2205  120A  118A  	fcall	i1___awdiv
  2520  015C  0871               	movf	?i1___awdiv+1,w
  2521  015D  00FA               	movwf	___wmul@multiplier+1
  2522  015E  0870               	movf	?i1___awdiv,w
  2523  015F  00F9               	movwf	___wmul@multiplier
  2524  0160  30F4               	movlw	244
  2525  0161  00FB               	movwf	___wmul@multiplicand
  2526  0162  3001               	movlw	1
  2527  0163  00FC               	movwf	___wmul@multiplicand+1
  2528  0164  120A  118A  23CE  120A  118A  	fcall	___wmul
  2529  0169  087A               	movf	?___wmul+1,w
  2530  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2531  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2532  016C  00BC               	movwf	_vol2+1
  2533  016D  0879               	movf	?___wmul,w
  2534  016E  00BB               	movwf	_vol2
  2535  016F                     i1l1468:
  2536                           
  2537                           ;Lab2.c: 67:         ADC_IF();
  2538  016F  120A  118A  2419  120A  118A  	fcall	_ADC_IF
  2539  0174                     i1l1470:
  2540                           
  2541                           ;Lab2.c: 68:         ADIF = 0;
  2542  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0176  130C               	bcf	12,6	;volatile
  2545  0177                     i1l1472:
  2546                           
  2547                           ;Lab2.c: 70:     if (RCIF){
  2548  0177  1E8C               	btfss	12,5	;volatile
  2549  0178  297A               	goto	u90_21
  2550  0179  297B               	goto	u90_20
  2551  017A                     u90_21:
  2552  017A  2995               	goto	i1l99
  2553  017B                     u90_20:
  2554  017B                     i1l1474:
  2555                           
  2556                           ;Lab2.c: 71:         if (RCREG == '+'){
  2557  017B  302B               	movlw	43
  2558  017C  061A               	xorwf	26,w	;volatile
  2559  017D  1D03               	btfss	3,2
  2560  017E  2980               	goto	u91_21
  2561  017F  2981               	goto	u91_20
  2562  0180                     u91_21:
  2563  0180  2988               	goto	i1l1478
  2564  0181                     u91_20:
  2565  0181                     i1l1476:
  2566                           
  2567                           ;Lab2.c: 72:             con++;
  2568  0181  3001               	movlw	1
  2569  0182  07BF               	addwf	_con,f
  2570  0183  1803               	skipnc
  2571  0184  0AC0               	incf	_con+1,f
  2572  0185  3000               	movlw	0
  2573  0186  07C0               	addwf	_con+1,f
  2574                           
  2575                           ;Lab2.c: 73:         }
  2576  0187  2994               	goto	i1l1482
  2577  0188                     i1l1478:
  2578  0188  302D               	movlw	45
  2579  0189  061A               	xorwf	26,w	;volatile
  2580  018A  1D03               	btfss	3,2
  2581  018B  298D               	goto	u92_21
  2582  018C  298E               	goto	u92_20
  2583  018D                     u92_21:
  2584  018D  2994               	goto	i1l1482
  2585  018E                     u92_20:
  2586  018E                     i1l1480:
  2587                           
  2588                           ;Lab2.c: 75:             con--;
  2589  018E  30FF               	movlw	255
  2590  018F  07BF               	addwf	_con,f
  2591  0190  1803               	skipnc
  2592  0191  0AC0               	incf	_con+1,f
  2593  0192  30FF               	movlw	255
  2594  0193  07C0               	addwf	_con+1,f
  2595  0194                     i1l1482:
  2596                           
  2597                           ;Lab2.c: 78:         RCIF = 0;
  2598  0194  128C               	bcf	12,5	;volatile
  2599  0195                     i1l99:
  2600  0195  0825               	movf	??_isr+3,w
  2601  0196  008A               	movwf	10
  2602  0197  0E24               	swapf	??_isr+2,w
  2603  0198  0083               	movwf	3
  2604  0199  0EFE               	swapf	btemp,f
  2605  019A  0E7E               	swapf	btemp,w
  2606  019B  0009               	retfie
  2607  019C                     __end_of_isr:
  2608                           
  2609                           	psect	intentry
  2610  0004                     __pintentry:	
  2611                           ;incstack = 0
  2612                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2613                           
  2614  0004                     interrupt_function:
  2615  007E                     saved_w	set	btemp
  2616  0004  00FE               	movwf	btemp
  2617  0005  0E03               	swapf	3,w
  2618  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0008  00A4               	movwf	??_isr+2
  2621  0009  080A               	movf	10,w
  2622  000A  00A5               	movwf	??_isr+3
  2623  000B  120A  118A  2913   	ljmp	_isr
  2624                           
  2625                           	psect	text12
  2626  0205                     __ptext12:	
  2627 ;; *************** function i1___awdiv *****************
  2628 ;; Defined at:
  2629 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  divisor         2    0[COMMON] int 
  2632 ;;  dividend        2    2[COMMON] int 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  quotient        2    7[COMMON] int 
  2635 ;;  sign            1    6[COMMON] unsigned char 
  2636 ;;  counter         1    5[COMMON] unsigned char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  2    0[COMMON] int 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         4       0       0       0       0
  2647 ;;      Locals:         4       0       0       0       0
  2648 ;;      Temps:          1       0       0       0       0
  2649 ;;      Totals:         9       0       0       0       0
  2650 ;;Total ram usage:        9 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_isr
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function i1___awdiv
  2661  0205                     i1___awdiv:
  2662  0205                     i1l1412:	
  2663                           ;incstack = 0
  2664                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  2665                           
  2666  0205  01F6               	clrf	i1___awdiv@sign
  2667  0206                     i1l1414:
  2668  0206  1FF1               	btfss	i1___awdiv@divisor+1,7
  2669  0207  2A09               	goto	u78_21
  2670  0208  2A0A               	goto	u78_20
  2671  0209                     u78_21:
  2672  0209  2A11               	goto	i1l1420
  2673  020A                     u78_20:
  2674  020A                     i1l1416:
  2675  020A  09F0               	comf	i1___awdiv@divisor,f
  2676  020B  09F1               	comf	i1___awdiv@divisor+1,f
  2677  020C  0AF0               	incf	i1___awdiv@divisor,f
  2678  020D  1903               	skipnz
  2679  020E  0AF1               	incf	i1___awdiv@divisor+1,f
  2680  020F                     i1l1418:
  2681  020F  01F6               	clrf	i1___awdiv@sign
  2682  0210  0AF6               	incf	i1___awdiv@sign,f
  2683  0211                     i1l1420:
  2684  0211  1FF3               	btfss	i1___awdiv@dividend+1,7
  2685  0212  2A14               	goto	u79_21
  2686  0213  2A15               	goto	u79_20
  2687  0214                     u79_21:
  2688  0214  2A1E               	goto	i1l1426
  2689  0215                     u79_20:
  2690  0215                     i1l1422:
  2691  0215  09F2               	comf	i1___awdiv@dividend,f
  2692  0216  09F3               	comf	i1___awdiv@dividend+1,f
  2693  0217  0AF2               	incf	i1___awdiv@dividend,f
  2694  0218  1903               	skipnz
  2695  0219  0AF3               	incf	i1___awdiv@dividend+1,f
  2696  021A                     i1l1424:
  2697  021A  3001               	movlw	1
  2698  021B  00F4               	movwf	??i1___awdiv
  2699  021C  0874               	movf	??i1___awdiv,w
  2700  021D  06F6               	xorwf	i1___awdiv@sign,f
  2701  021E                     i1l1426:
  2702  021E  01F7               	clrf	i1___awdiv@quotient
  2703  021F  01F8               	clrf	i1___awdiv@quotient+1
  2704  0220                     i1l1428:
  2705  0220  0870               	movf	i1___awdiv@divisor,w
  2706  0221  0471               	iorwf	i1___awdiv@divisor+1,w
  2707  0222  1903               	btfsc	3,2
  2708  0223  2A25               	goto	u80_21
  2709  0224  2A26               	goto	u80_20
  2710  0225                     u80_21:
  2711  0225  2A5D               	goto	i1l1448
  2712  0226                     u80_20:
  2713  0226                     i1l1430:
  2714  0226  01F5               	clrf	i1___awdiv@counter
  2715  0227  0AF5               	incf	i1___awdiv@counter,f
  2716  0228  2A34               	goto	i1l1436
  2717  0229                     i1l1432:
  2718  0229  3001               	movlw	1
  2719  022A                     u81_25:
  2720  022A  1003               	clrc
  2721  022B  0DF0               	rlf	i1___awdiv@divisor,f
  2722  022C  0DF1               	rlf	i1___awdiv@divisor+1,f
  2723  022D  3EFF               	addlw	-1
  2724  022E  1D03               	skipz
  2725  022F  2A2A               	goto	u81_25
  2726  0230                     i1l1434:
  2727  0230  3001               	movlw	1
  2728  0231  00F4               	movwf	??i1___awdiv
  2729  0232  0874               	movf	??i1___awdiv,w
  2730  0233  07F5               	addwf	i1___awdiv@counter,f
  2731  0234                     i1l1436:
  2732  0234  1FF1               	btfss	i1___awdiv@divisor+1,7
  2733  0235  2A37               	goto	u82_21
  2734  0236  2A38               	goto	u82_20
  2735  0237                     u82_21:
  2736  0237  2A29               	goto	i1l1432
  2737  0238                     u82_20:
  2738  0238                     i1l1438:
  2739  0238  3001               	movlw	1
  2740  0239                     u83_25:
  2741  0239  1003               	clrc
  2742  023A  0DF7               	rlf	i1___awdiv@quotient,f
  2743  023B  0DF8               	rlf	i1___awdiv@quotient+1,f
  2744  023C  3EFF               	addlw	-1
  2745  023D  1D03               	skipz
  2746  023E  2A39               	goto	u83_25
  2747  023F  0871               	movf	i1___awdiv@divisor+1,w
  2748  0240  0273               	subwf	i1___awdiv@dividend+1,w
  2749  0241  1D03               	skipz
  2750  0242  2A45               	goto	u84_25
  2751  0243  0870               	movf	i1___awdiv@divisor,w
  2752  0244  0272               	subwf	i1___awdiv@dividend,w
  2753  0245                     u84_25:
  2754  0245  1C03               	skipc
  2755  0246  2A48               	goto	u84_21
  2756  0247  2A49               	goto	u84_20
  2757  0248                     u84_21:
  2758  0248  2A50               	goto	i1l1444
  2759  0249                     u84_20:
  2760  0249                     i1l1440:
  2761  0249  0870               	movf	i1___awdiv@divisor,w
  2762  024A  02F2               	subwf	i1___awdiv@dividend,f
  2763  024B  0871               	movf	i1___awdiv@divisor+1,w
  2764  024C  1C03               	skipc
  2765  024D  03F3               	decf	i1___awdiv@dividend+1,f
  2766  024E  02F3               	subwf	i1___awdiv@dividend+1,f
  2767  024F                     i1l1442:
  2768  024F  1477               	bsf	i1___awdiv@quotient,0
  2769  0250                     i1l1444:
  2770  0250  3001               	movlw	1
  2771  0251                     u85_25:
  2772  0251  1003               	clrc
  2773  0252  0CF1               	rrf	i1___awdiv@divisor+1,f
  2774  0253  0CF0               	rrf	i1___awdiv@divisor,f
  2775  0254  3EFF               	addlw	-1
  2776  0255  1D03               	skipz
  2777  0256  2A51               	goto	u85_25
  2778  0257                     i1l1446:
  2779  0257  3001               	movlw	1
  2780  0258  02F5               	subwf	i1___awdiv@counter,f
  2781  0259  1D03               	btfss	3,2
  2782  025A  2A5C               	goto	u86_21
  2783  025B  2A5D               	goto	u86_20
  2784  025C                     u86_21:
  2785  025C  2A38               	goto	i1l1438
  2786  025D                     u86_20:
  2787  025D                     i1l1448:
  2788  025D  0876               	movf	i1___awdiv@sign,w
  2789  025E  1903               	btfsc	3,2
  2790  025F  2A61               	goto	u87_21
  2791  0260  2A62               	goto	u87_20
  2792  0261                     u87_21:
  2793  0261  2A67               	goto	i1l1452
  2794  0262                     u87_20:
  2795  0262                     i1l1450:
  2796  0262  09F7               	comf	i1___awdiv@quotient,f
  2797  0263  09F8               	comf	i1___awdiv@quotient+1,f
  2798  0264  0AF7               	incf	i1___awdiv@quotient,f
  2799  0265  1903               	skipnz
  2800  0266  0AF8               	incf	i1___awdiv@quotient+1,f
  2801  0267                     i1l1452:
  2802  0267  0878               	movf	i1___awdiv@quotient+1,w
  2803  0268  00F1               	movwf	?i1___awdiv+1
  2804  0269  0877               	movf	i1___awdiv@quotient,w
  2805  026A  00F0               	movwf	?i1___awdiv
  2806  026B                     i1l425:
  2807  026B  0008               	return
  2808  026C                     __end_ofi1___awdiv:
  2809                           
  2810                           	psect	text13
  2811  03CE                     __ptext13:	
  2812 ;; *************** function ___wmul *****************
  2813 ;; Defined at:
  2814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  multiplier      2    9[COMMON] unsigned int 
  2817 ;;  multiplicand    2   11[COMMON] unsigned int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  product         2    0[BANK0 ] unsigned int 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2    9[COMMON] unsigned int 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         4       0       0       0       0
  2830 ;;      Locals:         0       2       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         4       2       0       0       0
  2833 ;;Total ram usage:        6 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_isr
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function ___wmul
  2844  03CE                     ___wmul:
  2845  03CE                     i1l1316:	
  2846                           ;incstack = 0
  2847                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2848                           
  2849  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2851  03D0  01A0               	clrf	___wmul@product
  2852  03D1  01A1               	clrf	___wmul@product+1
  2853  03D2                     i1l1318:
  2854  03D2  1C79               	btfss	___wmul@multiplier,0
  2855  03D3  2BD5               	goto	u55_21
  2856  03D4  2BD6               	goto	u55_20
  2857  03D5                     u55_21:
  2858  03D5  2BDE               	goto	i1l272
  2859  03D6                     u55_20:
  2860  03D6                     i1l1320:
  2861  03D6  087B               	movf	___wmul@multiplicand,w
  2862  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2863  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2864  03D9  07A0               	addwf	___wmul@product,f
  2865  03DA  1803               	skipnc
  2866  03DB  0AA1               	incf	___wmul@product+1,f
  2867  03DC  087C               	movf	___wmul@multiplicand+1,w
  2868  03DD  07A1               	addwf	___wmul@product+1,f
  2869  03DE                     i1l272:
  2870  03DE  3001               	movlw	1
  2871  03DF                     u56_25:
  2872  03DF  1003               	clrc
  2873  03E0  0DFB               	rlf	___wmul@multiplicand,f
  2874  03E1  0DFC               	rlf	___wmul@multiplicand+1,f
  2875  03E2  3EFF               	addlw	-1
  2876  03E3  1D03               	skipz
  2877  03E4  2BDF               	goto	u56_25
  2878  03E5                     i1l1322:
  2879  03E5  3001               	movlw	1
  2880  03E6                     u57_25:
  2881  03E6  1003               	clrc
  2882  03E7  0CFA               	rrf	___wmul@multiplier+1,f
  2883  03E8  0CF9               	rrf	___wmul@multiplier,f
  2884  03E9  3EFF               	addlw	-1
  2885  03EA  1D03               	skipz
  2886  03EB  2BE6               	goto	u57_25
  2887  03EC                     i1l1324:
  2888  03EC  0879               	movf	___wmul@multiplier,w
  2889  03ED  047A               	iorwf	___wmul@multiplier+1,w
  2890  03EE  1D03               	btfss	3,2
  2891  03EF  2BF1               	goto	u58_21
  2892  03F0  2BF2               	goto	u58_20
  2893  03F1                     u58_21:
  2894  03F1  2BD2               	goto	i1l1318
  2895  03F2                     u58_20:
  2896  03F2                     i1l1326:
  2897  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2898  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2899  03F4  0821               	movf	___wmul@product+1,w
  2900  03F5  00FA               	movwf	?___wmul+1
  2901  03F6  0820               	movf	___wmul@product,w
  2902  03F7  00F9               	movwf	?___wmul
  2903  03F8                     i1l274:
  2904  03F8  0008               	return
  2905  03F9                     __end_of___wmul:
  2906                           
  2907                           	psect	text14
  2908  0419                     __ptext14:	
  2909 ;; *************** function _ADC_IF *****************
  2910 ;; Defined at:
  2911 ;;		line 36 in file "ADC.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0
  2927 ;;      Temps:          1       0       0       0       0
  2928 ;;      Totals:         1       0       0       0       0
  2929 ;;Total ram usage:        1 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_isr
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _ADC_IF
  2940  0419                     _ADC_IF:
  2941  0419                     i1l1202:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _ADC_IF: [wreg+status,2+status,0]
  2944                           
  2945                           
  2946                           ;ADC.c: 37:     if (ADCON0bits.GO == 0){
  2947  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2948  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2949  041B  189F               	btfsc	31,1	;volatile
  2950  041C  2C1E               	goto	u48_21
  2951  041D  2C1F               	goto	u48_20
  2952  041E                     u48_21:
  2953  041E  2C37               	goto	i1l127
  2954  041F                     u48_20:
  2955  041F                     i1l1204:
  2956                           
  2957                           ;ADC.c: 38:             if(ADCON0bits.CHS == 0){
  2958  041F  0C1F               	rrf	31,w	;volatile
  2959  0420  00F0               	movwf	??_ADC_IF
  2960  0421  0C70               	rrf	??_ADC_IF,w
  2961  0422  390F               	andlw	15
  2962  0423  3A00               	xorlw	0
  2963  0424  1D03               	skipz
  2964  0425  2C27               	goto	u49_21
  2965  0426  2C28               	goto	u49_20
  2966  0427                     u49_21:
  2967  0427  2C2D               	goto	i1l1208
  2968  0428                     u49_20:
  2969  0428                     i1l1206:
  2970                           
  2971                           ;ADC.c: 39:                 ADCON0bits.CHS = 1;
  2972  0428  081F               	movf	31,w	;volatile
  2973  0429  39C3               	andlw	-61
  2974  042A  3804               	iorlw	4
  2975  042B  009F               	movwf	31	;volatile
  2976                           
  2977                           ;ADC.c: 40:             }
  2978  042C  2C2F               	goto	i1l1210
  2979  042D                     i1l1208:
  2980                           
  2981                           ;ADC.c: 42:                 ADCON0bits.CHS = 0;
  2982  042D  30C3               	movlw	-61
  2983  042E  059F               	andwf	31,f	;volatile
  2984  042F                     i1l1210:
  2985                           
  2986                           ;ADC.c: 44:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  2987  042F  3010               	movlw	16
  2988  0430  00F0               	movwf	??_ADC_IF
  2989  0431                     u100_27:
  2990  0431  0BF0               	decfsz	??_ADC_IF,f
  2991  0432  2C31               	goto	u100_27
  2992  0433  0000               	nop
  2993  0434                     i1l1212:
  2994                           
  2995                           ;ADC.c: 45:             ADCON0bits.GO = 1;
  2996  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0436  149F               	bsf	31,1	;volatile
  2999  0437                     i1l127:
  3000  0437  0008               	return
  3001  0438                     __end_of_ADC_IF:
  3002  007E                     btemp	set	126	;btemp
  3003  007E                     wtemp0	set	126
  3004                           
  3005                           	psect	config
  3006                           
  3007                           ;Config register CONFIG1 @ 0x2007
  3008                           ;	Oscillator Selection bits
  3009                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3010                           ;	Watchdog Timer Enable bit
  3011                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3012                           ;	Power-up Timer Enable bit
  3013                           ;	PWRTE = ON, PWRT enabled
  3014                           ;	RE3/MCLR pin function select bit
  3015                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3016                           ;	Code Protection bit
  3017                           ;	CP = OFF, Program memory code protection is disabled
  3018                           ;	Data Code Protection bit
  3019                           ;	CPD = OFF, Data memory code protection is disabled
  3020                           ;	Brown Out Reset Selection bits
  3021                           ;	BOREN = OFF, BOR disabled
  3022                           ;	Internal External Switchover bit
  3023                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3024                           ;	Fail-Safe Clock Monitor Enabled bit
  3025                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3026                           ;	Low Voltage Programming Enable bit
  3027                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3028                           ;	In-Circuit Debugger Mode bit
  3029                           ;	DEBUG = 0x1, unprogrammed default
  3030  2007                     	org	8199
  3031  2007  30C4               	dw	12484
  3032                           
  3033                           ;Config register CONFIG2 @ 0x2008
  3034                           ;	Brown-out Reset Selection bit
  3035                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3036                           ;	Flash Program Memory Self Write Enable bits
  3037                           ;	WRT = OFF, Write protection off
  3038  2008                     	org	8200
  3039  2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        10
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     27      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul
    ___wmul->i1___awdiv

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK0

    _isr->___wmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2541
                                             22 BANK0      5     5      0
                         _ADC_CONFIG
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _USART_CONFIG
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     752
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     804
                                             13 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _USART_CONFIG                                         6     0      6     294
                                              6 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     264
                                              8 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       2     1      1     262
                                              9 BANK0      2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              9 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           2     0      2      98
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0     800
                                              2 BANK0      4     4      0
                             _ADC_IF
                             ___wmul
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (4) i1___awdiv                                            9     5      4     404
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                          i1___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _ADC_IF                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_CONFIG
   ___awdiv
     ___awmod (ARG)
   ___awmod

 _isr (ROOT)
   _ADC_IF
   ___wmul
     i1___awdiv (ARG)
   i1___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      48      12        0.0%
ABS                  0      0      48       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 13:36:46 2021

      __size_of_ADC_CONFIG 002C             ADC_CONFIG@frec 0026                          pc 0002  
             ___awdiv@sign 0033                         _rc 0041                         _tr 0043  
                       fsr 0004        ___wmul@multiplicand 007B                        l121 03CD  
                      l144 0361                        l162 049D                        l146 036E  
                      l171 02CF                        l180 03A1                        l148 036F  
                      l174 0490                        l159 046B                        l168 0418  
                      l425 0204                        l438 032A                        _RC4 003C  
                      _RC5 003D                        u500 035D                        u501 035C  
                      u510 036C                        u511 036B                        u520 0401  
                      u600 01AE                        u521 0400                        u601 01AD  
                      u530 0410                        u610 01BF                        u531 040F  
                      u611 01BE                        u540 03A1                        u700 02E2  
                      u541 03A0                        u701 02E1                        u630 01D1  
                      u710 02ED                        u631 01D0                        u711 02EC  
                      u625 01C3                        u650 01E2                        u730 02FF  
                      u651 01E1                        u731 02FE                        u740 0309  
                      u645 01D2                        u741 0308                        u725 02F1  
                      u670 01F6                        u590 01A3                        u671 01F5  
                      u655 01DE                        u591 01A2                        u680 01FB  
                      u760 031C                        u681 01FA                        u665 01EA  
                      u761 031B                        u745 0305                        u770 0321  
                      u690 02D7                        u771 0320                        u755 0310  
                      u691 02D6                        u937 0108                        u947 048A  
                      u957 0275                        u967 0286                        u977 0297  
                      u987 02CB                        u997 0463                        _con 003F  
                      _isr 0113                        _num 0050                        fsr0 0004  
                      indf 0000               ___awmod@sign 002C                       l1200 048D  
                     l1220 03AA                       l1300 03FC                       l1230 03B8  
                     l1222 03AB                       l1214 03A2                       l1302 0401  
                     l1310 0375                       l1224 03AC                       l1216 03A5  
                     l1304 040A                       l1312 0387                       l1240 032B  
                     l1400 030F                       l1226 03B0                       l1234 03BD  
                     l1218 03A7                       l1306 0410                       l1314 038F  
                     l1250 0343                       l1242 0336                       l1330 019C  
                     l1402 0316                       l1228 03B3                       l1308 0370  
                     l1260 035D                       l1252 0344                       l1244 033A  
                     l1340 01AE                       l1332 019F                       l1404 031C  
                     l1500 003E                       l1190 045C                       l1270 026C  
                     l1262 0364                       l1246 033B                       l1350 01C2  
                     l1342 01B3                       l1334 01A3                       l1406 0321  
                     l1510 0061                       l1502 003F                       l1192 0468  
                     l1280 0291                       l1272 026F                       l1264 036C  
                     l1248 033F                       l1256 0348                       l1360 01E8  
                     l1352 01C9                       l1344 01B7                       l1336 01A8  
                     l1408 0326                       l1520 006E                       l1512 0062  
                     l1504 004A                       l1186 0459                       l1290 02B3  
                     l1282 029B                       l1274 027A                       l1194 0482  
                     l1258 0355                       l1370 0200                       l1362 01E9  
                     l1354 01CD                       l1346 01B9                       l1338 01AA  
                     l1530 00BE                       l1522 006F                       l1514 0065  
                     l1506 005D                       l1188 045A                       l1292 02B9  
                     l1284 02A1                       l1276 0280                       l1196 0483  
                     l1364 01F0                       l1356 01D1                       l1348 01BF  
                     l1380 02DC                       l1540 0100                       l1532 00D1  
                     l1524 0074                       l1516 006A                       l1508 005E  
                     l1294 02BF                       l1286 02A7                       l1278 028B  
                     l1198 0485                       l1358 01E2                       l1366 01F6  
                     l1390 02F0                       l1382 02DE                       l1374 02D0  
                     l1534 00D9                       l1526 0089                       l1518 006D  
                     l1296 02C5                       l1288 02AD                       l1368 01FB  
                     l1392 02F7                       l1384 02E2                       l1376 02D3  
                     l1536 00E4                       l1528 00AB                       l1298 0491  
                     l1394 02FB                       l1386 02E7                       l1378 02D7  
                     l1538 00EE                       l1490 0031                       l1396 02FF  
                     l1388 02ED                       l1492 0036                       l1398 0309  
                     l1494 0038                       l1486 002C                       l1496 0039  
                     l1488 0030                       l1586 034D                       l1498 003D  
                     l1588 03C2                       _ADIF 0066                       ?_isr 0070  
                     STR_1 0448                       _RCIF 0065                       i1l99 0195  
                     _TXEN 04C5                       _dec1 004E                       _dec2 004C  
                     _cen1 004F                       _cen2 007D          ?_Lcd_Write_String 0028  
                     _frec 0045                       _main 002C                       _pot1 0049  
                     _pot2 0047                       _uni1 004D                       _uni2 004B  
                     _vol1 003D                       _vol2 003B                       btemp 007E  
                     start 000E         ??_Lcd_Write_String 002A            __end_of_Lcd_Cmd 046C  
                    ??_isr 0022                      ?_main 0070             i1___awdiv@sign 0076  
          __end_of___awdiv 0205            __end_of___awmod 032B                      _ANSEL 0188  
          ___awdiv@divisor 002D                      i1l127 0437                      i1l272 03DE  
                    i1l425 026B                      i1l274 03F8            ___awdiv@counter 0032  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
                    u55_20 03D6                      u55_21 03D5                      u48_20 041F  
                    u80_20 0226                      u48_21 041E                      u80_21 0225  
                    u56_25 03DF                      u49_20 0428                      u49_21 0427  
  __size_of_Lcd_Set_Cursor 0020                      _TRISA 0085                      _TRISB 0086  
                    u57_25 03E6                      u81_25 022A                      _TRISC 0087  
                    _TRISD 0088                      u58_20 03F2                      u82_20 0238  
                    u90_20 017B                      u58_21 03F1                      u82_21 0237  
                    u90_21 017A                      u91_20 0181                      u91_21 0180  
                    u83_25 0239                      u84_20 0249                      u92_20 018E  
                    u84_21 0248                      u92_21 018D                      u84_25 0245  
                    u85_25 0251                      u86_20 025D                      u78_20 020A  
                    u86_21 025C                      u78_21 0209                      u87_20 0262  
                    u79_20 0215                      u87_21 0261                      u79_21 0214  
                    u88_20 0117                      u88_21 0116                      u89_20 0120  
                    u89_21 011F                      _TXREG 0019           USART_CONFIG@frec 0026  
                    pclath 000A                      status 0003                      wtemp0 007E  
       __size_ofi1___awdiv 0067           __end_of_Lcd_Init 02D0            __initialization 0011  
             __end_of_main 0113                     ??_main 0036         __size_of_Lcd_Clear 000D  
             ??_ADC_CONFIG 0028                     _ADC_IF 0419                     _ADRESH 001E  
         ___awdiv@dividend 002F                     _ANSELH 0189                     u100_27 0431  
                   i1l1210 042F                     i1l1202 0419                     i1l1212 0434  
                   i1l1204 041F                     i1l1206 0428                     i1l1208 042D  
                   i1l1320 03D6                     i1l1322 03E5                     i1l1324 03EC  
                   i1l1316 03CE                     i1l1420 0211                     i1l1412 0205  
                   i1l1326 03F2                     i1l1318 03D2                     i1l1430 0226  
                   i1l1422 0215                     i1l1414 0206                     i1l1440 0249  
                   i1l1432 0229                     i1l1424 021A                     i1l1416 020A  
                   i1l1450 0262                     i1l1442 024F                     i1l1434 0230  
                   i1l1426 021E                     i1l1418 020F                     i1l1452 0267  
                   i1l1444 0250                     i1l1436 0234                     i1l1428 0220  
                   i1l1460 0120                     i1l1446 0257                     i1l1438 0238  
                   i1l1470 0174                     i1l1462 0127                     i1l1448 025D  
                   i1l1480 018E                     i1l1464 0148                     i1l1472 0177  
                   i1l1456 0113                     i1l1482 0194                     i1l1474 017B  
                   i1l1466 014F                     i1l1458 0117                     i1l1476 0181  
                   i1l1468 016F                     i1l1478 0188                  ??_Lcd_Cmd 0026  
  __size_of_Lcd_Write_Char 0012         __end_of_ADC_CONFIG 03CE                     ___wmul 03CE  
                ??___awdiv 0031                  ??___awmod 002A           ___awdiv@quotient 0034  
          ___awmod@divisor 0026            ___awmod@counter 002B          __end_ofi1___awdiv 026C  
                   saved_w 007E            Lcd_Set_Cursor@a 002A            Lcd_Set_Cursor@b 0029  
  __end_of__initialization 0028          __end_of_Lcd_Clear 049E             __pcstackCOMMON 0070  
             __pidataBANK0 049E             USART_CONFIG@rc 002A             USART_CONFIG@tr 0028  
           _Lcd_Set_Cursor 03F9                  ?_Lcd_Init 0070                    ?_ADC_IF 0070  
               __pbssBANK0 003B                 __pmaintext 002C                    ?___wmul 0079  
               __pintentry 0004  __size_of_Lcd_Write_String 0032     __end_of_Lcd_Set_Cursor 0419  
       i1___awdiv@dividend 0072                 ??_Lcd_Init 0029            __size_of_ADC_IF 001F  
               __stringtab 0438             _Lcd_Write_Char 047F                    _Lcd_Cmd 0456  
       i1___awdiv@quotient 0077                    ___awdiv 019C                    ___awmod 02D0  
          __size_of___wmul 002B            ?_Lcd_Set_Cursor 0029                    __ptext1 02D0  
                  __ptext2 019C                    __ptext3 032B                    __ptext4 0370  
                  __ptext5 047F                    __ptext6 03F9                    __ptext7 026C  
                  __ptext8 0491                    __ptext9 0456               __size_of_isr 0089  
         ___awmod@dividend 0028                    clrloop0 04A9     __end_of_Lcd_Write_Char 0491  
     end_of_initialization 0028                  _RCSTAbits 0018              ?_USART_CONFIG 0026  
                i1___awdiv 0205            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0028  
        Lcd_Write_String@i 002A             __end_of_ADC_IF 0438                  _TXSTAbits 0098  
                _Lcd_Clear 0491             __end_of___wmul 03F9           _Lcd_Write_String 0370  
              _BAUDCTLbits 0187             ??_USART_CONFIG 002C        start_initialization 0011  
              __end_of_isr 019C                 ?i1___awdiv 0070                   ??_ADC_IF 0070  
        __size_of_Lcd_Init 0064                 ?_Lcd_Clear 0070                   ??___wmul 007D  
               init_fetch0 046C                __pdataBANK0 0050            Lcd_Write_Char@a 0027  
              __pbssCOMMON 007D                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070                  _main$1077 0039           ??_Lcd_Set_Cursor 002A  
                 ?___awdiv 002D                   ?___awmod 0026          i1___awdiv@divisor 0070  
        i1___awdiv@counter 0075                  __pstrings 0438                ??i1___awdiv 0074  
        interrupt_function 0004             ___wmul@product 0020                  clear_ram0 04A8  
                 _PIE1bits 008C                   Lcd_Cmd@a 0028       __end_of_USART_CONFIG 0370  
              ??_Lcd_Clear 0029                 _ADCON0bits 001F                __stringbase 0447  
               _ADCON1bits 009F          ___wmul@multiplier 0079           ??_Lcd_Write_Char 0026  
               _ADC_CONFIG 03A2                   _Lcd_Init 026C   __end_of_Lcd_Write_String 03A2  
         __size_of_Lcd_Cmd 0016           __size_of___awdiv 0069           __size_of___awmod 005B  
       __end_of__stringtab 0448                   __ptext10 03A2                   __ptext11 0113  
                 __ptext12 0205                   __ptext13 03CE                   __ptext14 0419  
            __size_of_main 00E7                 _INTCONbits 000B                ?_ADC_CONFIG 0026  
                 init_ram0 0470                   intlevel1 0000      __size_of_USART_CONFIG 0045  
                stringcode 0442                 _OSCCONbits 008F                   stringdir 0442  
                 stringtab 0438               _USART_CONFIG 032B  
