

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 09 09:19:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0014                     _SSPCON	set	20
   364  0006                     _PORTB	set	6
   365  000B                     _INTCONbits	set	11
   366  001E                     _ADRESH	set	30
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCONbits	set	20
   369  000C                     _PIR1bits	set	12
   370  001F                     _ADCON0bits	set	31
   371  0063                     _SSPIF	set	99
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  0066                     _ADIF	set	102
   375  0091                     _SSPCON2bits	set	145
   376  0087                     _TRISCbits	set	135
   377  0094                     _SSPSTAT	set	148
   378  0093                     _SSPADD	set	147
   379  0091                     _SSPCON2	set	145
   380  008C                     _PIE1bits	set	140
   381  008F                     _OSCCONbits	set	143
   382  0088                     _TRISD	set	136
   383  0087                     _TRISC	set	135
   384  0086                     _TRISB	set	134
   385  0085                     _TRISA	set	133
   386  0094                     _SSPSTATbits	set	148
   387  009F                     _ADCON1bits	set	159
   388  0463                     _SSPIE	set	1123
   389  043C                     _TRISC4	set	1084
   390  043B                     _TRISC3	set	1083
   391  04A0                     _BF	set	1184
   392  0189                     _ANSELH	set	393
   393  0188                     _ANSEL	set	392
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   403  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0011                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  0011                     __end_of__initialization:
   408  0011  0183               	clrf	3
   409  0012  120A  118A  28EE   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  0075                     __pbssCOMMON:
   413  0075                     _pot:
   414  0075                     	ds	1
   415  0076                     _z:
   416  0076                     	ds	1
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:
   420  0070                     ?_I2C_Slave_Init:
   421  0070                     ?_ADC_IF:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_isr:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_isr:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_setup:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_main:	
   434                           ; 1 bytes @ 0x0
   435                           
   436                           
   437                           ; 1 bytes @ 0x0
   438  0070                     	ds	3
   439  0073                     ??_I2C_Slave_Init:
   440  0073                     ?_ADC_CONFIG:	
   441                           ; 1 bytes @ 0x3
   442                           
   443  0073                     ??_ADC_IF:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     I2C_Slave_Init@address:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     ADC_CONFIG@frec:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 2 bytes @ 0x3
   454  0073                     	ds	2
   455  0075                     ??_ADC_CONFIG:
   456  0075                     ??_setup:	
   457                           ; 1 bytes @ 0x5
   458                           
   459  0075                     ??_main:	
   460                           ; 1 bytes @ 0x5
   461                           
   462                           
   463                           	psect	maintext
   464  00EE                     __pmaintext:	
   465                           ; 1 bytes @ 0x5
   466 ;;
   467 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   468 ;;
   469 ;; *************** function _main *****************
   470 ;; Defined at:
   471 ;;		line 91 in file "Slave_I2C.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : B00/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels required when called:    3
   491 ;; This function calls:
   492 ;;		_ADC_IF
   493 ;;		_setup
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _main
   501  00EE                     _main:
   502  00EE                     l965:	
   503                           ;incstack = 0
   504                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   505                           
   506                           
   507                           ;Slave_I2C.c: 92:     setup();
   508  00EE  120A  118A  20AF  120A  118A  	fcall	_setup
   509  00F3                     l967:
   510                           
   511                           ;Slave_I2C.c: 94:         ADC_IF();
   512  00F3  120A  118A  2100  120A  118A  	fcall	_ADC_IF
   513  00F8                     l969:
   514                           
   515                           ;Slave_I2C.c: 95:         PORTB = pot;
   516  00F8  0875               	movf	_pot,w
   517  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   518  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   519  00FB  0086               	movwf	6	;volatile
   520  00FC  28F3               	goto	l967
   521  00FD  120A  118A  280C   	ljmp	start
   522  0100                     __end_of_main:
   523                           
   524                           	psect	text1
   525  00AF                     __ptext1:	
   526 ;; *************** function _setup *****************
   527 ;; Defined at:
   528 ;;		line 70 in file "Slave_I2C.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		_ADC_CONFIG
   551 ;;		_I2C_Slave_Init
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _setup
   559  00AF                     _setup:
   560  00AF                     l943:	
   561                           ;incstack = 0
   562                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;Slave_I2C.c: 71:     ANSEL = 0x01;
   566  00AF  3001               	movlw	1
   567  00B0  1683               	bsf	3,5	;RP0=1, select bank3
   568  00B1  1703               	bsf	3,6	;RP1=1, select bank3
   569  00B2  0088               	movwf	8	;volatile
   570  00B3                     l945:
   571                           
   572                           ;Slave_I2C.c: 72:     ANSELH = 0x00;
   573  00B3  0189               	clrf	9	;volatile
   574  00B4                     l947:
   575                           
   576                           ;Slave_I2C.c: 74:     TRISA = 0x01;
   577  00B4  3001               	movlw	1
   578  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   579  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   580  00B7  0085               	movwf	5	;volatile
   581                           
   582                           ;Slave_I2C.c: 75:     TRISB = 0x00;
   583  00B8  0186               	clrf	6	;volatile
   584                           
   585                           ;Slave_I2C.c: 76:     TRISC = 0x00;
   586  00B9  0187               	clrf	7	;volatile
   587                           
   588                           ;Slave_I2C.c: 77:     TRISD = 0x00;
   589  00BA  0188               	clrf	8	;volatile
   590  00BB                     l949:
   591                           
   592                           ;Slave_I2C.c: 79:     OSCCONbits.IRCF = 0B111;
   593  00BB  3070               	movlw	112
   594  00BC  048F               	iorwf	15,f	;volatile
   595  00BD                     l951:
   596                           
   597                           ;Slave_I2C.c: 80:     OSCCONbits.SCS = 1;
   598  00BD  140F               	bsf	15,0	;volatile
   599  00BE                     l953:
   600                           
   601                           ;Slave_I2C.c: 81:     OSCCONbits.OSTS = 0;
   602  00BE  118F               	bcf	15,3	;volatile
   603  00BF                     l955:
   604                           
   605                           ;Slave_I2C.c: 83:     ADC_CONFIG(8);
   606  00BF  3008               	movlw	8
   607  00C0  00F3               	movwf	ADC_CONFIG@frec
   608  00C1  3000               	movlw	0
   609  00C2  00F4               	movwf	ADC_CONFIG@frec+1
   610  00C3  120A  118A  2083  120A  118A  	fcall	_ADC_CONFIG
   611  00C8                     l957:
   612                           
   613                           ;Slave_I2C.c: 84:     PIE1bits.ADIE = 1;
   614  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   615  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   616  00CA  170C               	bsf	12,6	;volatile
   617  00CB                     l959:
   618                           
   619                           ;Slave_I2C.c: 85:     INTCONbits.PEIE = 1;
   620  00CB  170B               	bsf	11,6	;volatile
   621  00CC                     l961:
   622                           
   623                           ;Slave_I2C.c: 86:     INTCONbits.GIE = 1;
   624  00CC  178B               	bsf	11,7	;volatile
   625  00CD                     l963:
   626                           
   627                           ;Slave_I2C.c: 88:     I2C_Slave_Init(0x50);
   628  00CD  3050               	movlw	80
   629  00CE  120A  118A  20D4  120A  118A  	fcall	_I2C_Slave_Init
   630  00D3                     l86:
   631  00D3  0008               	return
   632  00D4                     __end_of_setup:
   633                           
   634                           	psect	text2
   635  00D4                     __ptext2:	
   636 ;; *************** function _I2C_Slave_Init *****************
   637 ;; Defined at:
   638 ;;		line 93 in file "I2C_2.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  address         1    wreg     unsigned char 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  address         1    3[COMMON] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         1       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0
   655 ;;      Totals:         1       0       0       0       0
   656 ;;Total ram usage:        1 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_setup
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _I2C_Slave_Init
   668  00D4                     _I2C_Slave_Init:
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _I2C_Slave_Init: [wreg]
   672                           ;I2C_Slave_Init@address stored from wreg
   673  00D4  00F3               	movwf	I2C_Slave_Init@address
   674  00D5                     l767:
   675                           
   676                           ;I2C_2.c: 93: void I2C_Slave_Init(uint8_t address);I2C_2.c: 94: {;I2C_2.c: 95:     SSPAD
      +                          D = address;
   677  00D5  0873               	movf	I2C_Slave_Init@address,w
   678  00D6  1683               	bsf	3,5	;RP0=1, select bank1
   679  00D7  1303               	bcf	3,6	;RP1=0, select bank1
   680  00D8  0093               	movwf	19	;volatile
   681                           
   682                           ;I2C_2.c: 96:     SSPCON = 0x36;
   683  00D9  3036               	movlw	54
   684  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   685  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   686  00DC  0094               	movwf	20	;volatile
   687                           
   688                           ;I2C_2.c: 97:     SSPSTAT = 0x80;
   689  00DD  3080               	movlw	128
   690  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   691  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   692  00E0  0094               	movwf	20	;volatile
   693                           
   694                           ;I2C_2.c: 98:     SSPCON2 = 0x01;
   695  00E1  3001               	movlw	1
   696  00E2  0091               	movwf	17	;volatile
   697  00E3                     l769:
   698                           
   699                           ;I2C_2.c: 99:     TRISC3 = 1;
   700  00E3  1587               	bsf	7,3	;volatile
   701  00E4                     l771:
   702                           
   703                           ;I2C_2.c: 100:     TRISC4 = 1;
   704  00E4  1607               	bsf	7,4	;volatile
   705  00E5                     l773:
   706                           
   707                           ;I2C_2.c: 101:     GIE = 1;
   708  00E5  178B               	bsf	11,7	;volatile
   709  00E6                     l775:
   710                           
   711                           ;I2C_2.c: 102:     PEIE = 1;
   712  00E6  170B               	bsf	11,6	;volatile
   713  00E7                     l777:
   714                           
   715                           ;I2C_2.c: 103:     SSPIF = 0;
   716  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   717  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   718  00E9  118C               	bcf	12,3	;volatile
   719  00EA                     l779:
   720                           
   721                           ;I2C_2.c: 104:     SSPIE = 1;
   722  00EA  1683               	bsf	3,5	;RP0=1, select bank1
   723  00EB  1303               	bcf	3,6	;RP1=0, select bank1
   724  00EC  158C               	bsf	12,3	;volatile
   725  00ED                     l149:
   726  00ED  0008               	return
   727  00EE                     __end_of_I2C_Slave_Init:
   728                           
   729                           	psect	text3
   730  0083                     __ptext3:	
   731 ;; *************** function _ADC_CONFIG *****************
   732 ;; Defined at:
   733 ;;		line 14 in file "ADC.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  frec            2    3[COMMON] int 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         2       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         2       0       0       0       0
   751 ;;Total ram usage:        2 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_setup
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _ADC_CONFIG
   763  0083                     _ADC_CONFIG:
   764  0083                     l917:	
   765                           ;incstack = 0
   766                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
   767                           
   768                           
   769                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
   770  0083  1283               	bcf	3,5	;RP0=0, select bank0
   771  0084  1303               	bcf	3,6	;RP1=0, select bank0
   772  0085  141F               	bsf	31,0	;volatile
   773  0086                     l919:
   774                           
   775                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
   776  0086  30C3               	movlw	-61
   777  0087  059F               	andwf	31,f	;volatile
   778  0088                     l921:
   779                           
   780                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
   781  0088  1683               	bsf	3,5	;RP0=1, select bank1
   782  0089  1303               	bcf	3,6	;RP1=0, select bank1
   783  008A  139F               	bcf	31,7	;volatile
   784  008B                     l923:
   785                           
   786                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
   787  008B  121F               	bcf	31,4	;volatile
   788  008C                     l925:
   789                           
   790                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
   791  008C  129F               	bcf	31,5	;volatile
   792  008D                     l927:
   793                           
   794                           ;ADC.c: 21:     ADCON0bits.GO = 0;
   795  008D  1283               	bcf	3,5	;RP0=0, select bank0
   796  008E  1303               	bcf	3,6	;RP1=0, select bank0
   797  008F  109F               	bcf	31,1	;volatile
   798                           
   799                           ;ADC.c: 23:     switch(frec){
   800  0090  289E               	goto	l937
   801  0091                     l929:
   802                           
   803                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
   804  0091  303F               	movlw	-193
   805  0092  059F               	andwf	31,f	;volatile
   806                           
   807                           ;ADC.c: 26:             break;
   808  0093  28AE               	goto	l14
   809  0094                     l931:
   810                           
   811                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
   812  0094  081F               	movf	31,w	;volatile
   813  0095  393F               	andlw	-193
   814  0096  3840               	iorlw	64
   815  0097  009F               	movwf	31	;volatile
   816                           
   817                           ;ADC.c: 29:             break;
   818  0098  28AE               	goto	l14
   819  0099                     l933:
   820                           
   821                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
   822  0099  081F               	movf	31,w	;volatile
   823  009A  393F               	andlw	-193
   824  009B  3880               	iorlw	128
   825  009C  009F               	movwf	31	;volatile
   826                           
   827                           ;ADC.c: 32:             break;
   828  009D  28AE               	goto	l14
   829  009E                     l937:
   830                           
   831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 1, Range of values is 0 to 0
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte            4     3 (average)
   837                           ; direct_byte           11     8 (fixed)
   838                           ; jumptable            260     6 (fixed)
   839                           ;	Chosen strategy is simple_byte
   840  009E  0874               	movf	ADC_CONFIG@frec+1,w
   841  009F  3A00               	xorlw	0	; case 0
   842  00A0  1903               	skipnz
   843  00A1  28A3               	goto	l991
   844  00A2  28AE               	goto	l14
   845  00A3                     l991:
   846                           
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 3, Range of values is 1 to 8
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte           10     6 (average)
   852                           ; direct_byte           35    11 (fixed)
   853                           ; jumptable            263     9 (fixed)
   854                           ;	Chosen strategy is simple_byte
   855  00A3  0873               	movf	ADC_CONFIG@frec,w
   856  00A4  3A01               	xorlw	1	; case 1
   857  00A5  1903               	skipnz
   858  00A6  2891               	goto	l929
   859  00A7  3A05               	xorlw	5	; case 4
   860  00A8  1903               	skipnz
   861  00A9  2894               	goto	l931
   862  00AA  3A0C               	xorlw	12	; case 8
   863  00AB  1903               	skipnz
   864  00AC  2899               	goto	l933
   865  00AD  28AE               	goto	l14
   866  00AE                     l14:
   867  00AE  0008               	return
   868  00AF                     __end_of_ADC_CONFIG:
   869                           
   870                           	psect	text4
   871  0100                     __ptext4:	
   872 ;; *************** function _ADC_IF *****************
   873 ;; Defined at:
   874 ;;		line 36 in file "ADC.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         0       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          1       0       0       0       0
   891 ;;      Totals:         1       0       0       0       0
   892 ;;Total ram usage:        1 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _ADC_IF
   904  0100                     _ADC_IF:
   905  0100                     l781:	
   906                           ;incstack = 0
   907                           ; Regs used in _ADC_IF: [wreg]
   908                           
   909                           
   910                           ;ADC.c: 37:     if(ADCON0bits.GO == 0){
   911  0100  1283               	bcf	3,5	;RP0=0, select bank0
   912  0101  1303               	bcf	3,6	;RP1=0, select bank0
   913  0102  189F               	btfsc	31,1	;volatile
   914  0103  2905               	goto	u11
   915  0104  2906               	goto	u10
   916  0105                     u11:
   917  0105  290E               	goto	l18
   918  0106                     u10:
   919  0106                     l783:
   920                           
   921                           ;ADC.c: 38:             _delay((unsigned long)((50)*(1000000/4000000.0)));
   922  0106  3003               	movlw	3
   923  0107  00F3               	movwf	??_ADC_IF
   924  0108                     u167:
   925  0108  0BF3               	decfsz	??_ADC_IF,f
   926  0109  2908               	goto	u167
   927  010A  290B               	nop2
   928  010B                     l785:
   929                           
   930                           ;ADC.c: 39:             ADCON0bits.GO = 1;
   931  010B  1283               	bcf	3,5	;RP0=0, select bank0
   932  010C  1303               	bcf	3,6	;RP1=0, select bank0
   933  010D  149F               	bsf	31,1	;volatile
   934  010E                     l18:
   935  010E  0008               	return
   936  010F                     __end_of_ADC_IF:
   937                           
   938                           	psect	text5
   939  0015                     __ptext5:	
   940 ;; *************** function _isr *****************
   941 ;; Defined at:
   942 ;;		line 31 in file "Slave_I2C.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0
   958 ;;      Temps:          3       0       0       0       0
   959 ;;      Totals:         3       0       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		Interrupt level 1
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _isr
   971  0015                     _isr:
   972  0015                     i1l813:
   973                           
   974                           ;Slave_I2C.c: 32:     if(PIR1bits.SSPIF == 1){
   975  0015  1283               	bcf	3,5	;RP0=0, select bank0
   976  0016  1303               	bcf	3,6	;RP1=0, select bank0
   977  0017  1D8C               	btfss	12,3	;volatile
   978  0018  281A               	goto	u4_21
   979  0019  281B               	goto	u4_20
   980  001A                     u4_21:
   981  001A  2873               	goto	i1l69
   982  001B                     u4_20:
   983  001B                     i1l815:
   984                           
   985                           ;Slave_I2C.c: 34:         SSPCONbits.CKP = 0;
   986  001B  1214               	bcf	20,4	;volatile
   987                           
   988                           ;Slave_I2C.c: 36:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   989  001C  1B14               	btfsc	20,6	;volatile
   990  001D  281F               	goto	u5_21
   991  001E  2820               	goto	u5_20
   992  001F                     u5_21:
   993  001F  2824               	goto	i1l819
   994  0020                     u5_20:
   995  0020                     i1l817:
   996  0020  1F94               	btfss	20,7	;volatile
   997  0021  2823               	goto	u6_21
   998  0022  2824               	goto	u6_20
   999  0023                     u6_21:
  1000  0023  282B               	goto	i1l827
  1001  0024                     u6_20:
  1002  0024                     i1l819:
  1003                           
  1004                           ;Slave_I2C.c: 37:             z = SSPBUF;
  1005  0024  0813               	movf	19,w	;volatile
  1006  0025  00F0               	movwf	??_isr
  1007  0026  0870               	movf	??_isr,w
  1008  0027  00F6               	movwf	_z
  1009  0028                     i1l821:
  1010                           
  1011                           ;Slave_I2C.c: 38:             SSPCONbits.SSPOV = 0;
  1012  0028  1314               	bcf	20,6	;volatile
  1013  0029                     i1l823:
  1014                           
  1015                           ;Slave_I2C.c: 39:             SSPCONbits.WCOL = 0;
  1016  0029  1394               	bcf	20,7	;volatile
  1017  002A                     i1l825:
  1018                           
  1019                           ;Slave_I2C.c: 40:             SSPCONbits.CKP = 1;
  1020  002A  1614               	bsf	20,4	;volatile
  1021  002B                     i1l827:
  1022                           
  1023                           ;Slave_I2C.c: 43:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1024  002B  1683               	bsf	3,5	;RP0=1, select bank1
  1025  002C  1303               	bcf	3,6	;RP1=0, select bank1
  1026  002D  1A94               	btfsc	20,5	;volatile
  1027  002E  2830               	goto	u7_21
  1028  002F  2831               	goto	u7_20
  1029  0030                     u7_21:
  1030  0030  284F               	goto	i1l73
  1031  0031                     u7_20:
  1032  0031                     i1l829:
  1033  0031  1914               	btfsc	20,2	;volatile
  1034  0032  2834               	goto	u8_21
  1035  0033  2835               	goto	u8_20
  1036  0034                     u8_21:
  1037  0034  284F               	goto	i1l73
  1038  0035                     u8_20:
  1039  0035                     i1l831:
  1040                           
  1041                           ;Slave_I2C.c: 45:             z = SSPBUF;
  1042  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0037  0813               	movf	19,w	;volatile
  1045  0038  00F0               	movwf	??_isr
  1046  0039  0870               	movf	??_isr,w
  1047  003A  00F6               	movwf	_z
  1048  003B                     i1l833:
  1049                           
  1050                           ;Slave_I2C.c: 47:             PIR1bits.SSPIF = 0;
  1051  003B  118C               	bcf	12,3	;volatile
  1052  003C                     i1l835:
  1053                           
  1054                           ;Slave_I2C.c: 48:             SSPCONbits.CKP = 1;
  1055  003C  1614               	bsf	20,4	;volatile
  1056  003D                     i1l74:	
  1057                           ;Slave_I2C.c: 49:             while(!SSPSTATbits.BF);
  1058                           
  1059  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1060  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1061  003F  1C14               	btfss	20,0	;volatile
  1062  0040  2842               	goto	u9_21
  1063  0041  2843               	goto	u9_20
  1064  0042                     u9_21:
  1065  0042  283D               	goto	i1l74
  1066  0043                     u9_20:
  1067  0043                     i1l837:
  1068                           
  1069                           ;Slave_I2C.c: 50:             z = SSPBUF;
  1070  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0045  0813               	movf	19,w	;volatile
  1073  0046  00F0               	movwf	??_isr
  1074  0047  0870               	movf	??_isr,w
  1075  0048  00F6               	movwf	_z
  1076                           
  1077                           ;Slave_I2C.c: 51:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1078  0049  30A6               	movlw	166
  1079  004A  00F0               	movwf	??_isr
  1080  004B                     u17_27:
  1081  004B  0BF0               	decfsz	??_isr,f
  1082  004C  284B               	goto	u17_27
  1083  004D  0000               	nop
  1084                           
  1085                           ;Slave_I2C.c: 53:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1086  004E  2870               	goto	i1l77
  1087  004F                     i1l73:
  1088  004F  1A94               	btfsc	20,5	;volatile
  1089  0050  2852               	goto	u10_21
  1090  0051  2853               	goto	u10_20
  1091  0052                     u10_21:
  1092  0052  2870               	goto	i1l77
  1093  0053                     u10_20:
  1094  0053                     i1l839:
  1095  0053  1D14               	btfss	20,2	;volatile
  1096  0054  2856               	goto	u11_21
  1097  0055  2857               	goto	u11_20
  1098  0056                     u11_21:
  1099  0056  2870               	goto	i1l77
  1100  0057                     u11_20:
  1101  0057                     i1l841:
  1102                           
  1103                           ;Slave_I2C.c: 54:             z = SSPBUF;
  1104  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0059  0813               	movf	19,w	;volatile
  1107  005A  00F0               	movwf	??_isr
  1108  005B  0870               	movf	??_isr,w
  1109  005C  00F6               	movwf	_z
  1110  005D                     i1l843:
  1111                           
  1112                           ;Slave_I2C.c: 55:             BF = 0;
  1113  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1114  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1115  005F  1014               	bcf	20,0	;volatile
  1116                           
  1117                           ;Slave_I2C.c: 56:             SSPBUF = pot;
  1118  0060  0875               	movf	_pot,w
  1119  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0063  0093               	movwf	19	;volatile
  1122  0064                     i1l845:
  1123                           
  1124                           ;Slave_I2C.c: 57:             SSPCONbits.CKP = 1;
  1125  0064  1614               	bsf	20,4	;volatile
  1126                           
  1127                           ;Slave_I2C.c: 58:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1128  0065  30A6               	movlw	166
  1129  0066  00F0               	movwf	??_isr
  1130  0067                     u18_27:
  1131  0067  0BF0               	decfsz	??_isr,f
  1132  0068  2867               	goto	u18_27
  1133  0069  0000               	nop
  1134  006A                     i1l79:	
  1135                           ;Slave_I2C.c: 59:             while(SSPSTATbits.BF);
  1136                           
  1137  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1138  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1139  006C  1814               	btfsc	20,0	;volatile
  1140  006D  286F               	goto	u12_21
  1141  006E  2870               	goto	u12_20
  1142  006F                     u12_21:
  1143  006F  286A               	goto	i1l79
  1144  0070                     u12_20:
  1145  0070                     i1l77:
  1146                           
  1147                           ;Slave_I2C.c: 62:         PIR1bits.SSPIF = 0;
  1148  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0072  118C               	bcf	12,3	;volatile
  1151  0073                     i1l69:	
  1152                           ;Slave_I2C.c: 63:     }
  1153                           
  1154                           
  1155                           ;Slave_I2C.c: 64:     if (ADIF){
  1156  0073  1F0C               	btfss	12,6	;volatile
  1157  0074  2876               	goto	u13_21
  1158  0075  2877               	goto	u13_20
  1159  0076                     u13_21:
  1160  0076  287C               	goto	i1l83
  1161  0077                     u13_20:
  1162  0077                     i1l847:
  1163                           
  1164                           ;Slave_I2C.c: 65:         pot = ADRESH;
  1165  0077  081E               	movf	30,w	;volatile
  1166  0078  00F0               	movwf	??_isr
  1167  0079  0870               	movf	??_isr,w
  1168  007A  00F5               	movwf	_pot
  1169  007B                     i1l849:
  1170                           
  1171                           ;Slave_I2C.c: 66:         ADIF = 0;
  1172  007B  130C               	bcf	12,6	;volatile
  1173  007C                     i1l83:
  1174  007C  0872               	movf	??_isr+2,w
  1175  007D  008A               	movwf	10
  1176  007E  0E71               	swapf	??_isr+1,w
  1177  007F  0083               	movwf	3
  1178  0080  0EFE               	swapf	btemp,f
  1179  0081  0E7E               	swapf	btemp,w
  1180  0082  0009               	retfie
  1181  0083                     __end_of_isr:
  1182  007E                     btemp	set	126	;btemp
  1183  007E                     wtemp0	set	126
  1184                           
  1185                           	psect	intentry
  1186  0004                     __pintentry:	
  1187                           ;incstack = 0
  1188                           ; Regs used in _isr: [wreg]
  1189                           
  1190  0004                     interrupt_function:
  1191  007E                     saved_w	set	btemp
  1192  0004  00FE               	movwf	btemp
  1193  0005  0E03               	swapf	3,w
  1194  0006  00F1               	movwf	??_isr+1
  1195  0007  080A               	movf	10,w
  1196  0008  00F2               	movwf	??_isr+2
  1197  0009  120A  118A  2815   	ljmp	_isr
  1198                           
  1199                           	psect	config
  1200                           
  1201                           ;Config register CONFIG1 @ 0x2007
  1202                           ;	Oscillator Selection bits
  1203                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1204                           ;	Watchdog Timer Enable bit
  1205                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1206                           ;	Power-up Timer Enable bit
  1207                           ;	PWRTE = ON, PWRT enabled
  1208                           ;	RE3/MCLR pin function select bit
  1209                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1210                           ;	Code Protection bit
  1211                           ;	CP = OFF, Program memory code protection is disabled
  1212                           ;	Data Code Protection bit
  1213                           ;	CPD = OFF, Data memory code protection is disabled
  1214                           ;	Brown Out Reset Selection bits
  1215                           ;	BOREN = OFF, BOR disabled
  1216                           ;	Internal External Switchover bit
  1217                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1218                           ;	Fail-Safe Clock Monitor Enabled bit
  1219                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1220                           ;	Low Voltage Programming Enable bit
  1221                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1222                           ;	In-Circuit Debugger Mode bit
  1223                           ;	DEBUG = 0x1, unprogrammed default
  1224  2007                     	org	8199
  1225  2007  20C4               	dw	8388
  1226                           
  1227                           ;Config register CONFIG2 @ 0x2008
  1228                           ;	Brown-out Reset Selection bit
  1229                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1230                           ;	Flash Program Memory Self Write Enable bits
  1231                           ;	WRT = OFF, Write protection off
  1232  2008                     	org	8200
  1233  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_CONFIG

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     113
                             _ADC_IF
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     113
                         _ADC_CONFIG
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _setup
     _ADC_CONFIG
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 09 09:19:34 2021

    __size_of_ADC_CONFIG 002C           ADC_CONFIG@frec 0073                        _z 0076  
            _SSPSTATbits 0094                       l14 00AE                       _BF 04A0  
                     l18 010E                       l86 00D3                       u10 0106  
                     u11 0105                      l149 00ED                      l921 0088  
                    l931 0094                      l923 008B                      l771 00E4  
                    l781 0100                      l933 0099                      l925 008C  
                    l917 0083                      l773 00E5                      l783 0106  
                    l927 008D                      l919 0086                      l775 00E6  
                    l767 00D5                      l951 00BD                      l943 00AF  
                    l785 010B                      l929 0091                      l937 009E  
                    l777 00E7                      l769 00E3                      l961 00CC  
                    l953 00BE                      l945 00B3                      l779 00EA  
                    l963 00CD                      l955 00BF                      l947 00B4  
                    l957 00C8                      l949 00BB                      l965 00EE  
                    l991 00A3                      l959 00CB                      l967 00F3  
                    l969 00F8                      _GIE 005F                      u167 0108  
                    _isr 0015                      _pot 0075                     _ADIF 0066  
                   ?_isr 0070                     _PEIE 005E                     i1l73 004F  
                   i1l74 003D                     i1l83 007C                     i1l77 0070  
                   i1l69 0073                     i1l79 006A                     u4_20 001B  
                   u4_21 001A                     u5_20 0020                     u5_21 001F  
                   u6_20 0024                     u6_21 0023                     u7_20 0031  
                   u7_21 0030                     u8_20 0035                     u8_21 0034  
                   u9_20 0043                     u9_21 0042                     _main 00EE  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l821 0028  
                  i1l813 0015                    i1l831 0035                    i1l823 0029  
                  i1l815 001B                    i1l841 0057                    i1l833 003B  
                  i1l825 002A                    i1l817 0020                    i1l843 005D  
                  i1l835 003C                    i1l827 002B                    i1l819 0024  
                  i1l845 0064                    i1l837 0043                    i1l829 0031  
                  i1l847 0077                    i1l839 0053                    i1l849 007B  
                  u10_20 0053                    u10_21 0052                    u11_20 0057  
                  u11_21 0056                    u12_20 0070                    u12_21 006F  
                  u13_20 0077                    u13_21 0076                    u17_27 004B  
                  u18_27 0067                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _setup 00AF  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0100                   ??_main 0075  
           ??_ADC_CONFIG 0075                   _ADC_IF 0100                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPBUF 0013  
                 _SSPCON 0014       __end_of_ADC_CONFIG 00AF                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
          __end_of_setup 00D4                  ?_ADC_IF 0070                  ??_setup 0075  
  I2C_Slave_Init@address 0073               __pmaintext 00EE               __pintentry 0004  
                _SSPCON2 0091          __size_of_ADC_IF 000F                  _SSPSTAT 0094  
                __ptext1 00AF                  __ptext2 00D4                  __ptext3 0083  
                __ptext4 0100                  __ptext5 0015             __size_of_isr 006E  
   end_of_initialization 0011           _I2C_Slave_Init 00D4                _TRISCbits 0087  
         __end_of_ADC_IF 010F   __end_of_I2C_Slave_Init 00EE      start_initialization 000F  
            __end_of_isr 0083                 ??_ADC_IF 0073          ?_I2C_Slave_Init 0070  
            __pbssCOMMON 0075                ___latbits 0002           __size_of_setup 0025  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F               _ADC_CONFIG 0083  
       ??_I2C_Slave_Init 0073            __size_of_main 0012               _INTCONbits 000B  
            ?_ADC_CONFIG 0073                 intlevel1 0000               _OSCCONbits 008F  
            _SSPCON2bits 0091               _SSPCONbits 0014  
