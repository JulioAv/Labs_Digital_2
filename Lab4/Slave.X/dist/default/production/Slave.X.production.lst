

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 09 15:22:36 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0014                     _SSPCON	set	20
   364  0008                     _PORTD	set	8
   365  000B                     _INTCONbits	set	11
   366  001E                     _ADRESH	set	30
   367  0013                     _SSPBUF	set	19
   368  0014                     _SSPCONbits	set	20
   369  000C                     _PIR1bits	set	12
   370  001F                     _ADCON0bits	set	31
   371  0063                     _SSPIF	set	99
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  0029                     _RA1	set	41
   375  0031                     _RB1	set	49
   376  0030                     _RB0	set	48
   377  0058                     _RBIF	set	88
   378  0066                     _ADIF	set	102
   379  0091                     _SSPCON2bits	set	145
   380  0087                     _TRISCbits	set	135
   381  0094                     _SSPSTAT	set	148
   382  0093                     _SSPADD	set	147
   383  0091                     _SSPCON2	set	145
   384  0095                     _WPUB	set	149
   385  0081                     _OPTION_REGbits	set	129
   386  0096                     _IOCB	set	150
   387  008C                     _PIE1bits	set	140
   388  008F                     _OSCCONbits	set	143
   389  0088                     _TRISD	set	136
   390  0087                     _TRISC	set	135
   391  0086                     _TRISB	set	134
   392  0085                     _TRISA	set	133
   393  0094                     _SSPSTATbits	set	148
   394  009F                     _ADCON1bits	set	159
   395  0463                     _SSPIE	set	1123
   396  043C                     _TRISC4	set	1084
   397  043B                     _TRISC3	set	1083
   398  04A0                     _BF	set	1184
   399  0189                     _ANSELH	set	393
   400  0188                     _ANSEL	set	392
   401                           
   402                           	psect	cinit
   403  000F                     start_initialization:	
   404                           ; #config settings
   405                           
   406  000F                     __initialization:
   407                           
   408                           ; Clear objects allocated to COMMON
   409  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   410  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   411  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   412  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   413  0013                     end_of_initialization:	
   414                           ;End of C runtime variable initialization code
   415                           
   416  0013                     __end_of__initialization:
   417  0013  0183               	clrf	3
   418  0014  120A  118A  28D9   	ljmp	_main	;jump to C main() function
   419                           
   420                           	psect	bssCOMMON
   421  0076                     __pbssCOMMON:
   422  0076                     _val:
   423  0076                     	ds	1
   424  0077                     _con:
   425  0077                     	ds	1
   426  0078                     _pot:
   427  0078                     	ds	1
   428  0079                     _z:
   429  0079                     	ds	1
   430                           
   431                           	psect	cstackCOMMON
   432  0070                     __pcstackCOMMON:
   433  0070                     ?_I2C_Slave_Init:
   434  0070                     ?_ADC_IF:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ??_isr:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_setup:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0070                     	ds	3
   452  0073                     ??_I2C_Slave_Init:
   453  0073                     ?_ADC_CONFIG:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     ??_ADC_IF:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     I2C_Slave_Init@address:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ADC_CONFIG@frec:	
   463                           ; 1 bytes @ 0x3
   464                           
   465                           
   466                           ; 2 bytes @ 0x3
   467  0073                     	ds	2
   468  0075                     ??_ADC_CONFIG:
   469  0075                     ??_setup:	
   470                           ; 1 bytes @ 0x5
   471                           
   472  0075                     ??_main:	
   473                           ; 1 bytes @ 0x5
   474                           
   475                           
   476                           ; 1 bytes @ 0x5
   477  0075                     	ds	1
   478                           
   479                           	psect	maintext
   480  00D9                     __pmaintext:	
   481 ;;
   482 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   483 ;;
   484 ;; *************** function _main *****************
   485 ;; Defined at:
   486 ;;		line 112 in file "Slave_I2C.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : B00/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          1       0       0       0       0
   503 ;;      Totals:         1       0       0       0       0
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels required when called:    3
   506 ;; This function calls:
   507 ;;		_ADC_IF
   508 ;;		_setup
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  00D9                     _main:
   517  00D9                     l1065:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;Slave_I2C.c: 113:     setup();
   523  00D9  120A  118A  2098  120A  118A  	fcall	_setup
   524  00DE                     l1067:
   525                           
   526                           ;Slave_I2C.c: 116:         if(RA1==0){
   527  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   528  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   529  00E0  1885               	btfsc	5,1	;volatile
   530  00E1  28E3               	goto	u271
   531  00E2  28E4               	goto	u270
   532  00E3                     u271:
   533  00E3  28EE               	goto	l116
   534  00E4                     u270:
   535  00E4                     l1069:
   536                           
   537                           ;Slave_I2C.c: 118:                 ADC_IF();
   538  00E4  120A  118A  2153  120A  118A  	fcall	_ADC_IF
   539  00E9                     l1071:
   540                           
   541                           ;Slave_I2C.c: 119:                 val = pot;
   542  00E9  0878               	movf	_pot,w
   543  00EA  00F5               	movwf	??_main
   544  00EB  0875               	movf	??_main,w
   545  00EC  00F6               	movwf	_val
   546  00ED  28E4               	goto	l1069
   547  00EE                     l116:	
   548                           ;Slave_I2C.c: 122:         else if(RA1==1){
   549                           
   550  00EE  1C85               	btfss	5,1	;volatile
   551  00EF  28F1               	goto	u281
   552  00F0  28F2               	goto	u280
   553  00F1                     u281:
   554  00F1  28DE               	goto	l1067
   555  00F2                     u280:
   556  00F2                     l1073:
   557                           
   558                           ;Slave_I2C.c: 124:                 PORTD = con;
   559  00F2  0877               	movf	_con,w
   560  00F3  0088               	movwf	8	;volatile
   561                           
   562                           ;Slave_I2C.c: 125:                 val = con;
   563  00F4  0877               	movf	_con,w
   564  00F5  00F5               	movwf	??_main
   565  00F6  0875               	movf	??_main,w
   566  00F7  00F6               	movwf	_val
   567  00F8                     l1075:
   568                           
   569                           ;Slave_I2C.c: 126:                 if(con==16){
   570  00F8  3010               	movlw	16
   571  00F9  0677               	xorwf	_con,w
   572  00FA  1D03               	btfss	3,2
   573  00FB  28FD               	goto	u291
   574  00FC  28FE               	goto	u290
   575  00FD                     u291:
   576  00FD  2900               	goto	l1079
   577  00FE                     u290:
   578  00FE                     l1077:
   579                           
   580                           ;Slave_I2C.c: 127:                     con = 0;
   581  00FE  01F7               	clrf	_con
   582                           
   583                           ;Slave_I2C.c: 128:                 }
   584  00FF  28F2               	goto	l1073
   585  0100                     l1079:
   586  0100  0A77               	incf	_con,w
   587  0101  1D03               	btfss	3,2
   588  0102  2904               	goto	u301
   589  0103  2905               	goto	u300
   590  0104                     u301:
   591  0104  28F2               	goto	l1073
   592  0105                     u300:
   593  0105                     l1081:
   594                           
   595                           ;Slave_I2C.c: 130:                     con = 15;
   596  0105  300F               	movlw	15
   597  0106  00F5               	movwf	??_main
   598  0107  0875               	movf	??_main,w
   599  0108  00F7               	movwf	_con
   600  0109  28F2               	goto	l1073
   601  010A  120A  118A  280C   	ljmp	start
   602  010D                     __end_of_main:
   603                           
   604                           	psect	text1
   605  0098                     __ptext1:	
   606 ;; *************** function _setup *****************
   607 ;; Defined at:
   608 ;;		line 79 in file "Slave_I2C.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0
   625 ;;      Totals:         0       0       0       0       0
   626 ;;Total ram usage:        0 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    2
   629 ;; This function calls:
   630 ;;		_ADC_CONFIG
   631 ;;		_I2C_Slave_Init
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           
   638                           ;psect for function _setup
   639  0098                     _setup:
   640  0098                     l1023:	
   641                           ;incstack = 0
   642                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   643                           
   644                           
   645                           ;Slave_I2C.c: 80:     ANSEL = 0x01;
   646  0098  3001               	movlw	1
   647  0099  1683               	bsf	3,5	;RP0=1, select bank3
   648  009A  1703               	bsf	3,6	;RP1=1, select bank3
   649  009B  0088               	movwf	8	;volatile
   650  009C                     l1025:
   651                           
   652                           ;Slave_I2C.c: 81:     ANSELH = 0x00;
   653  009C  0189               	clrf	9	;volatile
   654  009D                     l1027:
   655                           
   656                           ;Slave_I2C.c: 83:     TRISA = 0x03;
   657  009D  3003               	movlw	3
   658  009E  1683               	bsf	3,5	;RP0=1, select bank1
   659  009F  1303               	bcf	3,6	;RP1=0, select bank1
   660  00A0  0085               	movwf	5	;volatile
   661  00A1                     l1029:
   662                           
   663                           ;Slave_I2C.c: 84:     TRISB = 0x03;
   664  00A1  3003               	movlw	3
   665  00A2  0086               	movwf	6	;volatile
   666  00A3                     l1031:
   667                           
   668                           ;Slave_I2C.c: 85:     TRISC = 0x00;
   669  00A3  0187               	clrf	7	;volatile
   670  00A4                     l1033:
   671                           
   672                           ;Slave_I2C.c: 86:     TRISD = 0x00;
   673  00A4  0188               	clrf	8	;volatile
   674  00A5                     l1035:
   675                           
   676                           ;Slave_I2C.c: 88:     OSCCONbits.IRCF = 0B111;
   677  00A5  3070               	movlw	112
   678  00A6  048F               	iorwf	15,f	;volatile
   679  00A7                     l1037:
   680                           
   681                           ;Slave_I2C.c: 89:     OSCCONbits.SCS = 1;
   682  00A7  140F               	bsf	15,0	;volatile
   683  00A8                     l1039:
   684                           
   685                           ;Slave_I2C.c: 90:     OSCCONbits.OSTS = 0;
   686  00A8  118F               	bcf	15,3	;volatile
   687  00A9                     l1041:
   688                           
   689                           ;Slave_I2C.c: 92:     if(RA1==0){
   690  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   691  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   692  00AB  1885               	btfsc	5,1	;volatile
   693  00AC  28AE               	goto	u251
   694  00AD  28AF               	goto	u250
   695  00AE                     u251:
   696  00AE  28C4               	goto	l107
   697  00AF                     u250:
   698  00AF                     l1043:
   699                           
   700                           ;Slave_I2C.c: 93:         ADC_CONFIG(8);
   701  00AF  3008               	movlw	8
   702  00B0  00F3               	movwf	ADC_CONFIG@frec
   703  00B1  3000               	movlw	0
   704  00B2  00F4               	movwf	ADC_CONFIG@frec+1
   705  00B3  120A  118A  210D  120A  118A  	fcall	_ADC_CONFIG
   706  00B8                     l1045:
   707                           
   708                           ;Slave_I2C.c: 94:         PIE1bits.ADIE = 1;
   709  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   710  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   711  00BA  170C               	bsf	12,6	;volatile
   712  00BB                     l1047:
   713                           
   714                           ;Slave_I2C.c: 95:         INTCONbits.PEIE = 1;
   715  00BB  170B               	bsf	11,6	;volatile
   716  00BC                     l1049:
   717                           
   718                           ;Slave_I2C.c: 96:         INTCONbits.GIE = 1;
   719  00BC  178B               	bsf	11,7	;volatile
   720  00BD                     l1051:
   721                           
   722                           ;Slave_I2C.c: 98:         I2C_Slave_Init(0x50);
   723  00BD  3050               	movlw	80
   724  00BE  120A  118A  2139  120A  118A  	fcall	_I2C_Slave_Init
   725                           
   726                           ;Slave_I2C.c: 99:     }
   727  00C3  28D8               	goto	l110
   728  00C4                     l107:	
   729                           ;Slave_I2C.c: 100:     else if(RA1==1){
   730                           
   731  00C4  1C85               	btfss	5,1	;volatile
   732  00C5  28C7               	goto	u261
   733  00C6  28C8               	goto	u260
   734  00C7                     u261:
   735  00C7  28D8               	goto	l110
   736  00C8                     u260:
   737  00C8                     l1053:
   738                           
   739                           ;Slave_I2C.c: 102:         INTCONbits.RBIE = 1;
   740  00C8  158B               	bsf	11,3	;volatile
   741  00C9                     l1055:
   742                           
   743                           ;Slave_I2C.c: 103:         IOCB = 0x03;
   744  00C9  3003               	movlw	3
   745  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   746  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   747  00CC  0096               	movwf	22	;volatile
   748  00CD                     l1057:
   749                           
   750                           ;Slave_I2C.c: 104:         OPTION_REGbits.nRBPU = 0;
   751  00CD  1381               	bcf	1,7	;volatile
   752  00CE                     l1059:
   753                           
   754                           ;Slave_I2C.c: 105:         OPTION_REGbits.INTEDG = 1;
   755  00CE  1701               	bsf	1,6	;volatile
   756                           
   757                           ;Slave_I2C.c: 106:         WPUB = 0x03;
   758  00CF  3003               	movlw	3
   759  00D0  0095               	movwf	21	;volatile
   760  00D1                     l1061:
   761                           
   762                           ;Slave_I2C.c: 107:         con = 0;
   763  00D1  01F7               	clrf	_con
   764  00D2                     l1063:
   765                           
   766                           ;Slave_I2C.c: 108:         I2C_Slave_Init(0x30);
   767  00D2  3030               	movlw	48
   768  00D3  120A  118A  2139  120A  118A  	fcall	_I2C_Slave_Init
   769  00D8                     l110:
   770  00D8  0008               	return
   771  00D9                     __end_of_setup:
   772                           
   773                           	psect	text2
   774  0139                     __ptext2:	
   775 ;; *************** function _I2C_Slave_Init *****************
   776 ;; Defined at:
   777 ;;		line 93 in file "I2C_2.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  address         1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  address         1    3[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_setup
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _I2C_Slave_Init
   807  0139                     _I2C_Slave_Init:
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _I2C_Slave_Init: [wreg]
   811                           ;I2C_Slave_Init@address stored from wreg
   812  0139  00F3               	movwf	I2C_Slave_Init@address
   813  013A                     l803:
   814                           
   815                           ;I2C_2.c: 93: void I2C_Slave_Init(uint8_t address);I2C_2.c: 94: {;I2C_2.c: 95:     SSPAD
      +                          D = address;
   816  013A  0873               	movf	I2C_Slave_Init@address,w
   817  013B  1683               	bsf	3,5	;RP0=1, select bank1
   818  013C  1303               	bcf	3,6	;RP1=0, select bank1
   819  013D  0093               	movwf	19	;volatile
   820                           
   821                           ;I2C_2.c: 96:     SSPCON = 0x36;
   822  013E  3036               	movlw	54
   823  013F  1283               	bcf	3,5	;RP0=0, select bank0
   824  0140  1303               	bcf	3,6	;RP1=0, select bank0
   825  0141  0094               	movwf	20	;volatile
   826                           
   827                           ;I2C_2.c: 97:     SSPSTAT = 0x80;
   828  0142  3080               	movlw	128
   829  0143  1683               	bsf	3,5	;RP0=1, select bank1
   830  0144  1303               	bcf	3,6	;RP1=0, select bank1
   831  0145  0094               	movwf	20	;volatile
   832                           
   833                           ;I2C_2.c: 98:     SSPCON2 = 0x01;
   834  0146  3001               	movlw	1
   835  0147  0091               	movwf	17	;volatile
   836  0148                     l805:
   837                           
   838                           ;I2C_2.c: 99:     TRISC3 = 1;
   839  0148  1587               	bsf	7,3	;volatile
   840  0149                     l807:
   841                           
   842                           ;I2C_2.c: 100:     TRISC4 = 1;
   843  0149  1607               	bsf	7,4	;volatile
   844  014A                     l809:
   845                           
   846                           ;I2C_2.c: 101:     GIE = 1;
   847  014A  178B               	bsf	11,7	;volatile
   848  014B                     l811:
   849                           
   850                           ;I2C_2.c: 102:     PEIE = 1;
   851  014B  170B               	bsf	11,6	;volatile
   852  014C                     l813:
   853                           
   854                           ;I2C_2.c: 103:     SSPIF = 0;
   855  014C  1283               	bcf	3,5	;RP0=0, select bank0
   856  014D  1303               	bcf	3,6	;RP1=0, select bank0
   857  014E  118C               	bcf	12,3	;volatile
   858  014F                     l815:
   859                           
   860                           ;I2C_2.c: 104:     SSPIE = 1;
   861  014F  1683               	bsf	3,5	;RP0=1, select bank1
   862  0150  1303               	bcf	3,6	;RP1=0, select bank1
   863  0151  158C               	bsf	12,3	;volatile
   864  0152                     l185:
   865  0152  0008               	return
   866  0153                     __end_of_I2C_Slave_Init:
   867                           
   868                           	psect	text3
   869  010D                     __ptext3:	
   870 ;; *************** function _ADC_CONFIG *****************
   871 ;; Defined at:
   872 ;;		line 14 in file "ADC.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  frec            2    3[COMMON] int 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         2       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0
   889 ;;      Totals:         2       0       0       0       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    1
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_setup
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           
   901                           ;psect for function _ADC_CONFIG
   902  010D                     _ADC_CONFIG:
   903  010D                     l997:	
   904                           ;incstack = 0
   905                           ; Regs used in _ADC_CONFIG: [wreg-fsr0h+status,2+status,0]
   906                           
   907                           
   908                           ;ADC.c: 16:     ADCON0bits.ADON = 1;
   909  010D  1283               	bcf	3,5	;RP0=0, select bank0
   910  010E  1303               	bcf	3,6	;RP1=0, select bank0
   911  010F  141F               	bsf	31,0	;volatile
   912  0110                     l999:
   913                           
   914                           ;ADC.c: 17:     ADCON0bits.CHS = 0;
   915  0110  30C3               	movlw	-61
   916  0111  059F               	andwf	31,f	;volatile
   917  0112                     l1001:
   918                           
   919                           ;ADC.c: 18:     ADCON1bits.ADFM = 0;
   920  0112  1683               	bsf	3,5	;RP0=1, select bank1
   921  0113  1303               	bcf	3,6	;RP1=0, select bank1
   922  0114  139F               	bcf	31,7	;volatile
   923  0115                     l1003:
   924                           
   925                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
   926  0115  121F               	bcf	31,4	;volatile
   927  0116                     l1005:
   928                           
   929                           ;ADC.c: 20:     ADCON1bits.VCFG1 = 0;
   930  0116  129F               	bcf	31,5	;volatile
   931  0117                     l1007:
   932                           
   933                           ;ADC.c: 21:     ADCON0bits.GO = 0;
   934  0117  1283               	bcf	3,5	;RP0=0, select bank0
   935  0118  1303               	bcf	3,6	;RP1=0, select bank0
   936  0119  109F               	bcf	31,1	;volatile
   937                           
   938                           ;ADC.c: 23:     switch(frec){
   939  011A  2928               	goto	l1017
   940  011B                     l1009:
   941                           
   942                           ;ADC.c: 25:             ADCON0bits.ADCS = 0B00;
   943  011B  303F               	movlw	-193
   944  011C  059F               	andwf	31,f	;volatile
   945                           
   946                           ;ADC.c: 26:             break;
   947  011D  2938               	goto	l14
   948  011E                     l1011:
   949                           
   950                           ;ADC.c: 28:             ADCON0bits.ADCS = 0B01;
   951  011E  081F               	movf	31,w	;volatile
   952  011F  393F               	andlw	-193
   953  0120  3840               	iorlw	64
   954  0121  009F               	movwf	31	;volatile
   955                           
   956                           ;ADC.c: 29:             break;
   957  0122  2938               	goto	l14
   958  0123                     l1013:
   959                           
   960                           ;ADC.c: 31:             ADCON0bits.ADCS = 0B10;
   961  0123  081F               	movf	31,w	;volatile
   962  0124  393F               	andlw	-193
   963  0125  3880               	iorlw	128
   964  0126  009F               	movwf	31	;volatile
   965                           
   966                           ;ADC.c: 32:             break;
   967  0127  2938               	goto	l14
   968  0128                     l1017:
   969                           
   970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 1, Range of values is 0 to 0
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte            4     3 (average)
   976                           ; direct_byte           11     8 (fixed)
   977                           ; jumptable            260     6 (fixed)
   978                           ;	Chosen strategy is simple_byte
   979  0128  0874               	movf	ADC_CONFIG@frec+1,w
   980  0129  3A00               	xorlw	0	; case 0
   981  012A  1903               	skipnz
   982  012B  292D               	goto	l1103
   983  012C  2938               	goto	l14
   984  012D                     l1103:
   985                           
   986                           ; Switch size 1, requested type "simple"
   987                           ; Number of cases is 3, Range of values is 1 to 8
   988                           ; switch strategies available:
   989                           ; Name         Instructions Cycles
   990                           ; simple_byte           10     6 (average)
   991                           ; direct_byte           35    11 (fixed)
   992                           ; jumptable            263     9 (fixed)
   993                           ;	Chosen strategy is simple_byte
   994  012D  0873               	movf	ADC_CONFIG@frec,w
   995  012E  3A01               	xorlw	1	; case 1
   996  012F  1903               	skipnz
   997  0130  291B               	goto	l1009
   998  0131  3A05               	xorlw	5	; case 4
   999  0132  1903               	skipnz
  1000  0133  291E               	goto	l1011
  1001  0134  3A0C               	xorlw	12	; case 8
  1002  0135  1903               	skipnz
  1003  0136  2923               	goto	l1013
  1004  0137  2938               	goto	l14
  1005  0138                     l14:
  1006  0138  0008               	return
  1007  0139                     __end_of_ADC_CONFIG:
  1008                           
  1009                           	psect	text4
  1010  0153                     __ptext4:	
  1011 ;; *************** function _ADC_IF *****************
  1012 ;; Defined at:
  1013 ;;		line 36 in file "ADC.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0
  1029 ;;      Temps:          1       0       0       0       0
  1030 ;;      Totals:         1       0       0       0       0
  1031 ;;Total ram usage:        1 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _ADC_IF
  1043  0153                     _ADC_IF:
  1044  0153                     l817:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _ADC_IF: [wreg]
  1047                           
  1048                           
  1049                           ;ADC.c: 37:     if(ADCON0bits.GO == 0){
  1050  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0155  189F               	btfsc	31,1	;volatile
  1053  0156  2958               	goto	u11
  1054  0157  2959               	goto	u10
  1055  0158                     u11:
  1056  0158  2961               	goto	l18
  1057  0159                     u10:
  1058  0159                     l819:
  1059                           
  1060                           ;ADC.c: 38:             _delay((unsigned long)((50)*(1000000/4000000.0)));
  1061  0159  3003               	movlw	3
  1062  015A  00F3               	movwf	??_ADC_IF
  1063  015B                     u317:
  1064  015B  0BF3               	decfsz	??_ADC_IF,f
  1065  015C  295B               	goto	u317
  1066  015D  295E               	nop2
  1067  015E                     l821:
  1068                           
  1069                           ;ADC.c: 39:             ADCON0bits.GO = 1;
  1070  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1071  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0160  149F               	bsf	31,1	;volatile
  1073  0161                     l18:
  1074  0161  0008               	return
  1075  0162                     __end_of_ADC_IF:
  1076                           
  1077                           	psect	text5
  1078  0017                     __ptext5:	
  1079 ;; *************** function _isr *****************
  1080 ;; Defined at:
  1081 ;;		line 31 in file "Slave_I2C.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          3       0       0       0       0
  1098 ;;      Totals:         3       0       0       0       0
  1099 ;;Total ram usage:        3 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		Interrupt level 1
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _isr
  1110  0017                     _isr:
  1111  0017                     i1l869:
  1112                           
  1113                           ;Slave_I2C.c: 32:     if(PIR1bits.SSPIF == 1){
  1114  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0019  1D8C               	btfss	12,3	;volatile
  1117  001A  281C               	goto	u6_21
  1118  001B  281D               	goto	u6_20
  1119  001C                     u6_21:
  1120  001C  2875               	goto	i1l87
  1121  001D                     u6_20:
  1122  001D                     i1l871:
  1123                           
  1124                           ;Slave_I2C.c: 34:         SSPCONbits.CKP = 0;
  1125  001D  1214               	bcf	20,4	;volatile
  1126                           
  1127                           ;Slave_I2C.c: 36:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1128  001E  1B14               	btfsc	20,6	;volatile
  1129  001F  2821               	goto	u7_21
  1130  0020  2822               	goto	u7_20
  1131  0021                     u7_21:
  1132  0021  2826               	goto	i1l875
  1133  0022                     u7_20:
  1134  0022                     i1l873:
  1135  0022  1F94               	btfss	20,7	;volatile
  1136  0023  2825               	goto	u8_21
  1137  0024  2826               	goto	u8_20
  1138  0025                     u8_21:
  1139  0025  282D               	goto	i1l883
  1140  0026                     u8_20:
  1141  0026                     i1l875:
  1142                           
  1143                           ;Slave_I2C.c: 37:             z = SSPBUF;
  1144  0026  0813               	movf	19,w	;volatile
  1145  0027  00F0               	movwf	??_isr
  1146  0028  0870               	movf	??_isr,w
  1147  0029  00F9               	movwf	_z
  1148  002A                     i1l877:
  1149                           
  1150                           ;Slave_I2C.c: 38:             SSPCONbits.SSPOV = 0;
  1151  002A  1314               	bcf	20,6	;volatile
  1152  002B                     i1l879:
  1153                           
  1154                           ;Slave_I2C.c: 39:             SSPCONbits.WCOL = 0;
  1155  002B  1394               	bcf	20,7	;volatile
  1156  002C                     i1l881:
  1157                           
  1158                           ;Slave_I2C.c: 40:             SSPCONbits.CKP = 1;
  1159  002C  1614               	bsf	20,4	;volatile
  1160  002D                     i1l883:
  1161                           
  1162                           ;Slave_I2C.c: 43:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1163  002D  1683               	bsf	3,5	;RP0=1, select bank1
  1164  002E  1303               	bcf	3,6	;RP1=0, select bank1
  1165  002F  1A94               	btfsc	20,5	;volatile
  1166  0030  2832               	goto	u9_21
  1167  0031  2833               	goto	u9_20
  1168  0032                     u9_21:
  1169  0032  2851               	goto	i1l91
  1170  0033                     u9_20:
  1171  0033                     i1l885:
  1172  0033  1914               	btfsc	20,2	;volatile
  1173  0034  2836               	goto	u10_21
  1174  0035  2837               	goto	u10_20
  1175  0036                     u10_21:
  1176  0036  2851               	goto	i1l91
  1177  0037                     u10_20:
  1178  0037                     i1l887:
  1179                           
  1180                           ;Slave_I2C.c: 45:             z = SSPBUF;
  1181  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0039  0813               	movf	19,w	;volatile
  1184  003A  00F0               	movwf	??_isr
  1185  003B  0870               	movf	??_isr,w
  1186  003C  00F9               	movwf	_z
  1187  003D                     i1l889:
  1188                           
  1189                           ;Slave_I2C.c: 47:             PIR1bits.SSPIF = 0;
  1190  003D  118C               	bcf	12,3	;volatile
  1191  003E                     i1l891:
  1192                           
  1193                           ;Slave_I2C.c: 48:             SSPCONbits.CKP = 1;
  1194  003E  1614               	bsf	20,4	;volatile
  1195  003F                     i1l92:	
  1196                           ;Slave_I2C.c: 49:             while(!SSPSTATbits.BF);
  1197                           
  1198  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0041  1C14               	btfss	20,0	;volatile
  1201  0042  2844               	goto	u11_21
  1202  0043  2845               	goto	u11_20
  1203  0044                     u11_21:
  1204  0044  283F               	goto	i1l92
  1205  0045                     u11_20:
  1206  0045                     i1l893:
  1207                           
  1208                           ;Slave_I2C.c: 50:             z = SSPBUF;
  1209  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0047  0813               	movf	19,w	;volatile
  1212  0048  00F0               	movwf	??_isr
  1213  0049  0870               	movf	??_isr,w
  1214  004A  00F9               	movwf	_z
  1215                           
  1216                           ;Slave_I2C.c: 51:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1217  004B  30A6               	movlw	166
  1218  004C  00F0               	movwf	??_isr
  1219  004D                     u32_27:
  1220  004D  0BF0               	decfsz	??_isr,f
  1221  004E  284D               	goto	u32_27
  1222  004F  0000               	nop
  1223                           
  1224                           ;Slave_I2C.c: 53:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1225  0050  2872               	goto	i1l95
  1226  0051                     i1l91:
  1227  0051  1A94               	btfsc	20,5	;volatile
  1228  0052  2854               	goto	u12_21
  1229  0053  2855               	goto	u12_20
  1230  0054                     u12_21:
  1231  0054  2872               	goto	i1l95
  1232  0055                     u12_20:
  1233  0055                     i1l895:
  1234  0055  1D14               	btfss	20,2	;volatile
  1235  0056  2858               	goto	u13_21
  1236  0057  2859               	goto	u13_20
  1237  0058                     u13_21:
  1238  0058  2872               	goto	i1l95
  1239  0059                     u13_20:
  1240  0059                     i1l897:
  1241                           
  1242                           ;Slave_I2C.c: 54:             z = SSPBUF;
  1243  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1244  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1245  005B  0813               	movf	19,w	;volatile
  1246  005C  00F0               	movwf	??_isr
  1247  005D  0870               	movf	??_isr,w
  1248  005E  00F9               	movwf	_z
  1249  005F                     i1l899:
  1250                           
  1251                           ;Slave_I2C.c: 55:             BF = 0;
  1252  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0060  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0061  1014               	bcf	20,0	;volatile
  1255                           
  1256                           ;Slave_I2C.c: 56:             SSPBUF = val;
  1257  0062  0876               	movf	_val,w
  1258  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0065  0093               	movwf	19	;volatile
  1261  0066                     i1l901:
  1262                           
  1263                           ;Slave_I2C.c: 57:             SSPCONbits.CKP = 1;
  1264  0066  1614               	bsf	20,4	;volatile
  1265                           
  1266                           ;Slave_I2C.c: 58:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1267  0067  30A6               	movlw	166
  1268  0068  00F0               	movwf	??_isr
  1269  0069                     u33_27:
  1270  0069  0BF0               	decfsz	??_isr,f
  1271  006A  2869               	goto	u33_27
  1272  006B  0000               	nop
  1273  006C                     i1l97:	
  1274                           ;Slave_I2C.c: 59:             while(SSPSTATbits.BF);
  1275                           
  1276  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1277  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1278  006E  1814               	btfsc	20,0	;volatile
  1279  006F  2871               	goto	u14_21
  1280  0070  2872               	goto	u14_20
  1281  0071                     u14_21:
  1282  0071  286C               	goto	i1l97
  1283  0072                     u14_20:
  1284  0072                     i1l95:
  1285                           
  1286                           ;Slave_I2C.c: 62:         PIR1bits.SSPIF = 0;
  1287  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0074  118C               	bcf	12,3	;volatile
  1290  0075                     i1l87:	
  1291                           ;Slave_I2C.c: 63:     }
  1292                           
  1293                           
  1294                           ;Slave_I2C.c: 64:     if (ADIF){
  1295  0075  1F0C               	btfss	12,6	;volatile
  1296  0076  2878               	goto	u15_21
  1297  0077  2879               	goto	u15_20
  1298  0078                     u15_21:
  1299  0078  287E               	goto	i1l907
  1300  0079                     u15_20:
  1301  0079                     i1l903:
  1302                           
  1303                           ;Slave_I2C.c: 65:         pot = ADRESH;
  1304  0079  081E               	movf	30,w	;volatile
  1305  007A  00F0               	movwf	??_isr
  1306  007B  0870               	movf	??_isr,w
  1307  007C  00F8               	movwf	_pot
  1308  007D                     i1l905:
  1309                           
  1310                           ;Slave_I2C.c: 66:         ADIF = 0;
  1311  007D  130C               	bcf	12,6	;volatile
  1312  007E                     i1l907:
  1313                           
  1314                           ;Slave_I2C.c: 68:     if(RBIF){
  1315  007E  1C0B               	btfss	11,0	;volatile
  1316  007F  2881               	goto	u16_21
  1317  0080  2882               	goto	u16_20
  1318  0081                     u16_21:
  1319  0081  2891               	goto	i1l104
  1320  0082                     u16_20:
  1321  0082                     i1l909:
  1322                           
  1323                           ;Slave_I2C.c: 69:         if(RB0==0){
  1324  0082  1806               	btfsc	6,0	;volatile
  1325  0083  2885               	goto	u17_21
  1326  0084  2886               	goto	u17_20
  1327  0085                     u17_21:
  1328  0085  288A               	goto	i1l913
  1329  0086                     u17_20:
  1330  0086                     i1l911:
  1331                           
  1332                           ;Slave_I2C.c: 70:             con++;
  1333  0086  3001               	movlw	1
  1334  0087  00F0               	movwf	??_isr
  1335  0088  0870               	movf	??_isr,w
  1336  0089  07F7               	addwf	_con,f
  1337  008A                     i1l913:
  1338                           
  1339                           ;Slave_I2C.c: 72:         if(RB1==0){
  1340  008A  1886               	btfsc	6,1	;volatile
  1341  008B  288D               	goto	u18_21
  1342  008C  288E               	goto	u18_20
  1343  008D                     u18_21:
  1344  008D  2890               	goto	i1l917
  1345  008E                     u18_20:
  1346  008E                     i1l915:
  1347                           
  1348                           ;Slave_I2C.c: 73:             con--;
  1349  008E  3001               	movlw	1
  1350  008F  02F7               	subwf	_con,f
  1351  0090                     i1l917:
  1352                           
  1353                           ;Slave_I2C.c: 75:         RBIF = 0;
  1354  0090  100B               	bcf	11,0	;volatile
  1355  0091                     i1l104:
  1356  0091  0872               	movf	??_isr+2,w
  1357  0092  008A               	movwf	10
  1358  0093  0E71               	swapf	??_isr+1,w
  1359  0094  0083               	movwf	3
  1360  0095  0EFE               	swapf	btemp,f
  1361  0096  0E7E               	swapf	btemp,w
  1362  0097  0009               	retfie
  1363  0098                     __end_of_isr:
  1364  007E                     btemp	set	126	;btemp
  1365  007E                     wtemp0	set	126
  1366                           
  1367                           	psect	intentry
  1368  0004                     __pintentry:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _isr: [wreg+status,2+status,0]
  1371                           
  1372  0004                     interrupt_function:
  1373  007E                     saved_w	set	btemp
  1374  0004  00FE               	movwf	btemp
  1375  0005  0E03               	swapf	3,w
  1376  0006  00F1               	movwf	??_isr+1
  1377  0007  080A               	movf	10,w
  1378  0008  00F2               	movwf	??_isr+2
  1379  0009  120A  118A  2817   	ljmp	_isr
  1380                           
  1381                           	psect	config
  1382                           
  1383                           ;Config register CONFIG1 @ 0x2007
  1384                           ;	Oscillator Selection bits
  1385                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1386                           ;	Watchdog Timer Enable bit
  1387                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1388                           ;	Power-up Timer Enable bit
  1389                           ;	PWRTE = ON, PWRT enabled
  1390                           ;	RE3/MCLR pin function select bit
  1391                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1392                           ;	Code Protection bit
  1393                           ;	CP = OFF, Program memory code protection is disabled
  1394                           ;	Data Code Protection bit
  1395                           ;	CPD = OFF, Data memory code protection is disabled
  1396                           ;	Brown Out Reset Selection bits
  1397                           ;	BOREN = OFF, BOR disabled
  1398                           ;	Internal External Switchover bit
  1399                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1400                           ;	Fail-Safe Clock Monitor Enabled bit
  1401                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1402                           ;	Low Voltage Programming Enable bit
  1403                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1404                           ;	In-Circuit Debugger Mode bit
  1405                           ;	DEBUG = 0x1, unprogrammed default
  1406  2007                     	org	8199
  1407  2007  20C4               	dw	8388
  1408                           
  1409                           ;Config register CONFIG2 @ 0x2008
  1410                           ;	Brown-out Reset Selection bit
  1411                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1412                           ;	Flash Program Memory Self Write Enable bits
  1413                           ;	WRT = OFF, Write protection off
  1414  2008                     	org	8200
  1415  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC_CONFIG

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     113
                                              5 COMMON     1     1      0
                             _ADC_IF
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     113
                         _ADC_CONFIG
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_CONFIG                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_IF                                               1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_IF
   _setup
     _ADC_CONFIG
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 09 15:22:36 2021

    __size_of_ADC_CONFIG 002C           ADC_CONFIG@frec 0073                        _z 0079  
            _SSPSTATbits 0094                       l14 0138                       _BF 04A0  
                     l18 0161                       u10 0159                       u11 0158  
                    l110 00D8                      l107 00C4                      l116 00EE  
                    l185 0152                      l811 014B                      l803 013A  
                    l821 015E                      l813 014C                      l805 0148  
                    l815 014F                      l807 0149                      l817 0153  
                    l809 014A                      l819 0159                      _GIE 005F  
                    l997 010D                      l999 0110                      _RA1 0029  
                    _RB0 0030                      _RB1 0031                      u300 0105  
                    u301 0104                      u250 00AF                      u251 00AE  
                    u260 00C8                      u317 015B                      u261 00C7  
                    u270 00E4                      u271 00E3                      u280 00F2  
                    u281 00F1                      u290 00FE                      u291 00FD  
                    _con 0077                      _isr 0017                      _val 0076  
                    _pot 0078                     l1001 0112                     l1011 011E  
                   l1003 0115                     l1013 0123                     l1005 0116  
                   l1103 012D                     l1007 0117                     l1031 00A3  
                   l1023 0098                     l1009 011B                     l1017 0128  
                   l1041 00A9                     l1033 00A4                     l1025 009C  
                   l1051 00BD                     l1043 00AF                     l1035 00A5  
                   l1027 009D                     l1061 00D1                     l1053 00C8  
                   l1045 00B8                     l1037 00A7                     l1029 00A1  
                   l1063 00D2                     l1055 00C9                     l1047 00BB  
                   l1039 00A8                     l1071 00E9                     l1057 00CD  
                   l1049 00BC                     l1081 0105                     l1073 00F2  
                   l1065 00D9                     l1059 00CE                     l1075 00F8  
                   l1067 00DE                     l1077 00FE                     l1069 00E4  
                   l1079 0100                     _ADIF 0066                     ?_isr 0070  
                   _IOCB 0096                     _PEIE 005E                     _RBIF 0058  
                   i1l91 0051                     i1l92 003F                     i1l95 0072  
                   i1l87 0075                     i1l97 006C                     _WPUB 0095  
                   u6_20 001D                     u6_21 001C                     u7_20 0022  
                   u7_21 0021                     u8_20 0026                     u8_21 0025  
                   u9_20 0033                     u9_21 0032                     _main 00D9  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l104 0091  
                  i1l901 0066                    i1l911 0086                    i1l903 0079  
                  i1l913 008A                    i1l905 007D                    i1l915 008E  
                  i1l907 007E                    i1l917 0090                    i1l909 0082  
                  i1l871 001D                    i1l881 002C                    i1l873 0022  
                  i1l891 003E                    i1l883 002D                    i1l875 0026  
                  i1l893 0045                    i1l885 0033                    i1l877 002A  
                  i1l869 0017                    i1l895 0055                    i1l887 0037  
                  i1l879 002B                    i1l897 0059                    i1l889 003D  
                  i1l899 005F                    u10_20 0037                    u10_21 0036  
                  u11_20 0045                    u11_21 0044                    u12_20 0055  
                  u12_21 0054                    u13_20 0059                    u13_21 0058  
                  u14_20 0072                    u14_21 0071                    u15_20 0079  
                  u15_21 0078                    u16_20 0082                    u16_21 0081  
                  u32_27 004D                    u17_20 0086                    u17_21 0085  
                  u33_27 0069                    u18_20 008E                    u18_21 008D  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063                    _setup 0098                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 010D                   ??_main 0075             ??_ADC_CONFIG 0075  
                 _ADC_IF 0153                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
     __end_of_ADC_CONFIG 0139                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A            __end_of_setup 00D9  
         _OPTION_REGbits 0081                  ?_ADC_IF 0070                  ??_setup 0075  
  I2C_Slave_Init@address 0073               __pmaintext 00D9               __pintentry 0004  
                _SSPCON2 0091          __size_of_ADC_IF 000F                  _SSPSTAT 0094  
                __ptext1 0098                  __ptext2 0139                  __ptext3 010D  
                __ptext4 0153                  __ptext5 0017             __size_of_isr 0081  
   end_of_initialization 0013           _I2C_Slave_Init 0139                _TRISCbits 0087  
         __end_of_ADC_IF 0162   __end_of_I2C_Slave_Init 0153      start_initialization 000F  
            __end_of_isr 0098                 ??_ADC_IF 0073          ?_I2C_Slave_Init 0070  
            __pbssCOMMON 0076                ___latbits 0002           __size_of_setup 0041  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F               _ADC_CONFIG 010D  
       ??_I2C_Slave_Init 0073            __size_of_main 0034               _INTCONbits 000B  
            ?_ADC_CONFIG 0073                 intlevel1 0000               _OSCCONbits 008F  
            _SSPCON2bits 0091               _SSPCONbits 0014  
