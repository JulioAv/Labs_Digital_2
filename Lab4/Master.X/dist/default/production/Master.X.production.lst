

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 12 11:05:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  0800                     __pstrings:
   387  0800                     stringtab:
   388  0800                     __stringtab:
   389                           
   390                           ;	String table - string pointers are 1 byte each
   391  0800  1BFF               	btfsc	btemp+1,7
   392  0801  280A               	ljmp	stringcode
   393  0802  1383               	bcf	3,7
   394  0803  187F               	btfsc	btemp+1,0
   395  0804  1783               	bsf	3,7
   396  0805  0800               	movf	0,w
   397  0806  0A84               	incf	4,f
   398  0807  1903               	skipnz
   399  0808  0AFF               	incf	btemp+1,f
   400  0809  0008               	return
   401  080A                     stringcode:
   402  080A                     stringdir:
   403  080A  3008               	movlw	high stringdir
   404  080B  008A               	movwf	10
   405  080C  0804               	movf	4,w
   406  080D  0A84               	incf	4,f
   407  080E  0782               	addwf	2,f
   408  080F                     __stringbase:
   409  080F  3400               	retlw	0
   410  0810                     __end_of__stringtab:
   411  0810                     _dpowers:
   412  0810  3401               	retlw	1
   413  0811  3400               	retlw	0
   414  0812  340A               	retlw	10
   415  0813  3400               	retlw	0
   416  0814  3464               	retlw	100
   417  0815  3400               	retlw	0
   418  0816  34E8               	retlw	232
   419  0817  3403               	retlw	3
   420  0818  3410               	retlw	16
   421  0819  3427               	retlw	39
   422  081A                     __end_of_dpowers:
   423  0008                     _PORTD	set	8
   424  0013                     _SSPBUF	set	19
   425  0014                     _SSPCON	set	20
   426  0006                     _PORTB	set	6
   427  003F                     _RC7	set	63
   428  003E                     _RC6	set	62
   429  0063                     _SSPIF	set	99
   430  005E                     _PEIE	set	94
   431  005F                     _GIE	set	95
   432  0091                     _SSPCON2bits	set	145
   433  0087                     _TRISCbits	set	135
   434  0094                     _SSPSTAT	set	148
   435  0093                     _SSPADD	set	147
   436  0091                     _SSPCON2	set	145
   437  008F                     _OSCCONbits	set	143
   438  0088                     _TRISD	set	136
   439  0087                     _TRISC	set	135
   440  0086                     _TRISB	set	134
   441  0085                     _TRISA	set	133
   442  0463                     _SSPIE	set	1123
   443  043C                     _TRISC4	set	1084
   444  043B                     _TRISC3	set	1083
   445  0189                     _ANSELH	set	393
   446  0188                     _ANSEL	set	392
   447  081A                     STR_1:
   448  081A  3450               	retlw	80	;'P'
   449  081B  346F               	retlw	111	;'o'
   450  081C  3474               	retlw	116	;'t'
   451  081D  343A               	retlw	58	;':'
   452  081E  3420               	retlw	32	;' '
   453  081F  3443               	retlw	67	;'C'
   454  0820  346F               	retlw	111	;'o'
   455  0821  346E               	retlw	110	;'n'
   456  0822  343A               	retlw	58	;':'
   457  0823  3420               	retlw	32	;' '
   458  0824  3454               	retlw	84	;'T'
   459  0825  3465               	retlw	101	;'e'
   460  0826  346D               	retlw	109	;'m'
   461  0827  3470               	retlw	112	;'p'
   462  0828  343A               	retlw	58	;':'
   463  0829  3400               	retlw	0
   464  082A                     STR_2:
   465  082A  3420               	retlw	32	;' '
   466  082B  3425               	retlw	37	;'%'
   467  082C  3464               	retlw	100	;'d'
   468  082D  3456               	retlw	86	;'V'
   469  082E  3420               	retlw	32	;' '
   470  082F  3400               	retlw	0
   471  0830                     STR_5:
   472  0830  3420               	retlw	32	;' '
   473  0831  3420               	retlw	32	;' '
   474  0832  3420               	retlw	32	;' '
   475  0833  3425               	retlw	37	;'%'
   476  0834  3464               	retlw	100	;'d'
   477  0835  3400               	retlw	0
   478  0833                     
   479                           	psect	cinit
   480  07EF                     start_initialization:	
   481                           ; #config settings
   482                           
   483  07EF                     __initialization:
   484                           
   485                           ; Clear objects allocated to BANK0
   486  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   487  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   488  07F1  01CA               	clrf	__pbssBANK0& (0+127)
   489  07F2  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   490  07F3  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   491  07F4  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   492  07F5  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   493  07F6  01CF               	clrf	(__pbssBANK0+5)& (0+127)
   494  07F7  01D0               	clrf	(__pbssBANK0+6)& (0+127)
   495  07F8  01D1               	clrf	(__pbssBANK0+7)& (0+127)
   496  07F9  01D2               	clrf	(__pbssBANK0+8)& (0+127)
   497  07FA  01D3               	clrf	(__pbssBANK0+9)& (0+127)
   498  07FB  01D4               	clrf	(__pbssBANK0+10)& (0+127)
   499  07FC                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502  07FC                     __end_of__initialization:
   503  07FC  0183               	clrf	3
   504  07FD  120A  118A  2A6B   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssBANK0
   507  004A                     __pbssBANK0:
   508  004A                     _temp:
   509  004A                     	ds	2
   510  004C                     _tem2:
   511  004C                     	ds	1
   512  004D                     _tem1:
   513  004D                     	ds	1
   514  004E                     _vol:
   515  004E                     	ds	1
   516  004F                     _uni:
   517  004F                     	ds	1
   518  0050                     _dec:
   519  0050                     	ds	1
   520  0051                     _cen:
   521  0051                     	ds	1
   522  0052                     _con:
   523  0052                     	ds	1
   524  0053                     _pot:
   525  0053                     	ds	1
   526  0054                     _buffer:
   527  0054                     	ds	1
   528                           
   529                           	psect	cstackCOMMON
   530  0070                     __pcstackCOMMON:
   531  0070                     ?_Lcd_Init:
   532  0070                     ?_Lcd_Clear:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_I2C_Master_Start:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_I2C_Master_Start:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_I2C_Master_Write:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_I2C_Master_Stop:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ??_I2C_Master_Stop:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Division:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_setup:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_main:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ??_I2C_Master_Wait:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Lcd_Cmd:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_Lcd_Cmd:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Lcd_Write_Char:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_Lcd_Write_Char:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_Master_Read:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?__Umul8_16:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ?___wmul:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ?___awmod:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ?___lwdiv:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?___lldiv:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?___xxtofl:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0070                     __Umul8_16@multiplicand:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     I2C_Master_Write@d:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     I2C_Master_Read@a:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ___wmul@multiplier:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lwdiv@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lldiv@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ___xxtofl@val:	
   620                           ; 4 bytes @ 0x0
   621                           
   622                           
   623                           ; 4 bytes @ 0x0
   624  0070                     	ds	1
   625  0071                     Lcd_Write_Char@a:
   626                           
   627                           ; 1 bytes @ 0x1
   628  0071                     	ds	1
   629  0072                     ?_Lcd_Write_String:
   630  0072                     ??_I2C_Master_Write:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     ??_I2C_Master_Read:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ??__Umul8_16:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0072                     Lcd_Cmd@a:	
   640                           ; 1 bytes @ 0x2
   641                           
   642  0072                     Lcd_Write_String@a:	
   643                           ; 1 bytes @ 0x2
   644                           
   645  0072                     ___wmul@multiplicand:	
   646                           ; 2 bytes @ 0x2
   647                           
   648  0072                     ___awmod@dividend:	
   649                           ; 2 bytes @ 0x2
   650                           
   651  0072                     ___lwdiv@dividend:	
   652                           ; 2 bytes @ 0x2
   653                           
   654                           
   655                           ; 2 bytes @ 0x2
   656  0072                     	ds	1
   657  0073                     ??_Lcd_Init:
   658  0073                     ??_Lcd_Clear:	
   659                           ; 1 bytes @ 0x3
   660                           
   661  0073                     ?_Lcd_Set_Cursor:	
   662                           ; 1 bytes @ 0x3
   663                           
   664  0073                     Lcd_Set_Cursor@b:	
   665                           ; 1 bytes @ 0x3
   666                           
   667                           
   668                           ; 1 bytes @ 0x3
   669  0073                     	ds	1
   670  0074                     ??_Lcd_Set_Cursor:
   671  0074                     ??_Lcd_Write_String:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     ??___wmul:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0074                     ??___awmod:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??___lwdiv:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??___xxtofl:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     Lcd_Set_Cursor@a:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     I2C_Master_Read@temp:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ___wmul@product:	
   693                           ; 2 bytes @ 0x4
   694                           
   695  0074                     __Umul8_16@product:	
   696                           ; 2 bytes @ 0x4
   697                           
   698  0074                     ___lldiv@dividend:	
   699                           ; 2 bytes @ 0x4
   700                           
   701                           
   702                           ; 4 bytes @ 0x4
   703  0074                     	ds	1
   704  0075                     ___awmod@counter:
   705  0075                     ___lwdiv@quotient:	
   706                           ; 1 bytes @ 0x5
   707                           
   708                           
   709                           ; 2 bytes @ 0x5
   710  0075                     	ds	1
   711  0076                     ___awmod@sign:
   712  0076                     __Umul8_16@word_mpld:	
   713                           ; 1 bytes @ 0x6
   714                           
   715                           
   716                           ; 2 bytes @ 0x6
   717  0076                     	ds	1
   718  0077                     ?___awdiv:
   719  0077                     ___lwdiv@counter:	
   720                           ; 2 bytes @ 0x7
   721                           
   722  0077                     Lcd_Write_String@i:	
   723                           ; 1 bytes @ 0x7
   724                           
   725  0077                     ___awdiv@divisor:	
   726                           ; 2 bytes @ 0x7
   727                           
   728                           
   729                           ; 2 bytes @ 0x7
   730  0077                     	ds	1
   731  0078                     ??___lldiv:
   732  0078                     ?___lwmod:	
   733                           ; 1 bytes @ 0x8
   734                           
   735  0078                     __Umul8_16@multiplier:	
   736                           ; 2 bytes @ 0x8
   737                           
   738  0078                     ___xxtofl@sign:	
   739                           ; 1 bytes @ 0x8
   740                           
   741  0078                     ___lwmod@divisor:	
   742                           ; 1 bytes @ 0x8
   743                           
   744                           
   745                           ; 2 bytes @ 0x8
   746  0078                     	ds	1
   747  0079                     ___xxtofl@exp:
   748  0079                     ___awdiv@dividend:	
   749                           ; 1 bytes @ 0x9
   750                           
   751  0079                     ___lldiv@quotient:	
   752                           ; 2 bytes @ 0x9
   753                           
   754                           
   755                           ; 4 bytes @ 0x9
   756  0079                     	ds	1
   757  007A                     ___lwmod@dividend:
   758  007A                     ___xxtofl@arg:	
   759                           ; 2 bytes @ 0xA
   760                           
   761                           
   762                           ; 4 bytes @ 0xA
   763  007A                     	ds	1
   764  007B                     ??___awdiv:
   765                           
   766                           ; 1 bytes @ 0xB
   767  007B                     	ds	1
   768  007C                     ??___lwmod:
   769                           
   770                           ; 1 bytes @ 0xC
   771  007C                     	ds	1
   772  007D                     ___lldiv@counter:
   773  007D                     ___lwmod@counter:	
   774                           ; 1 bytes @ 0xD
   775                           
   776                           
   777                           ; 1 bytes @ 0xD
   778  007D                     	ds	1
   779  007E                     ??_setup:
   780                           
   781                           	psect	cstackBANK0
   782  0020                     __pcstackBANK0:	
   783                           ; 1 bytes @ 0xE
   784                           
   785  0020                     ?_I2C_Master_Init:
   786  0020                     ?_sprintf:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0020                     ?___flmul:	
   790                           ; 2 bytes @ 0x0
   791                           
   792  0020                     sprintf@f:	
   793                           ; 4 bytes @ 0x0
   794                           
   795  0020                     ___awdiv@counter:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0020                     I2C_Master_Init@c:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0020                     ___flmul@b:	
   802                           ; 4 bytes @ 0x0
   803                           
   804                           
   805                           ; 4 bytes @ 0x0
   806  0020                     	ds	1
   807  0021                     ___awdiv@sign:
   808                           
   809                           ; 1 bytes @ 0x1
   810  0021                     	ds	1
   811  0022                     ___awdiv@quotient:
   812                           
   813                           ; 2 bytes @ 0x2
   814  0022                     	ds	1
   815  0023                     ??_sprintf:
   816                           
   817                           ; 1 bytes @ 0x3
   818  0023                     	ds	1
   819  0024                     ??_I2C_Master_Init:
   820  0024                     ??_Division:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0024                     ___flmul@a:	
   824                           ; 1 bytes @ 0x4
   825                           
   826                           
   827                           ; 4 bytes @ 0x4
   828  0024                     	ds	2
   829  0026                     sprintf@ap:
   830                           
   831                           ; 1 bytes @ 0x6
   832  0026                     	ds	1
   833  0027                     sprintf@flag:
   834  0027                     _Division$893:	
   835                           ; 1 bytes @ 0x7
   836                           
   837                           
   838                           ; 2 bytes @ 0x7
   839  0027                     	ds	1
   840  0028                     ??___flmul:
   841  0028                     sprintf@prec:	
   842                           ; 1 bytes @ 0x8
   843                           
   844                           
   845                           ; 1 bytes @ 0x8
   846  0028                     	ds	1
   847  0029                     Division@y:
   848  0029                     sprintf@val:	
   849                           ; 1 bytes @ 0x9
   850                           
   851                           
   852                           ; 2 bytes @ 0x9
   853  0029                     	ds	2
   854  002B                     sprintf@sp:
   855                           
   856                           ; 1 bytes @ 0xB
   857  002B                     	ds	1
   858  002C                     sprintf@c:
   859                           
   860                           ; 1 bytes @ 0xC
   861  002C                     	ds	1
   862  002D                     ___flmul@sign:
   863                           
   864                           ; 1 bytes @ 0xD
   865  002D                     	ds	1
   866  002E                     ___flmul@grs:
   867                           
   868                           ; 4 bytes @ 0xE
   869  002E                     	ds	4
   870  0032                     ___flmul@aexp:
   871                           
   872                           ; 1 bytes @ 0x12
   873  0032                     	ds	1
   874  0033                     ___flmul@bexp:
   875                           
   876                           ; 1 bytes @ 0x13
   877  0033                     	ds	1
   878  0034                     ___flmul@prod:
   879                           
   880                           ; 4 bytes @ 0x14
   881  0034                     	ds	4
   882  0038                     ___flmul@temp:
   883                           
   884                           ; 2 bytes @ 0x18
   885  0038                     	ds	2
   886  003A                     ?___fltol:
   887  003A                     ___fltol@f1:	
   888                           ; 4 bytes @ 0x1A
   889                           
   890                           
   891                           ; 4 bytes @ 0x1A
   892  003A                     	ds	4
   893  003E                     ??___fltol:
   894                           
   895                           ; 1 bytes @ 0x1E
   896  003E                     	ds	5
   897  0043                     ___fltol@sign1:
   898                           
   899                           ; 1 bytes @ 0x23
   900  0043                     	ds	1
   901  0044                     ___fltol@exp1:
   902                           
   903                           ; 1 bytes @ 0x24
   904  0044                     	ds	1
   905  0045                     ??_main:
   906                           
   907                           ; 1 bytes @ 0x25
   908  0045                     	ds	5
   909                           
   910                           	psect	maintext
   911  026B                     __pmaintext:	
   912 ;;
   913 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   914 ;;
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 61 in file "Master_I2C.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : B00/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0
   933 ;;      Temps:          0       5       0       0       0
   934 ;;      Totals:         0       5       0       0       0
   935 ;;Total ram usage:        5 bytes
   936 ;; Hardware stack levels required when called:    3
   937 ;; This function calls:
   938 ;;		_Division
   939 ;;		_I2C_Master_Read
   940 ;;		_I2C_Master_Start
   941 ;;		_I2C_Master_Stop
   942 ;;		_I2C_Master_Write
   943 ;;		_Lcd_Set_Cursor
   944 ;;		_Lcd_Write_String
   945 ;;		___awdiv
   946 ;;		___flmul
   947 ;;		___fltol
   948 ;;		___wmul
   949 ;;		___xxtofl
   950 ;;		_setup
   951 ;;		_sprintf
   952 ;; This function is called by:
   953 ;;		Startup code after reset
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _main
   959  026B                     _main:
   960  026B                     l2097:	
   961                           ;incstack = 0
   962                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   963                           
   964                           
   965                           ;Master_I2C.c: 62:     setup();
   966  026B  120A  158A  2595  120A  118A  	fcall	_setup
   967  0270                     l2099:
   968                           
   969                           ;Master_I2C.c: 65:         I2C_Master_Start();
   970  0270  120A  158A  2433  120A  118A  	fcall	_I2C_Master_Start
   971  0275                     l2101:
   972                           
   973                           ;Master_I2C.c: 66:         I2C_Master_Write(0x51);
   974  0275  3051               	movlw	81
   975  0276  00F0               	movwf	I2C_Master_Write@d
   976  0277  3000               	movlw	0
   977  0278  00F1               	movwf	I2C_Master_Write@d+1
   978  0279  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
   979  027E                     l2103:
   980                           
   981                           ;Master_I2C.c: 67:         pot = I2C_Master_Read(0);
   982  027E  3000               	movlw	0
   983  027F  00F0               	movwf	I2C_Master_Read@a
   984  0280  00F1               	movwf	I2C_Master_Read@a+1
   985  0281  120A  158A  24F5  120A  118A  	fcall	_I2C_Master_Read
   986  0286  0870               	movf	?_I2C_Master_Read,w
   987  0287  1283               	bcf	3,5	;RP0=0, select bank0
   988  0288  1303               	bcf	3,6	;RP1=0, select bank0
   989  0289  00C5               	movwf	??_main
   990  028A  0845               	movf	??_main,w
   991  028B  00D3               	movwf	_pot
   992  028C                     l2105:
   993                           
   994                           ;Master_I2C.c: 68:         I2C_Master_Stop();
   995  028C  120A  158A  243C  120A  118A  	fcall	_I2C_Master_Stop
   996  0291                     l2107:
   997                           
   998                           ;Master_I2C.c: 69:         _delay((unsigned long)((200)*(8000000/4000.0)));
   999  0291  3003               	movlw	3
  1000  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0294  00C7               	movwf	??_main+2
  1003  0295  3008               	movlw	8
  1004  0296  00C6               	movwf	??_main+1
  1005  0297  3076               	movlw	118
  1006  0298  00C5               	movwf	??_main
  1007  0299                     u2477:
  1008  0299  0BC5               	decfsz	??_main,f
  1009  029A  2A99               	goto	u2477
  1010  029B  0BC6               	decfsz	??_main+1,f
  1011  029C  2A99               	goto	u2477
  1012  029D  0BC7               	decfsz	??_main+2,f
  1013  029E  2A99               	goto	u2477
  1014  029F  0000               	nop
  1015  02A0                     l2109:
  1016                           
  1017                           ;Master_I2C.c: 71:         vol = pot*0.01961;
  1018  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1019  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1020  02A2  0853               	movf	_pot,w
  1021  02A3  00C5               	movwf	??_main
  1022  02A4  01C6               	clrf	??_main+1
  1023  02A5  01C7               	clrf	??_main+2
  1024  02A6  01C8               	clrf	??_main+3
  1025  02A7  0848               	movf	??_main+3,w
  1026  02A8  00F3               	movwf	___xxtofl@val+3
  1027  02A9  0847               	movf	??_main+2,w
  1028  02AA  00F2               	movwf	___xxtofl@val+2
  1029  02AB  0846               	movf	??_main+1,w
  1030  02AC  00F1               	movwf	___xxtofl@val+1
  1031  02AD  0845               	movf	??_main,w
  1032  02AE  00F0               	movwf	___xxtofl@val
  1033  02AF  3001               	movlw	1
  1034  02B0  120A  118A  20C9  120A  118A  	fcall	___xxtofl
  1035  02B5  0873               	movf	?___xxtofl+3,w
  1036  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1037  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1038  02B8  00A7               	movwf	___flmul@a+3
  1039  02B9  0872               	movf	?___xxtofl+2,w
  1040  02BA  00A6               	movwf	___flmul@a+2
  1041  02BB  0871               	movf	?___xxtofl+1,w
  1042  02BC  00A5               	movwf	___flmul@a+1
  1043  02BD  0870               	movf	?___xxtofl,w
  1044  02BE  00A4               	movwf	___flmul@a
  1045  02BF  303C               	movlw	60
  1046  02C0  00A3               	movwf	___flmul@b+3
  1047  02C1  30A0               	movlw	160
  1048  02C2  00A2               	movwf	___flmul@b+2
  1049  02C3  30A5               	movlw	165
  1050  02C4  00A1               	movwf	___flmul@b+1
  1051  02C5  3027               	movlw	39
  1052  02C6  00A0               	movwf	___flmul@b
  1053  02C7  120A  118A  248E  120A  118A  	fcall	___flmul
  1054  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1055  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1056  02CE  0823               	movf	?___flmul+3,w
  1057  02CF  00BD               	movwf	___fltol@f1+3
  1058  02D0  0822               	movf	?___flmul+2,w
  1059  02D1  00BC               	movwf	___fltol@f1+2
  1060  02D2  0821               	movf	?___flmul+1,w
  1061  02D3  00BB               	movwf	___fltol@f1+1
  1062  02D4  0820               	movf	?___flmul,w
  1063  02D5  00BA               	movwf	___fltol@f1
  1064  02D6  120A  118A  204D  120A  118A  	fcall	___fltol
  1065  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1066  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1067  02DD  083A               	movf	?___fltol,w
  1068  02DE  00C9               	movwf	??_main+4
  1069  02DF  0849               	movf	??_main+4,w
  1070  02E0  00CE               	movwf	_vol
  1071  02E1                     l2111:
  1072                           
  1073                           ;Master_I2C.c: 72:         Lcd_Set_Cursor(2,1);
  1074  02E1  01F3               	clrf	Lcd_Set_Cursor@b
  1075  02E2  0AF3               	incf	Lcd_Set_Cursor@b,f
  1076  02E3  3002               	movlw	2
  1077  02E4  120A  158A  248B  120A  118A  	fcall	_Lcd_Set_Cursor
  1078  02E9                     l2113:
  1079                           
  1080                           ;Master_I2C.c: 73:         sprintf(buffer, " %dV ", vol);
  1081  02E9  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1082  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  1083  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  1084  02EC  00C5               	movwf	??_main
  1085  02ED  0845               	movf	??_main,w
  1086  02EE  00A0               	movwf	sprintf@f
  1087  02EF  084E               	movf	_vol,w
  1088  02F0  00C6               	movwf	??_main+1
  1089  02F1  01C7               	clrf	??_main+2
  1090  02F2  0846               	movf	??_main+1,w
  1091  02F3  00A1               	movwf	?_sprintf+1
  1092  02F4  0847               	movf	??_main+2,w
  1093  02F5  00A2               	movwf	?_sprintf+2
  1094  02F6  3054               	movlw	(low (_buffer| 0))& (0+255)
  1095  02F7  120A  118A  2183  120A  118A  	fcall	_sprintf
  1096  02FC                     l2115:
  1097                           
  1098                           ;Master_I2C.c: 74:         Lcd_Write_String(buffer);
  1099  02FC  3054               	movlw	(low (_buffer| 0))& (0+255)
  1100  02FD  00F2               	movwf	Lcd_Write_String@a
  1101  02FE  3000               	movlw	0
  1102  02FF  00F3               	movwf	Lcd_Write_String@a+1
  1103  0300  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1104  0305                     l2117:
  1105                           
  1106                           ;Master_I2C.c: 76:         I2C_Master_Start();
  1107  0305  120A  158A  2433  120A  118A  	fcall	_I2C_Master_Start
  1108  030A                     l2119:
  1109                           
  1110                           ;Master_I2C.c: 77:         I2C_Master_Write(0x31);
  1111  030A  3031               	movlw	49
  1112  030B  00F0               	movwf	I2C_Master_Write@d
  1113  030C  3000               	movlw	0
  1114  030D  00F1               	movwf	I2C_Master_Write@d+1
  1115  030E  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1116  0313                     l2121:
  1117                           
  1118                           ;Master_I2C.c: 78:         con = I2C_Master_Read(0);
  1119  0313  3000               	movlw	0
  1120  0314  00F0               	movwf	I2C_Master_Read@a
  1121  0315  00F1               	movwf	I2C_Master_Read@a+1
  1122  0316  120A  158A  24F5  120A  118A  	fcall	_I2C_Master_Read
  1123  031B  0870               	movf	?_I2C_Master_Read,w
  1124  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1125  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1126  031E  00C5               	movwf	??_main
  1127  031F  0845               	movf	??_main,w
  1128  0320  00D2               	movwf	_con
  1129  0321                     l2123:
  1130                           
  1131                           ;Master_I2C.c: 79:         I2C_Master_Stop();
  1132  0321  120A  158A  243C  120A  118A  	fcall	_I2C_Master_Stop
  1133  0326                     l2125:
  1134                           
  1135                           ;Master_I2C.c: 80:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1136  0326  3003               	movlw	3
  1137  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0329  00C7               	movwf	??_main+2
  1140  032A  3008               	movlw	8
  1141  032B  00C6               	movwf	??_main+1
  1142  032C  3076               	movlw	118
  1143  032D  00C5               	movwf	??_main
  1144  032E                     u2487:
  1145  032E  0BC5               	decfsz	??_main,f
  1146  032F  2B2E               	goto	u2487
  1147  0330  0BC6               	decfsz	??_main+1,f
  1148  0331  2B2E               	goto	u2487
  1149  0332  0BC7               	decfsz	??_main+2,f
  1150  0333  2B2E               	goto	u2487
  1151  0334  0000               	nop
  1152  0335                     l2127:
  1153                           
  1154                           ;Master_I2C.c: 82:         Division(con);
  1155  0335  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0336  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0337  0852               	movf	_con,w
  1158  0338  120A  158A  26CB  120A  118A  	fcall	_Division
  1159  033D                     l2129:
  1160                           
  1161                           ;Master_I2C.c: 83:         sprintf(buffer, "  %d", dec);
  1162  033D  3022               	movlw	(low (((STR_5+1)-__stringbase)| (0+32768)))& (0+255)
  1163  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1164  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0340  00C5               	movwf	??_main
  1166  0341  0845               	movf	??_main,w
  1167  0342  00A0               	movwf	sprintf@f
  1168  0343  0850               	movf	_dec,w
  1169  0344  00C6               	movwf	??_main+1
  1170  0345  01C7               	clrf	??_main+2
  1171  0346  0846               	movf	??_main+1,w
  1172  0347  00A1               	movwf	?_sprintf+1
  1173  0348  0847               	movf	??_main+2,w
  1174  0349  00A2               	movwf	?_sprintf+2
  1175  034A  3054               	movlw	(low (_buffer| 0))& (0+255)
  1176  034B  120A  118A  2183  120A  118A  	fcall	_sprintf
  1177  0350                     l2131:
  1178                           
  1179                           ;Master_I2C.c: 84:         Lcd_Write_String(buffer);
  1180  0350  3054               	movlw	(low (_buffer| 0))& (0+255)
  1181  0351  00F2               	movwf	Lcd_Write_String@a
  1182  0352  3000               	movlw	0
  1183  0353  00F3               	movwf	Lcd_Write_String@a+1
  1184  0354  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1185  0359                     l2133:
  1186                           
  1187                           ;Master_I2C.c: 85:         sprintf(buffer, "%d", uni);
  1188  0359  3024               	movlw	(low (((STR_5+3)-__stringbase)| (0+32768)))& (0+255)
  1189  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1190  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1191  035C  00C5               	movwf	??_main
  1192  035D  0845               	movf	??_main,w
  1193  035E  00A0               	movwf	sprintf@f
  1194  035F  084F               	movf	_uni,w
  1195  0360  00C6               	movwf	??_main+1
  1196  0361  01C7               	clrf	??_main+2
  1197  0362  0846               	movf	??_main+1,w
  1198  0363  00A1               	movwf	?_sprintf+1
  1199  0364  0847               	movf	??_main+2,w
  1200  0365  00A2               	movwf	?_sprintf+2
  1201  0366  3054               	movlw	(low (_buffer| 0))& (0+255)
  1202  0367  120A  118A  2183  120A  118A  	fcall	_sprintf
  1203  036C                     l2135:
  1204                           
  1205                           ;Master_I2C.c: 86:         Lcd_Write_String(buffer);
  1206  036C  3054               	movlw	(low (_buffer| 0))& (0+255)
  1207  036D  00F2               	movwf	Lcd_Write_String@a
  1208  036E  3000               	movlw	0
  1209  036F  00F3               	movwf	Lcd_Write_String@a+1
  1210  0370  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1211  0375                     l2137:
  1212                           
  1213                           ;Master_I2C.c: 88:         I2C_Master_Start();
  1214  0375  120A  158A  2433  120A  118A  	fcall	_I2C_Master_Start
  1215  037A                     l2139:
  1216                           
  1217                           ;Master_I2C.c: 89:         I2C_Master_Write(0x90);
  1218  037A  3090               	movlw	144
  1219  037B  00F0               	movwf	I2C_Master_Write@d
  1220  037C  3000               	movlw	0
  1221  037D  00F1               	movwf	I2C_Master_Write@d+1
  1222  037E  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1223  0383                     l2141:
  1224                           
  1225                           ;Master_I2C.c: 90:         I2C_Master_Write(0xEE);
  1226  0383  30EE               	movlw	238
  1227  0384  00F0               	movwf	I2C_Master_Write@d
  1228  0385  3000               	movlw	0
  1229  0386  00F1               	movwf	I2C_Master_Write@d+1
  1230  0387  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1231  038C                     l2143:
  1232                           
  1233                           ;Master_I2C.c: 91:         I2C_Master_Stop();
  1234  038C  120A  158A  243C  120A  118A  	fcall	_I2C_Master_Stop
  1235  0391                     l2145:
  1236                           
  1237                           ;Master_I2C.c: 92:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1238  0391  3003               	movlw	3
  1239  0392  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0393  1303               	bcf	3,6	;RP1=0, select bank0
  1241  0394  00C7               	movwf	??_main+2
  1242  0395  3008               	movlw	8
  1243  0396  00C6               	movwf	??_main+1
  1244  0397  3076               	movlw	118
  1245  0398  00C5               	movwf	??_main
  1246  0399                     u2497:
  1247  0399  0BC5               	decfsz	??_main,f
  1248  039A  2B99               	goto	u2497
  1249  039B  0BC6               	decfsz	??_main+1,f
  1250  039C  2B99               	goto	u2497
  1251  039D  0BC7               	decfsz	??_main+2,f
  1252  039E  2B99               	goto	u2497
  1253  039F  0000               	nop
  1254  03A0                     l2147:
  1255                           
  1256                           ;Master_I2C.c: 94:         I2C_Master_Start();
  1257  03A0  120A  158A  2433  120A  118A  	fcall	_I2C_Master_Start
  1258  03A5                     l2149:
  1259                           
  1260                           ;Master_I2C.c: 95:         I2C_Master_Write(0x90);
  1261  03A5  3090               	movlw	144
  1262  03A6  00F0               	movwf	I2C_Master_Write@d
  1263  03A7  3000               	movlw	0
  1264  03A8  00F1               	movwf	I2C_Master_Write@d+1
  1265  03A9  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1266  03AE                     l2151:
  1267                           
  1268                           ;Master_I2C.c: 96:         I2C_Master_Write(0xAA);
  1269  03AE  30AA               	movlw	170
  1270  03AF  00F0               	movwf	I2C_Master_Write@d
  1271  03B0  3000               	movlw	0
  1272  03B1  00F1               	movwf	I2C_Master_Write@d+1
  1273  03B2  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1274  03B7                     l2153:
  1275                           
  1276                           ;Master_I2C.c: 97:         I2C_Master_Stop();
  1277  03B7  120A  158A  243C  120A  118A  	fcall	_I2C_Master_Stop
  1278  03BC                     l2155:
  1279                           
  1280                           ;Master_I2C.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1281  03BC  3003               	movlw	3
  1282  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1283  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1284  03BF  00C7               	movwf	??_main+2
  1285  03C0  3008               	movlw	8
  1286  03C1  00C6               	movwf	??_main+1
  1287  03C2  3076               	movlw	118
  1288  03C3  00C5               	movwf	??_main
  1289  03C4                     u2507:
  1290  03C4  0BC5               	decfsz	??_main,f
  1291  03C5  2BC4               	goto	u2507
  1292  03C6  0BC6               	decfsz	??_main+1,f
  1293  03C7  2BC4               	goto	u2507
  1294  03C8  0BC7               	decfsz	??_main+2,f
  1295  03C9  2BC4               	goto	u2507
  1296  03CA  0000               	nop
  1297  03CB                     l2157:
  1298                           
  1299                           ;Master_I2C.c: 100:         I2C_Master_Start();
  1300  03CB  120A  158A  2433  120A  118A  	fcall	_I2C_Master_Start
  1301  03D0                     l2159:
  1302                           
  1303                           ;Master_I2C.c: 101:         I2C_Master_Write(0x91);
  1304  03D0  3091               	movlw	145
  1305  03D1  00F0               	movwf	I2C_Master_Write@d
  1306  03D2  3000               	movlw	0
  1307  03D3  00F1               	movwf	I2C_Master_Write@d+1
  1308  03D4  120A  158A  2445  120A  118A  	fcall	_I2C_Master_Write
  1309  03D9                     l2161:
  1310                           
  1311                           ;Master_I2C.c: 102:         tem1 = I2C_Master_Read(0);
  1312  03D9  3000               	movlw	0
  1313  03DA  00F0               	movwf	I2C_Master_Read@a
  1314  03DB  00F1               	movwf	I2C_Master_Read@a+1
  1315  03DC  120A  158A  24F5  120A  118A  	fcall	_I2C_Master_Read
  1316  03E1  0870               	movf	?_I2C_Master_Read,w
  1317  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1318  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1319  03E4  00C5               	movwf	??_main
  1320  03E5  0845               	movf	??_main,w
  1321  03E6  00CD               	movwf	_tem1
  1322  03E7                     l2163:
  1323                           
  1324                           ;Master_I2C.c: 103:         tem2 = I2C_Master_Read(0);
  1325  03E7  3000               	movlw	0
  1326  03E8  00F0               	movwf	I2C_Master_Read@a
  1327  03E9  00F1               	movwf	I2C_Master_Read@a+1
  1328  03EA  120A  158A  24F5  120A  118A  	fcall	_I2C_Master_Read
  1329  03EF  0870               	movf	?_I2C_Master_Read,w
  1330  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1331  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1332  03F2  00C5               	movwf	??_main
  1333  03F3  0845               	movf	??_main,w
  1334  03F4  00CC               	movwf	_tem2
  1335  03F5                     l2165:
  1336                           
  1337                           ;Master_I2C.c: 104:         I2C_Master_Stop();
  1338  03F5  120A  158A  243C  120A  118A  	fcall	_I2C_Master_Stop
  1339  03FA                     l2167:
  1340                           
  1341                           ;Master_I2C.c: 105:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1342  03FA  3003               	movlw	3
  1343  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1344  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1345  03FD  00C7               	movwf	??_main+2
  1346  03FE  3008               	movlw	8
  1347  03FF  00C6               	movwf	??_main+1
  1348  0400  3076               	movlw	118
  1349  0401  00C5               	movwf	??_main
  1350  0402                     u2517:
  1351  0402  0BC5               	decfsz	??_main,f
  1352  0403  2C02               	goto	u2517
  1353  0404  0BC6               	decfsz	??_main+1,f
  1354  0405  2C02               	goto	u2517
  1355  0406  0BC7               	decfsz	??_main+2,f
  1356  0407  2C02               	goto	u2517
  1357  0408  0000               	nop
  1358  0409                     l2169:
  1359                           
  1360                           ;Master_I2C.c: 107:         temp = tem1+tem2;
  1361  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1362  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1363  040B  084D               	movf	_tem1,w
  1364  040C  074C               	addwf	_tem2,w
  1365  040D  00CA               	movwf	_temp
  1366  040E  01CB               	clrf	_temp+1
  1367  040F  0DCB               	rlf	_temp+1,f
  1368  0410                     l2171:
  1369                           
  1370                           ;Master_I2C.c: 108:         temp = (temp*125)/(31488);
  1371  0410  3000               	movlw	0
  1372  0411  00F7               	movwf	___awdiv@divisor
  1373  0412  307B               	movlw	123
  1374  0413  00F8               	movwf	___awdiv@divisor+1
  1375  0414  084B               	movf	_temp+1,w
  1376  0415  00F1               	movwf	___wmul@multiplier+1
  1377  0416  084A               	movf	_temp,w
  1378  0417  00F0               	movwf	___wmul@multiplier
  1379  0418  307D               	movlw	125
  1380  0419  00F2               	movwf	___wmul@multiplicand
  1381  041A  3000               	movlw	0
  1382  041B  00F3               	movwf	___wmul@multiplicand+1
  1383  041C  120A  158A  24A9  120A  118A  	fcall	___wmul
  1384  0421  0871               	movf	?___wmul+1,w
  1385  0422  00FA               	movwf	___awdiv@dividend+1
  1386  0423  0870               	movf	?___wmul,w
  1387  0424  00F9               	movwf	___awdiv@dividend
  1388  0425  120A  158A  2797  120A  118A  	fcall	___awdiv
  1389  042A  0878               	movf	?___awdiv+1,w
  1390  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1391  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1392  042D  00CB               	movwf	_temp+1
  1393  042E  0877               	movf	?___awdiv,w
  1394  042F  00CA               	movwf	_temp
  1395  0430                     l2173:
  1396                           
  1397                           ;Master_I2C.c: 110:         Division(tem1);
  1398  0430  084D               	movf	_tem1,w
  1399  0431  120A  158A  26CB  120A  118A  	fcall	_Division
  1400  0436                     l2175:
  1401                           
  1402                           ;Master_I2C.c: 111:         sprintf(buffer, "   %d", cen);
  1403  0436  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1404  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0439  00C5               	movwf	??_main
  1407  043A  0845               	movf	??_main,w
  1408  043B  00A0               	movwf	sprintf@f
  1409  043C  0851               	movf	_cen,w
  1410  043D  00C6               	movwf	??_main+1
  1411  043E  01C7               	clrf	??_main+2
  1412  043F  0846               	movf	??_main+1,w
  1413  0440  00A1               	movwf	?_sprintf+1
  1414  0441  0847               	movf	??_main+2,w
  1415  0442  00A2               	movwf	?_sprintf+2
  1416  0443  3054               	movlw	(low (_buffer| 0))& (0+255)
  1417  0444  120A  118A  2183  120A  118A  	fcall	_sprintf
  1418  0449                     l2177:
  1419                           
  1420                           ;Master_I2C.c: 112:         Lcd_Write_String(buffer);
  1421  0449  3054               	movlw	(low (_buffer| 0))& (0+255)
  1422  044A  00F2               	movwf	Lcd_Write_String@a
  1423  044B  3000               	movlw	0
  1424  044C  00F3               	movwf	Lcd_Write_String@a+1
  1425  044D  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1426  0452                     l2179:
  1427                           
  1428                           ;Master_I2C.c: 113:         sprintf(buffer, "%d", dec);
  1429  0452  3024               	movlw	(low (((STR_5+3)-__stringbase)| (0+32768)))& (0+255)
  1430  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0455  00C5               	movwf	??_main
  1433  0456  0845               	movf	??_main,w
  1434  0457  00A0               	movwf	sprintf@f
  1435  0458  0850               	movf	_dec,w
  1436  0459  00C6               	movwf	??_main+1
  1437  045A  01C7               	clrf	??_main+2
  1438  045B  0846               	movf	??_main+1,w
  1439  045C  00A1               	movwf	?_sprintf+1
  1440  045D  0847               	movf	??_main+2,w
  1441  045E  00A2               	movwf	?_sprintf+2
  1442  045F  3054               	movlw	(low (_buffer| 0))& (0+255)
  1443  0460  120A  118A  2183  120A  118A  	fcall	_sprintf
  1444  0465                     l2181:
  1445                           
  1446                           ;Master_I2C.c: 114:         Lcd_Write_String(buffer);
  1447  0465  3054               	movlw	(low (_buffer| 0))& (0+255)
  1448  0466  00F2               	movwf	Lcd_Write_String@a
  1449  0467  3000               	movlw	0
  1450  0468  00F3               	movwf	Lcd_Write_String@a+1
  1451  0469  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1452  046E                     l2183:
  1453                           
  1454                           ;Master_I2C.c: 115:         sprintf(buffer, "%d", uni);
  1455  046E  3024               	movlw	(low (((STR_5+3)-__stringbase)| (0+32768)))& (0+255)
  1456  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0471  00C5               	movwf	??_main
  1459  0472  0845               	movf	??_main,w
  1460  0473  00A0               	movwf	sprintf@f
  1461  0474  084F               	movf	_uni,w
  1462  0475  00C6               	movwf	??_main+1
  1463  0476  01C7               	clrf	??_main+2
  1464  0477  0846               	movf	??_main+1,w
  1465  0478  00A1               	movwf	?_sprintf+1
  1466  0479  0847               	movf	??_main+2,w
  1467  047A  00A2               	movwf	?_sprintf+2
  1468  047B  3054               	movlw	(low (_buffer| 0))& (0+255)
  1469  047C  120A  118A  2183  120A  118A  	fcall	_sprintf
  1470  0481                     l2185:
  1471                           
  1472                           ;Master_I2C.c: 116:         Lcd_Write_String(buffer);
  1473  0481  3054               	movlw	(low (_buffer| 0))& (0+255)
  1474  0482  00F2               	movwf	Lcd_Write_String@a
  1475  0483  3000               	movlw	0
  1476  0484  00F3               	movwf	Lcd_Write_String@a+1
  1477  0485  120A  158A  25D3  120A  118A  	fcall	_Lcd_Write_String
  1478  048A  2A70               	goto	l2099
  1479  048B  120A  118A  2800   	ljmp	start
  1480  048E                     __end_of_main:
  1481                           
  1482                           	psect	text1
  1483  0183                     __ptext1:	
  1484 ;; *************** function _sprintf *****************
  1485 ;; Defined at:
  1486 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  sp              1    wreg     PTR unsigned char 
  1489 ;;		 -> buffer(1), 
  1490 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1491 ;;		 -> STR_7(3), STR_6(3), STR_5(6), STR_4(3), 
  1492 ;;		 -> STR_3(5), STR_2(6), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1495 ;;		 -> buffer(1), 
  1496 ;;  tmpval          4    0        struct .
  1497 ;;  val             2    9[BANK0 ] unsigned int 
  1498 ;;  cp              2    0        PTR const unsigned char 
  1499 ;;  len             2    0        unsigned int 
  1500 ;;  c               1   12[BANK0 ] unsigned char 
  1501 ;;  prec            1    8[BANK0 ] char 
  1502 ;;  flag            1    7[BANK0 ] unsigned char 
  1503 ;;  ap              1    6[BANK0 ] PTR void [1]
  1504 ;;		 -> ?_sprintf(2), 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2    0[BANK0 ] int 
  1507 ;; Registers used:
  1508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         0       3       0       0       0
  1515 ;;      Locals:         0       7       0       0       0
  1516 ;;      Temps:          0       3       0       0       0
  1517 ;;      Totals:         0      13       0       0       0
  1518 ;;Total ram usage:       13 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; Hardware stack levels required when called:    1
  1521 ;; This function calls:
  1522 ;;		___lwdiv
  1523 ;;		___lwmod
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _sprintf
  1531  0183                     _sprintf:
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1535                           ;sprintf@sp stored from wreg
  1536  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0185  00AB               	movwf	sprintf@sp
  1539  0186                     l1801:
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1542  0186  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1543  0187  00A3               	movwf	??_sprintf
  1544  0188  0823               	movf	??_sprintf,w
  1545  0189  00A6               	movwf	sprintf@ap
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1548  018A  2A54               	goto	l1853
  1549  018B                     l1803:
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1552  018B  3025               	movlw	37
  1553  018C  062C               	xorwf	sprintf@c,w
  1554  018D  1903               	btfsc	3,2
  1555  018E  2990               	goto	u1751
  1556  018F  2991               	goto	u1750
  1557  0190                     u1751:
  1558  0190  299D               	goto	l1809
  1559  0191                     u1750:
  1560  0191                     l1805:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1563  0191  082C               	movf	sprintf@c,w
  1564  0192  00A3               	movwf	??_sprintf
  1565  0193  082B               	movf	sprintf@sp,w
  1566  0194  0084               	movwf	4
  1567  0195  0823               	movf	??_sprintf,w
  1568  0196  1383               	bcf	3,7	;select IRP bank0
  1569  0197  0080               	movwf	0
  1570  0198                     l1807:
  1571  0198  3001               	movlw	1
  1572  0199  00A3               	movwf	??_sprintf
  1573  019A  0823               	movf	??_sprintf,w
  1574  019B  07AB               	addwf	sprintf@sp,f
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1577  019C  2A54               	goto	l1853
  1578  019D                     l1809:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1581  019D  01A7               	clrf	sprintf@flag
  1582  019E                     l1813:	
  1583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1584                           
  1585  019E  3001               	movlw	1
  1586  019F  07A0               	addwf	sprintf@f,f
  1587  01A0  30FF               	movlw	-1
  1588  01A1  0720               	addwf	sprintf@f,w
  1589  01A2  0084               	movwf	4
  1590  01A3  120A  158A  200A  120A  118A  	fcall	stringdir
  1591  01A8  00AC               	movwf	sprintf@c
  1592  01A9  00A3               	movwf	??_sprintf
  1593  01AA  01A4               	clrf	??_sprintf+1
  1594                           
  1595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1596                           ; Switch size 1, requested type "simple"
  1597                           ; Number of cases is 1, Range of values is 0 to 0
  1598                           ; switch strategies available:
  1599                           ; Name         Instructions Cycles
  1600                           ; simple_byte            4     3 (average)
  1601                           ; direct_byte           11     8 (fixed)
  1602                           ; jumptable            260     6 (fixed)
  1603                           ;	Chosen strategy is simple_byte
  1604  01AB  0824               	movf	??_sprintf+1,w
  1605  01AC  3A00               	xorlw	0	; case 0
  1606  01AD  1903               	skipnz
  1607  01AE  29B0               	goto	l2215
  1608  01AF  2A54               	goto	l1853
  1609  01B0                     l2215:
  1610                           
  1611                           ; Switch size 1, requested type "simple"
  1612                           ; Number of cases is 3, Range of values is 0 to 105
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte           10     6 (average)
  1616                           ; jumptable            260     6 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618  01B0  0823               	movf	??_sprintf,w
  1619  01B1  3A00               	xorlw	0	; case 0
  1620  01B2  1903               	skipnz
  1621  01B3  2A66               	goto	l1855
  1622  01B4  3A64               	xorlw	100	; case 100
  1623  01B5  1903               	skipnz
  1624  01B6  29BB               	goto	l1815
  1625  01B7  3A0D               	xorlw	13	; case 105
  1626  01B8  1903               	skipnz
  1627  01B9  29BB               	goto	l1815
  1628  01BA  2A54               	goto	l1853
  1629  01BB                     l1815:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1632  01BB  0826               	movf	sprintf@ap,w
  1633  01BC  0084               	movwf	4
  1634  01BD  1383               	bcf	3,7	;select IRP bank0
  1635  01BE  0800               	movf	0,w
  1636  01BF  00A9               	movwf	sprintf@val
  1637  01C0  0A84               	incf	4,f
  1638  01C1  0800               	movf	0,w
  1639  01C2  00AA               	movwf	sprintf@val+1
  1640  01C3                     l1817:
  1641  01C3  3002               	movlw	2
  1642  01C4  00A3               	movwf	??_sprintf
  1643  01C5  0823               	movf	??_sprintf,w
  1644  01C6  07A6               	addwf	sprintf@ap,f
  1645  01C7                     l1819:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1648  01C7  1FAA               	btfss	sprintf@val+1,7
  1649  01C8  29CA               	goto	u1761
  1650  01C9  29CB               	goto	u1760
  1651  01CA                     u1761:
  1652  01CA  29D4               	goto	l1825
  1653  01CB                     u1760:
  1654  01CB                     l1821:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1657  01CB  3003               	movlw	3
  1658  01CC  00A3               	movwf	??_sprintf
  1659  01CD  0823               	movf	??_sprintf,w
  1660  01CE  04A7               	iorwf	sprintf@flag,f
  1661  01CF                     l1823:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1664  01CF  09A9               	comf	sprintf@val,f
  1665  01D0  09AA               	comf	sprintf@val+1,f
  1666  01D1  0AA9               	incf	sprintf@val,f
  1667  01D2  1903               	skipnz
  1668  01D3  0AAA               	incf	sprintf@val+1,f
  1669  01D4                     l1825:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1672  01D4  01AC               	clrf	sprintf@c
  1673  01D5  0AAC               	incf	sprintf@c,f
  1674  01D6                     l1831:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1677  01D6  082C               	movf	sprintf@c,w
  1678  01D7  00A3               	movwf	??_sprintf
  1679  01D8  0723               	addwf	??_sprintf,w
  1680  01D9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1681  01DA  0084               	movwf	4
  1682  01DB  120A  158A  200A  120A  118A  	fcall	stringdir
  1683  01E0  00A4               	movwf	??_sprintf+1
  1684  01E1  120A  158A  200A  120A  118A  	fcall	stringdir
  1685  01E6  00A5               	movwf	??_sprintf+2
  1686  01E7  0825               	movf	??_sprintf+2,w
  1687  01E8  022A               	subwf	sprintf@val+1,w
  1688  01E9  1D03               	skipz
  1689  01EA  29ED               	goto	u1775
  1690  01EB  0824               	movf	??_sprintf+1,w
  1691  01EC  0229               	subwf	sprintf@val,w
  1692  01ED                     u1775:
  1693  01ED  1803               	skipnc
  1694  01EE  29F0               	goto	u1771
  1695  01EF  29F1               	goto	u1770
  1696  01F0                     u1771:
  1697  01F0  29F2               	goto	l1835
  1698  01F1                     u1770:
  1699  01F1  29FC               	goto	l1837
  1700  01F2                     l1835:
  1701  01F2  3001               	movlw	1
  1702  01F3  00A3               	movwf	??_sprintf
  1703  01F4  0823               	movf	??_sprintf,w
  1704  01F5  07AC               	addwf	sprintf@c,f
  1705  01F6  3005               	movlw	5
  1706  01F7  062C               	xorwf	sprintf@c,w
  1707  01F8  1D03               	btfss	3,2
  1708  01F9  29FB               	goto	u1781
  1709  01FA  29FC               	goto	u1780
  1710  01FB                     u1781:
  1711  01FB  29D6               	goto	l1831
  1712  01FC                     u1780:
  1713  01FC                     l1837:
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1716  01FC  0827               	movf	sprintf@flag,w
  1717  01FD  3903               	andlw	3
  1718  01FE  1903               	btfsc	3,2
  1719  01FF  2A01               	goto	u1791
  1720  0200  2A02               	goto	u1790
  1721  0201                     u1791:
  1722  0201  2A0D               	goto	l1843
  1723  0202                     u1790:
  1724  0202                     l1839:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1727  0202  302D               	movlw	45
  1728  0203  00A3               	movwf	??_sprintf
  1729  0204  082B               	movf	sprintf@sp,w
  1730  0205  0084               	movwf	4
  1731  0206  0823               	movf	??_sprintf,w
  1732  0207  1383               	bcf	3,7	;select IRP bank0
  1733  0208  0080               	movwf	0
  1734  0209                     l1841:
  1735  0209  3001               	movlw	1
  1736  020A  00A3               	movwf	??_sprintf
  1737  020B  0823               	movf	??_sprintf,w
  1738  020C  07AB               	addwf	sprintf@sp,f
  1739  020D                     l1843:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1742  020D  082C               	movf	sprintf@c,w
  1743  020E  00A3               	movwf	??_sprintf
  1744  020F  0823               	movf	??_sprintf,w
  1745  0210  00A8               	movwf	sprintf@prec
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1748  0211  2A4B               	goto	l1851
  1749  0212                     l1845:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1752  0212  300A               	movlw	10
  1753  0213  00F8               	movwf	___lwmod@divisor
  1754  0214  3000               	movlw	0
  1755  0215  00F9               	movwf	___lwmod@divisor+1
  1756  0216  0828               	movf	sprintf@prec,w
  1757  0217  00A3               	movwf	??_sprintf
  1758  0218  0723               	addwf	??_sprintf,w
  1759  0219  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1760  021A  0084               	movwf	4
  1761  021B  120A  158A  200A  120A  118A  	fcall	stringdir
  1762  0220  00F0               	movwf	___lwdiv@divisor
  1763  0221  120A  158A  200A  120A  118A  	fcall	stringdir
  1764  0226  00F1               	movwf	___lwdiv@divisor+1
  1765  0227  082A               	movf	sprintf@val+1,w
  1766  0228  00F3               	movwf	___lwdiv@dividend+1
  1767  0229  0829               	movf	sprintf@val,w
  1768  022A  00F2               	movwf	___lwdiv@dividend
  1769  022B  120A  118A  2009  120A  118A  	fcall	___lwdiv
  1770  0230  0871               	movf	?___lwdiv+1,w
  1771  0231  00FB               	movwf	___lwmod@dividend+1
  1772  0232  0870               	movf	?___lwdiv,w
  1773  0233  00FA               	movwf	___lwmod@dividend
  1774  0234  120A  158A  255B  120A  118A  	fcall	___lwmod
  1775  0239  0878               	movf	?___lwmod,w
  1776  023A  3E30               	addlw	48
  1777  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1778  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1779  023D  00A4               	movwf	??_sprintf+1
  1780  023E  0824               	movf	??_sprintf+1,w
  1781  023F  00AC               	movwf	sprintf@c
  1782  0240                     l1847:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1785  0240  082C               	movf	sprintf@c,w
  1786  0241  00A3               	movwf	??_sprintf
  1787  0242  082B               	movf	sprintf@sp,w
  1788  0243  0084               	movwf	4
  1789  0244  0823               	movf	??_sprintf,w
  1790  0245  1383               	bcf	3,7	;select IRP bank0
  1791  0246  0080               	movwf	0
  1792  0247                     l1849:
  1793  0247  3001               	movlw	1
  1794  0248  00A3               	movwf	??_sprintf
  1795  0249  0823               	movf	??_sprintf,w
  1796  024A  07AB               	addwf	sprintf@sp,f
  1797  024B                     l1851:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1800  024B  30FF               	movlw	255
  1801  024C  00A3               	movwf	??_sprintf
  1802  024D  0823               	movf	??_sprintf,w
  1803  024E  07A8               	addwf	sprintf@prec,f
  1804  024F  0A28               	incf	sprintf@prec,w
  1805  0250  1D03               	btfss	3,2
  1806  0251  2A53               	goto	u1801
  1807  0252  2A54               	goto	u1800
  1808  0253                     u1801:
  1809  0253  2A12               	goto	l1845
  1810  0254                     u1800:
  1811  0254                     l1853:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1814  0254  3001               	movlw	1
  1815  0255  07A0               	addwf	sprintf@f,f
  1816  0256  30FF               	movlw	-1
  1817  0257  0720               	addwf	sprintf@f,w
  1818  0258  0084               	movwf	4
  1819  0259  120A  158A  200A  120A  118A  	fcall	stringdir
  1820  025E  00A3               	movwf	??_sprintf
  1821  025F  0823               	movf	??_sprintf,w
  1822  0260  00AC               	movwf	sprintf@c
  1823  0261  082C               	movf	sprintf@c,w
  1824  0262  1D03               	btfss	3,2
  1825  0263  2A65               	goto	u1811
  1826  0264  2A66               	goto	u1810
  1827  0265                     u1811:
  1828  0265  298B               	goto	l1803
  1829  0266                     u1810:
  1830  0266                     l1855:
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1833  0266  082B               	movf	sprintf@sp,w
  1834  0267  0084               	movwf	4
  1835  0268  1383               	bcf	3,7	;select IRP bank0
  1836  0269  0180               	clrf	0
  1837  026A                     l275:
  1838  026A  0008               	return
  1839  026B                     __end_of_sprintf:
  1840                           
  1841                           	psect	text2
  1842  0D5B                     __ptext2:	
  1843 ;; *************** function ___lwmod *****************
  1844 ;; Defined at:
  1845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  divisor         2    8[COMMON] unsigned int 
  1848 ;;  dividend        2   10[COMMON] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  counter         1   13[COMMON] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    8[COMMON] unsigned int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         4       0       0       0       0
  1861 ;;      Locals:         1       0       0       0       0
  1862 ;;      Temps:          1       0       0       0       0
  1863 ;;      Totals:         6       0       0       0       0
  1864 ;;Total ram usage:        6 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_sprintf
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function ___lwmod
  1875  0D5B                     ___lwmod:
  1876  0D5B                     l1717:	
  1877                           ;incstack = 0
  1878                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1879                           
  1880  0D5B  0878               	movf	___lwmod@divisor,w
  1881  0D5C  0479               	iorwf	___lwmod@divisor+1,w
  1882  0D5D  1903               	btfsc	3,2
  1883  0D5E  2D60               	goto	u1651
  1884  0D5F  2D61               	goto	u1650
  1885  0D60                     u1651:
  1886  0D60  2D90               	goto	l1735
  1887  0D61                     u1650:
  1888  0D61                     l1719:
  1889  0D61  01FD               	clrf	___lwmod@counter
  1890  0D62  0AFD               	incf	___lwmod@counter,f
  1891  0D63  2D6F               	goto	l1725
  1892  0D64                     l1721:
  1893  0D64  3001               	movlw	1
  1894  0D65                     u1665:
  1895  0D65  1003               	clrc
  1896  0D66  0DF8               	rlf	___lwmod@divisor,f
  1897  0D67  0DF9               	rlf	___lwmod@divisor+1,f
  1898  0D68  3EFF               	addlw	-1
  1899  0D69  1D03               	skipz
  1900  0D6A  2D65               	goto	u1665
  1901  0D6B                     l1723:
  1902  0D6B  3001               	movlw	1
  1903  0D6C  00FC               	movwf	??___lwmod
  1904  0D6D  087C               	movf	??___lwmod,w
  1905  0D6E  07FD               	addwf	___lwmod@counter,f
  1906  0D6F                     l1725:
  1907  0D6F  1FF9               	btfss	___lwmod@divisor+1,7
  1908  0D70  2D72               	goto	u1671
  1909  0D71  2D73               	goto	u1670
  1910  0D72                     u1671:
  1911  0D72  2D64               	goto	l1721
  1912  0D73                     u1670:
  1913  0D73                     l1727:
  1914  0D73  0879               	movf	___lwmod@divisor+1,w
  1915  0D74  027B               	subwf	___lwmod@dividend+1,w
  1916  0D75  1D03               	skipz
  1917  0D76  2D79               	goto	u1685
  1918  0D77  0878               	movf	___lwmod@divisor,w
  1919  0D78  027A               	subwf	___lwmod@dividend,w
  1920  0D79                     u1685:
  1921  0D79  1C03               	skipc
  1922  0D7A  2D7C               	goto	u1681
  1923  0D7B  2D7D               	goto	u1680
  1924  0D7C                     u1681:
  1925  0D7C  2D83               	goto	l1731
  1926  0D7D                     u1680:
  1927  0D7D                     l1729:
  1928  0D7D  0878               	movf	___lwmod@divisor,w
  1929  0D7E  02FA               	subwf	___lwmod@dividend,f
  1930  0D7F  0879               	movf	___lwmod@divisor+1,w
  1931  0D80  1C03               	skipc
  1932  0D81  03FB               	decf	___lwmod@dividend+1,f
  1933  0D82  02FB               	subwf	___lwmod@dividend+1,f
  1934  0D83                     l1731:
  1935  0D83  3001               	movlw	1
  1936  0D84                     u1695:
  1937  0D84  1003               	clrc
  1938  0D85  0CF9               	rrf	___lwmod@divisor+1,f
  1939  0D86  0CF8               	rrf	___lwmod@divisor,f
  1940  0D87  3EFF               	addlw	-1
  1941  0D88  1D03               	skipz
  1942  0D89  2D84               	goto	u1695
  1943  0D8A                     l1733:
  1944  0D8A  3001               	movlw	1
  1945  0D8B  02FD               	subwf	___lwmod@counter,f
  1946  0D8C  1D03               	btfss	3,2
  1947  0D8D  2D8F               	goto	u1701
  1948  0D8E  2D90               	goto	u1700
  1949  0D8F                     u1701:
  1950  0D8F  2D73               	goto	l1727
  1951  0D90                     u1700:
  1952  0D90                     l1735:
  1953  0D90  087B               	movf	___lwmod@dividend+1,w
  1954  0D91  00F9               	movwf	?___lwmod+1
  1955  0D92  087A               	movf	___lwmod@dividend,w
  1956  0D93  00F8               	movwf	?___lwmod
  1957  0D94                     l561:
  1958  0D94  0008               	return
  1959  0D95                     __end_of___lwmod:
  1960                           
  1961                           	psect	text3
  1962  0009                     __ptext3:	
  1963 ;; *************** function ___lwdiv *****************
  1964 ;; Defined at:
  1965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  divisor         2    0[COMMON] unsigned int 
  1968 ;;  dividend        2    2[COMMON] unsigned int 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  quotient        2    5[COMMON] unsigned int 
  1971 ;;  counter         1    7[COMMON] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  2    0[COMMON] unsigned int 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         4       0       0       0       0
  1982 ;;      Locals:         3       0       0       0       0
  1983 ;;      Temps:          1       0       0       0       0
  1984 ;;      Totals:         8       0       0       0       0
  1985 ;;Total ram usage:        8 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_sprintf
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function ___lwdiv
  1996  0009                     ___lwdiv:
  1997  0009                     l1691:	
  1998                           ;incstack = 0
  1999                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2000                           
  2001  0009  01F5               	clrf	___lwdiv@quotient
  2002  000A  01F6               	clrf	___lwdiv@quotient+1
  2003  000B                     l1693:
  2004  000B  0870               	movf	___lwdiv@divisor,w
  2005  000C  0471               	iorwf	___lwdiv@divisor+1,w
  2006  000D  1903               	btfsc	3,2
  2007  000E  2810               	goto	u1581
  2008  000F  2811               	goto	u1580
  2009  0010                     u1581:
  2010  0010  2848               	goto	l1713
  2011  0011                     u1580:
  2012  0011                     l1695:
  2013  0011  01F7               	clrf	___lwdiv@counter
  2014  0012  0AF7               	incf	___lwdiv@counter,f
  2015  0013  281F               	goto	l1701
  2016  0014                     l1697:
  2017  0014  3001               	movlw	1
  2018  0015                     u1595:
  2019  0015  1003               	clrc
  2020  0016  0DF0               	rlf	___lwdiv@divisor,f
  2021  0017  0DF1               	rlf	___lwdiv@divisor+1,f
  2022  0018  3EFF               	addlw	-1
  2023  0019  1D03               	skipz
  2024  001A  2815               	goto	u1595
  2025  001B                     l1699:
  2026  001B  3001               	movlw	1
  2027  001C  00F4               	movwf	??___lwdiv
  2028  001D  0874               	movf	??___lwdiv,w
  2029  001E  07F7               	addwf	___lwdiv@counter,f
  2030  001F                     l1701:
  2031  001F  1FF1               	btfss	___lwdiv@divisor+1,7
  2032  0020  2822               	goto	u1601
  2033  0021  2823               	goto	u1600
  2034  0022                     u1601:
  2035  0022  2814               	goto	l1697
  2036  0023                     u1600:
  2037  0023                     l1703:
  2038  0023  3001               	movlw	1
  2039  0024                     u1615:
  2040  0024  1003               	clrc
  2041  0025  0DF5               	rlf	___lwdiv@quotient,f
  2042  0026  0DF6               	rlf	___lwdiv@quotient+1,f
  2043  0027  3EFF               	addlw	-1
  2044  0028  1D03               	skipz
  2045  0029  2824               	goto	u1615
  2046  002A  0871               	movf	___lwdiv@divisor+1,w
  2047  002B  0273               	subwf	___lwdiv@dividend+1,w
  2048  002C  1D03               	skipz
  2049  002D  2830               	goto	u1625
  2050  002E  0870               	movf	___lwdiv@divisor,w
  2051  002F  0272               	subwf	___lwdiv@dividend,w
  2052  0030                     u1625:
  2053  0030  1C03               	skipc
  2054  0031  2833               	goto	u1621
  2055  0032  2834               	goto	u1620
  2056  0033                     u1621:
  2057  0033  283B               	goto	l1709
  2058  0034                     u1620:
  2059  0034                     l1705:
  2060  0034  0870               	movf	___lwdiv@divisor,w
  2061  0035  02F2               	subwf	___lwdiv@dividend,f
  2062  0036  0871               	movf	___lwdiv@divisor+1,w
  2063  0037  1C03               	skipc
  2064  0038  03F3               	decf	___lwdiv@dividend+1,f
  2065  0039  02F3               	subwf	___lwdiv@dividend+1,f
  2066  003A                     l1707:
  2067  003A  1475               	bsf	___lwdiv@quotient,0
  2068  003B                     l1709:
  2069  003B  3001               	movlw	1
  2070  003C                     u1635:
  2071  003C  1003               	clrc
  2072  003D  0CF1               	rrf	___lwdiv@divisor+1,f
  2073  003E  0CF0               	rrf	___lwdiv@divisor,f
  2074  003F  3EFF               	addlw	-1
  2075  0040  1D03               	skipz
  2076  0041  283C               	goto	u1635
  2077  0042                     l1711:
  2078  0042  3001               	movlw	1
  2079  0043  02F7               	subwf	___lwdiv@counter,f
  2080  0044  1D03               	btfss	3,2
  2081  0045  2847               	goto	u1641
  2082  0046  2848               	goto	u1640
  2083  0047                     u1641:
  2084  0047  2823               	goto	l1703
  2085  0048                     u1640:
  2086  0048                     l1713:
  2087  0048  0876               	movf	___lwdiv@quotient+1,w
  2088  0049  00F1               	movwf	?___lwdiv+1
  2089  004A  0875               	movf	___lwdiv@quotient,w
  2090  004B  00F0               	movwf	?___lwdiv
  2091  004C                     l551:
  2092  004C  0008               	return
  2093  004D                     __end_of___lwdiv:
  2094                           
  2095                           	psect	text4
  2096  0D95                     __ptext4:	
  2097 ;; *************** function _setup *****************
  2098 ;; Defined at:
  2099 ;;		line 40 in file "Master_I2C.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         0       0       0       0       0
  2114 ;;      Locals:         0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0
  2116 ;;      Totals:         0       0       0       0       0
  2117 ;;Total ram usage:        0 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    2
  2120 ;; This function calls:
  2121 ;;		_I2C_Master_Init
  2122 ;;		_Lcd_Clear
  2123 ;;		_Lcd_Init
  2124 ;;		_Lcd_Set_Cursor
  2125 ;;		_Lcd_Write_String
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _setup
  2133  0D95                     _setup:
  2134  0D95                     l1755:	
  2135                           ;incstack = 0
  2136                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2137                           
  2138                           
  2139                           ;Master_I2C.c: 41:     ANSEL = 0x00;
  2140  0D95  1683               	bsf	3,5	;RP0=1, select bank3
  2141  0D96  1703               	bsf	3,6	;RP1=1, select bank3
  2142  0D97  0188               	clrf	8	;volatile
  2143                           
  2144                           ;Master_I2C.c: 42:     ANSELH = 0x00;
  2145  0D98  0189               	clrf	9	;volatile
  2146                           
  2147                           ;Master_I2C.c: 44:     TRISA = 0x00;
  2148  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  2149  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  2150  0D9B  0185               	clrf	5	;volatile
  2151                           
  2152                           ;Master_I2C.c: 45:     TRISB = 0x00;
  2153  0D9C  0186               	clrf	6	;volatile
  2154                           
  2155                           ;Master_I2C.c: 46:     TRISC = 0x00;
  2156  0D9D  0187               	clrf	7	;volatile
  2157                           
  2158                           ;Master_I2C.c: 47:     TRISD = 0x00;
  2159  0D9E  0188               	clrf	8	;volatile
  2160                           
  2161                           ;Master_I2C.c: 48:     PORTB = 0;
  2162  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0DA1  0186               	clrf	6	;volatile
  2165  0DA2                     l1757:
  2166                           
  2167                           ;Master_I2C.c: 50:     OSCCONbits.IRCF = 0B111;
  2168  0DA2  3070               	movlw	112
  2169  0DA3  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0DA4  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0DA5  048F               	iorwf	15,f	;volatile
  2172  0DA6                     l1759:
  2173                           
  2174                           ;Master_I2C.c: 51:     OSCCONbits.OSTS = 0;
  2175  0DA6  118F               	bcf	15,3	;volatile
  2176  0DA7                     l1761:
  2177                           
  2178                           ;Master_I2C.c: 52:     OSCCONbits.SCS = 1;
  2179  0DA7  140F               	bsf	15,0	;volatile
  2180  0DA8                     l1763:
  2181                           
  2182                           ;Master_I2C.c: 54:     I2C_Master_Init(100000);
  2183  0DA8  3000               	movlw	0
  2184  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0DAB  00A3               	movwf	I2C_Master_Init@c+3
  2187  0DAC  3001               	movlw	1
  2188  0DAD  00A2               	movwf	I2C_Master_Init@c+2
  2189  0DAE  3086               	movlw	134
  2190  0DAF  00A1               	movwf	I2C_Master_Init@c+1
  2191  0DB0  30A0               	movlw	160
  2192  0DB1  00A0               	movwf	I2C_Master_Init@c
  2193  0DB2  120A  158A  2523  120A  158A  	fcall	_I2C_Master_Init
  2194  0DB7                     l1765:
  2195                           
  2196                           ;Master_I2C.c: 55:     Lcd_Init();
  2197  0DB7  120A  158A  266E  120A  158A  	fcall	_Lcd_Init
  2198  0DBC                     l1767:
  2199                           
  2200                           ;Master_I2C.c: 56:     Lcd_Clear();
  2201  0DBC  120A  158A  245C  120A  158A  	fcall	_Lcd_Clear
  2202  0DC1                     l1769:
  2203                           
  2204                           ;Master_I2C.c: 57:     Lcd_Set_Cursor(1,1);
  2205  0DC1  01F3               	clrf	Lcd_Set_Cursor@b
  2206  0DC2  0AF3               	incf	Lcd_Set_Cursor@b,f
  2207  0DC3  3001               	movlw	1
  2208  0DC4  120A  158A  248B  120A  158A  	fcall	_Lcd_Set_Cursor
  2209  0DC9                     l1771:
  2210                           
  2211                           ;Master_I2C.c: 58:     Lcd_Write_String("Pot: Con: Temp:");
  2212  0DC9  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2213  0DCA  00F2               	movwf	Lcd_Write_String@a
  2214  0DCB  3080               	movlw	128
  2215  0DCC  00F3               	movwf	Lcd_Write_String@a+1
  2216  0DCD  120A  158A  25D3  120A  158A  	fcall	_Lcd_Write_String
  2217  0DD2                     l64:
  2218  0DD2  0008               	return
  2219  0DD3                     __end_of_setup:
  2220                           
  2221                           	psect	text5
  2222  0DD3                     __ptext5:	
  2223 ;; *************** function _Lcd_Write_String *****************
  2224 ;; Defined at:
  2225 ;;		line 72 in file "LCD.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  a               2    2[COMMON] PTR unsigned char 
  2228 ;;		 -> buffer(1), STR_1(16), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  i               2    7[COMMON] int 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         2       0       0       0       0
  2241 ;;      Locals:         2       0       0       0       0
  2242 ;;      Temps:          3       0       0       0       0
  2243 ;;      Totals:         7       0       0       0       0
  2244 ;;Total ram usage:        7 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		_Lcd_Write_Char
  2249 ;; This function is called by:
  2250 ;;		_setup
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _Lcd_Write_String
  2257  0DD3                     _Lcd_Write_String:
  2258  0DD3                     l1597:	
  2259                           ;incstack = 0
  2260                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2261                           
  2262                           
  2263                           ;LCD.c: 73:     int i;;LCD.c: 74:     for (i = 0; a[i] != '\0'; i++)
  2264  0DD3  01F7               	clrf	Lcd_Write_String@i
  2265  0DD4  01F8               	clrf	Lcd_Write_String@i+1
  2266  0DD5  2DF8               	goto	l1603
  2267  0DD6                     l1599:
  2268                           
  2269                           ;LCD.c: 75:         Lcd_Write_Char(a[i]);
  2270  0DD6  0877               	movf	Lcd_Write_String@i,w
  2271  0DD7  0772               	addwf	Lcd_Write_String@a,w
  2272  0DD8  00F5               	movwf	??_Lcd_Write_String+1
  2273  0DD9  0873               	movf	Lcd_Write_String@a+1,w
  2274  0DDA  00F4               	movwf	??_Lcd_Write_String
  2275  0DDB  1803               	skipnc
  2276  0DDC  0AF4               	incf	??_Lcd_Write_String,f
  2277  0DDD  1FF7               	btfss	Lcd_Write_String@i,7
  2278  0DDE  2DE0               	goto	u1340
  2279  0DDF  03F4               	decf	??_Lcd_Write_String,f
  2280  0DE0                     u1340:
  2281  0DE0  0874               	movf	??_Lcd_Write_String,w
  2282  0DE1  00F6               	movwf	??_Lcd_Write_String+2
  2283  0DE2  0876               	movf	??_Lcd_Write_String+2,w
  2284  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0DE5  00FF               	movwf	btemp+1
  2287  0DE6  0875               	movf	??_Lcd_Write_String+1,w
  2288  0DE7  0084               	movwf	4
  2289  0DE8  120A  158A  2000  120A  158A  	fcall	stringtab
  2290  0DED  120A  158A  2469  120A  158A  	fcall	_Lcd_Write_Char
  2291  0DF2                     l1601:
  2292  0DF2  3001               	movlw	1
  2293  0DF3  07F7               	addwf	Lcd_Write_String@i,f
  2294  0DF4  1803               	skipnc
  2295  0DF5  0AF8               	incf	Lcd_Write_String@i+1,f
  2296  0DF6  3000               	movlw	0
  2297  0DF7  07F8               	addwf	Lcd_Write_String@i+1,f
  2298  0DF8                     l1603:
  2299  0DF8  0877               	movf	Lcd_Write_String@i,w
  2300  0DF9  0772               	addwf	Lcd_Write_String@a,w
  2301  0DFA  00F5               	movwf	??_Lcd_Write_String+1
  2302  0DFB  0873               	movf	Lcd_Write_String@a+1,w
  2303  0DFC  00F4               	movwf	??_Lcd_Write_String
  2304  0DFD  1803               	skipnc
  2305  0DFE  0AF4               	incf	??_Lcd_Write_String,f
  2306  0DFF  1FF7               	btfss	Lcd_Write_String@i,7
  2307  0E00  2E02               	goto	u1350
  2308  0E01  03F4               	decf	??_Lcd_Write_String,f
  2309  0E02                     u1350:
  2310  0E02  0874               	movf	??_Lcd_Write_String,w
  2311  0E03  00F6               	movwf	??_Lcd_Write_String+2
  2312  0E04  0876               	movf	??_Lcd_Write_String+2,w
  2313  0E05  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0E06  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0E07  00FF               	movwf	btemp+1
  2316  0E08  0875               	movf	??_Lcd_Write_String+1,w
  2317  0E09  0084               	movwf	4
  2318  0E0A  120A  158A  2000  120A  158A  	fcall	stringtab
  2319  0E0F  3A00               	xorlw	0
  2320  0E10  1D03               	skipz
  2321  0E11  2E13               	goto	u1361
  2322  0E12  2E14               	goto	u1360
  2323  0E13                     u1361:
  2324  0E13  2DD6               	goto	l1599
  2325  0E14                     u1360:
  2326  0E14                     l159:
  2327  0E14  0008               	return
  2328  0E15                     __end_of_Lcd_Write_String:
  2329                           
  2330                           	psect	text6
  2331  0C69                     __ptext6:	
  2332 ;; *************** function _Lcd_Write_Char *****************
  2333 ;; Defined at:
  2334 ;;		line 58 in file "LCD.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  a               1    wreg     unsigned char 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  a               1    1[COMMON] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         1       0       0       0       0
  2350 ;;      Temps:          1       0       0       0       0
  2351 ;;      Totals:         2       0       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_Lcd_Write_String
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _Lcd_Write_Char
  2363  0C69                     _Lcd_Write_Char:
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _Lcd_Write_Char: [wreg]
  2367                           ;Lcd_Write_Char@a stored from wreg
  2368  0C69  00F1               	movwf	Lcd_Write_Char@a
  2369  0C6A                     l1515:
  2370                           
  2371                           ;LCD.c: 61:     RC6 = 1;
  2372  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0C6C  1707               	bsf	7,6	;volatile
  2375  0C6D                     l1517:
  2376                           
  2377                           ;LCD.c: 62:     PORTD = a;
  2378  0C6D  0871               	movf	Lcd_Write_Char@a,w
  2379  0C6E  0088               	movwf	8	;volatile
  2380  0C6F                     l1519:
  2381                           
  2382                           ;LCD.c: 63:     RC7 = 1;
  2383  0C6F  1787               	bsf	7,7	;volatile
  2384                           
  2385                           ;LCD.c: 64:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2386  0C70  300D               	movlw	13
  2387  0C71  00F0               	movwf	??_Lcd_Write_Char
  2388  0C72                     u2527:
  2389  0C72  0BF0               	decfsz	??_Lcd_Write_Char,f
  2390  0C73  2C72               	goto	u2527
  2391  0C74                     l1521:
  2392                           
  2393                           ;LCD.c: 69:     RC7 = 0;
  2394  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0C76  1387               	bcf	7,7	;volatile
  2397  0C77                     l153:
  2398  0C77  0008               	return
  2399  0C78                     __end_of_Lcd_Write_Char:
  2400                           
  2401                           	psect	text7
  2402  0C8B                     __ptext7:	
  2403 ;; *************** function _Lcd_Set_Cursor *****************
  2404 ;; Defined at:
  2405 ;;		line 29 in file "LCD.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  a               1    wreg     unsigned char 
  2408 ;;  b               1    3[COMMON] unsigned char 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  a               1    4[COMMON] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, pclath, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2420 ;;      Params:         1       0       0       0       0
  2421 ;;      Locals:         1       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    1
  2427 ;; This function calls:
  2428 ;;		_Lcd_Cmd
  2429 ;; This function is called by:
  2430 ;;		_setup
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _Lcd_Set_Cursor
  2437  0C8B                     _Lcd_Set_Cursor:
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2441                           ;Lcd_Set_Cursor@a stored from wreg
  2442  0C8B  00F4               	movwf	Lcd_Set_Cursor@a
  2443  0C8C                     l1589:
  2444                           
  2445                           ;LCD.c: 30:     if (a == 1){
  2446  0C8C  0374               	decf	Lcd_Set_Cursor@a,w
  2447  0C8D  1D03               	btfss	3,2
  2448  0C8E  2C90               	goto	u1321
  2449  0C8F  2C91               	goto	u1320
  2450  0C90                     u1321:
  2451  0C90  2C9A               	goto	l1593
  2452  0C91                     u1320:
  2453  0C91                     l1591:
  2454                           
  2455                           ;LCD.c: 31:         Lcd_Cmd((b & 0x0F)|0x80);
  2456  0C91  0873               	movf	Lcd_Set_Cursor@b,w
  2457  0C92  390F               	andlw	15
  2458  0C93  3880               	iorlw	128
  2459  0C94  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2460                           
  2461                           ;LCD.c: 32:     }
  2462  0C99  2CA8               	goto	l147
  2463  0C9A                     l1593:
  2464  0C9A  3002               	movlw	2
  2465  0C9B  0674               	xorwf	Lcd_Set_Cursor@a,w
  2466  0C9C  1D03               	btfss	3,2
  2467  0C9D  2C9F               	goto	u1331
  2468  0C9E  2CA0               	goto	u1330
  2469  0C9F                     u1331:
  2470  0C9F  2CA8               	goto	l147
  2471  0CA0                     u1330:
  2472  0CA0                     l1595:
  2473                           
  2474                           ;LCD.c: 34:         Lcd_Cmd((b & 0x0F)|0xC0);
  2475  0CA0  0873               	movf	Lcd_Set_Cursor@b,w
  2476  0CA1  390F               	andlw	15
  2477  0CA2  38C0               	iorlw	192
  2478  0CA3  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2479  0CA8                     l147:
  2480  0CA8  0008               	return
  2481  0CA9                     __end_of_Lcd_Set_Cursor:
  2482                           
  2483                           	psect	text8
  2484  0E6E                     __ptext8:	
  2485 ;; *************** function _Lcd_Init *****************
  2486 ;; Defined at:
  2487 ;;		line 39 in file "LCD.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0
  2503 ;;      Temps:          2       0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    1
  2508 ;; This function calls:
  2509 ;;		_Lcd_Cmd
  2510 ;; This function is called by:
  2511 ;;		_setup
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _Lcd_Init
  2517  0E6E                     _Lcd_Init:
  2518  0E6E                     l1559:	
  2519                           ;incstack = 0
  2520                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2521                           
  2522                           
  2523                           ;LCD.c: 40:     PORTD = (0x00);
  2524  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0E70  0188               	clrf	8	;volatile
  2527  0E71                     l1561:
  2528                           
  2529                           ;LCD.c: 41:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2530  0E71  301A               	movlw	26
  2531  0E72  00F4               	movwf	??_Lcd_Init+1
  2532  0E73  30F8               	movlw	248
  2533  0E74  00F3               	movwf	??_Lcd_Init
  2534  0E75                     u2537:
  2535  0E75  0BF3               	decfsz	??_Lcd_Init,f
  2536  0E76  2E75               	goto	u2537
  2537  0E77  0BF4               	decfsz	??_Lcd_Init+1,f
  2538  0E78  2E75               	goto	u2537
  2539  0E79  0000               	nop
  2540  0E7A                     l1563:
  2541                           
  2542                           ;LCD.c: 42:     Lcd_Cmd(0x30);
  2543  0E7A  3030               	movlw	48
  2544  0E7B  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2545  0E80                     l1565:
  2546                           
  2547                           ;LCD.c: 43:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2548  0E80  3007               	movlw	7
  2549  0E81  00F4               	movwf	??_Lcd_Init+1
  2550  0E82  307D               	movlw	125
  2551  0E83  00F3               	movwf	??_Lcd_Init
  2552  0E84                     u2547:
  2553  0E84  0BF3               	decfsz	??_Lcd_Init,f
  2554  0E85  2E84               	goto	u2547
  2555  0E86  0BF4               	decfsz	??_Lcd_Init+1,f
  2556  0E87  2E84               	goto	u2547
  2557  0E88                     l1567:
  2558                           
  2559                           ;LCD.c: 44:     Lcd_Cmd(0x30);
  2560  0E88  3030               	movlw	48
  2561  0E89  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2562  0E8E                     l1569:
  2563                           
  2564                           ;LCD.c: 45:     _delay((unsigned long)((11)*(4000000/4000.0)));
  2565  0E8E  300F               	movlw	15
  2566  0E8F  00F4               	movwf	??_Lcd_Init+1
  2567  0E90  3047               	movlw	71
  2568  0E91  00F3               	movwf	??_Lcd_Init
  2569  0E92                     u2557:
  2570  0E92  0BF3               	decfsz	??_Lcd_Init,f
  2571  0E93  2E92               	goto	u2557
  2572  0E94  0BF4               	decfsz	??_Lcd_Init+1,f
  2573  0E95  2E92               	goto	u2557
  2574  0E96  2E97               	nop2
  2575  0E97                     l1571:
  2576                           
  2577                           ;LCD.c: 46:     Lcd_Cmd(0x30);
  2578  0E97  3030               	movlw	48
  2579  0E98  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2580  0E9D                     l1573:
  2581                           
  2582                           ;LCD.c: 48:     Lcd_Cmd(0x38);
  2583  0E9D  3038               	movlw	56
  2584  0E9E  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2585  0EA3                     l1575:
  2586                           
  2587                           ;LCD.c: 49:     Lcd_Cmd(0x10);
  2588  0EA3  3010               	movlw	16
  2589  0EA4  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2590  0EA9                     l1577:
  2591                           
  2592                           ;LCD.c: 50:     Lcd_Cmd(0x01);
  2593  0EA9  3001               	movlw	1
  2594  0EAA  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2595  0EAF                     l1579:
  2596                           
  2597                           ;LCD.c: 51:     Lcd_Cmd(0x06);
  2598  0EAF  3006               	movlw	6
  2599  0EB0  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2600  0EB5                     l1581:
  2601                           
  2602                           ;LCD.c: 52:     Lcd_Cmd(0x10);
  2603  0EB5  3010               	movlw	16
  2604  0EB6  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2605  0EBB                     l1583:
  2606                           
  2607                           ;LCD.c: 53:     Lcd_Cmd(0x0C);
  2608  0EBB  300C               	movlw	12
  2609  0EBC  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2610  0EC1                     l1585:
  2611                           
  2612                           ;LCD.c: 54:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2613  0EC1  3082               	movlw	130
  2614  0EC2  00F4               	movwf	??_Lcd_Init+1
  2615  0EC3  30DD               	movlw	221
  2616  0EC4  00F3               	movwf	??_Lcd_Init
  2617  0EC5                     u2567:
  2618  0EC5  0BF3               	decfsz	??_Lcd_Init,f
  2619  0EC6  2EC5               	goto	u2567
  2620  0EC7  0BF4               	decfsz	??_Lcd_Init+1,f
  2621  0EC8  2EC5               	goto	u2567
  2622  0EC9  2ECA               	nop2
  2623  0ECA                     l150:
  2624  0ECA  0008               	return
  2625  0ECB                     __end_of_Lcd_Init:
  2626                           
  2627                           	psect	text9
  2628  0C5C                     __ptext9:	
  2629 ;; *************** function _Lcd_Clear *****************
  2630 ;; Defined at:
  2631 ;;		line 24 in file "LCD.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    1
  2652 ;; This function calls:
  2653 ;;		_Lcd_Cmd
  2654 ;; This function is called by:
  2655 ;;		_setup
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _Lcd_Clear
  2661  0C5C                     _Lcd_Clear:
  2662  0C5C                     l1587:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2665                           
  2666                           
  2667                           ;LCD.c: 25:     Lcd_Cmd(0);
  2668  0C5C  3000               	movlw	0
  2669  0C5D  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2670                           
  2671                           ;LCD.c: 26:     Lcd_Cmd(1);
  2672  0C62  3001               	movlw	1
  2673  0C63  120A  158A  2478  120A  158A  	fcall	_Lcd_Cmd
  2674  0C68                     l141:
  2675  0C68  0008               	return
  2676  0C69                     __end_of_Lcd_Clear:
  2677                           
  2678                           	psect	text10
  2679  0C78                     __ptext10:	
  2680 ;; *************** function _Lcd_Cmd *****************
  2681 ;; Defined at:
  2682 ;;		line 16 in file "LCD.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  a               1    wreg     unsigned char 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  a               1    2[COMMON] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         0       0       0       0       0
  2697 ;;      Locals:         1       0       0       0       0
  2698 ;;      Temps:          2       0       0       0       0
  2699 ;;      Totals:         3       0       0       0       0
  2700 ;;Total ram usage:        3 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_Lcd_Clear
  2706 ;;		_Lcd_Set_Cursor
  2707 ;;		_Lcd_Init
  2708 ;;		_Lcd_Shift_Right
  2709 ;;		_Lcd_Shift_Left
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _Lcd_Cmd
  2715  0C78                     _Lcd_Cmd:
  2716                           
  2717                           ;incstack = 0
  2718                           ; Regs used in _Lcd_Cmd: [wreg]
  2719                           ;Lcd_Cmd@a stored from wreg
  2720  0C78  00F2               	movwf	Lcd_Cmd@a
  2721  0C79                     l1507:
  2722                           
  2723                           ;LCD.c: 17:     RC6 = 0;
  2724  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0C7B  1307               	bcf	7,6	;volatile
  2727  0C7C                     l1509:
  2728                           
  2729                           ;LCD.c: 18:     PORTD = a;
  2730  0C7C  0872               	movf	Lcd_Cmd@a,w
  2731  0C7D  0088               	movwf	8	;volatile
  2732  0C7E                     l1511:
  2733                           
  2734                           ;LCD.c: 19:     RC7 = 1;
  2735  0C7E  1787               	bsf	7,7	;volatile
  2736                           
  2737                           ;LCD.c: 20:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2738  0C7F  3007               	movlw	7
  2739  0C80  00F1               	movwf	??_Lcd_Cmd+1
  2740  0C81  307D               	movlw	125
  2741  0C82  00F0               	movwf	??_Lcd_Cmd
  2742  0C83                     u2577:
  2743  0C83  0BF0               	decfsz	??_Lcd_Cmd,f
  2744  0C84  2C83               	goto	u2577
  2745  0C85  0BF1               	decfsz	??_Lcd_Cmd+1,f
  2746  0C86  2C83               	goto	u2577
  2747  0C87                     l1513:
  2748                           
  2749                           ;LCD.c: 21:     RC7 = 0;
  2750  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0C89  1387               	bcf	7,7	;volatile
  2753  0C8A                     l138:
  2754  0C8A  0008               	return
  2755  0C8B                     __end_of_Lcd_Cmd:
  2756                           
  2757                           	psect	text11
  2758  0D23                     __ptext11:	
  2759 ;; *************** function _I2C_Master_Init *****************
  2760 ;; Defined at:
  2761 ;;		line 16 in file "I2C_2.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  c               4    0[BANK0 ] const unsigned long 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0, pclath, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         0       4       0       0       0
  2776 ;;      Locals:         0       0       0       0       0
  2777 ;;      Temps:          0       4       0       0       0
  2778 ;;      Totals:         0       8       0       0       0
  2779 ;;Total ram usage:        8 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; Hardware stack levels required when called:    1
  2782 ;; This function calls:
  2783 ;;		___lldiv
  2784 ;; This function is called by:
  2785 ;;		_setup
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _I2C_Master_Init
  2791  0D23                     _I2C_Master_Init:
  2792  0D23                     l1547:	
  2793                           ;incstack = 0
  2794                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2795                           
  2796                           
  2797                           ;I2C_2.c: 16: void I2C_Master_Init(const unsigned long c);I2C_2.c: 17: {;I2C_2.c: 18:   
      +                            SSPCON = 0b00101000;
  2798  0D23  3028               	movlw	40
  2799  0D24  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0D25  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0D26  0094               	movwf	20	;volatile
  2802  0D27                     l1549:
  2803                           
  2804                           ;I2C_2.c: 19:     SSPCON2 = 0;
  2805  0D27  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0D28  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0D29  0191               	clrf	17	;volatile
  2808  0D2A                     l1551:
  2809                           
  2810                           ;I2C_2.c: 20:     SSPADD = (8000000/(4*c))-1;
  2811  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0D2C  0820               	movf	I2C_Master_Init@c,w
  2814  0D2D  00A4               	movwf	??_I2C_Master_Init
  2815  0D2E  0821               	movf	I2C_Master_Init@c+1,w
  2816  0D2F  00A5               	movwf	??_I2C_Master_Init+1
  2817  0D30  0822               	movf	I2C_Master_Init@c+2,w
  2818  0D31  00A6               	movwf	??_I2C_Master_Init+2
  2819  0D32  0823               	movf	I2C_Master_Init@c+3,w
  2820  0D33  00A7               	movwf	??_I2C_Master_Init+3
  2821  0D34  3002               	movlw	2
  2822  0D35                     u1315:
  2823  0D35  1003               	clrc
  2824  0D36  0DA4               	rlf	??_I2C_Master_Init,f
  2825  0D37  0DA5               	rlf	??_I2C_Master_Init+1,f
  2826  0D38  0DA6               	rlf	??_I2C_Master_Init+2,f
  2827  0D39  0DA7               	rlf	??_I2C_Master_Init+3,f
  2828  0D3A                     u1310:
  2829  0D3A  3EFF               	addlw	-1
  2830  0D3B  1D03               	skipz
  2831  0D3C  2D35               	goto	u1315
  2832  0D3D  0827               	movf	??_I2C_Master_Init+3,w
  2833  0D3E  00F3               	movwf	___lldiv@divisor+3
  2834  0D3F  0826               	movf	??_I2C_Master_Init+2,w
  2835  0D40  00F2               	movwf	___lldiv@divisor+2
  2836  0D41  0825               	movf	??_I2C_Master_Init+1,w
  2837  0D42  00F1               	movwf	___lldiv@divisor+1
  2838  0D43  0824               	movf	??_I2C_Master_Init,w
  2839  0D44  00F0               	movwf	___lldiv@divisor
  2840  0D45  3000               	movlw	0
  2841  0D46  00F7               	movwf	___lldiv@dividend+3
  2842  0D47  307A               	movlw	122
  2843  0D48  00F6               	movwf	___lldiv@dividend+2
  2844  0D49  3012               	movlw	18
  2845  0D4A  00F5               	movwf	___lldiv@dividend+1
  2846  0D4B  3000               	movlw	0
  2847  0D4C  00F4               	movwf	___lldiv@dividend
  2848  0D4D  120A  158A  2731  120A  158A  	fcall	___lldiv
  2849  0D52  0870               	movf	?___lldiv,w
  2850  0D53  3EFF               	addlw	255
  2851  0D54  1683               	bsf	3,5	;RP0=1, select bank1
  2852  0D55  1303               	bcf	3,6	;RP1=0, select bank1
  2853  0D56  0093               	movwf	19	;volatile
  2854  0D57                     l1553:
  2855                           
  2856                           ;I2C_2.c: 21:     SSPSTAT = 0;
  2857  0D57  0194               	clrf	20	;volatile
  2858  0D58                     l1555:
  2859                           
  2860                           ;I2C_2.c: 22:     TRISCbits.TRISC3 = 1;
  2861  0D58  1587               	bsf	7,3	;volatile
  2862  0D59                     l1557:
  2863                           
  2864                           ;I2C_2.c: 23:     TRISCbits.TRISC4 = 1;
  2865  0D59  1607               	bsf	7,4	;volatile
  2866  0D5A                     l101:
  2867  0D5A  0008               	return
  2868  0D5B                     __end_of_I2C_Master_Init:
  2869                           
  2870                           	psect	text12
  2871  0F31                     __ptext12:	
  2872 ;; *************** function ___lldiv *****************
  2873 ;; Defined at:
  2874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  divisor         4    0[COMMON] unsigned long 
  2877 ;;  dividend        4    4[COMMON] unsigned long 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  quotient        4    9[COMMON] unsigned long 
  2880 ;;  counter         1   13[COMMON] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  4    0[COMMON] unsigned long 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         8       0       0       0       0
  2891 ;;      Locals:         5       0       0       0       0
  2892 ;;      Temps:          1       0       0       0       0
  2893 ;;      Totals:        14       0       0       0       0
  2894 ;;Total ram usage:       14 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_I2C_Master_Init
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function ___lldiv
  2905  0F31                     ___lldiv:
  2906  0F31                     l1523:	
  2907                           ;incstack = 0
  2908                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2909                           
  2910  0F31  3000               	movlw	0
  2911  0F32  00FC               	movwf	___lldiv@quotient+3
  2912  0F33  3000               	movlw	0
  2913  0F34  00FB               	movwf	___lldiv@quotient+2
  2914  0F35  3000               	movlw	0
  2915  0F36  00FA               	movwf	___lldiv@quotient+1
  2916  0F37  3000               	movlw	0
  2917  0F38  00F9               	movwf	___lldiv@quotient
  2918  0F39  0873               	movf	___lldiv@divisor+3,w
  2919  0F3A  0472               	iorwf	___lldiv@divisor+2,w
  2920  0F3B  0471               	iorwf	___lldiv@divisor+1,w
  2921  0F3C  0470               	iorwf	___lldiv@divisor,w
  2922  0F3D  1903               	skipnz
  2923  0F3E  2F40               	goto	u1241
  2924  0F3F  2F41               	goto	u1240
  2925  0F40                     u1241:
  2926  0F40  2F8E               	goto	l1543
  2927  0F41                     u1240:
  2928  0F41                     l1525:
  2929  0F41  01FD               	clrf	___lldiv@counter
  2930  0F42  0AFD               	incf	___lldiv@counter,f
  2931  0F43  2F51               	goto	l1529
  2932  0F44                     l1527:
  2933  0F44  3001               	movlw	1
  2934  0F45  00F8               	movwf	??___lldiv
  2935  0F46                     u1255:
  2936  0F46  1003               	clrc
  2937  0F47  0DF0               	rlf	___lldiv@divisor,f
  2938  0F48  0DF1               	rlf	___lldiv@divisor+1,f
  2939  0F49  0DF2               	rlf	___lldiv@divisor+2,f
  2940  0F4A  0DF3               	rlf	___lldiv@divisor+3,f
  2941  0F4B  0BF8               	decfsz	??___lldiv,f
  2942  0F4C  2F46               	goto	u1255
  2943  0F4D  3001               	movlw	1
  2944  0F4E  00F8               	movwf	??___lldiv
  2945  0F4F  0878               	movf	??___lldiv,w
  2946  0F50  07FD               	addwf	___lldiv@counter,f
  2947  0F51                     l1529:
  2948  0F51  1FF3               	btfss	___lldiv@divisor+3,7
  2949  0F52  2F54               	goto	u1261
  2950  0F53  2F55               	goto	u1260
  2951  0F54                     u1261:
  2952  0F54  2F44               	goto	l1527
  2953  0F55                     u1260:
  2954  0F55                     l1531:
  2955  0F55  3001               	movlw	1
  2956  0F56  00F8               	movwf	??___lldiv
  2957  0F57                     u1275:
  2958  0F57  1003               	clrc
  2959  0F58  0DF9               	rlf	___lldiv@quotient,f
  2960  0F59  0DFA               	rlf	___lldiv@quotient+1,f
  2961  0F5A  0DFB               	rlf	___lldiv@quotient+2,f
  2962  0F5B  0DFC               	rlf	___lldiv@quotient+3,f
  2963  0F5C  0BF8               	decfsz	??___lldiv,f
  2964  0F5D  2F57               	goto	u1275
  2965  0F5E                     l1533:
  2966  0F5E  0873               	movf	___lldiv@divisor+3,w
  2967  0F5F  0277               	subwf	___lldiv@dividend+3,w
  2968  0F60  1D03               	skipz
  2969  0F61  2F6C               	goto	u1285
  2970  0F62  0872               	movf	___lldiv@divisor+2,w
  2971  0F63  0276               	subwf	___lldiv@dividend+2,w
  2972  0F64  1D03               	skipz
  2973  0F65  2F6C               	goto	u1285
  2974  0F66  0871               	movf	___lldiv@divisor+1,w
  2975  0F67  0275               	subwf	___lldiv@dividend+1,w
  2976  0F68  1D03               	skipz
  2977  0F69  2F6C               	goto	u1285
  2978  0F6A  0870               	movf	___lldiv@divisor,w
  2979  0F6B  0274               	subwf	___lldiv@dividend,w
  2980  0F6C                     u1285:
  2981  0F6C  1C03               	skipc
  2982  0F6D  2F6F               	goto	u1281
  2983  0F6E  2F70               	goto	u1280
  2984  0F6F                     u1281:
  2985  0F6F  2F7F               	goto	l1539
  2986  0F70                     u1280:
  2987  0F70                     l1535:
  2988  0F70  0870               	movf	___lldiv@divisor,w
  2989  0F71  02F4               	subwf	___lldiv@dividend,f
  2990  0F72  0871               	movf	___lldiv@divisor+1,w
  2991  0F73  1C03               	skipc
  2992  0F74  0F71               	incfsz	___lldiv@divisor+1,w
  2993  0F75  02F5               	subwf	___lldiv@dividend+1,f
  2994  0F76  0872               	movf	___lldiv@divisor+2,w
  2995  0F77  1C03               	skipc
  2996  0F78  0F72               	incfsz	___lldiv@divisor+2,w
  2997  0F79  02F6               	subwf	___lldiv@dividend+2,f
  2998  0F7A  0873               	movf	___lldiv@divisor+3,w
  2999  0F7B  1C03               	skipc
  3000  0F7C  0F73               	incfsz	___lldiv@divisor+3,w
  3001  0F7D  02F7               	subwf	___lldiv@dividend+3,f
  3002  0F7E                     l1537:
  3003  0F7E  1479               	bsf	___lldiv@quotient,0
  3004  0F7F                     l1539:
  3005  0F7F  3001               	movlw	1
  3006  0F80                     u1295:
  3007  0F80  1003               	clrc
  3008  0F81  0CF3               	rrf	___lldiv@divisor+3,f
  3009  0F82  0CF2               	rrf	___lldiv@divisor+2,f
  3010  0F83  0CF1               	rrf	___lldiv@divisor+1,f
  3011  0F84  0CF0               	rrf	___lldiv@divisor,f
  3012  0F85  3EFF               	addlw	-1
  3013  0F86  1D03               	skipz
  3014  0F87  2F80               	goto	u1295
  3015  0F88                     l1541:
  3016  0F88  3001               	movlw	1
  3017  0F89  02FD               	subwf	___lldiv@counter,f
  3018  0F8A  1D03               	btfss	3,2
  3019  0F8B  2F8D               	goto	u1301
  3020  0F8C  2F8E               	goto	u1300
  3021  0F8D                     u1301:
  3022  0F8D  2F55               	goto	l1531
  3023  0F8E                     u1300:
  3024  0F8E                     l1543:
  3025  0F8E  087C               	movf	___lldiv@quotient+3,w
  3026  0F8F  00F3               	movwf	?___lldiv+3
  3027  0F90  087B               	movf	___lldiv@quotient+2,w
  3028  0F91  00F2               	movwf	?___lldiv+2
  3029  0F92  087A               	movf	___lldiv@quotient+1,w
  3030  0F93  00F1               	movwf	?___lldiv+1
  3031  0F94  0879               	movf	___lldiv@quotient,w
  3032  0F95  00F0               	movwf	?___lldiv
  3033  0F96                     l315:
  3034  0F96  0008               	return
  3035  0F97                     __end_of___lldiv:
  3036                           
  3037                           	psect	text13
  3038  00C9                     __ptext13:	
  3039 ;; *************** function ___xxtofl *****************
  3040 ;; Defined at:
  3041 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  sign            1    wreg     unsigned char 
  3044 ;;  val             4    0[COMMON] long 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  sign            1    8[COMMON] unsigned char 
  3047 ;;  arg             4   10[COMMON] unsigned long 
  3048 ;;  exp             1    9[COMMON] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  4    0[COMMON] unsigned char 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         4       0       0       0       0
  3059 ;;      Locals:         6       0       0       0       0
  3060 ;;      Temps:          4       0       0       0       0
  3061 ;;      Totals:        14       0       0       0       0
  3062 ;;Total ram usage:       14 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; This function calls:
  3065 ;;		Nothing
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           
  3072                           ;psect for function ___xxtofl
  3073  00C9                     ___xxtofl:
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3077                           ;___xxtofl@sign stored from wreg
  3078  00C9  00F8               	movwf	___xxtofl@sign
  3079  00CA                     l2053:
  3080  00CA  0878               	movf	___xxtofl@sign,w
  3081  00CB  1903               	btfsc	3,2
  3082  00CC  28CE               	goto	u2331
  3083  00CD  28CF               	goto	u2330
  3084  00CE                     u2331:
  3085  00CE  28E3               	goto	l2059
  3086  00CF                     u2330:
  3087  00CF                     l2055:
  3088  00CF  1FF3               	btfss	___xxtofl@val+3,7
  3089  00D0  28D2               	goto	u2341
  3090  00D1  28D3               	goto	u2340
  3091  00D2                     u2341:
  3092  00D2  28E3               	goto	l2059
  3093  00D3                     u2340:
  3094  00D3                     l2057:
  3095  00D3  0970               	comf	___xxtofl@val,w
  3096  00D4  00FA               	movwf	___xxtofl@arg
  3097  00D5  0971               	comf	___xxtofl@val+1,w
  3098  00D6  00FB               	movwf	___xxtofl@arg+1
  3099  00D7  0972               	comf	___xxtofl@val+2,w
  3100  00D8  00FC               	movwf	___xxtofl@arg+2
  3101  00D9  0973               	comf	___xxtofl@val+3,w
  3102  00DA  00FD               	movwf	___xxtofl@arg+3
  3103  00DB  0AFA               	incf	___xxtofl@arg,f
  3104  00DC  1903               	skipnz
  3105  00DD  0AFB               	incf	___xxtofl@arg+1,f
  3106  00DE  1903               	skipnz
  3107  00DF  0AFC               	incf	___xxtofl@arg+2,f
  3108  00E0  1903               	skipnz
  3109  00E1  0AFD               	incf	___xxtofl@arg+3,f
  3110  00E2  28EB               	goto	l712
  3111  00E3                     l2059:
  3112  00E3  0873               	movf	___xxtofl@val+3,w
  3113  00E4  00FD               	movwf	___xxtofl@arg+3
  3114  00E5  0872               	movf	___xxtofl@val+2,w
  3115  00E6  00FC               	movwf	___xxtofl@arg+2
  3116  00E7  0871               	movf	___xxtofl@val+1,w
  3117  00E8  00FB               	movwf	___xxtofl@arg+1
  3118  00E9  0870               	movf	___xxtofl@val,w
  3119  00EA  00FA               	movwf	___xxtofl@arg
  3120  00EB                     l712:
  3121  00EB  0873               	movf	___xxtofl@val+3,w
  3122  00EC  0472               	iorwf	___xxtofl@val+2,w
  3123  00ED  0471               	iorwf	___xxtofl@val+1,w
  3124  00EE  0470               	iorwf	___xxtofl@val,w
  3125  00EF  1D03               	skipz
  3126  00F0  28F2               	goto	u2351
  3127  00F1  28F3               	goto	u2350
  3128  00F2                     u2351:
  3129  00F2  28FC               	goto	l2065
  3130  00F3                     u2350:
  3131  00F3                     l2061:
  3132  00F3  3000               	movlw	0
  3133  00F4  00F3               	movwf	?___xxtofl+3
  3134  00F5  3000               	movlw	0
  3135  00F6  00F2               	movwf	?___xxtofl+2
  3136  00F7  3000               	movlw	0
  3137  00F8  00F1               	movwf	?___xxtofl+1
  3138  00F9  3000               	movlw	0
  3139  00FA  00F0               	movwf	?___xxtofl
  3140  00FB  2982               	goto	l714
  3141  00FC                     l2065:
  3142  00FC  3096               	movlw	150
  3143  00FD  00F4               	movwf	??___xxtofl
  3144  00FE  0874               	movf	??___xxtofl,w
  3145  00FF  00F9               	movwf	___xxtofl@exp
  3146  0100  290E               	goto	l2069
  3147  0101                     l2067:
  3148  0101  3001               	movlw	1
  3149  0102  00F4               	movwf	??___xxtofl
  3150  0103  0874               	movf	??___xxtofl,w
  3151  0104  07F9               	addwf	___xxtofl@exp,f
  3152  0105  3001               	movlw	1
  3153  0106                     u2365:
  3154  0106  1003               	clrc
  3155  0107  0CFD               	rrf	___xxtofl@arg+3,f
  3156  0108  0CFC               	rrf	___xxtofl@arg+2,f
  3157  0109  0CFB               	rrf	___xxtofl@arg+1,f
  3158  010A  0CFA               	rrf	___xxtofl@arg,f
  3159  010B  3EFF               	addlw	-1
  3160  010C  1D03               	skipz
  3161  010D  2906               	goto	u2365
  3162  010E                     l2069:
  3163  010E  30FE               	movlw	254
  3164  010F  057D               	andwf	___xxtofl@arg+3,w
  3165  0110  1D03               	btfss	3,2
  3166  0111  2913               	goto	u2371
  3167  0112  2914               	goto	u2370
  3168  0113                     u2371:
  3169  0113  2901               	goto	l2067
  3170  0114                     u2370:
  3171  0114  2930               	goto	l718
  3172  0115                     l2071:
  3173  0115  3001               	movlw	1
  3174  0116  00F4               	movwf	??___xxtofl
  3175  0117  0874               	movf	??___xxtofl,w
  3176  0118  07F9               	addwf	___xxtofl@exp,f
  3177  0119                     l2073:
  3178  0119  3001               	movlw	1
  3179  011A  07FA               	addwf	___xxtofl@arg,f
  3180  011B  3000               	movlw	0
  3181  011C  1803               	skipnc
  3182  011D  3001               	movlw	1
  3183  011E  07FB               	addwf	___xxtofl@arg+1,f
  3184  011F  3000               	movlw	0
  3185  0120  1803               	skipnc
  3186  0121  3001               	movlw	1
  3187  0122  07FC               	addwf	___xxtofl@arg+2,f
  3188  0123  3000               	movlw	0
  3189  0124  1803               	skipnc
  3190  0125  3001               	movlw	1
  3191  0126  07FD               	addwf	___xxtofl@arg+3,f
  3192  0127                     l2075:
  3193  0127  3001               	movlw	1
  3194  0128                     u2385:
  3195  0128  1003               	clrc
  3196  0129  0CFD               	rrf	___xxtofl@arg+3,f
  3197  012A  0CFC               	rrf	___xxtofl@arg+2,f
  3198  012B  0CFB               	rrf	___xxtofl@arg+1,f
  3199  012C  0CFA               	rrf	___xxtofl@arg,f
  3200  012D  3EFF               	addlw	-1
  3201  012E  1D03               	skipz
  3202  012F  2928               	goto	u2385
  3203  0130                     l718:
  3204  0130  30FF               	movlw	255
  3205  0131  057D               	andwf	___xxtofl@arg+3,w
  3206  0132  1D03               	btfss	3,2
  3207  0133  2935               	goto	u2391
  3208  0134  2936               	goto	u2390
  3209  0135                     u2391:
  3210  0135  2915               	goto	l2071
  3211  0136                     u2390:
  3212  0136  2942               	goto	l2079
  3213  0137                     l2077:
  3214  0137  3001               	movlw	1
  3215  0138  02F9               	subwf	___xxtofl@exp,f
  3216  0139  3001               	movlw	1
  3217  013A  00F4               	movwf	??___xxtofl
  3218  013B                     u2405:
  3219  013B  1003               	clrc
  3220  013C  0DFA               	rlf	___xxtofl@arg,f
  3221  013D  0DFB               	rlf	___xxtofl@arg+1,f
  3222  013E  0DFC               	rlf	___xxtofl@arg+2,f
  3223  013F  0DFD               	rlf	___xxtofl@arg+3,f
  3224  0140  0BF4               	decfsz	??___xxtofl,f
  3225  0141  293B               	goto	u2405
  3226  0142                     l2079:
  3227  0142  1BFC               	btfsc	___xxtofl@arg+2,7
  3228  0143  2945               	goto	u2411
  3229  0144  2946               	goto	u2410
  3230  0145                     u2411:
  3231  0145  294C               	goto	l725
  3232  0146                     u2410:
  3233  0146                     l2081:
  3234  0146  3002               	movlw	2
  3235  0147  0279               	subwf	___xxtofl@exp,w
  3236  0148  1803               	skipnc
  3237  0149  294B               	goto	u2421
  3238  014A  294C               	goto	u2420
  3239  014B                     u2421:
  3240  014B  2937               	goto	l2077
  3241  014C                     u2420:
  3242  014C                     l725:
  3243  014C  1879               	btfsc	___xxtofl@exp,0
  3244  014D  294F               	goto	u2431
  3245  014E  2950               	goto	u2430
  3246  014F                     u2431:
  3247  014F  2958               	goto	l726
  3248  0150                     u2430:
  3249  0150                     l2083:
  3250  0150  30FF               	movlw	255
  3251  0151  05FA               	andwf	___xxtofl@arg,f
  3252  0152  30FF               	movlw	255
  3253  0153  05FB               	andwf	___xxtofl@arg+1,f
  3254  0154  307F               	movlw	127
  3255  0155  05FC               	andwf	___xxtofl@arg+2,f
  3256  0156  30FF               	movlw	255
  3257  0157  05FD               	andwf	___xxtofl@arg+3,f
  3258  0158                     l726:
  3259  0158  1003               	clrc
  3260  0159  0CF9               	rrf	___xxtofl@exp,f
  3261  015A                     l2085:
  3262  015A  0879               	movf	___xxtofl@exp,w
  3263  015B  00F4               	movwf	??___xxtofl
  3264  015C  01F5               	clrf	??___xxtofl+1
  3265  015D  01F6               	clrf	??___xxtofl+2
  3266  015E  01F7               	clrf	??___xxtofl+3
  3267  015F  3018               	movlw	24
  3268  0160                     u2445:
  3269  0160  1003               	clrc
  3270  0161  0DF4               	rlf	??___xxtofl,f
  3271  0162  0DF5               	rlf	??___xxtofl+1,f
  3272  0163  0DF6               	rlf	??___xxtofl+2,f
  3273  0164  0DF7               	rlf	??___xxtofl+3,f
  3274  0165                     u2440:
  3275  0165  3EFF               	addlw	-1
  3276  0166  1D03               	skipz
  3277  0167  2960               	goto	u2445
  3278  0168  0874               	movf	??___xxtofl,w
  3279  0169  04FA               	iorwf	___xxtofl@arg,f
  3280  016A  0875               	movf	??___xxtofl+1,w
  3281  016B  04FB               	iorwf	___xxtofl@arg+1,f
  3282  016C  0876               	movf	??___xxtofl+2,w
  3283  016D  04FC               	iorwf	___xxtofl@arg+2,f
  3284  016E  0877               	movf	??___xxtofl+3,w
  3285  016F  04FD               	iorwf	___xxtofl@arg+3,f
  3286  0170                     l2087:
  3287  0170  0878               	movf	___xxtofl@sign,w
  3288  0171  1903               	btfsc	3,2
  3289  0172  2974               	goto	u2451
  3290  0173  2975               	goto	u2450
  3291  0174                     u2451:
  3292  0174  297A               	goto	l2093
  3293  0175                     u2450:
  3294  0175                     l2089:
  3295  0175  1FF3               	btfss	___xxtofl@val+3,7
  3296  0176  2978               	goto	u2461
  3297  0177  2979               	goto	u2460
  3298  0178                     u2461:
  3299  0178  297A               	goto	l2093
  3300  0179                     u2460:
  3301  0179                     l2091:
  3302  0179  17FD               	bsf	___xxtofl@arg+3,7
  3303  017A                     l2093:
  3304  017A  087D               	movf	___xxtofl@arg+3,w
  3305  017B  00F3               	movwf	?___xxtofl+3
  3306  017C  087C               	movf	___xxtofl@arg+2,w
  3307  017D  00F2               	movwf	?___xxtofl+2
  3308  017E  087B               	movf	___xxtofl@arg+1,w
  3309  017F  00F1               	movwf	?___xxtofl+1
  3310  0180  087A               	movf	___xxtofl@arg,w
  3311  0181  00F0               	movwf	?___xxtofl
  3312  0182                     l714:
  3313  0182  0008               	return
  3314  0183                     __end_of___xxtofl:
  3315                           
  3316                           	psect	text14
  3317  0CA9                     __ptext14:	
  3318 ;; *************** function ___wmul *****************
  3319 ;; Defined at:
  3320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  multiplier      2    0[COMMON] unsigned int 
  3323 ;;  multiplicand    2    2[COMMON] unsigned int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  product         2    4[COMMON] unsigned int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    0[COMMON] unsigned int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         4       0       0       0       0
  3336 ;;      Locals:         2       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         6       0       0       0       0
  3339 ;;Total ram usage:        6 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function ___wmul
  3350  0CA9                     ___wmul:
  3351  0CA9                     l1863:	
  3352                           ;incstack = 0
  3353                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3354                           
  3355  0CA9  01F4               	clrf	___wmul@product
  3356  0CAA  01F5               	clrf	___wmul@product+1
  3357  0CAB                     l1865:
  3358  0CAB  1C70               	btfss	___wmul@multiplier,0
  3359  0CAC  2CAE               	goto	u1821
  3360  0CAD  2CAF               	goto	u1820
  3361  0CAE                     u1821:
  3362  0CAE  2CB5               	goto	l279
  3363  0CAF                     u1820:
  3364  0CAF                     l1867:
  3365  0CAF  0872               	movf	___wmul@multiplicand,w
  3366  0CB0  07F4               	addwf	___wmul@product,f
  3367  0CB1  1803               	skipnc
  3368  0CB2  0AF5               	incf	___wmul@product+1,f
  3369  0CB3  0873               	movf	___wmul@multiplicand+1,w
  3370  0CB4  07F5               	addwf	___wmul@product+1,f
  3371  0CB5                     l279:
  3372  0CB5  3001               	movlw	1
  3373  0CB6                     u1835:
  3374  0CB6  1003               	clrc
  3375  0CB7  0DF2               	rlf	___wmul@multiplicand,f
  3376  0CB8  0DF3               	rlf	___wmul@multiplicand+1,f
  3377  0CB9  3EFF               	addlw	-1
  3378  0CBA  1D03               	skipz
  3379  0CBB  2CB6               	goto	u1835
  3380  0CBC                     l1869:
  3381  0CBC  3001               	movlw	1
  3382  0CBD                     u1845:
  3383  0CBD  1003               	clrc
  3384  0CBE  0CF1               	rrf	___wmul@multiplier+1,f
  3385  0CBF  0CF0               	rrf	___wmul@multiplier,f
  3386  0CC0  3EFF               	addlw	-1
  3387  0CC1  1D03               	skipz
  3388  0CC2  2CBD               	goto	u1845
  3389  0CC3                     l1871:
  3390  0CC3  0870               	movf	___wmul@multiplier,w
  3391  0CC4  0471               	iorwf	___wmul@multiplier+1,w
  3392  0CC5  1D03               	btfss	3,2
  3393  0CC6  2CC8               	goto	u1851
  3394  0CC7  2CC9               	goto	u1850
  3395  0CC8                     u1851:
  3396  0CC8  2CAB               	goto	l1865
  3397  0CC9                     u1850:
  3398  0CC9                     l1873:
  3399  0CC9  0875               	movf	___wmul@product+1,w
  3400  0CCA  00F1               	movwf	?___wmul+1
  3401  0CCB  0874               	movf	___wmul@product,w
  3402  0CCC  00F0               	movwf	?___wmul
  3403  0CCD                     l281:
  3404  0CCD  0008               	return
  3405  0CCE                     __end_of___wmul:
  3406                           
  3407                           	psect	text15
  3408  004D                     __ptext15:	
  3409 ;; *************** function ___fltol *****************
  3410 ;; Defined at:
  3411 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  f1              4   26[BANK0 ] unsigned int 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  exp1            1   36[BANK0 ] unsigned char 
  3416 ;;  sign1           1   35[BANK0 ] unsigned char 
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  4   26[BANK0 ] long 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       4       0       0       0
  3427 ;;      Locals:         0       2       0       0       0
  3428 ;;      Temps:          0       5       0       0       0
  3429 ;;      Totals:         0      11       0       0       0
  3430 ;;Total ram usage:       11 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function ___fltol
  3441  004D                     ___fltol:
  3442  004D                     l1877:	
  3443                           ;incstack = 0
  3444                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3445                           
  3446  004D  1003               	clrc
  3447  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3448  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3449  0050  0D3C               	rlf	___fltol@f1+2,w
  3450  0051  0D3D               	rlf	___fltol@f1+3,w
  3451  0052  00BE               	movwf	??___fltol
  3452  0053  083E               	movf	??___fltol,w
  3453  0054  00C4               	movwf	___fltol@exp1
  3454  0055  0844               	movf	___fltol@exp1,w
  3455  0056  1D03               	btfss	3,2
  3456  0057  2859               	goto	u1861
  3457  0058  285A               	goto	u1860
  3458  0059                     u1861:
  3459  0059  2863               	goto	l1883
  3460  005A                     u1860:
  3461  005A                     l1879:
  3462  005A  3000               	movlw	0
  3463  005B  00BD               	movwf	?___fltol+3
  3464  005C  3000               	movlw	0
  3465  005D  00BC               	movwf	?___fltol+2
  3466  005E  3000               	movlw	0
  3467  005F  00BB               	movwf	?___fltol+1
  3468  0060  3000               	movlw	0
  3469  0061  00BA               	movwf	?___fltol
  3470  0062  28C8               	goto	l465
  3471  0063                     l1883:
  3472  0063  083A               	movf	___fltol@f1,w
  3473  0064  00BE               	movwf	??___fltol
  3474  0065  083B               	movf	___fltol@f1+1,w
  3475  0066  00BF               	movwf	??___fltol+1
  3476  0067  083C               	movf	___fltol@f1+2,w
  3477  0068  00C0               	movwf	??___fltol+2
  3478  0069  083D               	movf	___fltol@f1+3,w
  3479  006A  00C1               	movwf	??___fltol+3
  3480  006B  301F               	movlw	31
  3481  006C                     u1875:
  3482  006C  1003               	clrc
  3483  006D  0CC1               	rrf	??___fltol+3,f
  3484  006E  0CC0               	rrf	??___fltol+2,f
  3485  006F  0CBF               	rrf	??___fltol+1,f
  3486  0070  0CBE               	rrf	??___fltol,f
  3487  0071                     u1870:
  3488  0071  3EFF               	addlw	-1
  3489  0072  1D03               	skipz
  3490  0073  286C               	goto	u1875
  3491  0074  083E               	movf	??___fltol,w
  3492  0075  00C2               	movwf	??___fltol+4
  3493  0076  0842               	movf	??___fltol+4,w
  3494  0077  00C3               	movwf	___fltol@sign1
  3495  0078                     l1885:
  3496  0078  17BC               	bsf	___fltol@f1+2,7
  3497  0079                     l1887:
  3498  0079  30FF               	movlw	255
  3499  007A  05BA               	andwf	___fltol@f1,f
  3500  007B  30FF               	movlw	255
  3501  007C  05BB               	andwf	___fltol@f1+1,f
  3502  007D  30FF               	movlw	255
  3503  007E  05BC               	andwf	___fltol@f1+2,f
  3504  007F  3000               	movlw	0
  3505  0080  05BD               	andwf	___fltol@f1+3,f
  3506  0081                     l1889:
  3507  0081  3096               	movlw	150
  3508  0082  02C4               	subwf	___fltol@exp1,f
  3509  0083                     l1891:
  3510  0083  1FC4               	btfss	___fltol@exp1,7
  3511  0084  2886               	goto	u1881
  3512  0085  2887               	goto	u1880
  3513  0086                     u1881:
  3514  0086  28A1               	goto	l1901
  3515  0087                     u1880:
  3516  0087                     l1893:
  3517  0087  0844               	movf	___fltol@exp1,w
  3518  0088  3A80               	xorlw	128
  3519  0089  3E97               	addlw	151
  3520  008A  1803               	skipnc
  3521  008B  288D               	goto	u1891
  3522  008C  288E               	goto	u1890
  3523  008D                     u1891:
  3524  008D  288F               	goto	l1899
  3525  008E                     u1890:
  3526  008E  285A               	goto	l1879
  3527  008F                     l1899:
  3528  008F  3001               	movlw	1
  3529  0090                     u1905:
  3530  0090  1003               	clrc
  3531  0091  0CBD               	rrf	___fltol@f1+3,f
  3532  0092  0CBC               	rrf	___fltol@f1+2,f
  3533  0093  0CBB               	rrf	___fltol@f1+1,f
  3534  0094  0CBA               	rrf	___fltol@f1,f
  3535  0095  3EFF               	addlw	-1
  3536  0096  1D03               	skipz
  3537  0097  2890               	goto	u1905
  3538  0098  3001               	movlw	1
  3539  0099  00BE               	movwf	??___fltol
  3540  009A  083E               	movf	??___fltol,w
  3541  009B  07C4               	addwf	___fltol@exp1,f
  3542  009C  1D03               	btfss	3,2
  3543  009D  289F               	goto	u1911
  3544  009E  28A0               	goto	u1910
  3545  009F                     u1911:
  3546  009F  288F               	goto	l1899
  3547  00A0                     u1910:
  3548  00A0  28B8               	goto	l1909
  3549  00A1                     l1901:
  3550  00A1  3020               	movlw	32
  3551  00A2  0244               	subwf	___fltol@exp1,w
  3552  00A3  1C03               	skipc
  3553  00A4  28A6               	goto	u1921
  3554  00A5  28A7               	goto	u1920
  3555  00A6                     u1921:
  3556  00A6  28B3               	goto	l472
  3557  00A7                     u1920:
  3558  00A7  285A               	goto	l1879
  3559  00A8                     l1907:
  3560  00A8  3001               	movlw	1
  3561  00A9  00BE               	movwf	??___fltol
  3562  00AA                     u1935:
  3563  00AA  1003               	clrc
  3564  00AB  0DBA               	rlf	___fltol@f1,f
  3565  00AC  0DBB               	rlf	___fltol@f1+1,f
  3566  00AD  0DBC               	rlf	___fltol@f1+2,f
  3567  00AE  0DBD               	rlf	___fltol@f1+3,f
  3568  00AF  0BBE               	decfsz	??___fltol,f
  3569  00B0  28AA               	goto	u1935
  3570  00B1  3001               	movlw	1
  3571  00B2  02C4               	subwf	___fltol@exp1,f
  3572  00B3                     l472:
  3573  00B3  0844               	movf	___fltol@exp1,w
  3574  00B4  1D03               	btfss	3,2
  3575  00B5  28B7               	goto	u1941
  3576  00B6  28B8               	goto	u1940
  3577  00B7                     u1941:
  3578  00B7  28A8               	goto	l1907
  3579  00B8                     u1940:
  3580  00B8                     l1909:
  3581  00B8  0843               	movf	___fltol@sign1,w
  3582  00B9  1903               	btfsc	3,2
  3583  00BA  28BC               	goto	u1951
  3584  00BB  28BD               	goto	u1950
  3585  00BC                     u1951:
  3586  00BC  28C8               	goto	l475
  3587  00BD                     u1950:
  3588  00BD                     l1911:
  3589  00BD  09BA               	comf	___fltol@f1,f
  3590  00BE  09BB               	comf	___fltol@f1+1,f
  3591  00BF  09BC               	comf	___fltol@f1+2,f
  3592  00C0  09BD               	comf	___fltol@f1+3,f
  3593  00C1  0ABA               	incf	___fltol@f1,f
  3594  00C2  1903               	skipnz
  3595  00C3  0ABB               	incf	___fltol@f1+1,f
  3596  00C4  1903               	skipnz
  3597  00C5  0ABC               	incf	___fltol@f1+2,f
  3598  00C6  1903               	skipnz
  3599  00C7  0ABD               	incf	___fltol@f1+3,f
  3600  00C8                     l475:
  3601  00C8                     l465:
  3602  00C8  0008               	return
  3603  00C9                     __end_of___fltol:
  3604                           
  3605                           	psect	text16
  3606  048E                     __ptext16:	
  3607 ;; *************** function ___flmul *****************
  3608 ;; Defined at:
  3609 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  b               4    0[BANK0 ] long 
  3612 ;;  a               4    4[BANK0 ] long 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  prod            4   20[BANK0 ] struct .
  3615 ;;  grs             4   14[BANK0 ] unsigned long 
  3616 ;;  temp            2   24[BANK0 ] struct .
  3617 ;;  bexp            1   19[BANK0 ] unsigned char 
  3618 ;;  aexp            1   18[BANK0 ] unsigned char 
  3619 ;;  sign            1   13[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  4    0[BANK0 ] unsigned char 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       8       0       0       0
  3630 ;;      Locals:         0      13       0       0       0
  3631 ;;      Temps:          0       5       0       0       0
  3632 ;;      Totals:         0      26       0       0       0
  3633 ;;Total ram usage:       26 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    1
  3636 ;; This function calls:
  3637 ;;		__Umul8_16
  3638 ;; This function is called by:
  3639 ;;		_main
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function ___flmul
  3645  048E                     ___flmul:
  3646  048E                     l1913:	
  3647                           ;incstack = 0
  3648                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3649                           
  3650  048E  1283               	bcf	3,5	;RP0=0, select bank0
  3651  048F  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0490  0823               	movf	___flmul@b+3,w
  3653  0491  3980               	andlw	128
  3654  0492  00A8               	movwf	??___flmul
  3655  0493  0828               	movf	??___flmul,w
  3656  0494  00AD               	movwf	___flmul@sign
  3657  0495                     l1915:
  3658  0495  0823               	movf	___flmul@b+3,w
  3659  0496  00A8               	movwf	??___flmul
  3660  0497  0728               	addwf	??___flmul,w
  3661  0498  00A9               	movwf	??___flmul+1
  3662  0499  0829               	movf	??___flmul+1,w
  3663  049A  00B3               	movwf	___flmul@bexp
  3664  049B                     l1917:
  3665  049B  1FA2               	btfss	___flmul@b+2,7
  3666  049C  2C9E               	goto	u1961
  3667  049D  2C9F               	goto	u1960
  3668  049E                     u1961:
  3669  049E  2CA0               	goto	l1921
  3670  049F                     u1960:
  3671  049F                     l1919:
  3672  049F  1433               	bsf	___flmul@bexp,0
  3673  04A0                     l1921:
  3674  04A0  0833               	movf	___flmul@bexp,w
  3675  04A1  1903               	btfsc	3,2
  3676  04A2  2CA4               	goto	u1971
  3677  04A3  2CA5               	goto	u1970
  3678  04A4                     u1971:
  3679  04A4  2CB4               	goto	l1929
  3680  04A5                     u1970:
  3681  04A5                     l1923:
  3682  04A5  0A33               	incf	___flmul@bexp,w
  3683  04A6  1D03               	btfss	3,2
  3684  04A7  2CA9               	goto	u1981
  3685  04A8  2CAA               	goto	u1980
  3686  04A9                     u1981:
  3687  04A9  2CB2               	goto	l1927
  3688  04AA                     u1980:
  3689  04AA                     l1925:
  3690  04AA  3000               	movlw	0
  3691  04AB  00A3               	movwf	___flmul@b+3
  3692  04AC  3000               	movlw	0
  3693  04AD  00A2               	movwf	___flmul@b+2
  3694  04AE  3000               	movlw	0
  3695  04AF  00A1               	movwf	___flmul@b+1
  3696  04B0  3000               	movlw	0
  3697  04B1  00A0               	movwf	___flmul@b
  3698  04B2                     l1927:
  3699  04B2  17A2               	bsf	___flmul@b+2,7
  3700  04B3  2CBC               	goto	l1931
  3701  04B4                     l1929:
  3702  04B4  3000               	movlw	0
  3703  04B5  00A3               	movwf	___flmul@b+3
  3704  04B6  3000               	movlw	0
  3705  04B7  00A2               	movwf	___flmul@b+2
  3706  04B8  3000               	movlw	0
  3707  04B9  00A1               	movwf	___flmul@b+1
  3708  04BA  3000               	movlw	0
  3709  04BB  00A0               	movwf	___flmul@b
  3710  04BC                     l1931:
  3711  04BC  0827               	movf	___flmul@a+3,w
  3712  04BD  3980               	andlw	128
  3713  04BE  00A8               	movwf	??___flmul
  3714  04BF  0828               	movf	??___flmul,w
  3715  04C0  06AD               	xorwf	___flmul@sign,f
  3716  04C1                     l1933:
  3717  04C1  0827               	movf	___flmul@a+3,w
  3718  04C2  00A8               	movwf	??___flmul
  3719  04C3  0728               	addwf	??___flmul,w
  3720  04C4  00A9               	movwf	??___flmul+1
  3721  04C5  0829               	movf	??___flmul+1,w
  3722  04C6  00B2               	movwf	___flmul@aexp
  3723  04C7                     l1935:
  3724  04C7  1FA6               	btfss	___flmul@a+2,7
  3725  04C8  2CCA               	goto	u1991
  3726  04C9  2CCB               	goto	u1990
  3727  04CA                     u1991:
  3728  04CA  2CCC               	goto	l1939
  3729  04CB                     u1990:
  3730  04CB                     l1937:
  3731  04CB  1432               	bsf	___flmul@aexp,0
  3732  04CC                     l1939:
  3733  04CC  0832               	movf	___flmul@aexp,w
  3734  04CD  1903               	btfsc	3,2
  3735  04CE  2CD0               	goto	u2001
  3736  04CF  2CD1               	goto	u2000
  3737  04D0                     u2001:
  3738  04D0  2CE0               	goto	l1947
  3739  04D1                     u2000:
  3740  04D1                     l1941:
  3741  04D1  0A32               	incf	___flmul@aexp,w
  3742  04D2  1D03               	btfss	3,2
  3743  04D3  2CD5               	goto	u2011
  3744  04D4  2CD6               	goto	u2010
  3745  04D5                     u2011:
  3746  04D5  2CDE               	goto	l1945
  3747  04D6                     u2010:
  3748  04D6                     l1943:
  3749  04D6  3000               	movlw	0
  3750  04D7  00A7               	movwf	___flmul@a+3
  3751  04D8  3000               	movlw	0
  3752  04D9  00A6               	movwf	___flmul@a+2
  3753  04DA  3000               	movlw	0
  3754  04DB  00A5               	movwf	___flmul@a+1
  3755  04DC  3000               	movlw	0
  3756  04DD  00A4               	movwf	___flmul@a
  3757  04DE                     l1945:
  3758  04DE  17A6               	bsf	___flmul@a+2,7
  3759  04DF  2CE8               	goto	l1949
  3760  04E0                     l1947:
  3761  04E0  3000               	movlw	0
  3762  04E1  00A7               	movwf	___flmul@a+3
  3763  04E2  3000               	movlw	0
  3764  04E3  00A6               	movwf	___flmul@a+2
  3765  04E4  3000               	movlw	0
  3766  04E5  00A5               	movwf	___flmul@a+1
  3767  04E6  3000               	movlw	0
  3768  04E7  00A4               	movwf	___flmul@a
  3769  04E8                     l1949:
  3770  04E8  0832               	movf	___flmul@aexp,w
  3771  04E9  1903               	btfsc	3,2
  3772  04EA  2CEC               	goto	u2021
  3773  04EB  2CED               	goto	u2020
  3774  04EC                     u2021:
  3775  04EC  2CF2               	goto	l1953
  3776  04ED                     u2020:
  3777  04ED                     l1951:
  3778  04ED  0833               	movf	___flmul@bexp,w
  3779  04EE  1D03               	btfss	3,2
  3780  04EF  2CF1               	goto	u2031
  3781  04F0  2CF2               	goto	u2030
  3782  04F1                     u2031:
  3783  04F1  2CFB               	goto	l1957
  3784  04F2                     u2030:
  3785  04F2                     l1953:
  3786  04F2  3000               	movlw	0
  3787  04F3  00A3               	movwf	?___flmul+3
  3788  04F4  3000               	movlw	0
  3789  04F5  00A2               	movwf	?___flmul+2
  3790  04F6  3000               	movlw	0
  3791  04F7  00A1               	movwf	?___flmul+1
  3792  04F8  3000               	movlw	0
  3793  04F9  00A0               	movwf	?___flmul
  3794  04FA  2FEE               	goto	l668
  3795  04FB                     l1957:
  3796  04FB  0820               	movf	___flmul@b,w
  3797  04FC  00A8               	movwf	??___flmul
  3798  04FD  0828               	movf	??___flmul,w
  3799  04FE  00F0               	movwf	__Umul8_16@multiplicand
  3800  04FF  0826               	movf	___flmul@a+2,w
  3801  0500  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  3802  0505  0871               	movf	?__Umul8_16+1,w
  3803  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3805  0508  00B9               	movwf	___flmul@temp+1
  3806  0509  0870               	movf	?__Umul8_16,w
  3807  050A  00B8               	movwf	___flmul@temp
  3808  050B                     l1959:
  3809  050B  0838               	movf	___flmul@temp,w
  3810  050C  00A8               	movwf	??___flmul
  3811  050D  01A9               	clrf	??___flmul+1
  3812  050E  01AA               	clrf	??___flmul+2
  3813  050F  01AB               	clrf	??___flmul+3
  3814  0510  082B               	movf	??___flmul+3,w
  3815  0511  00B1               	movwf	___flmul@grs+3
  3816  0512  082A               	movf	??___flmul+2,w
  3817  0513  00B0               	movwf	___flmul@grs+2
  3818  0514  0829               	movf	??___flmul+1,w
  3819  0515  00AF               	movwf	___flmul@grs+1
  3820  0516  0828               	movf	??___flmul,w
  3821  0517  00AE               	movwf	___flmul@grs
  3822  0518                     l1961:
  3823  0518  0839               	movf	___flmul@temp+1,w
  3824  0519  00A8               	movwf	??___flmul
  3825  051A  01A9               	clrf	??___flmul+1
  3826  051B  01AA               	clrf	??___flmul+2
  3827  051C  01AB               	clrf	??___flmul+3
  3828  051D  082B               	movf	??___flmul+3,w
  3829  051E  00B7               	movwf	___flmul@prod+3
  3830  051F  082A               	movf	??___flmul+2,w
  3831  0520  00B6               	movwf	___flmul@prod+2
  3832  0521  0829               	movf	??___flmul+1,w
  3833  0522  00B5               	movwf	___flmul@prod+1
  3834  0523  0828               	movf	??___flmul,w
  3835  0524  00B4               	movwf	___flmul@prod
  3836  0525  0821               	movf	___flmul@b+1,w
  3837  0526  00A8               	movwf	??___flmul
  3838  0527  0828               	movf	??___flmul,w
  3839  0528  00F0               	movwf	__Umul8_16@multiplicand
  3840  0529  0825               	movf	___flmul@a+1,w
  3841  052A  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  3842  052F  0871               	movf	?__Umul8_16+1,w
  3843  0530  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0531  1303               	bcf	3,6	;RP1=0, select bank0
  3845  0532  00B9               	movwf	___flmul@temp+1
  3846  0533  0870               	movf	?__Umul8_16,w
  3847  0534  00B8               	movwf	___flmul@temp
  3848  0535                     l1963:
  3849  0535  0838               	movf	___flmul@temp,w
  3850  0536  00A8               	movwf	??___flmul
  3851  0537  01A9               	clrf	??___flmul+1
  3852  0538  01AA               	clrf	??___flmul+2
  3853  0539  01AB               	clrf	??___flmul+3
  3854  053A  0828               	movf	??___flmul,w
  3855  053B  07AE               	addwf	___flmul@grs,f
  3856  053C  0829               	movf	??___flmul+1,w
  3857  053D  1103               	clrz
  3858  053E  1803               	skipnc
  3859  053F  3E01               	addlw	1
  3860  0540  1903               	skipnz
  3861  0541  2D43               	goto	u2041
  3862  0542  07AF               	addwf	___flmul@grs+1,f
  3863  0543                     u2041:
  3864  0543  082A               	movf	??___flmul+2,w
  3865  0544  1103               	clrz
  3866  0545  1803               	skipnc
  3867  0546  3E01               	addlw	1
  3868  0547  1903               	skipnz
  3869  0548  2D4A               	goto	u2042
  3870  0549  07B0               	addwf	___flmul@grs+2,f
  3871  054A                     u2042:
  3872  054A  082B               	movf	??___flmul+3,w
  3873  054B  1103               	clrz
  3874  054C  1803               	skipnc
  3875  054D  3E01               	addlw	1
  3876  054E  1903               	skipnz
  3877  054F  2D51               	goto	u2043
  3878  0550  07B1               	addwf	___flmul@grs+3,f
  3879  0551                     u2043:
  3880  0551                     l1965:
  3881  0551  0839               	movf	___flmul@temp+1,w
  3882  0552  00A8               	movwf	??___flmul
  3883  0553  01A9               	clrf	??___flmul+1
  3884  0554  01AA               	clrf	??___flmul+2
  3885  0555  01AB               	clrf	??___flmul+3
  3886  0556  0828               	movf	??___flmul,w
  3887  0557  07B4               	addwf	___flmul@prod,f
  3888  0558  0829               	movf	??___flmul+1,w
  3889  0559  1103               	clrz
  3890  055A  1803               	skipnc
  3891  055B  3E01               	addlw	1
  3892  055C  1903               	skipnz
  3893  055D  2D5F               	goto	u2051
  3894  055E  07B5               	addwf	___flmul@prod+1,f
  3895  055F                     u2051:
  3896  055F  082A               	movf	??___flmul+2,w
  3897  0560  1103               	clrz
  3898  0561  1803               	skipnc
  3899  0562  3E01               	addlw	1
  3900  0563  1903               	skipnz
  3901  0564  2D66               	goto	u2052
  3902  0565  07B6               	addwf	___flmul@prod+2,f
  3903  0566                     u2052:
  3904  0566  082B               	movf	??___flmul+3,w
  3905  0567  1103               	clrz
  3906  0568  1803               	skipnc
  3907  0569  3E01               	addlw	1
  3908  056A  1903               	skipnz
  3909  056B  2D6D               	goto	u2053
  3910  056C  07B7               	addwf	___flmul@prod+3,f
  3911  056D                     u2053:
  3912  056D  0822               	movf	___flmul@b+2,w
  3913  056E  00A8               	movwf	??___flmul
  3914  056F  0828               	movf	??___flmul,w
  3915  0570  00F0               	movwf	__Umul8_16@multiplicand
  3916  0571  0824               	movf	___flmul@a,w
  3917  0572  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  3918  0577  0871               	movf	?__Umul8_16+1,w
  3919  0578  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0579  1303               	bcf	3,6	;RP1=0, select bank0
  3921  057A  00B9               	movwf	___flmul@temp+1
  3922  057B  0870               	movf	?__Umul8_16,w
  3923  057C  00B8               	movwf	___flmul@temp
  3924  057D                     l1967:
  3925  057D  0838               	movf	___flmul@temp,w
  3926  057E  00A8               	movwf	??___flmul
  3927  057F  01A9               	clrf	??___flmul+1
  3928  0580  01AA               	clrf	??___flmul+2
  3929  0581  01AB               	clrf	??___flmul+3
  3930  0582  0828               	movf	??___flmul,w
  3931  0583  07AE               	addwf	___flmul@grs,f
  3932  0584  0829               	movf	??___flmul+1,w
  3933  0585  1103               	clrz
  3934  0586  1803               	skipnc
  3935  0587  3E01               	addlw	1
  3936  0588  1903               	skipnz
  3937  0589  2D8B               	goto	u2061
  3938  058A  07AF               	addwf	___flmul@grs+1,f
  3939  058B                     u2061:
  3940  058B  082A               	movf	??___flmul+2,w
  3941  058C  1103               	clrz
  3942  058D  1803               	skipnc
  3943  058E  3E01               	addlw	1
  3944  058F  1903               	skipnz
  3945  0590  2D92               	goto	u2062
  3946  0591  07B0               	addwf	___flmul@grs+2,f
  3947  0592                     u2062:
  3948  0592  082B               	movf	??___flmul+3,w
  3949  0593  1103               	clrz
  3950  0594  1803               	skipnc
  3951  0595  3E01               	addlw	1
  3952  0596  1903               	skipnz
  3953  0597  2D99               	goto	u2063
  3954  0598  07B1               	addwf	___flmul@grs+3,f
  3955  0599                     u2063:
  3956  0599                     l1969:
  3957  0599  0839               	movf	___flmul@temp+1,w
  3958  059A  00A8               	movwf	??___flmul
  3959  059B  01A9               	clrf	??___flmul+1
  3960  059C  01AA               	clrf	??___flmul+2
  3961  059D  01AB               	clrf	??___flmul+3
  3962  059E  0828               	movf	??___flmul,w
  3963  059F  07B4               	addwf	___flmul@prod,f
  3964  05A0  0829               	movf	??___flmul+1,w
  3965  05A1  1103               	clrz
  3966  05A2  1803               	skipnc
  3967  05A3  3E01               	addlw	1
  3968  05A4  1903               	skipnz
  3969  05A5  2DA7               	goto	u2071
  3970  05A6  07B5               	addwf	___flmul@prod+1,f
  3971  05A7                     u2071:
  3972  05A7  082A               	movf	??___flmul+2,w
  3973  05A8  1103               	clrz
  3974  05A9  1803               	skipnc
  3975  05AA  3E01               	addlw	1
  3976  05AB  1903               	skipnz
  3977  05AC  2DAE               	goto	u2072
  3978  05AD  07B6               	addwf	___flmul@prod+2,f
  3979  05AE                     u2072:
  3980  05AE  082B               	movf	??___flmul+3,w
  3981  05AF  1103               	clrz
  3982  05B0  1803               	skipnc
  3983  05B1  3E01               	addlw	1
  3984  05B2  1903               	skipnz
  3985  05B3  2DB5               	goto	u2073
  3986  05B4  07B7               	addwf	___flmul@prod+3,f
  3987  05B5                     u2073:
  3988  05B5                     l1971:
  3989  05B5  3008               	movlw	8
  3990  05B6  00A8               	movwf	??___flmul
  3991  05B7                     u2085:
  3992  05B7  1003               	clrc
  3993  05B8  0DAE               	rlf	___flmul@grs,f
  3994  05B9  0DAF               	rlf	___flmul@grs+1,f
  3995  05BA  0DB0               	rlf	___flmul@grs+2,f
  3996  05BB  0DB1               	rlf	___flmul@grs+3,f
  3997  05BC  0BA8               	decfsz	??___flmul,f
  3998  05BD  2DB7               	goto	u2085
  3999  05BE                     l1973:
  4000  05BE  0821               	movf	___flmul@b+1,w
  4001  05BF  00A8               	movwf	??___flmul
  4002  05C0  0828               	movf	??___flmul,w
  4003  05C1  00F0               	movwf	__Umul8_16@multiplicand
  4004  05C2  0824               	movf	___flmul@a,w
  4005  05C3  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4006  05C8  0871               	movf	?__Umul8_16+1,w
  4007  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  4008  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  4009  05CB  00B9               	movwf	___flmul@temp+1
  4010  05CC  0870               	movf	?__Umul8_16,w
  4011  05CD  00B8               	movwf	___flmul@temp
  4012  05CE                     l1975:
  4013  05CE  0838               	movf	___flmul@temp,w
  4014  05CF  00A8               	movwf	??___flmul
  4015  05D0  0839               	movf	___flmul@temp+1,w
  4016  05D1  00A9               	movwf	??___flmul+1
  4017  05D2  01AA               	clrf	??___flmul+2
  4018  05D3  01AB               	clrf	??___flmul+3
  4019  05D4  0828               	movf	??___flmul,w
  4020  05D5  07AE               	addwf	___flmul@grs,f
  4021  05D6  0829               	movf	??___flmul+1,w
  4022  05D7  1103               	clrz
  4023  05D8  1803               	skipnc
  4024  05D9  3E01               	addlw	1
  4025  05DA  1903               	skipnz
  4026  05DB  2DDD               	goto	u2091
  4027  05DC  07AF               	addwf	___flmul@grs+1,f
  4028  05DD                     u2091:
  4029  05DD  082A               	movf	??___flmul+2,w
  4030  05DE  1103               	clrz
  4031  05DF  1803               	skipnc
  4032  05E0  3E01               	addlw	1
  4033  05E1  1903               	skipnz
  4034  05E2  2DE4               	goto	u2092
  4035  05E3  07B0               	addwf	___flmul@grs+2,f
  4036  05E4                     u2092:
  4037  05E4  082B               	movf	??___flmul+3,w
  4038  05E5  1103               	clrz
  4039  05E6  1803               	skipnc
  4040  05E7  3E01               	addlw	1
  4041  05E8  1903               	skipnz
  4042  05E9  2DEB               	goto	u2093
  4043  05EA  07B1               	addwf	___flmul@grs+3,f
  4044  05EB                     u2093:
  4045  05EB                     l1977:
  4046  05EB  0820               	movf	___flmul@b,w
  4047  05EC  00A8               	movwf	??___flmul
  4048  05ED  0828               	movf	??___flmul,w
  4049  05EE  00F0               	movwf	__Umul8_16@multiplicand
  4050  05EF  0825               	movf	___flmul@a+1,w
  4051  05F0  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4052  05F5  0871               	movf	?__Umul8_16+1,w
  4053  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  4054  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  4055  05F8  00B9               	movwf	___flmul@temp+1
  4056  05F9  0870               	movf	?__Umul8_16,w
  4057  05FA  00B8               	movwf	___flmul@temp
  4058  05FB                     l1979:
  4059  05FB  0838               	movf	___flmul@temp,w
  4060  05FC  00A8               	movwf	??___flmul
  4061  05FD  0839               	movf	___flmul@temp+1,w
  4062  05FE  00A9               	movwf	??___flmul+1
  4063  05FF  01AA               	clrf	??___flmul+2
  4064  0600  01AB               	clrf	??___flmul+3
  4065  0601  0828               	movf	??___flmul,w
  4066  0602  07AE               	addwf	___flmul@grs,f
  4067  0603  0829               	movf	??___flmul+1,w
  4068  0604  1103               	clrz
  4069  0605  1803               	skipnc
  4070  0606  3E01               	addlw	1
  4071  0607  1903               	skipnz
  4072  0608  2E0A               	goto	u2101
  4073  0609  07AF               	addwf	___flmul@grs+1,f
  4074  060A                     u2101:
  4075  060A  082A               	movf	??___flmul+2,w
  4076  060B  1103               	clrz
  4077  060C  1803               	skipnc
  4078  060D  3E01               	addlw	1
  4079  060E  1903               	skipnz
  4080  060F  2E11               	goto	u2102
  4081  0610  07B0               	addwf	___flmul@grs+2,f
  4082  0611                     u2102:
  4083  0611  082B               	movf	??___flmul+3,w
  4084  0612  1103               	clrz
  4085  0613  1803               	skipnc
  4086  0614  3E01               	addlw	1
  4087  0615  1903               	skipnz
  4088  0616  2E18               	goto	u2103
  4089  0617  07B1               	addwf	___flmul@grs+3,f
  4090  0618                     u2103:
  4091  0618                     l1981:
  4092  0618  3008               	movlw	8
  4093  0619  00A8               	movwf	??___flmul
  4094  061A                     u2115:
  4095  061A  1003               	clrc
  4096  061B  0DAE               	rlf	___flmul@grs,f
  4097  061C  0DAF               	rlf	___flmul@grs+1,f
  4098  061D  0DB0               	rlf	___flmul@grs+2,f
  4099  061E  0DB1               	rlf	___flmul@grs+3,f
  4100  061F  0BA8               	decfsz	??___flmul,f
  4101  0620  2E1A               	goto	u2115
  4102  0621  0820               	movf	___flmul@b,w
  4103  0622  00A8               	movwf	??___flmul
  4104  0623  0828               	movf	??___flmul,w
  4105  0624  00F0               	movwf	__Umul8_16@multiplicand
  4106  0625  0824               	movf	___flmul@a,w
  4107  0626  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4108  062B  0871               	movf	?__Umul8_16+1,w
  4109  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4110  062D  1303               	bcf	3,6	;RP1=0, select bank0
  4111  062E  00B9               	movwf	___flmul@temp+1
  4112  062F  0870               	movf	?__Umul8_16,w
  4113  0630  00B8               	movwf	___flmul@temp
  4114  0631                     l1983:
  4115  0631  0838               	movf	___flmul@temp,w
  4116  0632  00A8               	movwf	??___flmul
  4117  0633  0839               	movf	___flmul@temp+1,w
  4118  0634  00A9               	movwf	??___flmul+1
  4119  0635  01AA               	clrf	??___flmul+2
  4120  0636  01AB               	clrf	??___flmul+3
  4121  0637  0828               	movf	??___flmul,w
  4122  0638  07AE               	addwf	___flmul@grs,f
  4123  0639  0829               	movf	??___flmul+1,w
  4124  063A  1103               	clrz
  4125  063B  1803               	skipnc
  4126  063C  3E01               	addlw	1
  4127  063D  1903               	skipnz
  4128  063E  2E40               	goto	u2121
  4129  063F  07AF               	addwf	___flmul@grs+1,f
  4130  0640                     u2121:
  4131  0640  082A               	movf	??___flmul+2,w
  4132  0641  1103               	clrz
  4133  0642  1803               	skipnc
  4134  0643  3E01               	addlw	1
  4135  0644  1903               	skipnz
  4136  0645  2E47               	goto	u2122
  4137  0646  07B0               	addwf	___flmul@grs+2,f
  4138  0647                     u2122:
  4139  0647  082B               	movf	??___flmul+3,w
  4140  0648  1103               	clrz
  4141  0649  1803               	skipnc
  4142  064A  3E01               	addlw	1
  4143  064B  1903               	skipnz
  4144  064C  2E4E               	goto	u2123
  4145  064D  07B1               	addwf	___flmul@grs+3,f
  4146  064E                     u2123:
  4147  064E                     l1985:
  4148  064E  0821               	movf	___flmul@b+1,w
  4149  064F  00A8               	movwf	??___flmul
  4150  0650  0828               	movf	??___flmul,w
  4151  0651  00F0               	movwf	__Umul8_16@multiplicand
  4152  0652  0826               	movf	___flmul@a+2,w
  4153  0653  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4154  0658  0871               	movf	?__Umul8_16+1,w
  4155  0659  1283               	bcf	3,5	;RP0=0, select bank0
  4156  065A  1303               	bcf	3,6	;RP1=0, select bank0
  4157  065B  00B9               	movwf	___flmul@temp+1
  4158  065C  0870               	movf	?__Umul8_16,w
  4159  065D  00B8               	movwf	___flmul@temp
  4160  065E  0838               	movf	___flmul@temp,w
  4161  065F  00A8               	movwf	??___flmul
  4162  0660  0839               	movf	___flmul@temp+1,w
  4163  0661  00A9               	movwf	??___flmul+1
  4164  0662  01AA               	clrf	??___flmul+2
  4165  0663  01AB               	clrf	??___flmul+3
  4166  0664  0828               	movf	??___flmul,w
  4167  0665  07B4               	addwf	___flmul@prod,f
  4168  0666  0829               	movf	??___flmul+1,w
  4169  0667  1103               	clrz
  4170  0668  1803               	skipnc
  4171  0669  3E01               	addlw	1
  4172  066A  1903               	skipnz
  4173  066B  2E6D               	goto	u2131
  4174  066C  07B5               	addwf	___flmul@prod+1,f
  4175  066D                     u2131:
  4176  066D  082A               	movf	??___flmul+2,w
  4177  066E  1103               	clrz
  4178  066F  1803               	skipnc
  4179  0670  3E01               	addlw	1
  4180  0671  1903               	skipnz
  4181  0672  2E74               	goto	u2132
  4182  0673  07B6               	addwf	___flmul@prod+2,f
  4183  0674                     u2132:
  4184  0674  082B               	movf	??___flmul+3,w
  4185  0675  1103               	clrz
  4186  0676  1803               	skipnc
  4187  0677  3E01               	addlw	1
  4188  0678  1903               	skipnz
  4189  0679  2E7B               	goto	u2133
  4190  067A  07B7               	addwf	___flmul@prod+3,f
  4191  067B                     u2133:
  4192  067B                     l1987:
  4193  067B  0822               	movf	___flmul@b+2,w
  4194  067C  00A8               	movwf	??___flmul
  4195  067D  0828               	movf	??___flmul,w
  4196  067E  00F0               	movwf	__Umul8_16@multiplicand
  4197  067F  0825               	movf	___flmul@a+1,w
  4198  0680  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4199  0685  0871               	movf	?__Umul8_16+1,w
  4200  0686  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0687  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0688  00B9               	movwf	___flmul@temp+1
  4203  0689  0870               	movf	?__Umul8_16,w
  4204  068A  00B8               	movwf	___flmul@temp
  4205  068B                     l1989:
  4206  068B  0838               	movf	___flmul@temp,w
  4207  068C  00A8               	movwf	??___flmul
  4208  068D  0839               	movf	___flmul@temp+1,w
  4209  068E  00A9               	movwf	??___flmul+1
  4210  068F  01AA               	clrf	??___flmul+2
  4211  0690  01AB               	clrf	??___flmul+3
  4212  0691  0828               	movf	??___flmul,w
  4213  0692  07B4               	addwf	___flmul@prod,f
  4214  0693  0829               	movf	??___flmul+1,w
  4215  0694  1103               	clrz
  4216  0695  1803               	skipnc
  4217  0696  3E01               	addlw	1
  4218  0697  1903               	skipnz
  4219  0698  2E9A               	goto	u2141
  4220  0699  07B5               	addwf	___flmul@prod+1,f
  4221  069A                     u2141:
  4222  069A  082A               	movf	??___flmul+2,w
  4223  069B  1103               	clrz
  4224  069C  1803               	skipnc
  4225  069D  3E01               	addlw	1
  4226  069E  1903               	skipnz
  4227  069F  2EA1               	goto	u2142
  4228  06A0  07B6               	addwf	___flmul@prod+2,f
  4229  06A1                     u2142:
  4230  06A1  082B               	movf	??___flmul+3,w
  4231  06A2  1103               	clrz
  4232  06A3  1803               	skipnc
  4233  06A4  3E01               	addlw	1
  4234  06A5  1903               	skipnz
  4235  06A6  2EA8               	goto	u2143
  4236  06A7  07B7               	addwf	___flmul@prod+3,f
  4237  06A8                     u2143:
  4238  06A8  0822               	movf	___flmul@b+2,w
  4239  06A9  00A8               	movwf	??___flmul
  4240  06AA  0828               	movf	??___flmul,w
  4241  06AB  00F0               	movwf	__Umul8_16@multiplicand
  4242  06AC  0826               	movf	___flmul@a+2,w
  4243  06AD  120A  158A  24CE  120A  118A  	fcall	__Umul8_16
  4244  06B2  0871               	movf	?__Umul8_16+1,w
  4245  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  4246  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  4247  06B5  00B9               	movwf	___flmul@temp+1
  4248  06B6  0870               	movf	?__Umul8_16,w
  4249  06B7  00B8               	movwf	___flmul@temp
  4250  06B8                     l1991:
  4251  06B8  0838               	movf	___flmul@temp,w
  4252  06B9  00A8               	movwf	??___flmul
  4253  06BA  0839               	movf	___flmul@temp+1,w
  4254  06BB  00A9               	movwf	??___flmul+1
  4255  06BC  01AA               	clrf	??___flmul+2
  4256  06BD  01AB               	clrf	??___flmul+3
  4257  06BE  3008               	movlw	8
  4258  06BF                     u2155:
  4259  06BF  1003               	clrc
  4260  06C0  0DA8               	rlf	??___flmul,f
  4261  06C1  0DA9               	rlf	??___flmul+1,f
  4262  06C2  0DAA               	rlf	??___flmul+2,f
  4263  06C3  0DAB               	rlf	??___flmul+3,f
  4264  06C4                     u2150:
  4265  06C4  3EFF               	addlw	-1
  4266  06C5  1D03               	skipz
  4267  06C6  2EBF               	goto	u2155
  4268  06C7  0828               	movf	??___flmul,w
  4269  06C8  07B4               	addwf	___flmul@prod,f
  4270  06C9  0829               	movf	??___flmul+1,w
  4271  06CA  1103               	clrz
  4272  06CB  1803               	skipnc
  4273  06CC  3E01               	addlw	1
  4274  06CD  1903               	skipnz
  4275  06CE  2ED0               	goto	u2161
  4276  06CF  07B5               	addwf	___flmul@prod+1,f
  4277  06D0                     u2161:
  4278  06D0  082A               	movf	??___flmul+2,w
  4279  06D1  1103               	clrz
  4280  06D2  1803               	skipnc
  4281  06D3  3E01               	addlw	1
  4282  06D4  1903               	skipnz
  4283  06D5  2ED7               	goto	u2162
  4284  06D6  07B6               	addwf	___flmul@prod+2,f
  4285  06D7                     u2162:
  4286  06D7  082B               	movf	??___flmul+3,w
  4287  06D8  1103               	clrz
  4288  06D9  1803               	skipnc
  4289  06DA  3E01               	addlw	1
  4290  06DB  1903               	skipnz
  4291  06DC  2EDE               	goto	u2163
  4292  06DD  07B7               	addwf	___flmul@prod+3,f
  4293  06DE                     u2163:
  4294  06DE                     l1993:
  4295  06DE  082E               	movf	___flmul@grs,w
  4296  06DF  00A8               	movwf	??___flmul
  4297  06E0  082F               	movf	___flmul@grs+1,w
  4298  06E1  00A9               	movwf	??___flmul+1
  4299  06E2  0830               	movf	___flmul@grs+2,w
  4300  06E3  00AA               	movwf	??___flmul+2
  4301  06E4  0831               	movf	___flmul@grs+3,w
  4302  06E5  00AB               	movwf	??___flmul+3
  4303  06E6  3018               	movlw	24
  4304  06E7                     u2175:
  4305  06E7  1003               	clrc
  4306  06E8  0CAB               	rrf	??___flmul+3,f
  4307  06E9  0CAA               	rrf	??___flmul+2,f
  4308  06EA  0CA9               	rrf	??___flmul+1,f
  4309  06EB  0CA8               	rrf	??___flmul,f
  4310  06EC                     u2170:
  4311  06EC  3EFF               	addlw	-1
  4312  06ED  1D03               	skipz
  4313  06EE  2EE7               	goto	u2175
  4314  06EF  0828               	movf	??___flmul,w
  4315  06F0  07B4               	addwf	___flmul@prod,f
  4316  06F1  0829               	movf	??___flmul+1,w
  4317  06F2  1103               	clrz
  4318  06F3  1803               	skipnc
  4319  06F4  3E01               	addlw	1
  4320  06F5  1903               	skipnz
  4321  06F6  2EF8               	goto	u2181
  4322  06F7  07B5               	addwf	___flmul@prod+1,f
  4323  06F8                     u2181:
  4324  06F8  082A               	movf	??___flmul+2,w
  4325  06F9  1103               	clrz
  4326  06FA  1803               	skipnc
  4327  06FB  3E01               	addlw	1
  4328  06FC  1903               	skipnz
  4329  06FD  2EFF               	goto	u2182
  4330  06FE  07B6               	addwf	___flmul@prod+2,f
  4331  06FF                     u2182:
  4332  06FF  082B               	movf	??___flmul+3,w
  4333  0700  1103               	clrz
  4334  0701  1803               	skipnc
  4335  0702  3E01               	addlw	1
  4336  0703  1903               	skipnz
  4337  0704  2F06               	goto	u2183
  4338  0705  07B7               	addwf	___flmul@prod+3,f
  4339  0706                     u2183:
  4340  0706                     l1995:
  4341  0706  3008               	movlw	8
  4342  0707  00A8               	movwf	??___flmul
  4343  0708                     u2195:
  4344  0708  1003               	clrc
  4345  0709  0DAE               	rlf	___flmul@grs,f
  4346  070A  0DAF               	rlf	___flmul@grs+1,f
  4347  070B  0DB0               	rlf	___flmul@grs+2,f
  4348  070C  0DB1               	rlf	___flmul@grs+3,f
  4349  070D  0BA8               	decfsz	??___flmul,f
  4350  070E  2F08               	goto	u2195
  4351  070F                     l1997:
  4352  070F  0833               	movf	___flmul@bexp,w
  4353  0710  0732               	addwf	___flmul@aexp,w
  4354  0711  00A8               	movwf	??___flmul
  4355  0712  01A9               	clrf	??___flmul+1
  4356  0713  0DA9               	rlf	??___flmul+1,f
  4357  0714  0828               	movf	??___flmul,w
  4358  0715  3E82               	addlw	130
  4359  0716  00B8               	movwf	___flmul@temp
  4360  0717  0829               	movf	??___flmul+1,w
  4361  0718  1803               	skipnc
  4362  0719  3E01               	addlw	1
  4363  071A  3EFF               	addlw	255
  4364  071B  00B9               	movwf	___flmul@temp+1
  4365  071C  2F3A               	goto	l2009
  4366  071D                     l1999:
  4367  071D  3001               	movlw	1
  4368  071E  00A8               	movwf	??___flmul
  4369  071F                     u2205:
  4370  071F  1003               	clrc
  4371  0720  0DB4               	rlf	___flmul@prod,f
  4372  0721  0DB5               	rlf	___flmul@prod+1,f
  4373  0722  0DB6               	rlf	___flmul@prod+2,f
  4374  0723  0DB7               	rlf	___flmul@prod+3,f
  4375  0724  0BA8               	decfsz	??___flmul,f
  4376  0725  2F1F               	goto	u2205
  4377  0726                     l2001:
  4378  0726  1FB1               	btfss	___flmul@grs+3,7
  4379  0727  2F29               	goto	u2211
  4380  0728  2F2A               	goto	u2210
  4381  0729                     u2211:
  4382  0729  2F2B               	goto	l2005
  4383  072A                     u2210:
  4384  072A                     l2003:
  4385  072A  1434               	bsf	___flmul@prod,0
  4386  072B                     l2005:
  4387  072B  3001               	movlw	1
  4388  072C  00A8               	movwf	??___flmul
  4389  072D                     u2225:
  4390  072D  1003               	clrc
  4391  072E  0DAE               	rlf	___flmul@grs,f
  4392  072F  0DAF               	rlf	___flmul@grs+1,f
  4393  0730  0DB0               	rlf	___flmul@grs+2,f
  4394  0731  0DB1               	rlf	___flmul@grs+3,f
  4395  0732  0BA8               	decfsz	??___flmul,f
  4396  0733  2F2D               	goto	u2225
  4397  0734                     l2007:
  4398  0734  30FF               	movlw	255
  4399  0735  07B8               	addwf	___flmul@temp,f
  4400  0736  1803               	skipnc
  4401  0737  0AB9               	incf	___flmul@temp+1,f
  4402  0738  30FF               	movlw	255
  4403  0739  07B9               	addwf	___flmul@temp+1,f
  4404  073A                     l2009:
  4405  073A  1FB6               	btfss	___flmul@prod+2,7
  4406  073B  2F3D               	goto	u2231
  4407  073C  2F3E               	goto	u2230
  4408  073D                     u2231:
  4409  073D  2F1D               	goto	l1999
  4410  073E                     u2230:
  4411  073E                     l2011:
  4412  073E  01B2               	clrf	___flmul@aexp
  4413  073F                     l2013:
  4414  073F  1FB1               	btfss	___flmul@grs+3,7
  4415  0740  2F42               	goto	u2241
  4416  0741  2F43               	goto	u2240
  4417  0742                     u2241:
  4418  0742  2F5F               	goto	l2021
  4419  0743                     u2240:
  4420  0743                     l2015:
  4421  0743  30FF               	movlw	255
  4422  0744  052E               	andwf	___flmul@grs,w
  4423  0745  00A8               	movwf	??___flmul
  4424  0746  30FF               	movlw	255
  4425  0747  052F               	andwf	___flmul@grs+1,w
  4426  0748  00A9               	movwf	??___flmul+1
  4427  0749  30FF               	movlw	255
  4428  074A  0530               	andwf	___flmul@grs+2,w
  4429  074B  00AA               	movwf	??___flmul+2
  4430  074C  307F               	movlw	127
  4431  074D  0531               	andwf	___flmul@grs+3,w
  4432  074E  00AB               	movwf	??___flmul+3
  4433  074F  082B               	movf	??___flmul+3,w
  4434  0750  042A               	iorwf	??___flmul+2,w
  4435  0751  0429               	iorwf	??___flmul+1,w
  4436  0752  0428               	iorwf	??___flmul,w
  4437  0753  1903               	skipnz
  4438  0754  2F56               	goto	u2251
  4439  0755  2F57               	goto	u2250
  4440  0756                     u2251:
  4441  0756  2F5A               	goto	l674
  4442  0757                     u2250:
  4443  0757                     l2017:
  4444  0757  01B2               	clrf	___flmul@aexp
  4445  0758  0AB2               	incf	___flmul@aexp,f
  4446  0759  2F5F               	goto	l2021
  4447  075A                     l674:
  4448  075A  1C34               	btfss	___flmul@prod,0
  4449  075B  2F5D               	goto	u2261
  4450  075C  2F5E               	goto	u2260
  4451  075D                     u2261:
  4452  075D  2F5F               	goto	l2021
  4453  075E                     u2260:
  4454  075E  2F57               	goto	l2017
  4455  075F                     l2021:
  4456  075F  0832               	movf	___flmul@aexp,w
  4457  0760  1903               	btfsc	3,2
  4458  0761  2F63               	goto	u2271
  4459  0762  2F64               	goto	u2270
  4460  0763                     u2271:
  4461  0763  2F95               	goto	l2031
  4462  0764                     u2270:
  4463  0764                     l2023:
  4464  0764  3001               	movlw	1
  4465  0765  07B4               	addwf	___flmul@prod,f
  4466  0766  3000               	movlw	0
  4467  0767  1803               	skipnc
  4468  0768  3001               	movlw	1
  4469  0769  07B5               	addwf	___flmul@prod+1,f
  4470  076A  3000               	movlw	0
  4471  076B  1803               	skipnc
  4472  076C  3001               	movlw	1
  4473  076D  07B6               	addwf	___flmul@prod+2,f
  4474  076E  3000               	movlw	0
  4475  076F  1803               	skipnc
  4476  0770  3001               	movlw	1
  4477  0771  07B7               	addwf	___flmul@prod+3,f
  4478  0772                     l2025:
  4479  0772  1C37               	btfss	___flmul@prod+3,0
  4480  0773  2F75               	goto	u2281
  4481  0774  2F76               	goto	u2280
  4482  0775                     u2281:
  4483  0775  2F95               	goto	l2031
  4484  0776                     u2280:
  4485  0776                     l2027:
  4486  0776  0834               	movf	___flmul@prod,w
  4487  0777  00A8               	movwf	??___flmul
  4488  0778  0835               	movf	___flmul@prod+1,w
  4489  0779  00A9               	movwf	??___flmul+1
  4490  077A  0836               	movf	___flmul@prod+2,w
  4491  077B  00AA               	movwf	??___flmul+2
  4492  077C  0837               	movf	___flmul@prod+3,w
  4493  077D  00AB               	movwf	??___flmul+3
  4494  077E  3001               	movlw	1
  4495  077F  00AC               	movwf	??___flmul+4
  4496  0780                     u2295:
  4497  0780  0D2B               	rlf	??___flmul+3,w
  4498  0781  0CAB               	rrf	??___flmul+3,f
  4499  0782  0CAA               	rrf	??___flmul+2,f
  4500  0783  0CA9               	rrf	??___flmul+1,f
  4501  0784  0CA8               	rrf	??___flmul,f
  4502  0785                     u2290:
  4503  0785  0BAC               	decfsz	??___flmul+4,f
  4504  0786  2F80               	goto	u2295
  4505  0787  082B               	movf	??___flmul+3,w
  4506  0788  00B7               	movwf	___flmul@prod+3
  4507  0789  082A               	movf	??___flmul+2,w
  4508  078A  00B6               	movwf	___flmul@prod+2
  4509  078B  0829               	movf	??___flmul+1,w
  4510  078C  00B5               	movwf	___flmul@prod+1
  4511  078D  0828               	movf	??___flmul,w
  4512  078E  00B4               	movwf	___flmul@prod
  4513  078F                     l2029:
  4514  078F  3001               	movlw	1
  4515  0790  07B8               	addwf	___flmul@temp,f
  4516  0791  1803               	skipnc
  4517  0792  0AB9               	incf	___flmul@temp+1,f
  4518  0793  3000               	movlw	0
  4519  0794  07B9               	addwf	___flmul@temp+1,f
  4520  0795                     l2031:
  4521  0795  0839               	movf	___flmul@temp+1,w
  4522  0796  3A80               	xorlw	128
  4523  0797  00FF               	movwf	btemp+1
  4524  0798  3080               	movlw	128
  4525  0799  027F               	subwf	btemp+1,w
  4526  079A  1D03               	skipz
  4527  079B  2F9E               	goto	u2305
  4528  079C  30FF               	movlw	255
  4529  079D  0238               	subwf	___flmul@temp,w
  4530  079E                     u2305:
  4531  079E  1C03               	skipc
  4532  079F  2FA1               	goto	u2301
  4533  07A0  2FA2               	goto	u2300
  4534  07A1                     u2301:
  4535  07A1  2FAD               	goto	l2035
  4536  07A2                     u2300:
  4537  07A2                     l2033:
  4538  07A2  307F               	movlw	127
  4539  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4540  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4541  07A5  00B7               	movwf	___flmul@prod+3
  4542  07A6  3080               	movlw	128
  4543  07A7  00B6               	movwf	___flmul@prod+2
  4544  07A8  3000               	movlw	0
  4545  07A9  00B5               	movwf	___flmul@prod+1
  4546  07AA  3000               	movlw	0
  4547  07AB  00B4               	movwf	___flmul@prod
  4548  07AC  2FE2               	goto	l680
  4549  07AD                     l2035:
  4550  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4551  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  4552  07AF  0839               	movf	___flmul@temp+1,w
  4553  07B0  3A80               	xorlw	128
  4554  07B1  00FF               	movwf	btemp+1
  4555  07B2  3080               	movlw	128
  4556  07B3  027F               	subwf	btemp+1,w
  4557  07B4  1D03               	skipz
  4558  07B5  2FB8               	goto	u2315
  4559  07B6  3001               	movlw	1
  4560  07B7  0238               	subwf	___flmul@temp,w
  4561  07B8                     u2315:
  4562  07B8  1803               	skipnc
  4563  07B9  2FBB               	goto	u2311
  4564  07BA  2FBC               	goto	u2310
  4565  07BB                     u2311:
  4566  07BB  2FC8               	goto	l2041
  4567  07BC                     u2310:
  4568  07BC                     l2037:
  4569  07BC  3000               	movlw	0
  4570  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  4571  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  4572  07BF  00B7               	movwf	___flmul@prod+3
  4573  07C0  3000               	movlw	0
  4574  07C1  00B6               	movwf	___flmul@prod+2
  4575  07C2  3000               	movlw	0
  4576  07C3  00B5               	movwf	___flmul@prod+1
  4577  07C4  3000               	movlw	0
  4578  07C5  00B4               	movwf	___flmul@prod
  4579  07C6                     l2039:
  4580  07C6  01AD               	clrf	___flmul@sign
  4581  07C7  2FE2               	goto	l680
  4582  07C8                     l2041:
  4583  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4584  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4585  07CA  0838               	movf	___flmul@temp,w
  4586  07CB  00A8               	movwf	??___flmul
  4587  07CC  0828               	movf	??___flmul,w
  4588  07CD  00B3               	movwf	___flmul@bexp
  4589  07CE  30FF               	movlw	255
  4590  07CF  05B4               	andwf	___flmul@prod,f
  4591  07D0  30FF               	movlw	255
  4592  07D1  05B5               	andwf	___flmul@prod+1,f
  4593  07D2  307F               	movlw	127
  4594  07D3  05B6               	andwf	___flmul@prod+2,f
  4595  07D4  3000               	movlw	0
  4596  07D5  05B7               	andwf	___flmul@prod+3,f
  4597  07D6                     l2043:
  4598  07D6  1C33               	btfss	___flmul@bexp,0
  4599  07D7  2FD9               	goto	u2321
  4600  07D8  2FDA               	goto	u2320
  4601  07D9                     u2321:
  4602  07D9  2FDB               	goto	l2047
  4603  07DA                     u2320:
  4604  07DA                     l2045:
  4605  07DA  17B6               	bsf	___flmul@prod+2,7
  4606  07DB                     l2047:
  4607  07DB  0833               	movf	___flmul@bexp,w
  4608  07DC  00A8               	movwf	??___flmul
  4609  07DD  1003               	clrc
  4610  07DE  0C28               	rrf	??___flmul,w
  4611  07DF  00A9               	movwf	??___flmul+1
  4612  07E0  0829               	movf	??___flmul+1,w
  4613  07E1  00B7               	movwf	___flmul@prod+3
  4614  07E2                     l680:
  4615  07E2  082D               	movf	___flmul@sign,w
  4616  07E3  00A8               	movwf	??___flmul
  4617  07E4  0828               	movf	??___flmul,w
  4618  07E5  04B7               	iorwf	___flmul@prod+3,f
  4619  07E6                     l2049:
  4620  07E6  0837               	movf	___flmul@prod+3,w
  4621  07E7  00A3               	movwf	?___flmul+3
  4622  07E8  0836               	movf	___flmul@prod+2,w
  4623  07E9  00A2               	movwf	?___flmul+2
  4624  07EA  0835               	movf	___flmul@prod+1,w
  4625  07EB  00A1               	movwf	?___flmul+1
  4626  07EC  0834               	movf	___flmul@prod,w
  4627  07ED  00A0               	movwf	?___flmul
  4628  07EE                     l668:
  4629  07EE  0008               	return
  4630  07EF                     __end_of___flmul:
  4631                           
  4632                           	psect	text17
  4633  0CCE                     __ptext17:	
  4634 ;; *************** function __Umul8_16 *****************
  4635 ;; Defined at:
  4636 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  multiplier      1    wreg     unsigned char 
  4639 ;;  multiplicand    1    0[COMMON] unsigned char 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  multiplier      1    8[COMMON] unsigned char 
  4642 ;;  word_mpld       2    6[COMMON] unsigned int 
  4643 ;;  product         2    4[COMMON] unsigned int 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  2    0[COMMON] unsigned int 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         2       0       0       0       0
  4654 ;;      Locals:         5       0       0       0       0
  4655 ;;      Temps:          2       0       0       0       0
  4656 ;;      Totals:         9       0       0       0       0
  4657 ;;Total ram usage:        9 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		___flmul
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function __Umul8_16
  4668  0CCE                     __Umul8_16:
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4672                           ;__Umul8_16@multiplier stored from wreg
  4673  0CCE  00F8               	movwf	__Umul8_16@multiplier
  4674  0CCF                     l1739:
  4675  0CCF  01F4               	clrf	__Umul8_16@product
  4676  0CD0  01F5               	clrf	__Umul8_16@product+1
  4677  0CD1                     l1741:
  4678  0CD1  0870               	movf	__Umul8_16@multiplicand,w
  4679  0CD2  00F2               	movwf	??__Umul8_16
  4680  0CD3  01F3               	clrf	??__Umul8_16+1
  4681  0CD4  0872               	movf	??__Umul8_16,w
  4682  0CD5  00F6               	movwf	__Umul8_16@word_mpld
  4683  0CD6  0873               	movf	??__Umul8_16+1,w
  4684  0CD7  00F7               	movwf	__Umul8_16@word_mpld+1
  4685  0CD8                     l1743:
  4686  0CD8  1C78               	btfss	__Umul8_16@multiplier,0
  4687  0CD9  2CDB               	goto	u1711
  4688  0CDA  2CDC               	goto	u1710
  4689  0CDB                     u1711:
  4690  0CDB  2CE2               	goto	l687
  4691  0CDC                     u1710:
  4692  0CDC                     l1745:
  4693  0CDC  0876               	movf	__Umul8_16@word_mpld,w
  4694  0CDD  07F4               	addwf	__Umul8_16@product,f
  4695  0CDE  1803               	skipnc
  4696  0CDF  0AF5               	incf	__Umul8_16@product+1,f
  4697  0CE0  0877               	movf	__Umul8_16@word_mpld+1,w
  4698  0CE1  07F5               	addwf	__Umul8_16@product+1,f
  4699  0CE2                     l687:
  4700  0CE2  3001               	movlw	1
  4701  0CE3                     u1725:
  4702  0CE3  1003               	clrc
  4703  0CE4  0DF6               	rlf	__Umul8_16@word_mpld,f
  4704  0CE5  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4705  0CE6  3EFF               	addlw	-1
  4706  0CE7  1D03               	skipz
  4707  0CE8  2CE3               	goto	u1725
  4708  0CE9  1003               	clrc
  4709  0CEA  0CF8               	rrf	__Umul8_16@multiplier,f
  4710  0CEB                     l1747:
  4711  0CEB  0878               	movf	__Umul8_16@multiplier,w
  4712  0CEC  1D03               	btfss	3,2
  4713  0CED  2CEF               	goto	u1731
  4714  0CEE  2CF0               	goto	u1730
  4715  0CEF                     u1731:
  4716  0CEF  2CD8               	goto	l1743
  4717  0CF0                     u1730:
  4718  0CF0                     l1749:
  4719  0CF0  0875               	movf	__Umul8_16@product+1,w
  4720  0CF1  00F1               	movwf	?__Umul8_16+1
  4721  0CF2  0874               	movf	__Umul8_16@product,w
  4722  0CF3  00F0               	movwf	?__Umul8_16
  4723  0CF4                     l689:
  4724  0CF4  0008               	return
  4725  0CF5                     __end_of__Umul8_16:
  4726                           
  4727                           	psect	text18
  4728  0C45                     __ptext18:	
  4729 ;; *************** function _I2C_Master_Write *****************
  4730 ;; Defined at:
  4731 ;;		line 65 in file "I2C_2.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  d               2    0[COMMON] unsigned int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0, pclath, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4745 ;;      Params:         2       0       0       0       0
  4746 ;;      Locals:         0       0       0       0       0
  4747 ;;      Temps:          0       0       0       0       0
  4748 ;;      Totals:         2       0       0       0       0
  4749 ;;Total ram usage:        2 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; Hardware stack levels required when called:    1
  4752 ;; This function calls:
  4753 ;;		_I2C_Master_Wait
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function _I2C_Master_Write
  4761  0C45                     _I2C_Master_Write:
  4762  0C45                     l1777:	
  4763                           ;incstack = 0
  4764                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4765                           
  4766                           
  4767                           ;I2C_2.c: 65: void I2C_Master_Write(unsigned d);I2C_2.c: 66: {;I2C_2.c: 67:     I2C_Mast
      +                          er_Wait();
  4768  0C45  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4769  0C4A                     l1779:
  4770                           
  4771                           ;I2C_2.c: 68:     SSPBUF = d;
  4772  0C4A  0870               	movf	I2C_Master_Write@d,w
  4773  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  4774  0C4C  1303               	bcf	3,6	;RP1=0, select bank0
  4775  0C4D  0093               	movwf	19	;volatile
  4776  0C4E                     l119:
  4777  0C4E  0008               	return
  4778  0C4F                     __end_of_I2C_Master_Write:
  4779                           
  4780                           	psect	text19
  4781  0C3C                     __ptext19:	
  4782 ;; *************** function _I2C_Master_Stop *****************
  4783 ;; Defined at:
  4784 ;;		line 55 in file "I2C_2.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4798 ;;      Params:         0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0
  4801 ;;      Totals:         0       0       0       0       0
  4802 ;;Total ram usage:        0 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    1
  4805 ;; This function calls:
  4806 ;;		_I2C_Master_Wait
  4807 ;; This function is called by:
  4808 ;;		_main
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _I2C_Master_Stop
  4814  0C3C                     _I2C_Master_Stop:
  4815  0C3C                     l1797:	
  4816                           ;incstack = 0
  4817                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4818                           
  4819                           
  4820                           ;I2C_2.c: 57:     I2C_Master_Wait();
  4821  0C3C  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4822  0C41                     l1799:
  4823                           
  4824                           ;I2C_2.c: 58:     SSPCON2bits.PEN = 1;
  4825  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  4826  0C42  1303               	bcf	3,6	;RP1=0, select bank1
  4827  0C43  1511               	bsf	17,2	;volatile
  4828  0C44                     l116:
  4829  0C44  0008               	return
  4830  0C45                     __end_of_I2C_Master_Stop:
  4831                           
  4832                           	psect	text20
  4833  0C33                     __ptext20:	
  4834 ;; *************** function _I2C_Master_Start *****************
  4835 ;; Defined at:
  4836 ;;		line 39 in file "I2C_2.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4850 ;;      Params:         0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0
  4853 ;;      Totals:         0       0       0       0       0
  4854 ;;Total ram usage:        0 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    1
  4857 ;; This function calls:
  4858 ;;		_I2C_Master_Wait
  4859 ;; This function is called by:
  4860 ;;		_main
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           
  4865                           ;psect for function _I2C_Master_Start
  4866  0C33                     _I2C_Master_Start:
  4867  0C33                     l1773:	
  4868                           ;incstack = 0
  4869                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4870                           
  4871                           
  4872                           ;I2C_2.c: 41:     I2C_Master_Wait();
  4873  0C33  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4874  0C38                     l1775:
  4875                           
  4876                           ;I2C_2.c: 42:     SSPCON2bits.SEN = 1;
  4877  0C38  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0C39  1303               	bcf	3,6	;RP1=0, select bank1
  4879  0C3A  1411               	bsf	17,0	;volatile
  4880  0C3B                     l110:
  4881  0C3B  0008               	return
  4882  0C3C                     __end_of_I2C_Master_Start:
  4883                           
  4884                           	psect	text21
  4885  0CF5                     __ptext21:	
  4886 ;; *************** function _I2C_Master_Read *****************
  4887 ;; Defined at:
  4888 ;;		line 74 in file "I2C_2.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  a               2    0[COMMON] unsigned short 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  temp            2    4[COMMON] unsigned short 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    0[COMMON] unsigned short 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0, pclath, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4902 ;;      Params:         2       0       0       0       0
  4903 ;;      Locals:         2       0       0       0       0
  4904 ;;      Temps:          2       0       0       0       0
  4905 ;;      Totals:         6       0       0       0       0
  4906 ;;Total ram usage:        6 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    1
  4909 ;; This function calls:
  4910 ;;		_I2C_Master_Wait
  4911 ;; This function is called by:
  4912 ;;		_main
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           
  4917                           ;psect for function _I2C_Master_Read
  4918  0CF5                     _I2C_Master_Read:
  4919  0CF5                     l1781:	
  4920                           ;incstack = 0
  4921                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4922                           
  4923                           
  4924                           ;I2C_2.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C_2.c: 75: {;I2C_2.c: 7
      +                          6:     unsigned short temp;;I2C_2.c: 77:     I2C_Master_Wait();
  4925  0CF5  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4926  0CFA                     l1783:
  4927                           
  4928                           ;I2C_2.c: 78:     SSPCON2bits.RCEN = 1;
  4929  0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  4930  0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  4931  0CFC  1591               	bsf	17,3	;volatile
  4932                           
  4933                           ;I2C_2.c: 79:     I2C_Master_Wait();
  4934  0CFD  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4935  0D02                     l1785:
  4936                           
  4937                           ;I2C_2.c: 80:     temp = SSPBUF;
  4938  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4939  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  4940  0D04  0813               	movf	19,w	;volatile
  4941  0D05  00F2               	movwf	??_I2C_Master_Read
  4942  0D06  01F3               	clrf	??_I2C_Master_Read+1
  4943  0D07  0872               	movf	??_I2C_Master_Read,w
  4944  0D08  00F4               	movwf	I2C_Master_Read@temp
  4945  0D09  0873               	movf	??_I2C_Master_Read+1,w
  4946  0D0A  00F5               	movwf	I2C_Master_Read@temp+1
  4947  0D0B                     l1787:
  4948                           
  4949                           ;I2C_2.c: 81:     I2C_Master_Wait();
  4950  0D0B  120A  158A  244F  120A  158A  	fcall	_I2C_Master_Wait
  4951  0D10                     l1789:
  4952                           
  4953                           ;I2C_2.c: 82:     if(a == 1){
  4954  0D10  0370               	decf	I2C_Master_Read@a,w
  4955  0D11  0471               	iorwf	I2C_Master_Read@a+1,w
  4956  0D12  1D03               	btfss	3,2
  4957  0D13  2D15               	goto	u1741
  4958  0D14  2D16               	goto	u1740
  4959  0D15                     u1741:
  4960  0D15  2D1A               	goto	l122
  4961  0D16                     u1740:
  4962  0D16                     l1791:
  4963                           
  4964                           ;I2C_2.c: 83:         SSPCON2bits.ACKDT = 0;
  4965  0D16  1683               	bsf	3,5	;RP0=1, select bank1
  4966  0D17  1303               	bcf	3,6	;RP1=0, select bank1
  4967  0D18  1291               	bcf	17,5	;volatile
  4968                           
  4969                           ;I2C_2.c: 84:     }else{
  4970  0D19  2D1D               	goto	l123
  4971  0D1A                     l122:
  4972                           
  4973                           ;I2C_2.c: 85:         SSPCON2bits.ACKDT = 1;
  4974  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  4975  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  4976  0D1C  1691               	bsf	17,5	;volatile
  4977  0D1D                     l123:	
  4978                           ;I2C_2.c: 86:     }
  4979                           
  4980                           
  4981                           ;I2C_2.c: 87:     SSPCON2bits.ACKEN = 1;
  4982  0D1D  1611               	bsf	17,4	;volatile
  4983  0D1E                     l1793:
  4984                           
  4985                           ;I2C_2.c: 88:     return temp;
  4986  0D1E  0875               	movf	I2C_Master_Read@temp+1,w
  4987  0D1F  00F1               	movwf	?_I2C_Master_Read+1
  4988  0D20  0874               	movf	I2C_Master_Read@temp,w
  4989  0D21  00F0               	movwf	?_I2C_Master_Read
  4990  0D22                     l124:
  4991  0D22  0008               	return
  4992  0D23                     __end_of_I2C_Master_Read:
  4993                           
  4994                           	psect	text22
  4995  0C4F                     __ptext22:	
  4996 ;; *************** function _I2C_Master_Wait *****************
  4997 ;; Defined at:
  4998 ;;		line 32 in file "I2C_2.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5012 ;;      Params:         0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0
  5015 ;;      Totals:         0       0       0       0       0
  5016 ;;Total ram usage:        0 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_I2C_Master_Start
  5022 ;;		_I2C_Master_Stop
  5023 ;;		_I2C_Master_Write
  5024 ;;		_I2C_Master_Read
  5025 ;;		_I2C_Master_RepeatedStart
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           
  5030                           ;psect for function _I2C_Master_Wait
  5031  0C4F                     _I2C_Master_Wait:
  5032  0C4F                     l1605:	
  5033                           ;incstack = 0
  5034                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5035                           
  5036  0C4F                     l104:	
  5037                           ;I2C_2.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5038                           
  5039  0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  5040  0C50  1303               	bcf	3,6	;RP1=0, select bank1
  5041  0C51  1914               	btfsc	20,2	;volatile
  5042  0C52  2C54               	goto	u1371
  5043  0C53  2C55               	goto	u1370
  5044  0C54                     u1371:
  5045  0C54  2C4F               	goto	l104
  5046  0C55                     u1370:
  5047  0C55                     l1607:
  5048  0C55  0811               	movf	17,w	;volatile
  5049  0C56  391F               	andlw	31
  5050  0C57  1D03               	btfss	3,2
  5051  0C58  2C5A               	goto	u1381
  5052  0C59  2C5B               	goto	u1380
  5053  0C5A                     u1381:
  5054  0C5A  2C4F               	goto	l104
  5055  0C5B                     u1380:
  5056  0C5B                     l107:
  5057  0C5B  0008               	return
  5058  0C5C                     __end_of_I2C_Master_Wait:
  5059                           
  5060                           	psect	text23
  5061  0ECB                     __ptext23:	
  5062 ;; *************** function _Division *****************
  5063 ;; Defined at:
  5064 ;;		line 34 in file "Master_I2C.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  y               1    wreg     unsigned char 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  y               1    9[BANK0 ] unsigned char 
  5069 ;; Return value:  Size  Location     Type
  5070 ;;                  1    wreg      void 
  5071 ;; Registers used:
  5072 ;;		wreg, status,2, status,0, pclath, cstack
  5073 ;; Tracked objects:
  5074 ;;		On entry : 0/0
  5075 ;;		On exit  : 0/0
  5076 ;;		Unchanged: 0/0
  5077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5078 ;;      Params:         0       0       0       0       0
  5079 ;;      Locals:         0       3       0       0       0
  5080 ;;      Temps:          0       3       0       0       0
  5081 ;;      Totals:         0       6       0       0       0
  5082 ;;Total ram usage:        6 bytes
  5083 ;; Hardware stack levels used:    1
  5084 ;; Hardware stack levels required when called:    1
  5085 ;; This function calls:
  5086 ;;		___awdiv
  5087 ;;		___awmod
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           
  5094                           ;psect for function _Division
  5095  0ECB                     _Division:
  5096                           
  5097                           ;incstack = 0
  5098                           ; Regs used in _Division: [wreg+status,2+status,0+pclath+cstack]
  5099                           ;Division@y stored from wreg
  5100  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0ECD  00A9               	movwf	Division@y
  5103  0ECE                     l1753:
  5104                           
  5105                           ;Master_I2C.c: 35:         cen = (y/100);
  5106  0ECE  3064               	movlw	100
  5107  0ECF  00F7               	movwf	___awdiv@divisor
  5108  0ED0  3000               	movlw	0
  5109  0ED1  00F8               	movwf	___awdiv@divisor+1
  5110  0ED2  0829               	movf	Division@y,w
  5111  0ED3  00A4               	movwf	??_Division
  5112  0ED4  01A5               	clrf	??_Division+1
  5113  0ED5  0824               	movf	??_Division,w
  5114  0ED6  00F9               	movwf	___awdiv@dividend
  5115  0ED7  0825               	movf	??_Division+1,w
  5116  0ED8  00FA               	movwf	___awdiv@dividend+1
  5117  0ED9  120A  158A  2797  120A  158A  	fcall	___awdiv
  5118  0EDE  0877               	movf	?___awdiv,w
  5119  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  5120  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  5121  0EE1  00A6               	movwf	??_Division+2
  5122  0EE2  0826               	movf	??_Division+2,w
  5123  0EE3  00D1               	movwf	_cen
  5124                           
  5125                           ;Master_I2C.c: 36:         dec = ((y%100)/10);
  5126  0EE4  300A               	movlw	10
  5127  0EE5  00F7               	movwf	___awdiv@divisor
  5128  0EE6  3000               	movlw	0
  5129  0EE7  00F8               	movwf	___awdiv@divisor+1
  5130  0EE8  0829               	movf	Division@y,w
  5131  0EE9  00A4               	movwf	??_Division
  5132  0EEA  01A5               	clrf	??_Division+1
  5133  0EEB  0824               	movf	??_Division,w
  5134  0EEC  00F2               	movwf	___awmod@dividend
  5135  0EED  0825               	movf	??_Division+1,w
  5136  0EEE  00F3               	movwf	___awmod@dividend+1
  5137  0EEF  3064               	movlw	100
  5138  0EF0  00F0               	movwf	___awmod@divisor
  5139  0EF1  3000               	movlw	0
  5140  0EF2  00F1               	movwf	___awmod@divisor+1
  5141  0EF3  120A  158A  2615  120A  158A  	fcall	___awmod
  5142  0EF8  0871               	movf	?___awmod+1,w
  5143  0EF9  00FA               	movwf	___awdiv@dividend+1
  5144  0EFA  0870               	movf	?___awmod,w
  5145  0EFB  00F9               	movwf	___awdiv@dividend
  5146  0EFC  120A  158A  2797  120A  158A  	fcall	___awdiv
  5147  0F01  0877               	movf	?___awdiv,w
  5148  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0F04  00A6               	movwf	??_Division+2
  5151  0F05  0826               	movf	??_Division+2,w
  5152  0F06  00D0               	movwf	_dec
  5153                           
  5154                           ;Master_I2C.c: 37:         uni = ((y%100)%10);
  5155  0F07  0829               	movf	Division@y,w
  5156  0F08  00A4               	movwf	??_Division
  5157  0F09  01A5               	clrf	??_Division+1
  5158  0F0A  0824               	movf	??_Division,w
  5159  0F0B  00F2               	movwf	___awmod@dividend
  5160  0F0C  0825               	movf	??_Division+1,w
  5161  0F0D  00F3               	movwf	___awmod@dividend+1
  5162  0F0E  3064               	movlw	100
  5163  0F0F  00F0               	movwf	___awmod@divisor
  5164  0F10  3000               	movlw	0
  5165  0F11  00F1               	movwf	___awmod@divisor+1
  5166  0F12  120A  158A  2615  120A  158A  	fcall	___awmod
  5167  0F17  0871               	movf	?___awmod+1,w
  5168  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0F1A  00A8               	movwf	_Division$893+1
  5171  0F1B  0870               	movf	?___awmod,w
  5172  0F1C  00A7               	movwf	_Division$893
  5173                           
  5174                           ;Master_I2C.c: 37:         uni = ((y%100)%10);
  5175  0F1D  300A               	movlw	10
  5176  0F1E  00F0               	movwf	___awmod@divisor
  5177  0F1F  3000               	movlw	0
  5178  0F20  00F1               	movwf	___awmod@divisor+1
  5179  0F21  0828               	movf	_Division$893+1,w
  5180  0F22  00F3               	movwf	___awmod@dividend+1
  5181  0F23  0827               	movf	_Division$893,w
  5182  0F24  00F2               	movwf	___awmod@dividend
  5183  0F25  120A  158A  2615  120A  158A  	fcall	___awmod
  5184  0F2A  0870               	movf	?___awmod,w
  5185  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  5186  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0F2D  00A4               	movwf	??_Division
  5188  0F2E  0824               	movf	??_Division,w
  5189  0F2F  00CF               	movwf	_uni
  5190  0F30                     l61:
  5191  0F30  0008               	return
  5192  0F31                     __end_of_Division:
  5193                           
  5194                           	psect	text24
  5195  0E15                     __ptext24:	
  5196 ;; *************** function ___awmod *****************
  5197 ;; Defined at:
  5198 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  divisor         2    0[COMMON] int 
  5201 ;;  dividend        2    2[COMMON] int 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  sign            1    6[COMMON] unsigned char 
  5204 ;;  counter         1    5[COMMON] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2    0[COMMON] int 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         4       0       0       0       0
  5215 ;;      Locals:         2       0       0       0       0
  5216 ;;      Temps:          1       0       0       0       0
  5217 ;;      Totals:         7       0       0       0       0
  5218 ;;Total ram usage:        7 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_Division
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function ___awmod
  5229  0E15                     ___awmod:
  5230  0E15                     l1653:	
  5231                           ;incstack = 0
  5232                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5233                           
  5234  0E15  01F6               	clrf	___awmod@sign
  5235  0E16                     l1655:
  5236  0E16  1FF3               	btfss	___awmod@dividend+1,7
  5237  0E17  2E19               	goto	u1491
  5238  0E18  2E1A               	goto	u1490
  5239  0E19                     u1491:
  5240  0E19  2E21               	goto	l1661
  5241  0E1A                     u1490:
  5242  0E1A                     l1657:
  5243  0E1A  09F2               	comf	___awmod@dividend,f
  5244  0E1B  09F3               	comf	___awmod@dividend+1,f
  5245  0E1C  0AF2               	incf	___awmod@dividend,f
  5246  0E1D  1903               	skipnz
  5247  0E1E  0AF3               	incf	___awmod@dividend+1,f
  5248  0E1F                     l1659:
  5249  0E1F  01F6               	clrf	___awmod@sign
  5250  0E20  0AF6               	incf	___awmod@sign,f
  5251  0E21                     l1661:
  5252  0E21  1FF1               	btfss	___awmod@divisor+1,7
  5253  0E22  2E24               	goto	u1501
  5254  0E23  2E25               	goto	u1500
  5255  0E24                     u1501:
  5256  0E24  2E2A               	goto	l1665
  5257  0E25                     u1500:
  5258  0E25                     l1663:
  5259  0E25  09F0               	comf	___awmod@divisor,f
  5260  0E26  09F1               	comf	___awmod@divisor+1,f
  5261  0E27  0AF0               	incf	___awmod@divisor,f
  5262  0E28  1903               	skipnz
  5263  0E29  0AF1               	incf	___awmod@divisor+1,f
  5264  0E2A                     l1665:
  5265  0E2A  0870               	movf	___awmod@divisor,w
  5266  0E2B  0471               	iorwf	___awmod@divisor+1,w
  5267  0E2C  1903               	btfsc	3,2
  5268  0E2D  2E2F               	goto	u1511
  5269  0E2E  2E30               	goto	u1510
  5270  0E2F                     u1511:
  5271  0E2F  2E5F               	goto	l1683
  5272  0E30                     u1510:
  5273  0E30                     l1667:
  5274  0E30  01F5               	clrf	___awmod@counter
  5275  0E31  0AF5               	incf	___awmod@counter,f
  5276  0E32  2E3E               	goto	l1673
  5277  0E33                     l1669:
  5278  0E33  3001               	movlw	1
  5279  0E34                     u1525:
  5280  0E34  1003               	clrc
  5281  0E35  0DF0               	rlf	___awmod@divisor,f
  5282  0E36  0DF1               	rlf	___awmod@divisor+1,f
  5283  0E37  3EFF               	addlw	-1
  5284  0E38  1D03               	skipz
  5285  0E39  2E34               	goto	u1525
  5286  0E3A                     l1671:
  5287  0E3A  3001               	movlw	1
  5288  0E3B  00F4               	movwf	??___awmod
  5289  0E3C  0874               	movf	??___awmod,w
  5290  0E3D  07F5               	addwf	___awmod@counter,f
  5291  0E3E                     l1673:
  5292  0E3E  1FF1               	btfss	___awmod@divisor+1,7
  5293  0E3F  2E41               	goto	u1531
  5294  0E40  2E42               	goto	u1530
  5295  0E41                     u1531:
  5296  0E41  2E33               	goto	l1669
  5297  0E42                     u1530:
  5298  0E42                     l1675:
  5299  0E42  0871               	movf	___awmod@divisor+1,w
  5300  0E43  0273               	subwf	___awmod@dividend+1,w
  5301  0E44  1D03               	skipz
  5302  0E45  2E48               	goto	u1545
  5303  0E46  0870               	movf	___awmod@divisor,w
  5304  0E47  0272               	subwf	___awmod@dividend,w
  5305  0E48                     u1545:
  5306  0E48  1C03               	skipc
  5307  0E49  2E4B               	goto	u1541
  5308  0E4A  2E4C               	goto	u1540
  5309  0E4B                     u1541:
  5310  0E4B  2E52               	goto	l1679
  5311  0E4C                     u1540:
  5312  0E4C                     l1677:
  5313  0E4C  0870               	movf	___awmod@divisor,w
  5314  0E4D  02F2               	subwf	___awmod@dividend,f
  5315  0E4E  0871               	movf	___awmod@divisor+1,w
  5316  0E4F  1C03               	skipc
  5317  0E50  03F3               	decf	___awmod@dividend+1,f
  5318  0E51  02F3               	subwf	___awmod@dividend+1,f
  5319  0E52                     l1679:
  5320  0E52  3001               	movlw	1
  5321  0E53                     u1555:
  5322  0E53  1003               	clrc
  5323  0E54  0CF1               	rrf	___awmod@divisor+1,f
  5324  0E55  0CF0               	rrf	___awmod@divisor,f
  5325  0E56  3EFF               	addlw	-1
  5326  0E57  1D03               	skipz
  5327  0E58  2E53               	goto	u1555
  5328  0E59                     l1681:
  5329  0E59  3001               	movlw	1
  5330  0E5A  02F5               	subwf	___awmod@counter,f
  5331  0E5B  1D03               	btfss	3,2
  5332  0E5C  2E5E               	goto	u1561
  5333  0E5D  2E5F               	goto	u1560
  5334  0E5E                     u1561:
  5335  0E5E  2E42               	goto	l1675
  5336  0E5F                     u1560:
  5337  0E5F                     l1683:
  5338  0E5F  0876               	movf	___awmod@sign,w
  5339  0E60  1903               	btfsc	3,2
  5340  0E61  2E63               	goto	u1571
  5341  0E62  2E64               	goto	u1570
  5342  0E63                     u1571:
  5343  0E63  2E69               	goto	l1687
  5344  0E64                     u1570:
  5345  0E64                     l1685:
  5346  0E64  09F2               	comf	___awmod@dividend,f
  5347  0E65  09F3               	comf	___awmod@dividend+1,f
  5348  0E66  0AF2               	incf	___awmod@dividend,f
  5349  0E67  1903               	skipnz
  5350  0E68  0AF3               	incf	___awmod@dividend+1,f
  5351  0E69                     l1687:
  5352  0E69  0873               	movf	___awmod@dividend+1,w
  5353  0E6A  00F1               	movwf	?___awmod+1
  5354  0E6B  0872               	movf	___awmod@dividend,w
  5355  0E6C  00F0               	movwf	?___awmod
  5356  0E6D                     l445:
  5357  0E6D  0008               	return
  5358  0E6E                     __end_of___awmod:
  5359                           
  5360                           	psect	text25
  5361  0F97                     __ptext25:	
  5362 ;; *************** function ___awdiv *****************
  5363 ;; Defined at:
  5364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  divisor         2    7[COMMON] int 
  5367 ;;  dividend        2    9[COMMON] int 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  quotient        2    2[BANK0 ] int 
  5370 ;;  sign            1    1[BANK0 ] unsigned char 
  5371 ;;  counter         1    0[BANK0 ] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2    7[COMMON] int 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         4       0       0       0       0
  5382 ;;      Locals:         0       4       0       0       0
  5383 ;;      Temps:          1       0       0       0       0
  5384 ;;      Totals:         5       4       0       0       0
  5385 ;;Total ram usage:        9 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_Division
  5391 ;;		_main
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function ___awdiv
  5397  0F97                     ___awdiv:
  5398  0F97                     l1609:	
  5399                           ;incstack = 0
  5400                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5401                           
  5402  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0F99  01A1               	clrf	___awdiv@sign
  5405  0F9A                     l1611:
  5406  0F9A  1FF8               	btfss	___awdiv@divisor+1,7
  5407  0F9B  2F9D               	goto	u1391
  5408  0F9C  2F9E               	goto	u1390
  5409  0F9D                     u1391:
  5410  0F9D  2FA5               	goto	l1617
  5411  0F9E                     u1390:
  5412  0F9E                     l1613:
  5413  0F9E  09F7               	comf	___awdiv@divisor,f
  5414  0F9F  09F8               	comf	___awdiv@divisor+1,f
  5415  0FA0  0AF7               	incf	___awdiv@divisor,f
  5416  0FA1  1903               	skipnz
  5417  0FA2  0AF8               	incf	___awdiv@divisor+1,f
  5418  0FA3                     l1615:
  5419  0FA3  01A1               	clrf	___awdiv@sign
  5420  0FA4  0AA1               	incf	___awdiv@sign,f
  5421  0FA5                     l1617:
  5422  0FA5  1FFA               	btfss	___awdiv@dividend+1,7
  5423  0FA6  2FA8               	goto	u1401
  5424  0FA7  2FA9               	goto	u1400
  5425  0FA8                     u1401:
  5426  0FA8  2FB2               	goto	l1623
  5427  0FA9                     u1400:
  5428  0FA9                     l1619:
  5429  0FA9  09F9               	comf	___awdiv@dividend,f
  5430  0FAA  09FA               	comf	___awdiv@dividend+1,f
  5431  0FAB  0AF9               	incf	___awdiv@dividend,f
  5432  0FAC  1903               	skipnz
  5433  0FAD  0AFA               	incf	___awdiv@dividend+1,f
  5434  0FAE                     l1621:
  5435  0FAE  3001               	movlw	1
  5436  0FAF  00FB               	movwf	??___awdiv
  5437  0FB0  087B               	movf	??___awdiv,w
  5438  0FB1  06A1               	xorwf	___awdiv@sign,f
  5439  0FB2                     l1623:
  5440  0FB2  01A2               	clrf	___awdiv@quotient
  5441  0FB3  01A3               	clrf	___awdiv@quotient+1
  5442  0FB4                     l1625:
  5443  0FB4  0877               	movf	___awdiv@divisor,w
  5444  0FB5  0478               	iorwf	___awdiv@divisor+1,w
  5445  0FB6  1903               	btfsc	3,2
  5446  0FB7  2FB9               	goto	u1411
  5447  0FB8  2FBA               	goto	u1410
  5448  0FB9                     u1411:
  5449  0FB9  2FF1               	goto	l1645
  5450  0FBA                     u1410:
  5451  0FBA                     l1627:
  5452  0FBA  01A0               	clrf	___awdiv@counter
  5453  0FBB  0AA0               	incf	___awdiv@counter,f
  5454  0FBC  2FC8               	goto	l1633
  5455  0FBD                     l1629:
  5456  0FBD  3001               	movlw	1
  5457  0FBE                     u1425:
  5458  0FBE  1003               	clrc
  5459  0FBF  0DF7               	rlf	___awdiv@divisor,f
  5460  0FC0  0DF8               	rlf	___awdiv@divisor+1,f
  5461  0FC1  3EFF               	addlw	-1
  5462  0FC2  1D03               	skipz
  5463  0FC3  2FBE               	goto	u1425
  5464  0FC4                     l1631:
  5465  0FC4  3001               	movlw	1
  5466  0FC5  00FB               	movwf	??___awdiv
  5467  0FC6  087B               	movf	??___awdiv,w
  5468  0FC7  07A0               	addwf	___awdiv@counter,f
  5469  0FC8                     l1633:
  5470  0FC8  1FF8               	btfss	___awdiv@divisor+1,7
  5471  0FC9  2FCB               	goto	u1431
  5472  0FCA  2FCC               	goto	u1430
  5473  0FCB                     u1431:
  5474  0FCB  2FBD               	goto	l1629
  5475  0FCC                     u1430:
  5476  0FCC                     l1635:
  5477  0FCC  3001               	movlw	1
  5478  0FCD                     u1445:
  5479  0FCD  1003               	clrc
  5480  0FCE  0DA2               	rlf	___awdiv@quotient,f
  5481  0FCF  0DA3               	rlf	___awdiv@quotient+1,f
  5482  0FD0  3EFF               	addlw	-1
  5483  0FD1  1D03               	skipz
  5484  0FD2  2FCD               	goto	u1445
  5485  0FD3  0878               	movf	___awdiv@divisor+1,w
  5486  0FD4  027A               	subwf	___awdiv@dividend+1,w
  5487  0FD5  1D03               	skipz
  5488  0FD6  2FD9               	goto	u1455
  5489  0FD7  0877               	movf	___awdiv@divisor,w
  5490  0FD8  0279               	subwf	___awdiv@dividend,w
  5491  0FD9                     u1455:
  5492  0FD9  1C03               	skipc
  5493  0FDA  2FDC               	goto	u1451
  5494  0FDB  2FDD               	goto	u1450
  5495  0FDC                     u1451:
  5496  0FDC  2FE4               	goto	l1641
  5497  0FDD                     u1450:
  5498  0FDD                     l1637:
  5499  0FDD  0877               	movf	___awdiv@divisor,w
  5500  0FDE  02F9               	subwf	___awdiv@dividend,f
  5501  0FDF  0878               	movf	___awdiv@divisor+1,w
  5502  0FE0  1C03               	skipc
  5503  0FE1  03FA               	decf	___awdiv@dividend+1,f
  5504  0FE2  02FA               	subwf	___awdiv@dividend+1,f
  5505  0FE3                     l1639:
  5506  0FE3  1422               	bsf	___awdiv@quotient,0
  5507  0FE4                     l1641:
  5508  0FE4  3001               	movlw	1
  5509  0FE5                     u1465:
  5510  0FE5  1003               	clrc
  5511  0FE6  0CF8               	rrf	___awdiv@divisor+1,f
  5512  0FE7  0CF7               	rrf	___awdiv@divisor,f
  5513  0FE8  3EFF               	addlw	-1
  5514  0FE9  1D03               	skipz
  5515  0FEA  2FE5               	goto	u1465
  5516  0FEB                     l1643:
  5517  0FEB  3001               	movlw	1
  5518  0FEC  02A0               	subwf	___awdiv@counter,f
  5519  0FED  1D03               	btfss	3,2
  5520  0FEE  2FF0               	goto	u1471
  5521  0FEF  2FF1               	goto	u1470
  5522  0FF0                     u1471:
  5523  0FF0  2FCC               	goto	l1635
  5524  0FF1                     u1470:
  5525  0FF1                     l1645:
  5526  0FF1  0821               	movf	___awdiv@sign,w
  5527  0FF2  1903               	btfsc	3,2
  5528  0FF3  2FF5               	goto	u1481
  5529  0FF4  2FF6               	goto	u1480
  5530  0FF5                     u1481:
  5531  0FF5  2FFB               	goto	l1649
  5532  0FF6                     u1480:
  5533  0FF6                     l1647:
  5534  0FF6  09A2               	comf	___awdiv@quotient,f
  5535  0FF7  09A3               	comf	___awdiv@quotient+1,f
  5536  0FF8  0AA2               	incf	___awdiv@quotient,f
  5537  0FF9  1903               	skipnz
  5538  0FFA  0AA3               	incf	___awdiv@quotient+1,f
  5539  0FFB                     l1649:
  5540  0FFB  0823               	movf	___awdiv@quotient+1,w
  5541  0FFC  00F8               	movwf	?___awdiv+1
  5542  0FFD  0822               	movf	___awdiv@quotient,w
  5543  0FFE  00F7               	movwf	?___awdiv
  5544  0FFF                     l432:
  5545  0FFF  0008               	return
  5546  1000                     __end_of___awdiv:
  5547  007E                     btemp	set	126	;btemp
  5548  007E                     wtemp0	set	126
  5549                           
  5550                           	psect	config
  5551                           
  5552                           ;Config register CONFIG1 @ 0x2007
  5553                           ;	Oscillator Selection bits
  5554                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5555                           ;	Watchdog Timer Enable bit
  5556                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5557                           ;	Power-up Timer Enable bit
  5558                           ;	PWRTE = ON, PWRT enabled
  5559                           ;	RE3/MCLR pin function select bit
  5560                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5561                           ;	Code Protection bit
  5562                           ;	CP = OFF, Program memory code protection is disabled
  5563                           ;	Data Code Protection bit
  5564                           ;	CPD = OFF, Data memory code protection is disabled
  5565                           ;	Brown Out Reset Selection bits
  5566                           ;	BOREN = OFF, BOR disabled
  5567                           ;	Internal External Switchover bit
  5568                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5569                           ;	Fail-Safe Clock Monitor Enabled bit
  5570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5571                           ;	Low Voltage Programming Enable bit
  5572                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5573                           ;	In-Circuit Debugger Mode bit
  5574                           ;	DEBUG = 0x1, unprogrammed default
  5575  2007                     	org	8199
  5576  2007  20C4               	dw	8388
  5577                           
  5578                           ;Config register CONFIG2 @ 0x2008
  5579                           ;	Brown-out Reset Selection bit
  5580                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5581                           ;	Flash Program Memory Self Write Enable bits
  5582                           ;	WRT = OFF, Write protection off
  5583  2008                     	org	8200
  5584  2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[6]), STR_4(CODE[3]), 
		 -> STR_3(CODE[5]), STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> buffer(BANK0[1]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Division->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___fltol
    _setup->_I2C_Master_Init
    ___fltol->___flmul
    _Division->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   10644
                                             37 BANK0      5     5      0
                           _Division
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1756
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1362
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     644
                                              2 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       2     1      1     262
                                              3 COMMON     2     1      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     554
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Division                                             6     6      0    1597
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Division
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___wmul
   ___xxtofl
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 12 11:05:09 2021

                        pc 0002                         l61 0F30                         l64 0DD2  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l101 0D5A                        l110 0C3B  
                      l104 0C4F                        l122 0D1A                        l107 0C5B  
                      l123 0D1D                        l124 0D22                        l116 0C44  
                      l141 0C68                        l150 0ECA                        l119 0C4E  
                      l153 0C77                        l138 0C8A                        l315 0F96  
                      l147 0CA8                        l159 0E14                        l432 0FFF  
                      l281 0CCD                        l275 026A                        l445 0E6D  
                      l279 0CB5                        l551 004C                        l472 00B3  
                      l712 00EB                        l465 00C8                        l561 0D94  
                      l714 0182                        l475 00C8                        l725 014C  
                      l726 0158                        l718 0130                        l680 07E2  
                      l674 075A                        l668 07EE                        l687 0CE2  
                      l689 0CF4                        _GIE 005F                        _RC6 003E  
                      _RC7 003F                        _dec 0050                        _cen 0051  
                      _con 0052                        _pot 0053                        fsr0 0004  
                      _uni 004F                        _vol 004E                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0032               ___flmul@bexp 0033  
             ___flmul@sign 002D               ___flmul@temp 0038               ___flmul@prod 0034  
             ___fltol@exp1 0044                       l2001 0726                       l2011 073E  
                     l2003 072A                       l2021 075F                       l2013 073F  
                     l2005 072B                       l2101 0275                       l2023 0764  
                     l2031 0795                       l2015 0743                       l2007 0734  
                     l2111 02E1                       l2103 027E                       l2041 07C8  
                     l2033 07A2                       l2025 0772                       l2017 0757  
                     l2009 073A                       l2121 0313                       l2113 02E9  
                     l2105 028C                       l2043 07D6                       l2035 07AD  
                     l2027 0776                       l2131 0350                       l2123 0321  
                     l2115 02FC                       l2107 0291                       l2045 07DA  
                     l2037 07BC                       l2029 078F                       l2061 00F3  
                     l2053 00CA                       l2141 0383                       l2133 0359  
                     l2125 0326                       l2117 0305                       l2109 02A0  
                     l2047 07DB                       l2039 07C6                       l2071 0115  
                     l2055 00CF                       l1511 0C7E                       l2215 01B0  
                     l2151 03AE                       l2143 038C                       l2135 036C  
                     l2127 0335                       l2119 030A                       l2049 07E6  
                     l2081 0146                       l2073 0119                       l2065 00FC  
                     l2057 00D3                       l1513 0C87                       l1521 0C74  
                     l1601 0DF2                       l2161 03D9                       l2153 03B7  
                     l2145 0391                       l2137 0375                       l2129 033D  
                     l1611 0F9A                       l2091 0179                       l2083 0150  
                     l2075 0127                       l2067 0101                       l2059 00E3  
                     l1531 0F55                       l1523 0F31                       l1507 0C79  
                     l1515 0C6A                       l1603 0DF8                       l2171 0410  
                     l2163 03E7                       l2155 03BC                       l2147 03A0  
                     l2139 037A                       l1621 0FAE                       l1613 0F9E  
                     l1605 0C4F                       l2093 017A                       l2085 015A  
                     l2077 0137                       l2069 010E                       l1541 0F88  
                     l1533 0F5E                       l1525 0F41                       l1509 0C7C  
                     l1517 0C6D                       l1701 001F                       l2181 0465  
                     l2173 0430                       l2165 03F5                       l2157 03CB  
                     l2149 03A5                       l1631 0FC4                       l1623 0FB2  
                     l1615 0FA3                       l1607 0C55                       l2087 0170  
                     l2079 0142                       l1535 0F70                       l1527 0F44  
                     l1543 0F8E                       l1551 0D2A                       l1519 0C6F  
                     l1711 0042                       l1703 0023                       l2183 046E  
                     l2175 0436                       l2167 03FA                       l2159 03D0  
                     l1641 0FE4                       l1633 0FC8                       l1625 0FB4  
                     l1617 0FA5                       l1609 0F97                       l2089 0175  
                     l1537 0F7E                       l1529 0F51                       l1553 0D57  
                     l1561 0E71                       l1705 0034                       l1713 0048  
                     l1721 0D64                       l1801 0186                       l2185 0481  
                     l2177 0449                       l2169 0409                       l2097 026B  
                     l1643 0FEB                       l1635 0FCC                       l1627 0FBA  
                     l1619 0FA9                       l1539 0F7F                       l1555 0D58  
                     l1547 0D23                       l1571 0E97                       l1563 0E7A  
                     l1707 003A                       l1731 0D83                       l1723 0D6B  
                     l1803 018B                       l2179 0452                       l2099 0270  
                     l1637 0FDD                       l1629 0FBD                       l1645 0FF1  
                     l1661 0E21                       l1653 0E15                       l1741 0CD1  
                     l1901 00A1                       l1557 0D59                       l1549 0D27  
                     l1581 0EB5                       l1573 0E9D                       l1565 0E80  
                     l1709 003B                       l1733 0D8A                       l1725 0D6F  
                     l1717 0D5B                       l1821 01CB                       l1813 019E  
                     l1805 0191                       l1647 0FF6                       l1639 0FE3  
                     l1671 0E3A                       l1663 0E25                       l1655 0E16  
                     l1743 0CD8                       l1911 00BD                       l1583 0EBB  
                     l1575 0EA3                       l1567 0E88                       l1559 0E6E  
                     l1591 0C91                       l1727 0D73                       l1719 0D61  
                     l1735 0D90                       l1831 01D6                       l1823 01CF  
                     l1815 01BB                       l1807 0198                       l1649 0FFB  
                     l1681 0E59                       l1673 0E3E                       l1665 0E2A  
                     l1657 0E1A                       l1753 0ECE                       l1745 0CDC  
                     l1921 04A0                       l1913 048E                       l1585 0EC1  
                     l1577 0EA9                       l1569 0E8E                       l1593 0C9A  
                     l1761 0DA7                       l1729 0D7D                       l1841 0209  
                     l1825 01D4                       l1817 01C3                       l1809 019D  
                     l1675 0E42                       l1667 0E30                       l1683 0E5F  
                     l1659 0E1F                       l1747 0CEB                       l1739 0CCF  
                     l1931 04BC                       l1923 04A5                       l1915 0495  
                     l1907 00A8                       l1587 0C5C                       l1579 0EAF  
                     l1595 0CA0                       l1771 0DC9                       l1763 0DA8  
                     l1755 0D95                       l1691 0009                       l1851 024B  
                     l1843 020D                       l1835 01F2                       l1819 01C7  
                     l1685 0E64                       l1677 0E4C                       l1669 0E33  
                     l1781 0CF5                       l1773 0C33                       l1749 0CF0  
                     l1941 04D1                       l1933 04C1                       l1925 04AA  
                     l1917 049B                       l1909 00B8                       l1589 0C8C  
                     l1597 0DD3                       l1765 0DB7                       l1757 0DA2  
                     l1693 000B                       l1845 0212                       l1837 01FC  
                     l1853 0254                       l1687 0E69                       l1679 0E52  
                     l1791 0D16                       l1783 0CFA                       l1775 0C38  
                     l1951 04ED                       l1943 04D6                       l1935 04C7  
                     l1927 04B2                       l1919 049F                       l1871 0CC3  
                     l1863 0CA9                       l1599 0DD6                       l1767 0DBC  
                     l1759 0DA6                       l1695 0011                       l1847 0240  
                     l1839 0202                       l1855 0266                       l1793 0D1E  
                     l1785 0D02                       l1777 0C45                       l1961 0518  
                     l1953 04F2                       l1945 04DE                       l1937 04CB  
                     l1929 04B4                       l1873 0CC9                       l1865 0CAB  
                     l1769 0DC1                       l1697 0014                       l1849 0247  
                     l1787 0D0B                       l1779 0C4A                       l1971 05B5  
                     l1963 0535                       l1947 04E0                       l1939 04CC  
                     l1891 0083                       l1883 0063                       l1867 0CAF  
                     l1699 001B                       l1789 0D10                       l1797 0C3C  
                     l1981 0618                       l1973 05BE                       l1965 0551  
                     l1957 04FB                       l1949 04E8                       l1893 0087  
                     l1885 0078                       l1877 004D                       l1869 0CBC  
                     l1799 0C41                       l1991 06B8                       l1983 0631  
                     l1975 05CE                       l1967 057D                       l1959 050B  
                     l1887 0079                       l1879 005A                       l1993 06DE  
                     l1985 064E                       l1977 05EB                       l1969 0599  
                     l1889 0081                       l1995 0706                       l1987 067B  
                     l1979 05FB                       l1899 008F                       l1997 070F  
                     l1989 068B                       l1999 071D                       STR_1 081A  
                     STR_2 082A                       STR_3 0831                       STR_4 0833  
                     STR_5 0830                       STR_6 0833                       STR_7 0833  
                     u2000 04D1                       u2001 04D0                       u2010 04D6  
                     u2011 04D5                       u2020 04ED                       u1300 0F8E  
                     u2101 060A                       u2021 04EC                       u1301 0F8D  
                     u2102 0611                       u2030 04F2                       u1310 0D3A  
                     u2103 0618                       u2031 04F1                       u1400 0FA9  
                     u1240 0F41                       u1320 0C91                       u1401 0FA8  
                     u2121 0640                       u2041 0543                       u1241 0F40  
                     u1321 0C90                       u1410 0FBA                       u2210 072A  
                     u2122 0647                       u2042 054A                       u1330 0CA0  
                     u1411 0FB9                       u2211 0729                       u2131 066D  
                     u2123 064E                       u2115 061A                       u2051 055F  
                     u2043 0551                       u1315 0D35                       u1331 0C9F  
                     u1500 0E25                       u2300 07A2                       u2132 0674  
                     u2052 0566                       u1260 0F55                       u1340 0DE0  
                     u1501 0E24                       u2301 07A1                       u2205 071F  
                     u2141 069A                       u2133 067B                       u2061 058B  
                     u2053 056D                       u1261 0F54                       u1430 0FCC  
                     u1510 0E30                       u2310 07BC                       u2230 073E  
                     u2150 06C4                       u2142 06A1                       u2062 0592  
                     u1350 0E02                       u1431 0FCB                       u1511 0E2F  
                     u2311 07BB                       u2231 073D                       u2143 06A8  
                     u2071 05A7                       u2063 0599                       u1255 0F46  
                     u2320 07DA                       u2240 0743                       u2072 05AE  
                     u1280 0F70                       u1360 0E14                       u1600 0023  
                     u1425 0FBE                       u2321 07D9                       u2305 079E  
                     u2241 0742                       u2225 072D                       u2161 06D0  
                     u2073 05B5                       u1281 0F6F                       u1361 0E13  
                     u1601 0022                       u1450 0FDD                       u1530 0E42  
                     u1370 0C55                       u2250 0757                       u2170 06EC  
                     u2162 06D7                       u2410 0146                       u2330 00CF  
                     u1451 0FDC                       u1531 0E41                       u1371 0C54  
                     u2315 07B8                       u2251 0756                       u2163 06DE  
                     u2155 06BF                       u2091 05DD                       u2411 0145  
                     u2331 00CE                       u1275 0F57                       u1540 0E4C  
                     u1380 0C5B                       u2260 075E                       u2092 05E4  
                     u2420 014C                       u2340 00D3                       u1620 0034  
                     u1700 0D90                       u1445 0FCD                       u1541 0E4B  
                     u1525 0E34                       u1381 0C5A                       u2261 075D  
                     u2181 06F8                       u2093 05EB                       u2085 05B7  
                     u2421 014B                       u2405 013B                       u2341 00D2  
                     u1285 0F6C                       u1621 0033                       u1701 0D8F  
                     u1470 0FF1                       u1390 0F9E                       u1710 0CDC  
                     u2270 0764                       u2182 06FF                       u2430 0150  
                     u2350 00F3                       u1471 0FF0                       u1455 0FD9  
                     u1391 0F9D                       u1711 0CDB                       u2271 0763  
                     u2183 0706                       u2175 06E7                       u2431 014F  
                     u2351 00F2                       u1295 0F80                       u1615 0024  
                     u1480 0FF6                       u1560 0E5F                       u2280 0776  
                     u2440 0165                       u1640 0048                       u1800 0254  
                     u1481 0FF5                       u1465 0FE5                       u1561 0E5E  
                     u1545 0E48                       u2281 0775                       u1641 0047  
                     u1625 0030                       u1801 0253                       u1570 0E64  
                     u1490 0E1A                       u1730 0CF0                       u2290 0785  
                     u2450 0175                       u2370 0114                       u1650 0D61  
                     u1810 0266                       u1571 0E63                       u1555 0E53  
                     u1491 0E19                       u1731 0CEF                       u2195 0708  
                     u2451 0174                       u2371 0113                       u1635 003C  
                     u1651 0D60                       u1811 0265                       u2507 03C4  
                     u1740 0D16                       u1820 0CAF                       u2460 0179  
                     u1580 0011                       u1741 0D15                       u1725 0CE3  
                     u1821 0CAE                       u2461 0178                       u2445 0160  
                     u2365 0106                       u1581 0010                       u2517 0402  
                     u1910 00A0                       u2390 0136                       u1670 0D73  
                     u1750 0191                       u2295 0780                       u1911 009F  
                     u2391 0135                       u2527 0C72                       u1671 0D72  
                     u1751 0190                       u1920 00A7                       u1680 0D7D  
                     u1760 01CB                       u1921 00A6                       u1905 0090  
                     u2385 0128                       u2537 0E75                       u1681 0D7C  
                     u1665 0D65                       u1761 01CA                       u1850 0CC9  
                     u1770 01F1                       u1851 0CC8                       u1835 0CB6  
                     u2547 0E84                       u1595 0015                       u1771 01F0  
                     u1940 00B8                       u1860 005A                       u1780 01FC  
                     u1941 00B7                       u1861 0059                       u1845 0CBD  
                     u2557 0E92                       u1685 0D79                       u1781 01FB  
                     u2477 0299                       u1950 00BD                       u1870 0071  
                     u1790 0202                       u1951 00BC                       u1935 00AA  
                     u2567 0EC5                       u1695 0D84                       u1791 0201  
                     u1775 01ED                       u2487 032E                       u1960 049F  
                     u1880 0087                       u1961 049E                       u1881 0086  
                     u2577 0C83                       u2497 0399                       u1970 04A5  
                     u1890 008E                       u1971 04A4                       u1891 008D  
                     u1875 006C                       _PEIE 005E                       u1980 04AA  
                     u1981 04A9                       u1990 04CB                       u1991 04CA  
        ?_Lcd_Write_String 0072                       _main 026B                       _tem1 004D  
                     _tem2 004C                       _temp 004A                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0074            __end_of_Lcd_Cmd 0C8B  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070              ___fltol@sign1 0043                      ?_main 0070  
          __end_of___awdiv 1000            __end_of___awmod 0E6E            __end_of___flmul 07EF  
          __end_of___fltol 00C9                      _ANSEL 0188            __end_of___lldiv 0F97  
          ___awdiv@divisor 0077            __end_of___lwdiv 004D            __end_of___lwmod 0D95  
          ___awdiv@counter 0020                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 001E                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063            __end_of_dpowers 081A                      _setup 0D95  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 026B           __end_of_Lcd_Init 0ECB            __initialization 07EF  
         __end_of_Division 0F31               __end_of_main 048E                     ??_main 0045  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0079  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0070  
  __size_of_Lcd_Write_Char 000F                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 0183                     ___wmul 0CA9                  ??___awdiv 007B  
                ??___awmod 0074                  ??___flmul 0028                  ??___fltol 003E  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 007C  
                   _buffer 0054           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075         __size_of__Umul8_16 0027                  ??_sprintf 0023  
          Lcd_Set_Cursor@a 0074            Lcd_Set_Cursor@b 0073               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 0C69                 ___fltol@f1 003A             __pcstackCOMMON 0070  
            __end_of_setup 0DD3             _Lcd_Set_Cursor 0C8B                  ?_Lcd_Init 0070  
                  ??_setup 007E                  ?_Division 0070                 __pbssBANK0 004A  
        __end_of__Umul8_16 0CF5                 __pmaintext 026B                    ?___wmul 0070  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 0CA9                  ?___xxtofl 0070  
               ??_Lcd_Init 0073                    _SSPCON2 0091                    _SSPSTAT 0094  
               ??_Division 0024                 __stringtab 0800             _Lcd_Write_Char 0C69  
                  _Lcd_Cmd 0C78                    ___awdiv 0F97                    ___awmod 0E15  
                  ___flmul 048E                    ___fltol 004D                    ___lldiv 0F31  
          __size_of___wmul 0025                    ___lwdiv 0009               _Division$893 0027  
                  ___lwmod 0D5B            ?_Lcd_Set_Cursor 0073                    __ptext1 0183  
                  __ptext2 0D5B                    __ptext3 0009                    __ptext4 0D95  
                  __ptext5 0DD3                    __ptext6 0C69                    __ptext7 0C8B  
                  __ptext8 0E6E                    __ptext9 0C5C                    _dpowers 0810  
               ??___xxtofl 0074           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0183     __end_of_Lcd_Write_Char 0C78       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Division@y 0029              ___xxtofl@sign 0078                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0072          Lcd_Write_String@i 0077  
              ___flmul@grs 002E                  _Lcd_Clear 0C5C             __end_of___wmul 0CCE  
         _Lcd_Write_String 0DD3        start_initialization 07EF          __size_of_Lcd_Init 005D  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070          __size_of_Division 0066                 ?_Lcd_Clear 0070  
                 ??___wmul 0074                  __Umul8_16 0CCE            Lcd_Write_Char@a 0071  
                ___flmul@a 0024                  ___flmul@b 0020                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 0C33  
         _I2C_Master_Write 0C45           ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0074  
                 ?___awdiv 0077                   ?___awmod 0070                   ?___flmul 0020  
                 ?___fltol 003A                   ?___lldiv 0070                 ?__Umul8_16 0070  
                 ?___lwdiv 0070                   ?___lwmod 0078                  __pstrings 0800  
         ___lwdiv@quotient 0075                   ?_sprintf 0020             __size_of_setup 003E  
           ___wmul@product 0074                   Lcd_Cmd@a 0072                ??_Lcd_Clear 0073  
              __stringbase 080F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0070  
                 _Lcd_Init 0E6E        I2C_Master_Read@temp 0074                   _Division 0ECB  
 __end_of_Lcd_Write_String 0E15           __size_of_Lcd_Cmd 0013                ??__Umul8_16 0072  
         __size_of___awdiv 0069           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0810                 sprintf@val 0029  
          _I2C_Master_Init 0D23            _I2C_Master_Read 0CF5                   ___xxtofl 00C9  
          _I2C_Master_Wait 0C4F            _I2C_Master_Stop 0C3C            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0C78                   __ptext11 0D23  
                 __ptext20 0C33                   __ptext12 0F31                   __ptext21 0CF5  
                 __ptext13 00C9                   __ptext22 0C4F                   __ptext14 0CA9  
                 __ptext23 0ECB                   __ptext15 004D                   __ptext24 0E15  
                 __ptext16 048E                   __ptext25 0F97                   __ptext17 0CCE  
                 __ptext18 0C45                   __ptext19 0C3C           __size_of_sprintf 00E8  
            __size_of_main 0223   __end_of_I2C_Master_Start 0C3C   __end_of_I2C_Master_Write 0C4F  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 080A                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 0D5B    __end_of_I2C_Master_Read 0D23    __end_of_I2C_Master_Wait 0C5C  
  __end_of_I2C_Master_Stop 0C45     __Umul8_16@multiplicand 0070                   sprintf@c 002C  
                 sprintf@f 0020           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 080A  
                 stringtab 0800                _SSPCON2bits 0091       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
